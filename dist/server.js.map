{"version":3,"sources":["webpack://AceApiServer/webpack/universalModuleDefinition","webpack://AceApiServer/webpack/bootstrap","webpack://AceApiServer/external \"babel-runtime/helpers/asyncToGenerator\"","webpack://AceApiServer/external \"babel-runtime/regenerator\"","webpack://AceApiServer/external \"lodash\"","webpack://AceApiServer/external \"babel-runtime/helpers/createClass\"","webpack://AceApiServer/external \"babel-runtime/helpers/classCallCheck\"","webpack://AceApiServer/./lib/client-config.js","webpack://AceApiServer/external \"bluebird\"","webpack://AceApiServer/./lib/db.js","webpack://AceApiServer/external \"babel-runtime/core-js/json/stringify\"","webpack://AceApiServer/./lib/helpers.js","webpack://AceApiServer/external \"path\"","webpack://AceApiServer/external \"babel-runtime/core-js/object/keys\"","webpack://AceApiServer/external \"lodash/isArray\"","webpack://AceApiServer/./server/config.default.js","webpack://AceApiServer/./lib sync","webpack://AceApiServer/external \"babel-runtime/helpers/typeof\"","webpack://AceApiServer/external \"request-promise\"","webpack://AceApiServer/./lib/fields.js","webpack://AceApiServer/./lib/schema.js","webpack://AceApiServer/./lib/entity.js","webpack://AceApiServer/external \"fs\"","webpack://AceApiServer/./lib/email.js","webpack://AceApiServer/external \"babel-runtime/core-js/object/freeze\"","webpack://AceApiServer/./lib/roles.js","webpack://AceApiServer/external \"@cloudant/cloudant\"","webpack://AceApiServer/external \"axios\"","webpack://AceApiServer/./lib/assist.js","webpack://AceApiServer/external \"express\"","webpack://AceApiServer/./server/routes/user.js","webpack://AceApiServer/./server/routes/tools.js","webpack://AceApiServer/./server/routes/token.js","webpack://AceApiServer/./server/routes/taxonomy.js","webpack://AceApiServer/./server/routes/stripe.js","webpack://AceApiServer/external \"twitter\"","webpack://AceApiServer/./server/routes/social.js","webpack://AceApiServer/./server/routes/shippo.js","webpack://AceApiServer/./server/routes/settings.js","webpack://AceApiServer/./server/routes/schema.js","webpack://AceApiServer/./server/routes/pdf.js","webpack://AceApiServer/./server/routes/metadata.js","webpack://AceApiServer/./server/routes/entity.js","webpack://AceApiServer/./server/routes/embedly.js","webpack://AceApiServer/./server/routes/email.js","webpack://AceApiServer/./server/routes/ecommerce.js","webpack://AceApiServer/external \"express-useragent\"","webpack://AceApiServer/./server/routes/debug.js","webpack://AceApiServer/./server/routes/config.js","webpack://AceApiServer/./server/routes/cache.js","webpack://AceApiServer/./server/routes/auth.js","webpack://AceApiServer/./server/routes/analytics.js","webpack://AceApiServer/./lib/user.js","webpack://AceApiServer/./lib/tools.js","webpack://AceApiServer/./lib/taxonomy.js","webpack://AceApiServer/external \"hashids\"","webpack://AceApiServer/external \"stripe\"","webpack://AceApiServer/./lib/stripe.js","webpack://AceApiServer/external \"shippo\"","webpack://AceApiServer/./lib/shippo.js","webpack://AceApiServer/./lib/settings.js","webpack://AceApiServer/external \"recursive-readdir\"","webpack://AceApiServer/./lib/pdf.js","webpack://AceApiServer/external \"jsonwebtoken\"","webpack://AceApiServer/./lib/jwt.js","webpack://AceApiServer/./lib/instagram.js","webpack://AceApiServer/external \"deep-diff\"","webpack://AceApiServer/external \"json-query\"","webpack://AceApiServer/external \"embedly\"","webpack://AceApiServer/./lib/embedly.js","webpack://AceApiServer/external \"node-sass\"","webpack://AceApiServer/external \"i18n-iso-countries\"","webpack://AceApiServer/external \"moment\"","webpack://AceApiServer/external \"html-to-text\"","webpack://AceApiServer/external \"mjml-mailchimp\"","webpack://AceApiServer/external \"mjml-validator\"","webpack://AceApiServer/external \"mjml-core\"","webpack://AceApiServer/external \"mjml\"","webpack://AceApiServer/external \"inky\"","webpack://AceApiServer/external \"email-templates\"","webpack://AceApiServer/external \"nodemailer-mailgun-transport\"","webpack://AceApiServer/external \"createsend-node\"","webpack://AceApiServer/external \"nodemailer\"","webpack://AceApiServer/./lib/ecommerce.js","webpack://AceApiServer/external \"querystring\"","webpack://AceApiServer/./lib/auth.js","webpack://AceApiServer/external \"password-hash\"","webpack://AceApiServer/./config.default.js","webpack://AceApiServer/./index.js","webpack://AceApiServer/external \"xxhashjs\"","webpack://AceApiServer/external \"deep-freeze\"","webpack://AceApiServer/external \"object-sizeof\"","webpack://AceApiServer/external \"circular-json-es6\"","webpack://AceApiServer/external \"le_node\"","webpack://AceApiServer/external \"zlib\"","webpack://AceApiServer/external \"url-parse\"","webpack://AceApiServer/external \"cache-manager-redis-store\"","webpack://AceApiServer/external \"cache-manager\"","webpack://AceApiServer/./server/index.js","webpack://AceApiServer/external \"connect-redis\"","webpack://AceApiServer/external \"express-session\"","webpack://AceApiServer/external \"method-override\"","webpack://AceApiServer/external \"body-parser\"","webpack://AceApiServer/external \"cookie-parser\"","webpack://AceApiServer/external \"helmet\"","webpack://AceApiServer/external \"morgan\"","webpack://AceApiServer/external \"http\"","webpack://AceApiServer/./server/server.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","w","s","require","_","Db","Helpers","DEFAULT_CLIENT_CONFIG","_id","client","schemas","taxonomies","users","roles","ClientConfig","config","_classCallCheck3","default","this","clientConfig","connect","merge","slug","createOrUpdate","Cloudant","dbName","url","db","maxAttempt","plugins","retry","retryDelayMultiplier","retryInitialDelayMsecs","use","Promise","assistUrl","assist","thumbnail","settings","cropSlug","cropDefault","settingsArray","split","forEach","setting","crop","crops","x","y","x2","y2","g","key","push","join","settingsString","test","thumbnailType","ext","thumbnailUrl","replace","doc","resolve","reject","insert","then","response","id","_rev","rev","error","statusCode","docs","chunkSize","arguments","length","undefined","promises","chunk","bulk","all","entities","groupSize","Infinity","grouped","group","entity","groupBefore","groupAfter","ratio","groupRatio","_stringify2","Date","array","replacementObject","map","environment","process","env","ENVIRONMENT","api","prefix","API_PREFIX","blacklistToken","API_BLACKLIST_TOKEN","blacklistReferrer","API_BLACKLIST_REFERRER","forceHttps","FORCE_HTTPS","JSON","parse","session","secret","SESSION_SECRET","ttl","parseInt","SESSION_TTL","cache","enabled","CACHE_ENABLED","CACHE_TTL","compress","CACHE_COMPRESS","memory","max","CACHE_MEMORY_MAX","redis","REDIS_URL","host","REDIS_HOST","port","REDIS_PORT","password","REDIS_PASSWORD","REDIS_DB","logentriesToken","LOGENTRIES_TOKEN","webpackEmptyContext","req","e","Error","code","keys","fields","type","dataType","Fields","field","_freeze2","find","Schema","schema","cc","updateEntityIndex","set","schemaSlug","index","findIndex","splice","schemaSlugs","isArray","filter","indexOf","concat","uniqBy","ddoc","default_field","analyzer","selector","$and","fieldRef","result","jsonQuery","diff","Assist","Entity","flattenValues","fieldSlug","searchTerm","viewWithList","startkey","endkey","ids","parents","role","query","include_docs","view","_appendParents","children","docMap","childDepth","rowOrDoc","isRow","size","flatten","_query","obj","uniq","_entitiesById","row","_docs","rows","_childDepthLimit","_getDocMap","_mergeDocs","_this","updatedEntities","mapValues","remove","chunkUpdate","_this2","entityMap","title","published","total_rows","_extendDocs","_this3","limit","Math","min","sort","isString","include_fields","bookmark","group_field","search","groups","hits","_this4","_entitySearch","__entitySearch","_this5","clone","_context6","t0","entityId","_this6","revs_info","revisionIds","_revs_info","revision","status","open_revs","revisions","childrenIds","ok","fetch","childrenMap","console","_appendChildren","_this7","_this8","restore","_this9","entityIds","entityOrEntityId","isObject","oldEntity","newEntity","path","mergeWith","a","b","trashed","_updateChildren","forever","filesResult","deleted","_removeChildren","fileNames","_fileNames","deleteFiles","_deleted","entitiesResult","files","omitBy","startsWith","filterEntityFields","file","forceId","queryParts","trim","modifier","slice","data","locals","input","start","end","sample","sampleSize","pick","_len","paths","Array","_key","copy","allowRegexp","merging","isNumber","queries","queryField","fs","nodemailer","Createsend","promisifyAll","nodemailerMailgunTransport","EmailTemplate","Inky","mjml2html","registerComponent","registerDependencies","McSection","McImage","htmlToText","moment","countries","sass","Email","inky","mc-section","mj-column","mj-hero","templateSlug","templateData","templateOptions","options","inlineStyles","mjml","skipValidation","templatePath","email","templatesPath","existsSync","templateFiles","readdirSync","htmlPath","fileName","extension","style","renderSync","sourceMapContents","sourceMapEmbed","css","toString","emailTemplate","views","juice","juiceResources","preserveMediaQueries","preserveFontFaces","removeStyleTags","removeLinkTags","preserveImportant","webResources","links","scripts","images","transport","jsonTransport","helpers","render","html","convertMjmlResult","level","errors","releaseTheKraken","text","fromString","emailOptions","nodemailerMailgun","createTransport","auth","api_key","mailgun","apiKey","domain","getTemplate","sendMail","metadata","details","provider","listId","createsend","cs","clientApiKey","subscribers","addSubscriberAsync","EmailAddress","Name","Resubscribe","RestartSubscriptionBasedAutoresponders","emailAddress","catch","Message","permissions","entityGrid","entityCreate","entityRead","entityUpdate","entityDelete","taxonomyCreate","taxonomyRead","taxonomyUpdate","taxonomyDelete","fileCreate","fileRead","fileUpdate","fileDelete","user","userSettings","tools","ecommerce","Roles","axios","passwordHash","assetsSlug","post","username","generate","_ref","_ref2","_ref3","_ref4","_ref5","User","router","authMiddleware","permissionMiddleware","asyncMiddleware","getConfig","handleResponse","handleError","bind","_asyncToGenerator3","_regenerator2","mark","_callee","res","wrap","_context","prev","next","t1","sent","t2","t3","t4","create","body","t5","t6","stop","_x","_x2","apply","_callee2","_context2","read","userId","_x3","_x4","put","_callee3","_context3","update","_x5","_x6","delete","_callee4","_context4","userIds","_x7","_x8","Tools","getDb","setHeader","send","getChanges","Jwt","payload","jwt","token","dev","pickBy","isNaN","signToken","apiToken","_ref6","_ref7","_ref8","Taxonomy","cacheMiddleware","taxonomy","taxonomySlug","taxonomySlugs","_callee5","_context5","createTerm","term","_x9","_x10","_callee6","updateTerm","_x11","_x12","_callee7","_context7","deleteTerm","_x13","_x14","Ecommerce","Stripe","order","stripe","checkout","amount","Number","refund","retrieveAccount","template","getSettings","getOrder","orderId","Instagram","instagramAccessTokenMap","method","params","Twitter","twitter","param","consumer_key","consumerKey","consumer_secret","consumerSecret","access_token_key","accessTokenKey","access_token_secret","accessTokenSecret","instagram","access_token","abrupt","client_id","clientId","pagination","next_url","Shippo","shippo","address","parcel","getQuote","Settings","schemaId","updateAll","Pdf","pdf","getPayload","getPdf","attachment","json","assetSlug","_ref9","_ref10","_ref11","_ref12","indexAsync","q","_keys2","_typeof3","entitySearch","use_index","$or","$exists","entityFind","fieldValues","entityList","entityRevisions","_callee8","_context8","_x15","_x16","_callee9","_context9","_x17","_x18","_callee10","_context10","_x19","_x20","_callee11","_context11","_x21","_x22","Embedly","embedly","oembed","urls","renderTemplate","fromName","fromEmail","toName","toEmail","from","to","subject","sendEmail","subscribe","messages","message","getType","setType","item","deleteType","verifyDiscount","useragent","headers","source","items","del","Auth","error_description","authProvider","Analytics","analytics","changes","dbBackupFile","readFileAsync","fileConents","unlinkAsync","cloudant","destroy","entityGroups","terms","entitiesByTerm","_term","parent","Hashids","StripeClass","hashids","clientStripeAccountId","stripe_user_id","assets","customerDetails","log","findOrCreateCustomer","customer","createOrder","updateOrCreateStripeCustomer","stripeCustomer","updateCustomer","createCharge","updatedOrder","sendReceipt","orderReceipt","sendNotification","orderNotification","updateOrder","finalOrder","accounts","retrieve","refunds","refund_application_fee","charge","stripe_account","charges","amountRefunded","amount_refunded","now","newCustomer","createdAt","modifiedAt","phone","billingAddress","shippingAddress","orders","description","customer_id","customers","price","quantity","newOrder","encode","getTime","shippingMethod","subtotal","tax","rate","includedInPrice","total","show","discount","currency","iso","toLowerCase","capture","order_id","statement_descriptor","kebabCase","storeName","toUpperCase","application_fee","ceil","paymentGateway","livemode","_this10","emailSenderName","emailSenderAddress","_this11","addressFrom","object_purpose","zip","fromZip","country","fromCountry","addressTo","distance_unit","mass_unit","shipment","address_from","address_to","ratesReady","attempts","object_status","object_id","val","rates","request","readdir","templates","templateId","assistPdfUrl","uri","encoding","form","sign","tokenSecret","verify","version","endpoint","requestOptions","qs","extend","_request","EmbedlyApi","opts","format","dateStart","dateEnd","querystring","providerTokenUri","google","vimeo","spotify","superUserId","superUser","active","refresh","providerConfig","providerClientConfig","grant_type","client_secret","clientSecret","redirect_uri","redirectUri","refresh_token","providerAuth","stringify","begins","floor","debug","DEBUG","SLUG","baseUrl","BASE_URL","DB_URL","DB_HOST","DB_NAME","requestPlugin","DB_REQUEST_PLUGIN","meterType","DB_METER_TYPE","AUTH_SUPER_USER_ID","AUTH_TOKEN_SECRET","DEV_USER_ID","DEV_ROLE","cms","CMS_TITLE","CMS_URL","ASSIST_URL","ASSIST_USERNAME","ASSIST_PASSWORD","__dirname","INSTAGRAM_CLIENT_ID","INSTAGRAM_CLIENT_SECRET","TWITTER_CONSUMER_KEY","TWITTER_CONSUMER_SECRET","TWITTER_ACCESS_TOKEN_KEY","TWITTER_ACCESS_TOKEN_SECRET","GOOGLE_CLIENT_ID","GOOGLE_CLIENT_SECRET","MAILGUN_API_KEY","MAILGUN_DOMAIN","EMBEDLY_API_KEY","aws","iamAccessKeyId","AWS_IAM_ACCESS_KEY_ID","iamAccessKeySecret","AWS_IAM_ACCESS_KEY_SECRET","s3","bucket","AWS_S3_BUCKET","SHIPPO_TOKEN","SHIPPO_FROM_ZIP","SHIPPO_FROM_COUNTRY","SPOTIFY_CLIENT_ID","SPOTIFY_CLIENT_SECRET","STRIPE_CLIENT_ID","STRIPE_CLIENT_SECRET","STRIPE_API_KEY","VIMEO_CLIENT_ID","VIMEO_CLIENT_SECRET","zencoder","ZENCODER_API_KEY","ZENCODER_S3_BUCKET","credentials","ZENCODER_S3_CREDENTIALS","Api","defaultConfig","args","Function","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","_len6","_key6","_len7","_key7","_len8","_key8","_len9","_key9","_len10","_key10","_len11","_key11","_len12","_key12","_len13","_key13","_len14","_key14","_len15","_key15","_len16","_key16","_len17","_key17","_len18","_key18","_len19","_key19","_len20","_key20","_len21","_key21","on","express","cacheManager","redisStore","URL","zlib","Logger","CircularJSON","sizeof","deepFreeze","XXH","HASH_SEED","app","customConfig","customAuthMiddleware","fn","skipAuth","route","RegExp","cloneConfig","omitUndefined","forIn","isPlainObject","isUndefined","cloneDeep","configClone","redisOptions","caching","store","getClient","hash","h64","__cache","gunzipAsync","Buffer","cacheResponse","gzipAsync","Router","enable","scheme","redirect","Access-Control-Allow-Origin","Access-Control-Allow-Methods","Access-Control-Expose-Headers","Vary","sendStatus","referrer","referer","referrerHostname","hostname","verifyToken","context","authorised","permission","errorMessage","stack","afterResponse","removeListener","PORT","HOST","http","logger","helmet","cookieParser","bodyParser","methodOverride","RedisStore","AceApiServer","listen","sessionOptions","resave","saveUninitialized","cookie","maxAge","urlencoded","extended","server","createServer"],"mappings":"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","file":"server.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AceApiServer\"] = factory();\n\telse\n\t\troot[\"AceApiServer\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 105);\n","module.exports = require(\"babel-runtime/helpers/asyncToGenerator\");","module.exports = require(\"babel-runtime/regenerator\");","module.exports = require(\"lodash\");","module.exports = require(\"babel-runtime/helpers/createClass\");","module.exports = require(\"babel-runtime/helpers/classCallCheck\");","const _ = require('lodash');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Roles = require('./roles');\n\nconst roles = new Roles();\n\nconst DEFAULT_CLIENT_CONFIG = {\n  _id: 'config',\n  client: {},\n  schemas: [],\n  taxonomies: [],\n  users: [],\n  roles: roles.roles(),\n};\n\nclass ClientConfig {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async get() {\n    let clientConfig = DEFAULT_CLIENT_CONFIG;\n\n    try {\n      clientConfig = await Db.connect(this.config).get('config');\n\n      clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n    } catch (error) {\n      //\n    }\n\n    clientConfig.slug = this.config.slug;\n\n    return clientConfig;\n  }\n\n  async set(clientConfig) {\n    clientConfig._id = 'config';\n\n    delete clientConfig.roles;\n\n    clientConfig = await Helpers.createOrUpdate(this.config, clientConfig);\n\n    clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n\n    return clientConfig;\n  }\n}\n\n\nmodule.exports = ClientConfig;\n","module.exports = require(\"bluebird\");","const Cloudant = require('@cloudant/cloudant');\n\nclass Db {\n  constructor (config, dbName) {\n    this.config = config;\n\n    return Db.connect(config, dbName);\n  }\n\n  static connect (config, dbName) {\n    const cloudant = new Cloudant({\n      url: config.db.url,\n      maxAttempt: 5,\n      plugins: [\n        'promises',\n        {\n          retry: {\n            retryDelayMultiplier: 2,\n            retryInitialDelayMsecs: 500,\n          },\n        },\n      ],\n    });\n\n    return cloudant.db.use(dbName || config.db.name);\n  }\n}\n\nmodule.exports = Db;\n","module.exports = require(\"babel-runtime/core-js/json/stringify\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\n\nclass Helpers {\n  constructor(config) {\n    this.config = config;\n    this.assistUrl = config.assist.url;\n    this.slug = config.slug;\n  }\n\n  static createOrUpdate (config, doc) {\n    return new Promise((resolve, reject) => {\n      Db.connect(config).insert(doc)\n        .then((response) => {\n          doc._id = response.id;\n          doc._rev = response.rev;\n          resolve(doc);\n        }, (error) => {\n          if (error.statusCode !== 409) {\n            reject(error);\n            return;\n          }\n\n          Db.connect(config).get(doc._id)\n            .then((response) => {\n              doc._rev = response._rev;\n\n              Db.connect(config).insert(doc)\n                .then((response) => {\n                  doc._rev = response.rev;\n                  resolve(doc);\n                }, reject);\n            }, reject);\n        });\n    });\n  }\n\n  static chunkUpdate (config, docs, chunkSize = 1000) {\n    return new Promise((resolve, reject) => {\n      const chunks = _.chunk(docs, chunkSize);\n      const promises = [];\n\n      chunks.forEach((chunk) => {\n        promises.push(new Promise((resolve, reject) => {\n          Db.connect(config).bulk({\n            docs: chunk,\n          }).then(resolve, reject);\n        }));\n      });\n\n      Promise.all(promises).then(resolve, reject);\n    });\n  }\n\n  static groupEntities (entities, groupSize = Infinity) {\n    const grouped = [];\n\n    let group = {\n      entities: [],\n    };\n\n    entities.forEach((entity) => {\n      if (!entity.groupBefore || group.entities.length >= groupSize) {\n        group = {\n          entities: [],\n        };\n      }\n\n      group.entities.push(entity);\n\n      if (!entity.groupAfter || group.entities.length >= groupSize) {\n        group.ratio = 0;\n\n        group.entities.forEach((entity) => {\n          group.ratio += (entity.thumbnail || entity).ratio;\n        });\n\n        group.entities.forEach((entity) => {\n          entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n        });\n\n        grouped.push(group);\n      }\n    });\n\n    return grouped;\n  }\n\n  static now () {\n    return JSON.stringify(new Date()).replace(/\"/g, '');\n  }\n\n  static replace (array, replacementObject, key) {\n    return array.map((object) => {\n      if (object[key] === replacementObject[key]) {\n        return replacementObject;\n      }\n      return object;\n    });\n  }\n\n  thumbnailSrc (thumbnail, settings, cropSlug, cropDefault) {\n    if (!thumbnail) {\n      return '';\n    }\n\n    let settingsArray;\n\n    if (typeof settings === 'string') {\n      settingsArray = settings.split(/,|;/);\n\n      settings = {};\n\n      settingsArray.forEach((setting) => {\n        setting = setting.split(/_|:/);\n\n        settings[setting[0]] = setting[1];\n      });\n    }\n\n    const crop = thumbnail.crops ? thumbnail.crops[cropSlug] : false;\n\n    if (crop) {\n      settings.x = crop[0];\n      settings.y = crop[1];\n      settings.x2 = crop[2];\n      settings.y2 = crop[3];\n    } else if (cropDefault) {\n      settings.g = cropDefault;\n    }\n\n    settingsArray = [];\n\n    _.forEach(settings, (value, key) => {\n      settingsArray.push([key, value].join(':'));\n    });\n\n    const settingsString = settingsArray.join(';');\n\n    if (/(image)/.test(thumbnail.thumbnailType)) {\n      if (thumbnail.ext === 'svg') {\n        return [this.assistUrl, this.slug, thumbnail.name + thumbnail.ext].join('/');\n      }\n\n      return [this.assistUrl, this.slug, 'transform', settingsString, thumbnail.name + thumbnail.ext].join('/');\n    }\n\n    if (/(video)/.test(thumbnail.thumbnailType)) {\n      return [this.assistUrl, this.slug, 'transform', settingsString, thumbnail.name, 'thumb.jpg'].join('/');\n    }\n\n    if (/(oembed|proxy)/.test(thumbnail.thumbnailType)) {\n      const thumbnailUrl = thumbnail.thumbnailUrl.replace(/https?:\\/\\//, '');\n\n      return [this.assistUrl, this.slug, 'proxy', 'transform', settingsString, thumbnailUrl].join('/');\n    }\n\n    return '';\n  }\n\n}\n\nmodule.exports = Helpers;\n","module.exports = require(\"path\");","module.exports = require(\"babel-runtime/core-js/object/keys\");","module.exports = require(\"lodash/isArray\");","const config = {\n  environment: process.env.ENVIRONMENT || 'development',\n\n  api: {\n    prefix: process.env.API_PREFIX || '',\n    blacklistToken: (process.env.API_BLACKLIST_TOKEN || '').split(','),\n    blacklistReferrer: (process.env.API_BLACKLIST_REFERRER || '').split(','),\n  },\n\n  forceHttps: process.env.FORCE_HTTPS ? JSON.parse(process.env.FORCE_HTTPS) : false,\n\n  session: {\n    secret: process.env.SESSION_SECRET || 'change_me',\n    ttl: parseInt(process.env.SESSION_TTL || 7200, 10),\n  },\n\n  cache: {\n    enabled: process.env.CACHE_ENABLED ? JSON.parse(process.env.CACHE_ENABLED) : false,\n    ttl: parseInt(process.env.CACHE_TTL || 30, 10) * 60, // 30mins\n    compress: process.env.CACHE_COMPRESS ? JSON.parse(process.env.CACHE_COMPRESS) : false,\n    memory: {\n      max: parseInt(process.env.CACHE_MEMORY_MAX || 128, 10) * 1000 * 1000, // ~128mb\n    },\n  },\n\n  redis: {\n    url: process.env.REDIS_URL,\n    host: process.env.REDIS_HOST,\n    port: process.env.REDIS_PORT,\n    password: process.env.REDIS_PASSWORD,\n    db: parseInt(process.env.REDIS_DB || 0, 10),\n  },\n\n  logentriesToken: process.env.LOGENTRIES_TOKEN,\n};\n\nmodule.exports = config;\n","function webpackEmptyContext(req) {\n\tvar e = new Error('Cannot find module \"' + req + '\".');\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 14;","module.exports = require(\"babel-runtime/helpers/typeof\");","module.exports = require(\"request-promise\");","const _ = require('lodash');\n\nconst fields = [\n  {\n    type: 'attachment',\n    name: 'Attachment',\n    dataType: null,\n  },\n  {\n    type: 'audio',\n    name: 'Audio',\n    dataType: null,\n  },\n  {\n    type: 'checkbox',\n    name: 'Checkbox',\n    dataType: 'boolean',\n  },\n  {\n    type: 'color',\n    name: 'Color',\n    dataType: 'string',\n  },\n  {\n    type: 'date',\n    name: 'Date',\n    dataType: 'string',\n  },\n  {\n    type: 'embedly',\n    name: 'Embedly',\n    dataType: null,\n  },\n  {\n    type: 'entity',\n    name: 'Entity',\n    dataType: 'array',\n  },\n  {\n    type: 'entityGrid',\n    name: 'Entity Grid',\n    dataType: 'array',\n  },\n  {\n    type: 'entityTile',\n    name: 'Entity Tile',\n    dataType: 'array',\n  },\n  {\n    type: 'image',\n    name: 'Image',\n    dataType: null,\n  },\n  {\n    type: 'keyValue',\n    name: 'Key Value',\n    dataType: null,\n  },\n  {\n    type: 'number',\n    name: 'Number',\n    dataType: 'number',\n  },\n  {\n    type: 'richText',\n    name: 'Rich Text',\n    dataType: null,\n  },\n  {\n    type: 'select',\n    name: 'Select',\n    dataType: 'array',\n  },\n  {\n    type: 'taxonomy',\n    name: 'Taxonomy',\n    dataType: null,\n  },\n  {\n    type: 'text',\n    name: 'Text',\n    dataType: 'string',\n  },\n  {\n    type: 'textArea',\n    name: 'Text Area',\n    dataType: 'string',\n  },\n  {\n    type: 'user',\n    name: 'User',\n    dataType: 'array',\n  },\n  {\n    type: 'video',\n    name: 'Video',\n    dataType: null,\n  },\n  {\n    type: 'vimeo',\n    name: 'Vimeo',\n    dataType: null,\n  },\n];\n\nclass Fields {\n  static fields() {\n    return fields.map(field => Object.freeze(field));\n  }\n  static field(type) {\n    return _.find(Fields.fields(), { type });\n  }\n}\n\nmodule.exports = Fields;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Fields = require('./fields');\n\nclass Schema {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas.push(schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(schemaSlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const schema = _.find(clientConfig.schemas, { slug: schemaSlug });\n\n    if (!schema) {\n      throw Error(`Schema not found: ${schemaSlug}`);\n    }\n\n    return schema;\n  }\n\n  async update(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.schemas, { slug: schema.slug });\n\n    if (index === -1) {\n      throw Error(`Schema not found: ${schema.slug}`);\n    }\n\n    clientConfig.schemas.splice(index, 1, schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(schemaSlugs) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    schemaSlugs = _.isArray(schemaSlugs) ? schemaSlugs : [schemaSlugs];\n\n    clientConfig.schemas = clientConfig.schemas.filter(schema => schemaSlugs.indexOf(schema.slug) === -1);\n\n    clientConfig.schemas = clientConfig.schemas.map((schema) => {\n      if (!schema.fields) {\n        return schema;\n      }\n      schema.fields = schema.fields.map((field) => {\n        if (!field.settings) {\n          return field;\n        }\n        if (field.settings.schemas) {\n          field.settings.schemas = field.settings.schemas.filter(schema => schemaSlugs.indexOf(schema) === -1);\n        }\n        return field;\n      });\n      return schema;\n    });\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateAll(schemas) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas = schemas;\n\n    // await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateEntityIndex(schemas) {\n    let fields = [];\n\n    schemas.forEach((schema) => {\n      fields = fields.concat(schema.fields);\n    });\n\n    fields = _.uniqBy(fields, 'slug');\n\n    const index = {\n      name: 'entity',\n      type: 'text',\n      ddoc: 'entityIndex',\n      index: {\n        default_field: {\n          enabled: true,\n          analyzer: 'standard',\n        },\n        selector: {\n          $and: [\n            {\n              type: 'entity',\n            },\n          ],\n        },\n        fields: [\n          {\n            name: 'published',\n            type: 'boolean',\n          },\n          {\n            name: 'trashed',\n            type: 'boolean',\n          },\n          {\n            name: 'title',\n            type: 'string',\n          },\n          {\n            name: 'slug',\n            type: 'string',\n          },\n          {\n            name: 'schema',\n            type: 'string',\n          },\n          {\n            name: 'modifiedAt',\n            type: 'string',\n          },\n          {\n            name: 'publishedAt',\n            type: 'string',\n          },\n        ],\n      },\n    };\n\n    fields.forEach((field) => {\n      const fieldRef = Fields.field(field.type);\n\n      if (/number|string|boolean/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value`,\n          type: fieldRef.dataType,\n        });\n      }\n\n      if (/array/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.[].slug`,\n          type: 'string',\n        });\n      }\n\n      if (/taxonomy/.test(field.type)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.terms.[].slug`,\n          type: 'string',\n        });\n      }\n    });\n\n    const result = await Db.connect(this.config).index(index);\n\n    return result;\n  }\n\n}\n\nmodule.exports = Schema;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst jsonQuery = require('json-query');\nconst diff = require('deep-diff').diff;\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Schema = require('./schema');\nconst Assist = require('./assist');\n\nconst CHUNK_UPDATE_SIZE = 1000;\n\nclass Entity {\n  constructor (config) {\n    this.config = config;\n\n    // Expose helpers\n    this.flattenValues = Entity.flattenValues;\n  }\n\n  static flattenValues (docs) {\n    return docs.map((doc) => {\n      if (!doc.fields || !_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (/entity/.test(field.type) && _.isArray(field.value)) { // entity / entityTile / entityGrid\n          field.value = Entity.flattenValues(field.value);\n        }\n        return field.value;\n      });\n\n      return doc;\n    });\n  }\n\n  static filterEntityFields (docs, role = 'guest') {\n    const isArray = _.isArray(docs);\n\n    docs = (isArray ? docs : [docs]).map((doc) => {\n      if (_.size(doc.fields)) {\n        doc.fields = _.mapValues(doc.fields, (field) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter((obj) => {\n              if (!obj) {\n                return false;\n              }\n              if (obj.type && obj.type === 'entity' && role === 'guest') {\n                return obj.published !== undefined ? obj.published : true;\n              }\n              return true;\n            });\n          }\n          return field;\n        });\n      }\n      return doc;\n    });\n\n    return isArray ? docs : docs[0];\n  }\n\n  static _appendChildren (docs, childrenMap) {\n    return docs.map((doc) => {\n      if (!_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (_.isArray(field.value)) {\n          field.value = field.value.filter((obj) => {\n            if (!obj) {\n              return false;\n            }\n            if (obj.type === 'entity') {\n              return childrenMap[obj.id] !== undefined;\n            }\n            return true;\n          });\n\n          field.value = field.value.map((obj) => {\n            if (obj.type === 'entity') {\n              obj = _.merge(obj, childrenMap[obj.id]);\n            }\n            obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n            return obj;\n          });\n        }\n\n        return field;\n      });\n\n      return doc;\n    });\n  }\n\n  static _appendParents (result, parents = null, role = 'guest') {\n    let entityMap = {};\n\n    result.rows.forEach((row) => {\n      if (!row.doc) {\n        return;\n      }\n\n      if (row.value.type === 'entity') {\n        if (parents) {\n          row.doc.parents = [];\n        }\n        entityMap[row.id] = row.doc;\n      }\n    });\n\n    if (parents) {\n      result.rows.forEach((row) => {\n        if (row.doc && row.value.type === 'parent') {\n          entityMap[row.key].parents.push(Entity.filterEntityFields(row.doc, role));\n        }\n      });\n\n      entityMap = _.mapValues(entityMap, (entity) => {\n        entity.parents = _.uniqBy(entity.parents, entity => entity._id);\n        return entity;\n      });\n    }\n\n    entityMap = null;\n\n    return result;\n  }\n\n  static _fileNames (entities) {\n    const fileNames = [];\n\n    entities.forEach((entity) => {\n      _.forEach(entity.fields, (field) => {\n        if (field.value && field.value.file) {\n          fileNames.push(field.value.file.name);\n        }\n      });\n    });\n\n    return _.uniq(fileNames);\n  }\n\n  async fieldValues (fieldSlug, searchTerm) {\n    const result = await Db.connect(this.config).viewWithList('entity', 'byField', 'search', {\n      startkey: [fieldSlug],\n      endkey: [fieldSlug, {}],\n      group: true,\n      searchTerm,\n    });\n    return result;\n  }\n\n  static _query(doc, query, forceId = false) {\n    const queryParts = query.trim().split(/\\[|\\]/);\n    const selector = `fields.${queryParts[0]}.value[${queryParts[1] || '*'}]`;\n    const modifier = /\\]:/.test(query) ? `:${query.split(/\\]:/).slice(-1)[0].trim()}` : '';\n\n    const result = jsonQuery(`${selector}${modifier}`, {\n      data: doc,\n      locals: {\n        slice: (input, start, end) => _.slice(input, start, end),\n        sample: (input, size = 1) => _.sampleSize(input, size),\n        group: (entities, groupSize = Infinity) => {\n          const grouped = [];\n\n          let group = [];\n\n          entities.forEach((entity) => {\n            if (!entity.groupBefore || group.length >= groupSize) {\n              group = [];\n            }\n\n            group.push(entity);\n\n            if (!entity.groupAfter || group.length >= groupSize) {\n              group.ratio = 0;\n\n              group.forEach((entity) => {\n                group.ratio += (entity.thumbnail || entity).ratio;\n              });\n\n              group.forEach((entity) => {\n                entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n              });\n\n              grouped.push(group);\n            }\n          });\n\n          return grouped;\n        },\n        pick: (input, ...paths) => _.map(input, (obj) => {\n          const copy = {};\n          if (forceId && obj.id) {\n            copy.id = obj.id;\n          }\n          paths.forEach((path) => {\n            _.set(copy, path, _.get(obj, path));\n          });\n          return copy;\n        }),\n      },\n      allowRegexp: true,\n    });\n\n    return result;\n  }\n\n  async _entitiesById (ids = [], parents = null, role = 'guest') {\n    const query = {\n      include_docs: true,\n    };\n\n    if (ids.length) {\n      query.keys = ids;\n    }\n\n    let result = await Db.connect(this.config)\n      .view('entity', parents ? 'byIdExtended' : 'byId', query);\n\n    result = Entity._appendParents(result, parents, role);\n\n    return result;\n  }\n\n  static _childDepthLimit (children, merging = false) {\n    if (_.isNumber(children)) {\n      return children;\n    }\n    if (_.isArray(children)) {\n      if (merging) {\n        return children.length + 1;\n      }\n      return children.length;\n    }\n    return 1;\n  }\n\n  async _getDocMap (docs, children, parents, role, docMap = {}, childDepth = 0) {\n    if (!parents && !children) {\n      return docMap;\n    }\n\n    let ids = [];\n\n    docs.forEach((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      const doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (children && doc.fields && _.size(doc.fields)) {\n        if (_.isArray(children)) {\n          const queries = children[childDepth].split(/,(?![^([]*[\\])])/g);\n\n          queries.forEach((query) => {\n            ids = ids.concat(_.flatten(Entity._query(doc, query, true).value).map(obj => obj && obj.id));\n          });\n\n        } else {\n          _.forEach(doc.fields, (field) => {\n            if (_.isArray(field.value)) {\n              field.value = field.value.filter(obj => obj);\n\n              field.value.forEach((obj) => {\n                if (obj.id) {\n                  ids.push(obj.id);\n                }\n              });\n            }\n          });\n        }\n      }\n\n      const id = isRow ? rowOrDoc.id : doc._id || doc.id;\n      if (!docMap[id]) {\n        ids.push(id);\n      }\n    });\n\n    ids = _.uniq(ids);\n\n    ids = ids.filter(id => !docMap[id]);\n\n    if (ids.length === 0) {\n      return docMap;\n    }\n\n    let _docs = (await this._entitiesById(ids, parents, role)).rows.map(row => row.doc);\n\n    _docs.forEach((doc) => {\n      docMap[doc._id] = doc;\n    });\n\n    childDepth += 1;\n\n    if (!children || (childDepth >= Entity._childDepthLimit(children))) {\n      return docMap;\n    }\n\n    docMap = await this._getDocMap(_docs, children, parents, role, docMap, childDepth);\n\n    _docs = null;\n\n    return docMap;\n  }\n\n  static _mergeDocs(docs, docMap, children, childDepth = 0) {\n    if (children && (childDepth + 1 >= Entity._childDepthLimit(children, true))) {\n      return docs;\n    }\n\n    docs = docs.map((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      let doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (!doc.fields && docMap[rowOrDoc.id || rowOrDoc._id]) {\n        doc = docMap[rowOrDoc.id || rowOrDoc._id];\n      }\n\n      if (children && doc.fields && _.size(doc.fields)) {\n\n        let queries;\n\n        if (_.isArray(children)) {\n          queries = {};\n          children[childDepth].split(/,(?![^([]*[\\])])/g).forEach((query) => {\n            query = query.trim();\n            const queryField = query.split(/\\[|\\]/)[0];\n            queries[queryField] = query;\n          });\n        }\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter(obj => obj);\n\n            if (!queries || (queries && queries[fieldSlug])) {\n              if (queries && queries[fieldSlug]) {\n                field.value = field.value.filter(obj => obj.id && docMap[obj.id]);\n              }\n\n              field.value = field.value.map((obj) => {\n                if (obj && obj.id && docMap[obj.id]) {\n                  obj = _.merge(obj, docMap[obj.id] || {});\n                  obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n                }\n                return obj;\n              });\n\n              field.value = Entity._mergeDocs(field.value, docMap, children, childDepth + 1);\n            }\n          }\n          return field;\n        });\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            if (queries && queries[fieldSlug]) {\n              field.value = _.flatten(Entity._query(doc, queries[fieldSlug]).value);\n            }\n          }\n          return field;\n        });\n\n      }\n\n      if (isRow) {\n        rowOrDoc.doc = doc;\n      } else {\n        rowOrDoc = doc;\n      }\n\n      return rowOrDoc;\n    });\n\n    return docs;\n  }\n\n  async _extendDocs (docs, children, parents, role) {\n    let docMap = await this._getDocMap(docs, children, parents, role);\n\n    docs = Entity._mergeDocs(docs, docMap, children);\n\n    docMap = null;\n\n    return docs;\n  }\n\n  _removeChildren (entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      entities = entities.map(entity => entity._id);\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const updatedEntities = _.uniqBy(response.rows, row => row.doc._id).map((row) => {\n            row.doc.fields = _.mapValues(row.doc.fields, (field) => {\n              if (_.isArray(field.value)) {\n                field.value = _.remove(field.value, obj => obj.type === 'entity' && entities.indexOf(obj.id) !== -1);\n              }\n              return field;\n            });\n\n            return row.doc;\n          });\n\n          if (updatedEntities.length === 0) {\n            resolve([]);\n            return;\n          }\n\n          Helpers.chunkUpdate(this.config, updatedEntities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  _updateChildren (entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      const entityMap = {};\n\n      entities = entities.map((entity) => {\n        entityMap[entity._id] = entity;\n\n        return entity._id;\n      });\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const entities = response.rows.map((row) => {\n            const entity = row.doc;\n\n            _.forEach(entity.fields, (field, fieldSlug) => {\n              if (_.isArray(field.value)) {\n                entity.fields[fieldSlug].value = field.value.map((obj) => {\n                  if (obj.type === 'entity' && entityMap[obj.id]) {\n                    obj.slug = entityMap[obj.id].slug;\n                    obj.title = entityMap[obj.id].title;\n                    obj.schema = entityMap[obj.id].schema;\n                    obj.published = entityMap[obj.id].published;\n\n                    if (entityMap[obj.id].thumbnail) {\n                      obj.thumbnail = entityMap[obj.id].thumbnail;\n                    } else {\n                      obj.thumbnail = null;\n                    }\n                  }\n\n                  return obj;\n                });\n              }\n            });\n\n            return entity;\n          });\n\n          Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  async entityList (ids = [], children = null, parents = null, role = 'guest') {\n    const result = await this._entitiesById(ids, parents, role);\n\n    if ((!children && !parents) || result.total_rows === 0) {\n      return result.rows;\n    }\n\n    const rows = await this._extendDocs(result.rows, children, parents, role);\n\n    return rows;\n  }\n\n  _entitySearch (query, children = null, parents = null, role = 'guest') {\n    return new Promise((resolve, reject) => {\n      query.limit = Math.min(query.limit || 200, 200);\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      if (children) {\n        query.include_docs = true;\n      }\n\n      if (!query.include_fields) {\n        query.include_fields = [];\n      }\n\n      if (_.isArray(query.include_fields)) {\n        query.include_fields = JSON.stringify(query.include_fields);\n      }\n\n      if (!query.sort) {\n        delete query.sort;\n      }\n      if (!query.bookmark) {\n        delete query.bookmark;\n      }\n      if (!query.index) {\n        delete query.index;\n      }\n      if (!query.group_field) {\n        delete query.group_field;\n      }\n\n      Db.connect(this.config).search('entity', query.index || 'all', query)\n        .then((result) => {\n\n          if (result.groups) {\n            const promises = [];\n\n            result.groups = result.groups.map((group) => {\n              promises.push(new Promise((resolve, reject) => {\n                if ((!children && !parents) || group.total_rows === 0) {\n                  resolve();\n                  return;\n                }\n\n                this._extendDocs(group.hits, children, parents, role)\n                  .then((docs) => {\n                    group.hits = docs;\n\n                    resolve();\n                  }, reject);\n              }));\n              return group;\n            });\n\n            Promise.all(promises)\n              .then(() => {\n                resolve(result);\n              }, reject);\n\n            return;\n          }\n\n          if ((!children && !parents) || result.total_rows === 0) {\n            resolve(result);\n            return;\n          }\n\n          this._extendDocs(result.rows, children, parents, role)\n            .then((docs) => {\n              result.rows = docs;\n\n              resolve(result);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entitySearch (query, children = null, parents = null, role = 'guest') {\n    return new Promise((resolve, reject) => {\n      const limit = query.limit || 25;\n\n      if (limit <= 200) {\n        this._entitySearch(query, children, parents, role)\n          .then(resolve, reject);\n        return;\n      }\n\n      let rows = [];\n      let groups = [];\n\n      function __entitySearch (bookmark) {\n        const _query = _.clone(query);\n\n        if (bookmark) {\n          _query.bookmark = bookmark;\n        }\n\n        this._entitySearch(_query, children, parents, role)\n          .then((result) => {\n            if (result.rows) {\n              rows = rows.concat(result.rows);\n            }\n            if (result.groups) {\n              groups = groups.concat(result.groups);\n            }\n\n            if (rows.length < result.total_rows && rows.length < limit) {\n              __entitySearch.call(this, result.bookmark);\n              return;\n            }\n\n            result.rows = rows;\n            result.groups = groups;\n\n            resolve(result);\n          }, reject);\n      }\n\n      __entitySearch.call(this);\n    });\n  }\n\n  async entityFind (query, children = null, parents = null, role = 'guest') {\n    let result;\n\n    try {\n      result = await Db.connect(this.config).find(query);\n    } catch (error) {\n      if (error.error === 'no_usable_index') {\n        const cc = new ClientConfig(this.config);\n        const clientConfig = await cc.get();\n\n        const schema = new Schema(this.config);\n        await schema.updateEntityIndex(clientConfig.schemas);\n\n        result = await Db.connect(this.config).find(query);\n      }\n    }\n\n    if (children === false) {\n      return result;\n    }\n\n    if (query.fields && query.fields.indexOf('_id') === -1) {\n      throw new Error('_id field required for `children`');\n    }\n\n    result.docs = await this._extendDocs(result.docs, children, parents, role);\n\n    return result;\n  }\n\n  entityRevisions (entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId, {\n        revs_info: true,\n      })\n        .then((response) => {\n          const revisionIds = [];\n\n          response._revs_info.forEach((revision) => {\n            if (revision.status === 'available') {\n              revisionIds.push(revision.rev);\n            }\n          });\n\n          Db.connect(this.config).get(entityId, {\n            open_revs: JSON.stringify(revisionIds),\n          })\n            .then((response) => {\n              const revisions = [];\n              const childrenIds = [];\n\n              response.forEach((revision) => {\n                if (revision.ok) {\n                  revisions.push(revision.ok);\n\n                  _.forEach(revision.ok.fields, (field) => {\n                    if (/entity/.test(field.type)) {\n                      _.forEach(field.value, (obj) => {\n                        if (obj.id) {\n                          childrenIds.push(obj.id);\n                        }\n                      });\n                    }\n                  });\n                }\n              });\n\n              Db.connect(this.config).fetch({\n                keys: _.uniq(childrenIds),\n                include_docs: true,\n              })\n                .then((result) => {\n                  const childrenMap = {};\n\n                  result.rows.forEach((row) => {\n                    try {\n                      childrenMap[row.doc._id] = row.doc;\n                    } catch (error) {\n                      console.error('Error: child no longer exists');\n                    }\n                  });\n\n                  resolve(Entity._appendChildren(revisions, childrenMap));\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entityCreate (entity) {\n    return new Promise((resolve, reject) => {\n      entity.type = 'entity';\n\n      Db.connect(this.config).insert(entity)\n        .then((response) => {\n          entity._id = response.id;\n          entity._rev = response.rev;\n\n          resolve(entity);\n        }, reject);\n    });\n  }\n\n  entityRead (entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId)\n        .then(resolve, reject);\n    });\n  }\n\n  entityUpdate (entities, restore) {\n    return new Promise((resolve, reject) => {\n      entities = _.isArray(entities) ? entities : [entities];\n\n      const entityMap = {};\n\n      const entityIds = entities.map((entityOrEntityId) => {\n        let entityId;\n\n        if (_.isObject(entityOrEntityId)) {\n          entityId = entityOrEntityId._id;\n          entityMap[entityId] = entityOrEntityId;\n        }\n        if (_.isString(entityOrEntityId)) {\n          entityId = entityOrEntityId;\n        }\n\n        return entityId;\n      });\n\n      Db.connect(this.config).fetch({\n        keys: entityIds,\n        include_docs: true,\n      })\n        .then((response) => {\n          const children = [];\n\n          const entities = response.rows.map((row) => {\n            const oldEntity = row.doc;\n            const newEntity = entityMap[oldEntity._id];\n\n            let entity = oldEntity;\n\n            if (newEntity) {\n              delete newEntity._rev;\n\n              const diffs = diff(oldEntity, newEntity);\n\n              diffs.forEach((diff) => {\n                if (/slug|title|thumbnail/.test(diff.path[0])) {\n                  if (children.indexOf(newEntity) === -1 && entityIds.indexOf(newEntity._id) !== -1) {\n                    children.push(newEntity);\n                  }\n                }\n              });\n\n              entity = _.mergeWith({}, oldEntity, newEntity, (a, b) => {\n                if (_.isArray(a) && _.isArray(b)) {\n                  return b;\n                }\n                return undefined;\n              });\n            }\n\n            if (restore) {\n              entity.trashed = false;\n            }\n\n            return entity;\n          });\n\n          this._updateChildren(children)\n            .then(() => {\n              Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n                .then(resolve, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  async entityDelete (entityIds, forever = false) {\n    let entities;\n    let filesResult;\n\n    if (entityIds === 'trashed') {\n      forever = true;\n\n      entities = (await Db.connect(this.config).view('entity', 'trashed', {\n        include_docs: true,\n      })).rows;\n\n    } else {\n      entities = (await Db.connect(this.config).fetch({\n        keys: _.isArray(entityIds) ? entityIds : [entityIds],\n        include_docs: true,\n      })).rows;\n    }\n\n    entities = entities.filter(entity => !entity.value || !entity.value.deleted);\n\n    entities = entities.map(entity => entity.doc);\n\n    if (forever) {\n      await this._removeChildren(entities);\n\n      const fileNames = Entity._fileNames(entities);\n\n      if (fileNames.length) {\n        const assist = new Assist(this.config);\n        filesResult = await assist.deleteFiles(fileNames);\n      }\n\n      entities = entities.map(entity => ({\n        _id: entity._id,\n        _rev: entity._rev,\n        _deleted: true,\n      }));\n\n    } else {\n      entities = entities.map((entity) => {\n        entity.trashed = true;\n        return entity;\n      });\n    }\n\n    const entitiesResult = await Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE);\n\n    return {\n      entities: entitiesResult,\n      files: filesResult,\n    };\n  }\n\n}\n\nmodule.exports = Entity;\n","module.exports = require(\"fs\");","const path = require('path');\nconst fs = require('fs');\nconst _ = require('lodash');\nconst Promise = require('bluebird');\nconst nodemailer = require('nodemailer');\nconst Createsend = Promise.promisifyAll(require('createsend-node'));\nconst nodemailerMailgunTransport = require('nodemailer-mailgun-transport');\nconst EmailTemplate = require('email-templates');\nconst Inky = require('inky').Inky;\nconst mjml2html = require('mjml');\nconst registerComponent = require('mjml-core').registerComponent;\nconst registerDependencies = require('mjml-validator').registerDependencies;\nconst { McSection, McImage } = require('mjml-mailchimp');\nconst htmlToText = require('html-to-text');\nconst moment = require('moment');\nconst countries = require('i18n-iso-countries');\nconst sass = require('node-sass');\n\nconst ClientConfig = require('./client-config');\nconst Helpers = require('./helpers');\n\n\nclass Email {\n  constructor(config) {\n    this.config = config;\n\n    this.inky = new Inky();\n\n    registerComponent(McSection);\n    registerComponent(McImage);\n    registerDependencies({\n      'mc-section': ['mj-column', 'mj-group', 'mj-raw'],\n      'mj-column': ['mc-image'],\n      'mj-hero': ['mc-image'],\n    });\n  }\n\n  getTemplate(templateSlug, templateData = {}, templateOptions = {}) {\n    return new Promise((resolve, reject) => {\n      const options = _.merge({}, {\n        inlineStyles: true,\n        inky: false,\n        mjml: false,\n        skipValidation: false,\n      }, templateOptions);\n\n      let templatePath = path.resolve(this.config.email.templatesPath, templateSlug);\n\n      if (!fs.existsSync(templatePath)) {\n        templatePath = path.resolve('./email', templateSlug);\n      }\n\n      const templateFiles = fs.readdirSync(templatePath);\n\n      let htmlPath = 'html';\n      // Support mjml templates\n      if (_.find(templateFiles, fileName => /^html\\.mjml/.test(fileName))) {\n        htmlPath = 'html.mjml';\n        options.mjml = true;\n      }\n\n      // Support ejs templates (for backwards compatibility)\n      // TODO: convert ejs templates to pug and remove\n      let extension;\n      if (_.find(templateFiles, fileName => /\\.ejs$/.test(fileName))) {\n        extension = 'ejs';\n      }\n\n      let style = '';\n      if (_.find(templateFiles, fileName => /^style\\.scss$/.test(fileName))) {\n        style = sass.renderSync({\n          file: path.resolve(templatePath, 'style.scss'),\n          sourceMapContents: !options.inlineStyles,\n          sourceMapEmbed: !options.inlineStyles,\n        }).css.toString().replace(/\"/g, '\\'');\n      }\n\n      const emailTemplate = new EmailTemplate({\n        views: {\n          root: this.config.email.templatesPath,\n          options: {\n            extension,\n          },\n        },\n        juice: options.inlineStyles,\n        juiceResources: {\n          preserveMediaQueries: true,\n          preserveFontFaces: true,\n          removeStyleTags: false,\n          removeLinkTags: false,\n          preserveImportant: true,\n          webResources: {\n            links: false,\n            scripts: false,\n            images: false,\n            // relativeTo: '',\n          },\n        },\n        transport: {\n          jsonTransport: true,\n        },\n      });\n\n      const cc = new ClientConfig(this.config);\n      const helpers = new Helpers(this.config);\n\n      cc.get()\n        .then((clientConfig) => {\n          templateData = _.merge({}, templateData, {\n            config: _.merge({}, _.pick(this.config, ['cms']), _.pick(clientConfig, ['slug', 'client', 'assets'])),\n            helpers,\n            style,\n            moment,\n            countries,\n            templateSlug,\n          });\n\n          emailTemplate.render(`${templateSlug}/${htmlPath}`, templateData)\n            .then((html) => {\n\n              if (options.mjml) {\n                const convertMjmlResult = mjml2html(html, {\n                  level: options.skipValidation ? 'skip' : 'soft',\n                });\n\n                if (convertMjmlResult.errors && convertMjmlResult.errors.length) {\n                  reject(convertMjmlResult.errors);\n                  return;\n                }\n\n                html = convertMjmlResult.html;\n              }\n\n              if (options.inky) {\n                html = this.inky.releaseTheKraken(html);\n              }\n\n              resolve({\n                html,\n                text: htmlToText.fromString(html),\n              });\n            }, reject);\n        }, reject);\n    });\n  }\n\n  sendEmail(emailOptions, templateSlug, templateData = {}, templateOptions = {}) {\n    return new Promise((resolve, reject) => {\n      const nodemailerMailgun = nodemailer.createTransport(nodemailerMailgunTransport({\n        auth: {\n          api_key: this.config.mailgun.apiKey,\n          domain: this.config.mailgun.domain,\n        },\n      }));\n\n      this.getTemplate(templateSlug, _.merge({}, emailOptions, templateData), templateOptions)\n        .then((emailTemplate) => {\n          emailOptions.html = emailTemplate.html;\n          emailOptions.text = emailTemplate.text;\n\n          nodemailerMailgun.sendMail(emailOptions, (error, metadata) => {\n            if (error) {\n              reject(error);\n              return;\n            }\n\n            resolve({\n              metadata,\n              email: emailOptions,\n            });\n          });\n        }, reject);\n    });\n  }\n\n  subscribe(details, provider, listId) {\n    return new Promise((resolve, reject) => {\n      const cc = new ClientConfig(this.config);\n\n      cc.get()\n        .then((clientConfig) => {\n          if (provider === 'createsend') {\n            if (clientConfig.provider.createsend) {\n              const cs = new Createsend({\n                apiKey: clientConfig.provider.createsend.clientApiKey,\n              });\n\n              const subscribers = Promise.promisifyAll(cs.subscribers);\n\n              subscribers.addSubscriberAsync(listId, {\n                EmailAddress: details.email,\n                Name: details.name,\n                Resubscribe: true,\n                RestartSubscriptionBasedAutoresponders: true,\n              })\n                .then((result) => {\n                  resolve(`Email.subscribe(): ${result.emailAddress}`);\n                })\n                .catch((error) => {\n                  reject(error.Message);\n                });\n\n              return;\n            }\n            reject(new Error('Subscriber list not configured'));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Email;\n","module.exports = require(\"babel-runtime/core-js/object/freeze\");","const _ = require('lodash');\n\nconst roles = [\n  {\n    name: 'Admin',\n    slug: 'admin',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: true,\n      settings: true,\n      userSettings: true,\n      tools: true,\n      ecommerce: true,\n    },\n  },\n  {\n    name: 'Editor',\n    slug: 'editor',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: true,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n  {\n    name: 'Guest',\n    slug: 'guest',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: false,\n      entityRead: true,\n      entityUpdate: false,\n      entityDelete: false,\n\n      taxonomyCreate: false,\n      taxonomyRead: true,\n      taxonomyUpdate: false,\n      taxonomyDelete: false,\n\n      fileCreate: false,\n      fileRead: true,\n      fileUpdate: false,\n      fileDelete: false,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: false,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n];\n\nclass Roles {\n  roles() {\n    return roles.map(role => Object.freeze(role));\n  }\n  role(slug) {\n    return _.find(this.roles(), { slug });\n  }\n}\n\nmodule.exports = Roles;\n","module.exports = require(\"@cloudant/cloudant\");","module.exports = require(\"axios\");","const _ = require('lodash');\nconst axios = require('axios');\nconst passwordHash = require('password-hash');\nconst ClientConfig = require('./client-config');\n\nclass Assist {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async deleteFiles(fileNames) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetsSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n\n    if (fileNames.length === 0) {\n      return [];\n    }\n\n    const result = (await axios.post(`${this.config.assist.url}/${assetsSlug}/file/delete`, { fileNames }, {\n      auth: {\n        username: this.config.assist.username,\n        password: passwordHash.generate(this.config.assist.password),\n      },\n    })).data;\n\n    return result;\n  }\n\n}\n\nmodule.exports = Assist;\n","module.exports = require(\"express\");","module.exports = ({\n  User,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.create(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.read(req.query.userId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.update(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.delete(req.body.userId || req.body.userIds || req.query.userId || req.query.userIds));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Tools,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/tools/export-db.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'tools'),\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        const db = await tools.getDb();\n\n        res.setHeader('Content-Disposition', `attachment; filename=${req.session.slug}.json`);\n        res.setHeader('Content-Type', 'application/json');\n        res.status(200);\n        res.send(db);\n\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/tools/changes.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await tools.getChanges());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Jwt,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  // handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /token:\n   *  get:\n   *    tags:\n   *      - token\n   *    summary: Get JWT\n   *    description: Get Json Web Token (JWT) for API access\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Slug for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: userId\n   *        description: User ID for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: role\n   *        description: Role for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: expiresIn\n   *        description: Duration of token in seconds\n   *        in: query\n   *        required: false\n   *        type: number\n   *    responses:\n   *      200:\n   *        description: Token\n   */\n\n  router.get(\n    '/token.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      const payload = {\n        role: req.session.role,\n        slug: req.session.slug,\n        userId: req.session.userId,\n      };\n\n      if (req.session.role === 'super' || config.environment === 'development') {\n        payload.role = req.query.role || req.session.role || config.dev.role;\n        payload.slug = req.query.slug || req.session.slug || config.dev.slug;\n        if (payload.role !== 'guest') {\n          payload.userId = req.query.userId || req.session.userId || config.dev.userId;\n        }\n      }\n\n      const _ = require('lodash');\n\n      let options = _.pickBy(req.query, (value, key) => /^(expiresIn|notBefore|audience|issuer|jwtid|subject|noTimestamp|header)$/.test(key));\n\n      options = _.mapValues(options, (value) => {\n        if (!_.isNaN(+value)) { // Check if value is a numeric string\n          return +value; // Convert numeric string to number\n        }\n        return value;\n      });\n\n      const jwt = Jwt(config);\n\n      const token = jwt.signToken(payload, options);\n\n      req.session.apiToken = token;\n\n      const response = {\n        token,\n        payload,\n        options,\n      };\n\n      handleResponse(req, res, response);\n    })\n  );\n\n};\n","module.exports = ({\n  Taxonomy,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * definitions:\n   *  Taxonomy:\n   *    type: object\n   *    properties:\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      terms:\n   *        type: array\n   *        items:\n   *          type: object\n   *          properties:\n   *            id:\n   *              type: string\n   *            title:\n   *              type: string\n   *            slug:\n   *              type: string\n   *            terms:\n   *              type: array\n   */\n\n  router.post(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.create(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /taxonomy:\n   *  get:\n   *    tags:\n   *      - taxonomy\n   *    summary: Get taxonomy\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Taxonomy slug\n   *        in: query\n   *        required: true\n   *        type: string\n   *    responses:\n   *      200:\n   *        description: Taxonomy\n   *        schema:\n   *          type: object\n   *          $ref: '#/definitions/Taxonomy'\n   */\n  router.get(\n    '/taxonomy.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.read(req.query.slug || req.query.taxonomySlug), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.update(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.delete(req.body.taxonomySlug || req.body.taxonomySlugs || req.query.taxonomySlug || req.query.taxonomySlugs));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.createTerm(req.body.slug || req.body.taxonomySlug, req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.updateTerm(req.query.term || req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.deleteTerm(req.query.term || req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Ecommerce,\n  Email,\n  Stripe,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.all(\n    '/stripe/checkout.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const token = req.body.token || JSON.parse(req.query.token);\n      const order = req.body.order || JSON.parse(req.query.order);\n\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.checkout(token, order));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/stripe/refund.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const order = req.body.order || JSON.parse(req.query.order);\n      const amount = Number(req.body.amount || req.query.amount || 0) * 100;\n\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.refund(order, amount));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/stripe/account.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.retrieveAccount());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/stripe/email.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig(req.session.slug);\n      const email = Email(config);\n      const stripe = Stripe(config);\n      const ecommerce = Ecommerce(config);\n\n      const settings = await stripe.getSettings();\n      const order = await ecommerce.getOrder(req.query.orderId);\n\n      const data = {\n        settings,\n        order,\n      };\n\n      const template = await email.getTemplate(`${req.session.slug}/${req.query.template}`, data);\n\n      try {\n        handleResponse(req, res, template.html);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = require(\"twitter\");","module.exports = ({\n  ClientConfig,\n  Instagram,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  const instagramAccessTokenMap = {};\n\n  router.get(\n    /\\/social\\/twitter\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      const Promise = require('bluebird');\n      const Twitter = require('twitter');\n\n      const twitter = Promise.promisifyAll(new Twitter({\n        consumer_key: config.twitter.consumerKey,\n        consumer_secret: config.twitter.consumerSecret,\n        access_token_key: config.twitter.accessTokenKey,\n        access_token_secret: config.twitter.accessTokenSecret,\n      }));\n\n      try {\n        handleResponse(req, res, await twitter[`${method}Async`](params.join('/'), req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    /\\/social\\/instagram\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      if (!instagramAccessTokenMap[req.session.slug]) {\n        const cc = ClientConfig(config);\n\n        try {\n          const clientConfig = await cc.get();\n          instagramAccessTokenMap[req.session.slug] = clientConfig.provider.instagram.access_token;\n        } catch (error) {\n          handleError(res, new Error('Instagram: access_token required'));\n          return;\n        }\n      }\n\n      req.query.access_token = instagramAccessTokenMap[req.session.slug];\n\n      const instagram = Instagram({\n        client_id: config.instagram.clientId,\n      });\n\n      try {\n        const result = await instagram[method](params.join('/'), req.query);\n        try {\n          delete result.pagination.next_url;\n        } catch (error) {\n          //\n        }\n        handleResponse(req, res, result, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Shippo,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.all(\n    '/shippo/quote.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const shippo = Shippo(await getConfig());\n\n      const address = req.body.address || JSON.parse(req.params.address);\n      const parcel = req.body.parcel || JSON.parse(req.params.parcel);\n\n      try {\n        handleResponse(req, res, await shippo.getQuote(address, parcel), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Settings,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/settings.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const settings = Settings(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await settings.update(req.body.settings));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Schema,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.create(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.read(req.query.schemaId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.update(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.delete(req.body.schemaSlug || req.body.schemaSlugs || req.query.schemaSlug || req.query.schemaSlugs));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schemas.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.updateAll(req.body.schemas));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","const _ = require('lodash');\n\nmodule.exports = ({\n  Pdf,\n  ClientConfig,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleError,\n}) => {\n\n  router.get(\n    '/pdf/view.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          pdf.getPdf(payload)\n            .then((pdf) => {\n              res.type('application/pdf');\n              res.status(200);\n              res.send(pdf);\n            }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/download.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          pdf.getPdf(payload)\n            .then((pdf) => {\n              res.attachment(payload.fileName || 'download.pdf');\n              res.status(200);\n              res.send(pdf);\n            }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/payload.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          res.status(200);\n          res.json(payload);\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/submit.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig(req.session.slug);\n\n      const cc = ClientConfig(config);\n      const clientConfig = await cc.get();\n\n      const assetSlug = _.get(clientConfig, 'assets.slug', req.session.slug);\n\n      const pdf = Pdf(config);\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          payload = JSON.stringify(payload).replace(/'/gi, '’');\n\n          res.status(200);\n          res.send(`\n          <body onload='form.submit()'>\n            <form id='form' method='POST' action='${config.assist.url}/${assetSlug}/pdf/download' target='_self'>\n              <input type='hidden' name='payload' value='${payload}' />\n            </form>\n          </body>\n        `);\n        }, handleError.bind(null, req, res));\n    })\n  );\n};\n","module.exports = ({\n  ClientConfig,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /metadata:\n   *  get:\n   *    tags:\n   *      - metadata\n   *    summary: Get metadata\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Metadata\n   *        schema:\n   *          type: object\n   *          properties:\n   *            description:\n   *              type: string\n   */\n  router.get(\n    '/metadata.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const cc = ClientConfig(await getConfig(req.session.slug));\n\n      const clientConfig = await cc.get();\n\n      try {\n        handleResponse(req, res, clientConfig.client.metadata, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","const isArray = require('lodash/isArray');\n\nmodule.exports = ({\n  Db,\n  Entity,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * definitions:\n   *  Entity:\n   *    type: object\n   *    required:\n   *      - _id\n   *      - _rev\n   *    properties:\n   *      _id:\n   *        type: string\n   *      _rev:\n   *        type: string\n   *      schema:\n   *        type: string\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      thumbnail:\n   *        type: object\n   *      fields:\n   *        type: object\n   *      published:\n   *        type: boolean\n   *      publishedAt:\n   *        type: string\n   */\n\n  /**\n   * @swagger\n   * /entities/index:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Show indexes\n   *    description: Show all indexes, use this to find fields available for search/query.\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Indexes\n   */\n  router.get(\n    '/entities/index.:ext?',\n    asyncMiddleware(async (req, res) => {\n      try {\n        handleResponse(req, res, await Db(await getConfig(req.session.slug)).indexAsync());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/search:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Search entities\n   *    description: This endpoint extends Cloudant's Lucene based search. Learn more from Cloudant's [documentation](https://docs.cloudant.com/search.html).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: Lucene search query\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: include_docs\n   *        description: Include docs in search results (ignored if `children` or `parents` is `true`)\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: sort\n   *        description: Field to sort results by. Prefixed with `-` to reverse order. Suffixed with &#60;`string|number`&#62;\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: limit\n   *        description: Limit results (max 200)\n   *        in: query\n   *        required: false\n   *        type: number\n   *      - name: bookmark\n   *        description: Bookmark for the next page of results\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: group_field\n   *        description: Field to group results by\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: index\n   *        description: Search index\n   *        in: query\n   *        required: false\n   *        type: string\n   *        default: all\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: trashed\n   *        description: Get trashed entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Search result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            total_rows:\n   *              type: number\n   *            rows:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/search?.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      const include_docs = input.include_docs !== undefined\n        ? JSON.parse(input.include_docs) : false;\n\n      const include_fields = input.include_fields !== undefined\n        ? typeof input.include_fields === 'object' ? input.include_fields : JSON.parse(input.include_fields)\n        : [];\n\n      let children = input.children !== undefined\n        ? typeof input.children === 'object' ? input.children : JSON.parse(input.children)\n        : false;\n      let parents = input.parents !== undefined\n        ? typeof input.parents === 'object' ? input.parents : JSON.parse(input.parents)\n        : false;\n\n      const trashed = input.trashed !== undefined\n        ? JSON.parse(input.trashed) : false;\n\n      const sort = input.sort !== undefined\n        ? input.sort : null;\n      const limit = input.limit !== undefined\n        ? parseInt(input.limit, 10) : null;\n\n      const bookmark = input.bookmark !== undefined\n        ? input.bookmark : null;\n\n      const group_field = input.group_field !== undefined\n        ? input.group_field : null;\n\n      const index = input.index !== undefined\n        ? input.index : null;\n\n      const q = input.query || input.q;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      let query = [];\n\n      query.push(trashed ? 'trashed:true' : '!trashed:true');\n\n      if (req.session.role === 'guest') {\n        query.push('published:true');\n      }\n\n      if (q) {\n        query.push(`(${q})`);\n      }\n\n      query = query.join(' AND ');\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entitySearch({\n          query,\n          include_docs,\n          include_fields,\n          sort,\n          limit,\n          bookmark,\n          group_field,\n          index,\n        }, children, parents, req.session.role), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/find:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Query entities\n   *    description: This endpoint extends CouchDB's Mango query. Learn more from Cloudant's [documentation](https://docs.cloudant.com/cloudant_query.html#finding-documents-using-an-index).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: JSON query object, refer to CouchDB/Cloudant docs.\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Query result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            docs:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/find.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      let children = (req.query.children || req.body.children) !== undefined\n        ? JSON.parse((req.query.children || req.body.children)) : false;\n      let parents = (req.query.parents || req.body.parents) !== undefined\n        ? JSON.parse(req.query.parents || req.body.parents) : false;\n      const trashed = (req.query.trashed || req.body.trashed) !== undefined\n        ? JSON.parse(req.query.trashed || req.body.trashed) : false;\n      const query = req.query.query || req.body.query\n        ? JSON.parse(req.query.query || req.body.query) : { selector: {} };\n\n      query.use_index = ['entityIndex', 'entity'];\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      if (!query.selector.$and) {\n        query.selector = {\n          $and: [\n            query.selector,\n          ],\n        };\n      }\n\n      if (trashed) {\n        query.selector.$and.push({ trashed: true });\n      } else {\n        query.selector.$and.push({\n          $or: [\n            {\n              trashed: {\n                $exists: false,\n              },\n            },\n            {\n              trashed: false,\n            },\n          ],\n        });\n      }\n\n      if (req.session.role === 'guest') {\n        query.selector.$and.push({ published: true });\n      }\n\n      if (req.query.limit) {\n        query.limit = parseInt(req.query.limit, 10);\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityFind(query, children, parents, req.session.role), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entities/field.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.fieldValues(req.query.slug || req.query.fieldSlug, req.query.searchTerm), true);\n      } catch (error) {\n        handleError(res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Get all entities\n   *    description: Get all entities, optionally from an array of IDs\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: id\n   *        description: Entity ID\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: ids\n   *        description: Entity IDs\n   *        in: query\n   *        required: false\n   *        type: array\n   *        items:\n   *          type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Entities\n   *        schema:\n   *          type: array\n   *          items:\n   *            $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      let children = (req.query.children || req.body.children) !== undefined\n        ? JSON.parse(req.query.children || req.body.children) : false;\n      let parents = (req.query.parents || req.body.parents) !== undefined\n        ? JSON.parse(req.query.parents || req.body.parents) : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      let ids = req.query.ids || req.query.id || req.body.ids || req.body.id;\n\n      if (ids) {\n        ids = isArray(ids) ? ids : [ids];\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityList(ids, children, parents, req.session.role), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity/revisions.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRevisions(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityCreate'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityCreate(req.body.entity));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRead(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityUpdate(req.body.entity || req.body.entities, req.body.restore || false));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityDelete(req.body.entity || req.body.entities, req.body.forever || false));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity/trashed.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityDelete('trashed'));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Embedly,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/embedly/oembed.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const embedly = Embedly(await getConfig());\n\n      try {\n        handleResponse(req, res, await embedly.oembed(req.query.url || req.query.urls));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Email,\n  Entity,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /email/preview:\n   *  get:\n   *    tags:\n   *      - email\n   *    summary: Preview email template\n   * #   description: Preview email template\n   *    produces:\n   *      - text/html\n   *    parameters:\n   *      - name: slug\n   *        description: Slug (optionally override slug in development mode)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: templateSlug\n   *        description: Template slug (folder name of the template)\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: payload\n   *        description: JSON payload from which to render the template\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: entityId\n   *        description: Entity `_id` from which to render the template\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: inlineStyles\n   *        description: Inline CSS (default: true)\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *    responses:\n   *      200:\n   *        description: Template\n   */\n  router.all(\n    '/email/preview.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query || {};\n\n      const templateOptions = {\n        data: input.data ? JSON.parse(input.data) : false,\n        inlineStyles: input.inlineStyles ? JSON.parse(input.inlineStyles) : true,\n        inky: input.inky ? JSON.parse(input.inky) : false,\n        mjml: input.mjml ? JSON.parse(input.mjml) : false,\n        skipValidation: input.skipValidation ? JSON.parse(input.skipValidation) : false,\n      };\n\n      const slug = input.slug || req.session.slug;\n\n      // if (!slug) {\n      //   throw new Error('Missing `slug` parameter');\n      // }\n\n      async function renderTemplate(data = {}) {\n        if (templateOptions.data) {\n          handleResponse(req, res, data);\n          return;\n        }\n\n        const email = Email(await getConfig(slug));\n\n        try {\n          const template = await email.getTemplate(input.templateSlug, data, templateOptions);\n\n          handleResponse(req, res, template.html);\n        } catch (error) {\n          handleError(req, res, error);\n        }\n      }\n\n      if (input.payload) {\n        renderTemplate(JSON.parse(input.payload));\n        return;\n      }\n\n      if (input.entityId) {\n        const entity = Entity(await getConfig(slug));\n\n        const entities = (await entity.entityList([input.entityId], 2)).map(row => row.doc);\n\n        renderTemplate(entity.flattenValues(entities)[0]);\n        return;\n      }\n\n      renderTemplate();\n    })\n  );\n\n  router.all(\n    '/email/send.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query || {};\n\n      const templateOptions = {\n        inlineStyles: input.inlineStyles ? JSON.parse(input.inlineStyles) : true,\n        inky: input.inky ? JSON.parse(input.inky) : false,\n        mjml: input.mjml ? JSON.parse(input.mjml) : false,\n        skipValidation: input.skipValidation ? JSON.parse(input.skipValidation) : true,\n      };\n\n      const emailOptions = {\n        fromName: input.fromName || '',\n        fromEmail: input.fromEmail,\n        toName: input.toName || '',\n        toEmail: input.toEmail,\n        from: `${input.fromName || ''} <${input.fromEmail}>`,\n        to: input.toEmail,\n        subject: input.subject,\n      };\n\n      const slug = input.slug || req.session.slug;\n\n      const email = Email(await getConfig(slug));\n\n      try {\n        const result = await email.sendEmail(emailOptions, input.templateSlug, input.payload, templateOptions);\n\n        handleResponse(req, res, result);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/email/subscribe.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const email = Email(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await email.subscribe({\n          email: req.body.email || req.query.email,\n          name: req.body.name || req.query.name || '',\n        }));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const isArray = require('lodash/isArray');\n\nmodule.exports = ({\n  Ecommerce,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/ecommerce/order/message/:message.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        const order = await ecommerce.getOrder(req.query.orderId);\n        handleResponse(req, res, order.messages[req.params.message].email.html);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (isArray(req.query.sort)) {\n        req.query.sort = JSON.stringify(req.query.sort).replace(/\\\\\"/g, '');\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.getType(req.params.type, req.query));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (!/^(discount|order)$/.test(req.params.type)) {\n        handleError(req, res, `Illegal type: ${req.params.type}`);\n        return;\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.setType(req.params.type, req.body.item));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (!/^(discount)$/.test(req.params.type)) {\n        handleError(req, res, `Illegal type: ${req.params.type}`);\n        return;\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.deleteType(req.body.item));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/ecommerce/discount/:code.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.verifyDiscount(req.params.code));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = require(\"express-useragent\");","module.exports = ({\n  router,\n}) => {\n\n  router.all('/debug/useragent.:ext?', (req, res) => {\n    const expressUseragent = require('express-useragent');\n    const useragent = expressUseragent.parse(req.headers['user-agent']);\n\n    res.status(200);\n    res.send(`\n      <html>\n        <head>\n          <title>${useragent.source}</title>\n          <meta name=\"description\" content=\"${useragent.source}\">\n        </head>\n        <body>${useragent.source}</body>\n      </html>\n    `);\n  });\n\n};\n","module.exports = ({\n  ClientConfig,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/config.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.get());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/config.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'config'),\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.set(req.body.config));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  router,\n  cache,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n}) => {\n\n  /**\n   * @swagger\n   * /cache/clear:\n   *  get:\n   *    tags:\n   *      - cache\n   *    summary: Clear cache\n   *    description: Clears the LRU cache of API responses\n   *    produces:\n   *      - text/plain\n   *    responses:\n   *      200:\n   *        description: Result\n   */\n  router.get(\n    '/cache/clear.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      if (!config.cache.enabled) {\n        handleResponse(req, res, 'Cache disabled');\n        return;\n      }\n\n      const items = [];\n\n      cache.forEach((value, key) => {\n        if (key.indexOf(req.session.slug) === 0) {\n          items.push(key);\n        }\n      });\n\n      items.forEach(key => cache.del(key));\n\n      handleResponse(req, res, `${items.length} items removed from cache`);\n    })\n  );\n\n};\n","module.exports = ({\n  Auth,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/auth/:provider/config',\n    authMiddleware,\n    permissionMiddleware.bind(null, ['settings', 'userSettings']),\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      if (!config[req.params.provider]) {\n        res.status(404);\n        res.send({});\n        return;\n      }\n\n      res.status(200);\n      res.send({ clientId: config[req.params.provider].clientId });\n    })\n  );\n\n  router.get(\n    '/auth/:provider',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    (req, res) => {\n      res.status(req.query.error ? 500 : 200);\n      res.send(`${req.params.provider}: ${(req.query.error_description ? req.query.error_description : 'successfully authenticated')}`);\n    }\n  );\n\n  router.post(\n    '/auth/:provider',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/auth/:provider/refresh',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, null, true));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/auth/:provider/:userId',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'userSettings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, req.params.userId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/auth/:provider/:userId/refresh',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, req.params.userId, true));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Analytics,\n  router,\n  authMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/analytics.:ext?',\n    authMiddleware,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const analytics = Analytics(await getConfig());\n\n      try {\n        handleResponse(req, res, await analytics.get(req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass User {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.users.push(user);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async update(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.users, { id: user.id });\n\n    if (index === -1) {\n      throw Error(`User not found: ${user.id}`);\n    }\n\n    clientConfig.users.splice(index, 1, user);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    userId = _.isArray(userId) ? userId : [userId];\n\n    clientConfig.users = clientConfig.users.filter(user => userId.indexOf(user.id) === -1);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = User;\n","const Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst Cloudant = require('@cloudant/cloudant');\nconst Db = require('./db');\n\nclass Tools {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getDb() {\n    const result = await Db.connect(this.config).fetch({\n      include_docs: true,\n    });\n\n    return result;\n  }\n\n  async getChanges() {\n    const result = await Db.connect(this.config).changes({\n      limit: 50,\n      include_docs: true,\n      filter: 'tools/changesEntity',\n    });\n\n    return result;\n  }\n\n  async importDb(dbBackupFile) {\n    const dbName = this.config.db.name;\n\n    const fileConents = await fs.readFileAsync(dbBackupFile.path);\n\n    const docs = JSON.parse(fileConents).rows.map((row) => {\n      const { doc } = row;\n      delete doc._rev;\n      return doc;\n    });\n\n    await fs.unlinkAsync(dbBackupFile.path);\n\n    const cloudant = new Cloudant({\n      url: this.config.db.url,\n      plugins: ['promises', 'retry'],\n    }).db;\n\n    try {\n      await cloudant.destroy(dbName);\n    } catch (error) {\n      //\n    }\n\n    await cloudant.create(dbName);\n\n    const result = await Db.connect(this.config, dbName).bulk({ docs });\n\n    return result;\n  }\n\n}\n\nmodule.exports = Tools;\n","const _ = require('lodash');\nconst Db = require('./db');\nconst ClientConfig = require('./client-config');\n\nclass Taxonomy {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async create(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.taxonomies.push(taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const taxonomy = _.find(clientConfig.taxonomies, { slug: taxonomySlug });\n\n    if (!taxonomy) {\n      throw Error(`Taxonomy not found: ${taxonomySlug}`);\n    }\n\n    return taxonomy;\n  }\n\n  async update(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.taxonomies, { slug: taxonomy.slug });\n\n    if (index === -1) {\n      throw Error(`Taxonomy not found: ${taxonomy.slug}`);\n    }\n\n    clientConfig.taxonomies.splice(index, 1, taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    taxonomySlug = _.isArray(taxonomySlug) ? taxonomySlug : [taxonomySlug];\n\n    clientConfig.taxonomies = clientConfig.taxonomies.filter(taxonomy => taxonomySlug.indexOf(taxonomy.slug) === -1);\n\n    return cc.set(clientConfig);\n  }\n\n  async entitiesByTerm(term) {\n    const db = Db.connect(this.config);\n\n    const entityGroups = (await db.view('entity', 'byTaxonomyTerm', { keys: [term.id], group: true })).rows.map(row => row.value)[0];\n\n    if (!entityGroups) {\n      return [];\n    }\n\n    let entityIds = [];\n\n    _.forEach(entityGroups, (entities) => {\n      entityIds = entityIds.concat(entities);\n    });\n\n    entityIds = _.uniq(entityIds);\n\n    return (await db.fetch({ keys: entityIds, include_docs: true })).rows.map(row => row.doc);\n  }\n\n  async createTerm(taxonomySlug, term) {\n    const taxonomy = await this.read(taxonomySlug);\n\n    taxonomy.terms.push(term);\n\n    return this.update(taxonomy);\n  }\n\n  async updateTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.map((_term) => {\n            if (_term.id === term.id) {\n              _term.title = term.title;\n              _term.slug = term.slug;\n            }\n\n            if (!_term.parents) {\n              _term.parents = [];\n            }\n\n            _term.parents = _term.parents.map((parent) => {\n              if (parent.id === term.id) {\n                parent.title = term.title;\n                parent.slug = term.slug;\n              }\n              return parent;\n            });\n\n            return _term;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n\n  async deleteTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.filter((_term) => {\n            if (_term.id === term.id) {\n              return false;\n            }\n\n            if ((_term.parents || []).filter(parent => parent.id === term.id).length) {\n              return false;\n            }\n\n            return true;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n}\n\nmodule.exports = Taxonomy;\n","module.exports = require(\"hashids\");","module.exports = require(\"stripe\");","const _ = require('lodash');\nconst Stripe = require('stripe');\nconst Promise = require('bluebird');\nconst Hashids = require('hashids');\n\nconst ClientConfig = require('./client-config');\nconst Email = require('./email');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass StripeClass {\n  constructor(config) {\n    this.config = config;\n\n    this.stripe = Stripe(this.config.stripe.apiKey);\n    this.email = new Email(this.config);\n\n    this.hashids = new Hashids(this.config.slug, 6, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n  }\n\n  async getSettings() {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    let settings;\n\n    try {\n      settings = clientConfig.module.ecommerce;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    try {\n      settings.clientStripeAccountId = clientConfig.provider.stripe.stripe_user_id;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    settings.client = clientConfig.client;\n    settings.assets = clientConfig.assets;\n\n    return settings;\n  }\n\n  checkout(token, order) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n\n          const listId = _.get(settings, 'createsend.checkoutSubscriberListId');\n\n          if (order.subscribe && listId) {\n            this.email.subscribe(order.customerDetails, 'createsend', listId)\n              .then((result) => {\n                console.log(result);\n              }, (error) => {\n                console.error(error);\n              });\n          }\n\n          // lookup customer by email, create if not found\n          this.findOrCreateCustomer(order.customerDetails.email, order)\n            .then((customer) => {\n\n              // store order data (customer, items, address)\n              this.createOrder(order, customer)\n                .then((order) => {\n\n                  this.updateOrCreateStripeCustomer(settings.clientStripeAccountId, customer, token, order)\n                    .then((stripeCustomer) => {\n\n                      // update customer, append order to customer, update metadata\n                      this.updateCustomer(customer, stripeCustomer, order)\n                        .then((customer) => {\n\n                          // create charge, take fee\n                          this.createCharge(settings, stripeCustomer, customer, order)\n                            .then((updatedOrder) => {\n\n                              this.sendReceipt(settings, customer, order)\n                                .then((orderReceipt) => {\n\n                                  updatedOrder.messages.orderReceipt = orderReceipt;\n\n                                  this.sendNotification(settings, customer, order)\n                                    .then((orderNotification) => {\n\n                                      updatedOrder.messages.orderNotification = orderNotification;\n\n                                      // update order charge status, charge id\n                                      this.updateOrder(updatedOrder)\n                                        .then((finalOrder) => {\n\n                                          resolve(finalOrder);\n\n                                        }, reject);\n                                    }, reject);\n                                }, reject);\n                            }, reject);\n                        }, reject);\n                    }, reject);\n                }, reject);\n            }, reject);\n        }, reject)\n        .catch(reject);\n    });\n  }\n\n  retrieveAccount() {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.accounts.retrieve(settings.clientStripeAccountId)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  refund(order, amount) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.refunds.create({\n            refund_application_fee: true,\n            charge: order.charge.id,\n            amount,\n          }, {\n            stripe_account: settings.clientStripeAccountId,\n          })\n            .then((refund) => {\n              this.stripe.charges.retrieve(order.charge.id, {\n                stripe_account: settings.clientStripeAccountId,\n              })\n                .then((charge) => {\n                  order.charge.status = charge.status;\n                  order.charge.amount = charge.amount;\n                  order.charge.amountRefunded = charge.amount_refunded;\n\n                  Helpers.createOrUpdate(this.config, order)\n                    .then(resolve, reject);\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  findOrCreateCustomer(email, order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'customerByEmail', {\n        keys: [email],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            resolve(body.rows[0].doc);\n\n          } else {\n            const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n            const newCustomer = {\n              type: 'customer',\n              createdAt: now,\n              modifiedAt: now,\n              email: order.customerDetails.email,\n              name: order.customerDetails.name,\n              phone: order.customerDetails.phone,\n              billingAddress: order.billingAddress,\n              shippingAddress: order.shippingAddress,\n              orders: [],\n            };\n\n            Db.connect(this.config).insert(newCustomer)\n              .then((body) => {\n                newCustomer._id = body.id;\n                newCustomer._rev = body.rev;\n\n                resolve(newCustomer);\n              }, reject);\n          }\n        }, reject);\n    });\n  }\n\n  updateOrCreateStripeCustomer(clientStripeAccountId, customer, token, order) {\n    return new Promise((resolve, reject) => {\n      const stripeCustomer = {\n        source: token,\n        email: order.customer.email,\n        description: order.customer.name,\n        metadata: {\n          customer_id: customer._id,\n        // billingAddress: JSON.stringify(order.billingAddress),\n        // shippingAddress: JSON.stringify(order.shippingAddress)\n        },\n      };\n\n      if (customer.stripe && customer.stripe.customer.id) {\n        this.stripe.customers.update(customer.stripe.customer.id, stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        })\n          .then(resolve, (error) => {\n            if (error.type === 'StripeInvalidRequestError' && error.param === 'id') {\n              this.stripe.customers.create(stripeCustomer, {\n                stripe_account: clientStripeAccountId,\n              }).then(resolve, reject);\n\n            } else {\n              reject(error);\n            }\n          });\n\n      } else {\n        this.stripe.customers.create(stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        }).then(resolve, reject);\n      }\n    });\n  }\n\n  createOrder(order, customer) {\n    return new Promise((resolve, reject) => {\n      const items = order.items.map(item => ({\n        id: item.id,\n        title: item.title.replace(/<br\\s?>/ig, ' ').replace(/<\\/?p>|<\\/?span>/ig, ''),\n        price: item.price,\n        quantity: item.quantity,\n        metadata: item.metadata || {},\n      }));\n\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      const newOrder = {\n        type: 'order',\n        orderId: this.hashids.encode(new Date().getTime()),\n        createdAt: now,\n        modifiedAt: now,\n        customer: {\n          id: customer._id,\n          email: customer.email,\n          name: customer.name,\n        },\n        items,\n        shippingMethod: {\n          name: order.shippingMethod.name,\n          amount: Number(order.shippingMethod.amount),\n        },\n        subtotal: Number(order.subtotal),\n        tax: {\n          rate: order.tax.rate || 0,\n          includedInPrice: order.tax.includedInPrice || false,\n          total: order.tax.total || 0,\n          show: order.tax.show || false,\n        },\n        discount: {\n          code: order.discount.code || '',\n          name: order.discount.name || '',\n          total: order.discount.total || 0,\n        },\n        total: Number(order.total),\n        billingAddress: order.billingAddress,\n        shippingAddress: order.shippingAddress,\n        messages: {},\n        status: 'pending',\n        test: true,\n      };\n\n      Db.connect(this.config).insert(newOrder)\n        .then((body) => {\n          newOrder._id = body.id;\n          newOrder._rev = body.rev;\n\n          resolve(newOrder);\n        }, reject);\n    });\n  }\n\n  updateOrder(order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).insert(order)\n        .then((body) => {\n          order._rev = body.rev;\n\n          resolve(order);\n        }, reject);\n    });\n  }\n\n  updateCustomer(customer, stripeCustomer, order) {\n    return new Promise((resolve, reject) => {\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      customer.modifiedAt = now;\n\n      if (!customer.orders) {\n        customer.orders = [];\n      }\n\n      customer.orders.push(order._id);\n\n      if (!customer.stripe) {\n        customer.stripe = {\n          customer: {\n            id: null,\n          },\n        };\n      }\n\n      customer.stripe.customer.id = stripeCustomer.id;\n\n      Db.connect(this.config).insert(customer)\n        .then((body) => {\n          customer._rev = body.rev;\n\n          resolve(customer);\n        }, reject);\n    });\n  }\n\n  createCharge(settings, stripeCustomer, customer, order) {\n    return new Promise((resolve, reject) => {\n      const amount = Number(order.total) * 100;\n\n      const charge = {\n        amount,\n        currency: settings.currency.iso.toLowerCase(),\n        customer: stripeCustomer.id,\n        capture: true,\n        description: order.orderId,\n        // shipping: order.shippingAddress, // fraud prevention, must follow expected schema\n        metadata: {\n          customer_id: customer._id,\n          order_id: order._id,\n        },\n        statement_descriptor: _.kebabCase(settings.storeName).toUpperCase(),\n        application_fee: Math.ceil(amount * 0.02),\n      };\n\n      this.stripe.charges.create(charge, {\n        stripe_account: settings.clientStripeAccountId,\n      })\n        .then((charge) => {\n\n          order.charge = {\n            paymentGateway: 'stripe',\n            id: charge.id,\n            status: charge.status,\n            currency: charge.currency.toUpperCase(),\n            amount: charge.amount,\n            amountRefunded: charge.amount_refunded,\n          };\n\n          order.test = !charge.livemode;\n\n          resolve(order);\n\n        }, reject);\n    });\n  }\n\n  sendReceipt(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: customer.email,\n        subject: `Your order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-receipt`, templateData).then(resolve, reject);\n    });\n  }\n\n  sendNotification(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: settings.emailSenderAddress,\n        subject: `New order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-notification`, templateData).then(resolve, reject);\n    });\n  }\n\n}\n\nmodule.exports = StripeClass;\n","module.exports = require(\"shippo\");","const Promise = require('bluebird');\nconst shippo = require('shippo');\n\nclass Shippo {\n  constructor(config) {\n    this.config = config;\n\n    this.shippo = shippo(config.shippo.token);\n  }\n\n  getQuote(address, parcel) {\n    return new Promise((resolve, reject) => {\n\n      const addressFrom = {\n        object_purpose: 'QUOTE',\n        zip: this.config.shippo.fromZip,\n        country: this.config.shippo.fromCountry,\n      };\n\n      const addressTo = {\n        object_purpose: 'QUOTE',\n        // 'name': address.name,\n        // 'company': '',\n        // 'street1': address.street1,\n        // 'street2': address.street2,\n        // 'city': address.city,\n        // 'state': '',\n        zip: address.zip,\n        country: address.country,\n        // 'phone': address.phone,\n        // 'email': address.email,\n        metadata: '',\n      };\n\n      parcel.distance_unit = 'cm';\n      parcel.mass_unit = 'kg';\n\n      this.shippo.shipment.create({\n        object_purpose: 'QUOTE',\n        address_from: addressFrom,\n        address_to: addressTo,\n        parcel,\n      })\n        .then((shipment) => {\n          const ratesReady = (shipment, attempts) => {\n            if ((shipment.object_status === 'QUEUED' || shipment.object_status === 'WAITING') && attempts < 10) {\n              this.shippo.shipment.retrieve(shipment.object_id).then((val) => {\n                ratesReady(val, attempts + 1);\n              });\n\n            } else {\n              this.shippo.shipment.rates(shipment.object_id)\n                .then((rates) => {\n                  resolve(rates);\n\n                }, (error) => {\n                  console.error('There was an error retrieving rates : %s', error);\n                  reject(error);\n                });\n            }\n          };\n\n          ratesReady(shipment, 0);\n\n        }, (error) => {\n          console.error('There was an error creating shipment: %s', error);\n          reject(error);\n        });\n\n    });\n  }\n\n}\n\nmodule.exports = Shippo;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass Settings {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async update(settings) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.client = _.merge({}, clientConfig.client, settings);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = Settings;\n","module.exports = require(\"recursive-readdir\");","const path = require('path');\nconst _ = require('lodash');\nconst request = require('request-promise');\nconst readdir = require('recursive-readdir');\nconst Entity = require('./entity');\nconst ClientConfig = require('./client-config');\n\nclass Pdf {\n  constructor (config) {\n    this.config = config;\n  }\n\n  async getTemplates() {\n    const templates = {};\n\n    const files = await readdir(this.config.pdf.templatesPath);\n\n    files.forEach((file) => {\n      if (!/\\.js$/.test(file)) {\n        return;\n      }\n\n      const id = file\n        .replace(`${this.config.pdf.templatesPath}/`, '')\n        .replace('.js', '');\n\n      // eslint-disable-next-line\n      templates[id] = require(file);\n    });\n\n    return templates;\n  }\n\n  async getPayload (templateId, entityId, role) {\n    // if (!this.templates) {\n    //   this.templates = await this.getTemplates();\n    // }\n\n    // if (!this.templates[templateId]) {\n    //   throw new Error('Template not found');\n    // }\n\n    // eslint-disable-next-line\n    const template = require(path.resolve(this.config.pdf.templatesPath, templateId));\n\n    const entity = new Entity(this.config);\n\n    const entities = (await entity.entityList([entityId], 2, false, role)).map(row => row.doc);\n\n    if (entities.length === 0) {\n      throw new Error('Entity not found');\n    }\n\n    const payload = template(Entity.flattenValues(entities)[0]);\n\n    return payload;\n  }\n\n  async getPdf (payload) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n    const assistPdfUrl = `${this.config.assist.url}/${assetSlug}/pdf/download`;\n\n    payload = typeof payload === 'object' ? JSON.stringify(payload).replace(/'/gi, '’') : payload;\n\n    const response = await request({\n      method: 'POST',\n      uri: assistPdfUrl,\n      encoding: null,\n      form: {\n        payload,\n      },\n    });\n\n    return response;\n  }\n\n}\n\nmodule.exports = Pdf;\n","module.exports = require(\"jsonwebtoken\");","const jwt = require('jsonwebtoken');\n\nclass Jwt {\n  constructor(config) {\n    this.config = config;\n  }\n\n  signToken(payload, options = {}) {\n    return jwt.sign(payload, this.config.auth.tokenSecret, options);\n  }\n\n  verifyToken(token) {\n    return jwt.verify(token, this.config.auth.tokenSecret);\n  }\n}\n\nmodule.exports = Jwt;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst request = require('request-promise');\n\nmodule.exports = function (options) {\n  const defaultOptions = {\n    client_id: null,\n    access_token: null,\n    version: 'v1',\n    host: 'https://api.instagram.com',\n  };\n\n  options = _.merge({}, defaultOptions, options || {});\n\n  const _request = (method, endpoint, query) => new Promise((resolve, reject) => {\n    const requestOptions = {\n      method,\n      url: [options.host, options.version, endpoint].join('/'),\n      qs: {\n        access_token: query.access_token || options.access_token,\n        client_id: query.client_id || options.client_id,\n      },\n    };\n\n    requestOptions.qs = _.extend({}, requestOptions.qs, query);\n\n    request(requestOptions)\n      .then((response) => {\n        resolve(JSON.parse(response));\n      }, reject);\n  });\n\n  this.get = (endpoint, query) => _request('GET', endpoint, query);\n};\n","module.exports = require(\"deep-diff\");","module.exports = require(\"json-query\");","module.exports = require(\"embedly\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst EmbedlyApi = require('embedly');\n\nclass Embedly {\n  constructor(config) {\n    this.config = config;\n  }\n\n  oembed(urls) {\n    return new Promise((resolve, reject) => {\n      const embedly = new EmbedlyApi({\n        key: this.config.embedly.apiKey,\n      });\n\n      const opts = {\n        urls: _.isArray(urls) ? urls : [urls],\n        format: 'json',\n      };\n\n      embedly.oembed(opts, (error, result) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(result);\n      });\n    });\n  }\n\n}\n\nmodule.exports = Embedly;\n","module.exports = require(\"node-sass\");","module.exports = require(\"i18n-iso-countries\");","module.exports = require(\"moment\");","module.exports = require(\"html-to-text\");","module.exports = require(\"mjml-mailchimp\");","module.exports = require(\"mjml-validator\");","module.exports = require(\"mjml-core\");","module.exports = require(\"mjml\");","module.exports = require(\"inky\");","module.exports = require(\"email-templates\");","module.exports = require(\"nodemailer-mailgun-transport\");","module.exports = require(\"createsend-node\");","module.exports = require(\"nodemailer\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass Ecommerce {\n  constructor(config) {\n    this.config = config;\n  }\n\n  getType(type, query) {\n    return new Promise((resolve, reject) => {\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      Db.connect(this.config).search('ecommerce', type, query)\n        .then(resolve, reject);\n    });\n  }\n\n  setType(type, item) {\n    return new Promise((resolve, reject) => {\n      item.type = type;\n\n      Helpers.createOrUpdate(this.config, item)\n        .then(resolve, reject);\n    });\n  }\n\n  deleteType(items) {\n    return new Promise((resolve, reject) => {\n      items = items.map(item => ({\n        _id: item._id,\n        _rev: item._rev,\n        _deleted: true,\n      }));\n\n      Helpers.chunkUpdate(this.config, items, 1000)\n        .then(resolve, reject);\n    });\n  }\n\n  getOrder(orderId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'orderByOrderId', {\n        key: orderId,\n        include_docs: true,\n      })\n        .then((body) => {\n          if (!body.rows.length) {\n            reject(new Error('Order not found'));\n            return;\n          }\n\n          resolve(body.rows[0].doc);\n        }, reject);\n    });\n  }\n\n  verifyDiscount(code) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'discountByCode', {\n        keys: [code],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            const discount = body.rows[0].doc;\n\n            const now = new Date().getTime();\n\n            const dateStart = new Date(Date.parse(discount.dateStart)).getTime();\n            const dateEnd = new Date(Date.parse(discount.dateEnd)).getTime();\n\n            if (dateStart > now) {\n              reject(new Error('Discount not valid (not begun)'));\n              return;\n\n            }\n\n            if (dateEnd < now) {\n              reject(new Error('Discount not valid (expired)'));\n              return;\n            }\n\n            resolve(discount);\n\n          } else {\n            reject(new Error({\n              statusCode: 404,\n              message: `Discount code not found (${code})`,\n            }));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Ecommerce;\n","module.exports = require(\"querystring\");","const _ = require('lodash');\nconst querystring = require('querystring');\nconst axios = require('axios');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\n\nconst providerTokenUri = {\n  google: 'https://www.googleapis.com/oauth2/v4/token',\n  instagram: 'https://api.instagram.com/oauth/access_token',\n  stripe: 'https://connect.stripe.com/oauth/token',\n  vimeo: 'https://api.vimeo.com/oauth/access_token',\n  spotify: 'https://accounts.spotify.com/api/token',\n};\n\nclass Auth {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async authoriseUser(slug, userId) {\n    const isSuperUser = this.config.auth.superUserId.split(',').map(superUser => superUser.trim()).indexOf(userId) > -1;\n\n    if (isSuperUser) {\n      return {\n        id: userId,\n        role: 'super',\n      };\n    }\n\n    const clientConfig = await Db.connect(this.config, slug).get('config');\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    if (!user.active) {\n      throw Error(`User not active: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async authProvider(provider, params, userId = null, refresh = false) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const providerConfig = _.merge({}, this.config[provider], params);\n\n    let providerClientConfig;\n\n    if (userId) {\n      providerClientConfig = _.get(clientConfig, ['userSettings', userId, 'provider', provider], {});\n    } else {\n      providerClientConfig = _.get(clientConfig, ['provider', provider], {});\n    }\n\n    const data = {\n      grant_type: refresh ? 'refresh_token' : 'authorization_code',\n      code: params.code,\n      client_id: providerConfig.clientId,\n      client_secret: providerConfig.clientSecret,\n      redirect_uri: providerConfig.redirectUri,\n      refresh_token: providerClientConfig.refresh_token,\n    };\n\n    const uri = providerTokenUri[provider];\n\n    let providerAuth;\n\n    try {\n      providerAuth = (await axios.post(uri, querystring.stringify(data))).data;\n    } catch (error) {\n      throw new Error(JSON.stringify(error.response.data));\n    }\n\n    providerClientConfig = _.merge({}, providerClientConfig, providerAuth);\n    providerClientConfig.begins = Math.floor(new Date().getTime() / 1000);\n\n    if (provider === 'google') {\n      try {\n        providerClientConfig.user = (await axios.get(`https://www.googleapis.com/plus/v1/people/me?access_token=${providerClientConfig.access_token}`)).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (provider === 'spotify') {\n      try {\n        providerClientConfig.user = (await axios.get(`https://api.spotify.com/v1/me?access_token=${providerClientConfig.access_token}`)).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (userId) {\n      _.set(clientConfig, ['userSettings', userId, 'provider', provider], providerClientConfig);\n    } else {\n      _.set(clientConfig, ['provider', provider], providerClientConfig);\n    }\n\n    return cc.set(clientConfig);\n  }\n\n}\n\nmodule.exports = Auth;\n","module.exports = require(\"password-hash\");","const path = require('path');\n\nconst config = {\n  environment: process.env.ENVIRONMENT || 'development',\n  debug: process.env.DEBUG || false,\n\n  slug: process.env.SLUG,\n  baseUrl: process.env.BASE_URL || '',\n\n  db: {\n    url: process.env.DB_URL,\n    host: process.env.DB_HOST,\n    name: process.env.DB_NAME,\n    requestPlugin: process.env.DB_REQUEST_PLUGIN,\n    meterType: process.env.DB_METER_TYPE,\n  },\n\n  auth: {\n    superUserId: process.env.AUTH_SUPER_USER_ID,\n    tokenSecret: process.env.AUTH_TOKEN_SECRET || 'change_this_secret',\n  },\n\n  dev: {\n    userId: process.env.DEV_USER_ID || 'dev',\n    role: process.env.DEV_ROLE || 'super',\n  },\n\n  cms: {\n    title: process.env.CMS_TITLE,\n    url: process.env.CMS_URL,\n  },\n\n  assist: {\n    url: process.env.ASSIST_URL,\n    username: process.env.ASSIST_USERNAME,\n    password: process.env.ASSIST_PASSWORD,\n  },\n\n  pdf: {\n    templates: {},\n  },\n\n  email: {\n    templatesPath: path.resolve(__dirname, 'email'),\n  },\n\n  instagram: {\n    clientId: process.env.INSTAGRAM_CLIENT_ID,\n    clientSecret: process.env.INSTAGRAM_CLIENT_SECRET,\n  },\n\n  twitter: {\n    consumerKey: process.env.TWITTER_CONSUMER_KEY,\n    consumerSecret: process.env.TWITTER_CONSUMER_SECRET,\n    accessTokenKey: process.env.TWITTER_ACCESS_TOKEN_KEY,\n    accessTokenSecret: process.env.TWITTER_ACCESS_TOKEN_SECRET,\n  },\n\n  google: {\n    clientId: process.env.GOOGLE_CLIENT_ID,\n    clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n  },\n\n  mailgun: {\n    apiKey: process.env.MAILGUN_API_KEY,\n    domain: process.env.MAILGUN_DOMAIN,\n  },\n\n  embedly: {\n    apiKey: process.env.EMBEDLY_API_KEY,\n  },\n\n  aws: {\n    iamAccessKeyId: process.env.AWS_IAM_ACCESS_KEY_ID,\n    iamAccessKeySecret: process.env.AWS_IAM_ACCESS_KEY_SECRET,\n\n    s3: {\n      bucket: process.env.AWS_S3_BUCKET,\n    },\n  },\n\n  shippo: {\n    token: process.env.SHIPPO_TOKEN,\n    fromZip: process.env.SHIPPO_FROM_ZIP,\n    fromCountry: process.env.SHIPPO_FROM_COUNTRY,\n  },\n\n  spotify: {\n    clientId: process.env.SPOTIFY_CLIENT_ID,\n    clientSecret: process.env.SPOTIFY_CLIENT_SECRET,\n  },\n\n  stripe: {\n    clientId: process.env.STRIPE_CLIENT_ID,\n    clientSecret: process.env.STRIPE_CLIENT_SECRET,\n    apiKey: process.env.STRIPE_API_KEY,\n  },\n\n  vimeo: {\n    clientId: process.env.VIMEO_CLIENT_ID,\n    clientSecret: process.env.VIMEO_CLIENT_SECRET,\n  },\n\n  zencoder: {\n    apiKey: process.env.ZENCODER_API_KEY,\n    s3: {\n      bucket: process.env.ZENCODER_S3_BUCKET,\n      credentials: process.env.ZENCODER_S3_CREDENTIALS,\n    },\n  },\n};\n\nmodule.exports = config;\n","function Api() { }\n\nApi.defaultConfig = require('./config.default');\n\nApi.Assist = (...args) => new (require('./lib/assist'))(...args);\nApi.Auth = (...args) => new (require('./lib/auth'))(...args);\nApi.ClientConfig = (...args) => new (require('./lib/client-config'))(...args);\nApi.Db = (...args) => new (require('./lib/db'))(...args);\nApi.Ecommerce = (...args) => new (require('./lib/ecommerce'))(...args);\nApi.Email = (...args) => new (require('./lib/email'))(...args);\nApi.Embedly = (...args) => new (require('./lib/embedly'))(...args);\nApi.Entity = (...args) => new (require('./lib/entity'))(...args);\nApi.Fields = (...args) => new (require('./lib/fields'))(...args);\nApi.Helpers = (...args) => new (require('./lib/helpers'))(...args);\nApi.Instagram = (...args) => new (require('./lib/instagram'))(...args);\nApi.Jwt = (...args) => new (require('./lib/jwt'))(...args);\nApi.Pdf = (...args) => new (require('./lib/pdf'))(...args);\nApi.Roles = (...args) => new (require('./lib/roles'))(...args);\nApi.Schema = (...args) => new (require('./lib/schema'))(...args);\nApi.Settings = (...args) => new (require('./lib/settings'))(...args);\nApi.Shippo = (...args) => new (require('./lib/shippo'))(...args);\nApi.Stripe = (...args) => new (require('./lib/stripe'))(...args);\nApi.Taxonomy = (...args) => new (require('./lib/taxonomy'))(...args);\nApi.Tools = (...args) => new (require('./lib/tools'))(...args);\nApi.User = (...args) => new (require('./lib/user'))(...args);\n\nmodule.exports = Api;\n","module.exports = require(\"xxhashjs\");","module.exports = require(\"deep-freeze\");","module.exports = require(\"object-sizeof\");","module.exports = require(\"circular-json-es6\");","module.exports = require(\"le_node\");","module.exports = require(\"zlib\");","module.exports = require(\"url-parse\");","module.exports = require(\"cache-manager-redis-store\");","module.exports = require(\"cache-manager\");","process.on('unhandledRejection', result => console.error(result));\n\nconst _ = require('lodash');\nconst express = require('express');\nconst cacheManager = require('cache-manager');\nconst redisStore = require('cache-manager-redis-store');\nconst Promise = require('bluebird');\nconst URL = require('url-parse');\nconst zlib = Promise.promisifyAll(require('zlib'));\nconst Logger = require('le_node');\nconst CircularJSON = require('circular-json-es6');\nconst sizeof = require('object-sizeof');\nconst deepFreeze = require('deep-freeze');\nconst XXH = require('xxhashjs');\n\nconst Api = require('../index');\n\nconst HASH_SEED = 0xABCD;\n\nconst defaultConfig = require('./config.default');\n\nfunction AceApiServer (app, customConfig = {}, customAuthMiddleware = null) {\n  const config = deepFreeze(_.merge({}, Api.defaultConfig, defaultConfig, customConfig));\n\n  // Async middleware\n\n  const asyncMiddleware = fn => (req, res, next) => {\n    Promise.resolve(fn(req, res, next))\n      .catch(next);\n  };\n\n  // Skip authorisation\n\n  const skipAuth = (req) => {\n    if (config.environment !== 'development') {\n      return false;\n    }\n    const allowedRoutes = [\n      '/token',\n      '/email',\n    ];\n    return _.find(allowedRoutes, route => new RegExp(`^${route}`).test(req.path));\n  };\n\n  // Default auth middleware\n\n  const defaultAuthMiddleware = (req, res, next) => {\n    if (skipAuth(req)) {\n      next();\n      return;\n    }\n\n    if (!req.session.userId) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  const authMiddleware = customAuthMiddleware || defaultAuthMiddleware;\n\n  // Permissions middleware\n\n  const permissionMiddleware = (permissions, req, res, next) => {\n    if (!req.session.role) {\n      res.status(401);\n      res.send({\n        permissions,\n        message: 'Error: role not defined in session.',\n      });\n      return;\n    }\n\n    if (req.session.role === 'super') {\n      next();\n      return;\n    }\n\n    const roles = Api.Roles();\n\n    if (_.isString(permissions)) {\n      permissions = permissions.split(',');\n    }\n\n    let authorised = false;\n\n    permissions.forEach((permission) => {\n      if (roles.role(req.session.role).permissions[permission.trim()]) {\n        authorised = true;\n      }\n    });\n\n    if (!roles.role(req.session.role) || !authorised) {\n      res.status(401);\n      res.send({\n        permissions,\n        message: 'Sorry, you\\'re not authorised to do this.',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  // Clone and extend config per request/session\n\n  const omitUndefined = (obj) => {\n    _.forIn(obj, (value, key, obj) => {\n      if (_.isPlainObject(value)) {\n        value = omitUndefined(value);\n\n        if (_.keys(value).length === 0) {\n          delete obj[key];\n        }\n      }\n\n      if (_.isUndefined(value)) {\n        delete obj[key];\n      }\n    });\n\n    return obj;\n  };\n\n  const cloneConfig = config => _.mergeWith({}, JSON.parse(JSON.stringify(config)), omitUndefined(_.cloneDeep(config)));\n\n  const getConfig = async (slug) => {\n    const configClone = cloneConfig(config);\n\n    configClone.slug = slug;\n    configClone.db.name = slug;\n\n    return configClone;\n  };\n\n  // Cache\n\n  let cache;\n\n  if (config.cache.enabled) {\n    if (config.redis.url || config.redis.host) {\n      const redisOptions = {\n        ttl: config.cache.ttl,\n      };\n\n      if (config.redis.url) {\n        redisOptions.url = config.redis.url;\n      } else {\n        redisOptions.host = config.redis.host;\n        redisOptions.port = config.redis.port;\n        redisOptions.password = config.redis.password;\n        redisOptions.db = config.redis.db;\n      }\n\n      cache = cacheManager.caching(_.merge({ store: redisStore }, redisOptions));\n\n      const redisClient = cache.store.getClient();\n      redisClient.on('error', (error) => {\n        console.error('redis: error:', error);\n      });\n\n    } else {\n      cache = cacheManager.caching({\n        store: 'memory',\n        ttl: config.cache.ttl,\n        max: config.cache.memory.max,\n        length: (item) => {\n          // const length = Buffer.byteLength(item, 'utf8')\n          const length = sizeof(item);\n          return length;\n        },\n      });\n    }\n  }\n\n  // Cache middleware\n\n  const hash = (req) => {\n    const obj = {\n      slug: req.session.slug,\n      path: req.path,\n      query: req.query,\n      body: req.body,\n    };\n    return XXH.h64(JSON.stringify(obj), HASH_SEED).toString(16);\n  };\n\n  const cacheMiddleware = asyncMiddleware(async (req, res, next) => {\n    const useCachedResponse = (\n      config.cache.enabled\n      && req.session.role === 'guest' // TODO: Replace 'guest' with constant\n      && (req.query.__cache && JSON.parse(req.query.__cache)) !== false\n    );\n\n    if (useCachedResponse) {\n      try {\n        const key = hash(req);\n\n        let response = await cache.get(key);\n\n        if (typeof response === 'string') {\n          if (config.cache.compress) {\n            response = (await zlib.gunzipAsync(Buffer.from(response, 'base64'))).toString();\n          }\n\n          try {\n            response = JSON.parse(response);\n          } catch (error) {\n            //\n          }\n\n          res.set('X-Cached-Response', true);\n          res.status(response ? 200 : 204);\n          res.send(response);\n\n          return;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    res.set('X-Cached-Response', false);\n    next();\n  });\n\n  // Response helpers\n\n  const handleError = (req, res, error) => {\n    if (_.isObject(error)) {\n      error = JSON.parse(CircularJSON.stringify(error));\n    }\n\n    const statusCode = error.statusCode || error.code || 500;\n    const errorMessage = error.stack || error.error || error.message || error.body || error.data || error;\n\n    console.error(errorMessage);\n\n    res.status(typeof statusCode === 'string' ? 500 : statusCode);\n    res.send({\n      code: statusCode,\n      message: errorMessage,\n    });\n  };\n\n  const handleResponse = async (req, res, response, cacheResponse = false) => {\n    if (response === undefined || response === null) {\n      response = '';\n      res.status(204);\n      res.send(response);\n\n    } else {\n      response = CircularJSON.stringify(response);\n      res.status(200);\n      res.send(JSON.parse(response));\n    }\n\n    if (cacheResponse && config.cache.enabled && req.session.role === 'guest') { // TODO: Replace 'guest' with constant\n      const key = hash(req);\n\n      if (config.cache.compress) {\n        response = (await zlib.gzipAsync(Buffer.from(response))).toString('base64');\n      }\n\n      cache.set(key, response);\n    }\n  };\n\n  // Header middleware\n\n  const headerMiddleware = (req, res, next) => {\n    const headers = {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,OPTIONS',\n      'Access-Control-Expose-Headers': 'X-Slug, X-Role, X-User-Id',\n      Vary: 'Accept-Encoding, X-Api-Token',\n    };\n\n    if (req.headers['access-control-request-headers']) {\n      headers['Access-Control-Allow-Headers'] = req.headers['access-control-request-headers'];\n    }\n\n    res.set(headers);\n\n    if (req.method === 'OPTIONS') {\n      res.sendStatus(200);\n      return;\n    }\n\n    next();\n  };\n\n  // Session middleware\n\n  const jwt = Api.Jwt(config);\n\n  const sessionMiddleware = (req, res, next) => {\n    if (skipAuth(req)) {\n      next();\n      return;\n    }\n\n    const referrer = req.headers.referrer || req.headers.referer;\n\n    if (referrer) {\n      const referrerHostname = new URL(referrer)\n        .hostname.split('.').slice(-2).join('.');\n\n      if (config.api.blacklistReferrer.indexOf(referrerHostname) > -1) {\n        res.status(401);\n        res.send({\n          code: 401,\n          message: 'Not authorised, referrer blacklisted',\n        });\n        return;\n      }\n    }\n\n    const token = req.headers['x-api-token'] || req.query.apiToken || req.session.apiToken;\n\n    if (!token) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing token',\n      });\n      return;\n    }\n\n    if (config.api.blacklistToken.indexOf(token) > -1) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, token blacklisted',\n      });\n      return;\n    }\n\n    try {\n      const payload = jwt.verifyToken(token);\n\n      req.session.userId = payload.userId;\n      req.session.slug = payload.slug;\n      req.session.role = payload.role || 'guest'; // TODO: Replace 'guest' with constant\n\n    } catch (error) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: `Not authorised, token verification failed (${error.message})`,\n        error,\n      });\n      return;\n    }\n\n    if (!req.session.slug) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing slug',\n      });\n      return;\n    }\n\n    if (!req.session.role) {\n      req.session.role = 'guest';\n    }\n\n    if (req.session.userId) {\n      res.set('X-User-Id', req.session.userId);\n    }\n\n    res.set('X-Environment', config.environment);\n    res.set('X-Slug', req.session.slug);\n    res.set('X-Role', req.session.role);\n\n    next();\n  };\n\n  // Router\n\n  const router = express.Router();\n\n  const forceHttps = (req, res, next) => {\n    if (\n      (req.headers['x-forwarded-proto'] && req.headers['x-forwarded-proto'] !== 'https') &&\n      (req.headers['cf-visitor'] && JSON.parse(req.headers['cf-visitor']).scheme !== 'https') // Fix for Cloudflare/Heroku flexible SSL\n    ) {\n      res.redirect(301, `https://${req.headers.host}${req.path}`);\n      return;\n    }\n    next();\n  };\n\n  if (config.environment === 'production' && config.forceHttps === true) {\n    if (app.enable) {\n      app.enable('trust proxy');\n    }\n    app.use(forceHttps);\n  }\n\n  app.use(`/${config.api.prefix}`, headerMiddleware, sessionMiddleware, router);\n\n  app.get(`/${config.api.prefix}`, (req, res) => {\n    res.send('<pre> ______\\n|A     |\\n|  /\\\\  |\\n| /  \\\\ |\\n|(    )|\\n|  )(  |\\n|______|</pre>');\n  });\n\n  // Context\n\n  const context = {\n    app,\n    router,\n    cache,\n    authMiddleware,\n    permissionMiddleware,\n    cacheMiddleware,\n    asyncMiddleware,\n    getConfig,\n    handleResponse,\n    handleError,\n  };\n\n  // Inject API into context\n\n  Object.keys(Api).forEach((key) => {\n    context[key] = Api[key];\n  });\n\n  if (config.logentriesToken) {\n    context.log = new Logger({\n      token: config.logentriesToken,\n    });\n  }\n\n  const afterResponse = (req, res) => {\n    res.removeListener('finish', afterResponse);\n    res.removeListener('close', afterResponse);\n  };\n\n  if (config.environment !== 'production') {\n    app.use((req, res, next) => {\n      res.on('finish', afterResponse.bind(null, req, res));\n      res.on('close', afterResponse.bind(null, req, res));\n      next();\n    });\n  }\n\n  // Bootstrap Routes\n\n  require('./routes/analytics')(context, config);\n  require('./routes/auth')(context, config);\n  require('./routes/cache')(context, config);\n  require('./routes/config')(context, config);\n  require('./routes/debug')(context, config);\n  require('./routes/ecommerce')(context, config);\n  require('./routes/email')(context, config);\n  require('./routes/embedly')(context, config);\n  require('./routes/entity')(context, config);\n  require('./routes/metadata')(context, config);\n  require('./routes/pdf')(context, config);\n  require('./routes/schema')(context, config);\n  require('./routes/settings')(context, config);\n  require('./routes/shippo')(context, config);\n  require('./routes/social')(context, config);\n  require('./routes/stripe')(context, config);\n  require('./routes/taxonomy')(context, config);\n  require('./routes/token')(context, config);\n  require('./routes/tools')(context, config);\n  require('./routes/user')(context, config);\n\n  return app;\n}\n\nmodule.exports = AceApiServer;\n","module.exports = require(\"connect-redis\");","module.exports = require(\"express-session\");","module.exports = require(\"method-override\");","module.exports = require(\"body-parser\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"helmet\");","module.exports = require(\"morgan\");","module.exports = require(\"http\");","const PORT = process.env.PORT || 5000;\nconst HOST = process.env.HOST || 'localhost';\n\nconst _ = require('lodash');\nconst express = require('express');\nconst http = require('http');\nconst logger = require('morgan');\nconst helmet = require('helmet');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst methodOverride = require('method-override');\nconst session = require('express-session');\nconst RedisStore = require('connect-redis')(session);\n\nconst AceApiServer = require('./index');\n\nconst defaultConfig = require('./config.default');\n\nfunction Serve (customConfig = {}, listen = true) {\n  const config = _.merge({}, defaultConfig, customConfig);\n\n  const app = express();\n\n  const sessionOptions = {\n    secret: config.session.secret,\n    resave: true,\n    saveUninitialized: true,\n  };\n\n  if (config.redis.url || config.redis.host) {\n    const redisOptions = {\n      ttl: config.session.ttl,\n    };\n\n    if (config.redis.url) {\n      redisOptions.url = config.redis.url;\n    } else {\n      redisOptions.host = config.redis.host;\n      redisOptions.port = config.redis.port;\n      redisOptions.password = config.redis.password;\n      redisOptions.db = config.redis.db;\n    }\n\n    sessionOptions.store = new RedisStore(redisOptions);\n  } else {\n    sessionOptions.cookie = {\n      maxAge: config.session.ttl,\n    };\n  }\n\n  app.use(helmet());\n  app.use(logger('tiny'));\n  app.use(cookieParser());\n  app.use(bodyParser.json({\n    limit: '50mb',\n  }));\n  app.use(bodyParser.urlencoded({\n    extended: true,\n    limit: '50mb',\n  }));\n  app.use(methodOverride());\n  app.use(session(sessionOptions));\n\n  AceApiServer(app, config);\n\n  if (listen) {\n    const server = http.createServer(app);\n    server.on('listening', () => {\n      console.log(`listening: http://${HOST}:${PORT}`);\n    });\n    server.listen(PORT);\n  }\n\n  return app;\n}\n\nmodule.exports = Serve;\n"],"sourceRoot":""}