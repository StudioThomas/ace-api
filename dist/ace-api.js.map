{"version":3,"sources":["webpack://AceApi/webpack/universalModuleDefinition","webpack://AceApi/webpack/bootstrap","webpack://AceApi/external \"babel-runtime/helpers/createClass\"","webpack://AceApi/external \"babel-runtime/helpers/classCallCheck\"","webpack://AceApi/external \"lodash\"","webpack://AceApi/./lib/client-config.js","webpack://AceApi/external \"babel-runtime/helpers/asyncToGenerator\"","webpack://AceApi/external \"babel-runtime/regenerator\"","webpack://AceApi/external \"bluebird\"","webpack://AceApi/./lib/db.js","webpack://AceApi/./lib/helpers.js","webpack://AceApi/external \"babel-runtime/core-js/json/stringify\"","webpack://AceApi/external \"babel-runtime/helpers/typeof\"","webpack://AceApi/external \"request-promise\"","webpack://AceApi/./lib/fields.js","webpack://AceApi/./lib/schema.js","webpack://AceApi/./lib/entity.js","webpack://AceApi/external \"react\"","webpack://AceApi/external \"lodash/merge\"","webpack://AceApi/external \"mjml-core\"","webpack://AceApi/external \"babel-runtime/core-js/object/define-property\"","webpack://AceApi/external \"babel-runtime/core-js/object/create\"","webpack://AceApi/external \"babel-runtime/core-js/object/set-prototype-of\"","webpack://AceApi/external \"babel-runtime/core-js/object/get-prototype-of\"","webpack://AceApi/external \"mjml\"","webpack://AceApi/external \"fs\"","webpack://AceApi/./lib/email.js","webpack://AceApi/external \"babel-runtime/core-js/object/freeze\"","webpack://AceApi/./lib/roles.js","webpack://AceApi/external \"@cloudant/cloudant\"","webpack://AceApi/external \"axios\"","webpack://AceApi/./lib/assist.js","webpack://AceApi/external \"path\"","webpack://AceApi/./lib/user.js","webpack://AceApi/./lib/tools.js","webpack://AceApi/./lib/taxonomy.js","webpack://AceApi/external \"hashids\"","webpack://AceApi/external \"stripe\"","webpack://AceApi/./lib/stripe.js","webpack://AceApi/external \"shippo\"","webpack://AceApi/./lib/shippo.js","webpack://AceApi/./lib/settings.js","webpack://AceApi/./lib/pdf.js","webpack://AceApi/external \"jsonwebtoken\"","webpack://AceApi/./lib/jwt.js","webpack://AceApi/./lib/instagram.js","webpack://AceApi/external \"deep-diff\"","webpack://AceApi/external \"embedly\"","webpack://AceApi/./lib/embedly.js","webpack://AceApi/external \"lodash/min\"","webpack://AceApi/./mjml/components/mc-image/lib/index.js","webpack://AceApi/external \"mjml-raw\"","webpack://AceApi/external \"mjml-group\"","webpack://AceApi/external \"mjml-column\"","webpack://AceApi/external \"lodash/cloneDeep\"","webpack://AceApi/./mjml/components/mc-section/lib/index.js","webpack://AceApi/external \"node-sass\"","webpack://AceApi/external \"i18n-iso-countries\"","webpack://AceApi/external \"moment\"","webpack://AceApi/external \"html-to-text\"","webpack://AceApi/external \"inky\"","webpack://AceApi/external \"email-templates\"","webpack://AceApi/external \"nodemailer-mailgun-transport\"","webpack://AceApi/external \"createsend-node\"","webpack://AceApi/external \"nodemailer\"","webpack://AceApi/./lib/ecommerce.js","webpack://AceApi/external \"querystring\"","webpack://AceApi/./lib/auth.js","webpack://AceApi/external \"password-hash\"","webpack://AceApi/./config.default.js","webpack://AceApi/./index.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","w","s","require","_","Db","Helpers","DEFAULT_CLIENT_CONFIG","_id","client","schemas","taxonomies","users","roles","ClientConfig","config","_classCallCheck3","default","this","clientConfig","connect","merge","slug","createOrUpdate","Cloudant","dbName","url","db","maxAttempt","plugins","retry","retryDelayMultiplier","retryInitialDelayMsecs","use","Promise","assistUrl","assist","thumbnail","settings","cropSlug","cropDefault","settingsArray","split","forEach","setting","crop","crops","x","y","x2","y2","g","key","push","join","settingsString","test","thumbnailType","fileName","pop","toLowerCase","thumbnailUrl","replace","doc","resolve","reject","insert","then","response","id","_rev","rev","error","statusCode","docs","chunkSize","arguments","length","undefined","promises","chunk","bulk","all","entities","groupSize","Infinity","grouped","group","entity","groupBefore","groupAfter","ratio","groupRatio","_stringify2","Date","array","replacementObject","map","fields","type","dataType","Fields","field","_freeze2","find","Schema","schema","cc","updateEntityIndex","set","schemaSlug","Error","index","findIndex","splice","schemaSlugs","isArray","filter","indexOf","concat","uniqBy","ddoc","default_field","enabled","analyzer","selector","$and","fieldRef","result","diff","Assist","Entity","flattenValues","fieldSlug","searchTerm","viewWithList","startkey","endkey","ids","children","_this","parents","role","view","keys","include_docs","consolidateResult","docMap","childDepth","rowOrDoc","size","obj","entitiesById","_docs","_getDocMap","_mergeDocs","_this2","updatedEntities","rows","row","mapValues","remove","chunkUpdate","_this3","entityMap","title","published","query","_this4","total_rows","_extendDocs","_this5","limit","Math","min","parseInt","sort","isString","search","groups","hits","_this6","_entitySearch","__entitySearch","bookmark","_this7","_query","clone","_context4","t0","entityId","_this8","revs_info","revisionIds","_revs_info","revision","status","open_revs","revisions","childrenIds","ok","fetch","uniq","childrenMap","console","_consolidateChildren","_this9","_this10","restore","_this11","entityIds","entityOrEntityId","isObject","oldEntity","newEntity","path","mergeWith","a","b","trashed","_updateChildren","forever","filesResult","deleted","_removeChildren","fileNames","_fileNames","deleteFiles","_deleted","entitiesResult","files","omitBy","startsWith","filterEntityFields","file","isRow","fs","nodemailer","Createsend","promisifyAll","nodemailerMailgunTransport","EmailTemplate","Inky","mjml2html","registerMJElement","htmlToText","moment","countries","sass","mcSection","mcImage","Email","inky","templateSlug","templateData","options","preview","mjml","skipValidation","templatePath","email","templatesPath","extension","existsSync","style","renderSync","sourceMapContents","sourceMapEmbed","css","toString","emailTemplate","views","juice","juiceResources","preserveMediaQueries","preserveFontFaces","removeStyleTags","removeLinkTags","preserveImportant","webResources","links","scripts","transport","jsonTransport","helpers","pick","template","render","html","convertMjmlResult","level","errors","releaseTheKraken","text","fromString","nodemailerMailgun","createTransport","auth","api_key","mailgun","apiKey","domain","getTemplate","sendMail","metadata","details","provider","listId","createsend","cs","clientApiKey","subscribers","addSubscriberAsync","EmailAddress","Name","Resubscribe","RestartSubscriptionBasedAutoresponders","emailAddress","catch","Message","permissions","entityGrid","entityCreate","entityRead","entityUpdate","entityDelete","taxonomyCreate","taxonomyRead","taxonomyUpdate","taxonomyDelete","fileCreate","fileRead","fileUpdate","fileDelete","user","tools","ecommerce","Roles","axios","passwordHash","assetsSlug","post","username","password","generate","data","User","userId","Tools","changes","dbBackupFile","readFileAsync","fileConents","JSON","parse","unlinkAsync","cloudant","destroy","create","Taxonomy","taxonomy","taxonomySlug","term","entityGroups","read","terms","update","entitiesByTerm","_term","parent","Stripe","Hashids","StripeClass","stripe","hashids","_context","clientStripeAccountId","stripe_user_id","t1","assets","token","order","getSettings","subscribe","customerDetails","log","findOrCreateCustomer","customer","createOrder","updateOrCreateStripeCustomer","stripeCustomer","updateCustomer","createCharge","updatedOrder","sendReceipt","orderReceipt","messages","sendNotification","orderNotification","updateOrder","finalOrder","accounts","retrieve","amount","refunds","refund_application_fee","charge","stripe_account","refund","charges","amountRefunded","amount_refunded","body","now","newCustomer","createdAt","modifiedAt","phone","billingAddress","shippingAddress","orders","source","description","customer_id","customers","param","items","item","price","quantity","newOrder","orderId","encode","getTime","shippingMethod","Number","subtotal","tax","rate","includedInPrice","total","show","discount","code","currency","iso","capture","order_id","statement_descriptor","kebabCase","storeName","toUpperCase","application_fee","ceil","paymentGateway","livemode","emailOptions","from","emailSenderName","emailSenderAddress","to","subject","assetSlug","sendEmail","shippo","Shippo","address","parcel","addressFrom","object_purpose","zip","fromZip","country","fromCountry","addressTo","distance_unit","mass_unit","shipment","address_from","address_to","ratesReady","attempts","object_status","object_id","val","rates","Settings","request","Pdf","templates","pdf","templateId","payload","assistPdfUrl","_typeof3","method","uri","encoding","form","jwt","Jwt","sign","tokenSecret","verify","client_id","access_token","version","host","endpoint","requestOptions","qs","extend","_request","EmbedlyApi","Embedly","urls","embedly","opts","format","oembed","_class","_createClass","defineProperties","target","props","descriptor","writable","_defineProperty2","Constructor","protoProps","staticProps","_mjmlCore","_merge2","_interopRequireDefault","_min2","_react","_react2","_possibleConstructorReturn","self","ReferenceError","baseStyles","table","borderCollapse","borderSpacing","img","border","borderRadius","display","outline","textDecoration","width","Image","MJMLElement","_Component","_ref","_temp","instance","TypeError","_classCallCheck","_len","args","Array","_key","__proto__","_getPrototypeOf2","apply","styles","getStyles","subClass","superClass","_create2","constructor","_setPrototypeOf2","_inherits","Component","_props","mjAttribute","getPadding","parentWidth","paddingRight","widthOverflow","_props2","defaultUnit","td","getContentWidth","height","createElement","data-mc-edit","alt","src","href","className","cellPadding","cellSpacing","data-legacy-align","data-legacy-border","renderImage","tagName","parentTag","defaultMJMLDefinition","attributes","mc:edit","align","border-radius","container-background-color","padding-bottom","padding-left","padding-right","padding-top","padding","vertical-align","endingTag","postRender","$","each","attr","removeAttr","_cloneDeep2","_mjmlColumn2","_mjmlGroup2","_mjmlRaw2","div","margin","fontSize","textAlign","verticalAlign","Section","background","trim","paddingBottom","paddingLeft","paddingTop","maxWidth","isFullWidth","tableFullwidth","data-legacy-background","data-mc-hideable","data-mc-repeatable","data-mc-variant","renderSection","renderWrappedOutlookChildren","fullWidth","data-url","data-width","renderFullWidthSection","mc:hideable","mc:repeatable","mc:variant","background-color","background-url","background-repeat","background-size","border-bottom","border-left","border-right","border-top","direction","full-width","text-align","before","startConditionalTag","endConditionalTag","after","$columnDiv","next","replaceWith","Ecommerce","dateStart","dateEnd","message","querystring","providerTokenUri","google","instagram","vimeo","Auth","superUserId","superUser","active","params","refresh","providerConfig","grant_type","clientId","client_secret","clientSecret","redirect_uri","redirectUri","refresh_token","stringify","_context2","error_description","providerClientConfig","expires","expires_in","floor","environment","process","env","ENVIRONMENT","debug","DEBUG","SLUG","baseUrl","BASE_URL","DB_URL","DB_HOST","DB_NAME","requestPlugin","DB_REQUEST_PLUGIN","meterType","DB_METER_TYPE","AUTH_SUPER_USER_ID","AUTH_TOKEN_SECRET","dev","DEV_USER_ID","DEV_ROLE","ASSIST_URL","ASSIST_USERNAME","ASSIST_PASSWORD","INSTAGRAM_CLIENT_ID","INSTAGRAM_CLIENT_SECRET","twitter","consumerKey","TWITTER_CONSUMER_KEY","consumerSecret","TWITTER_CONSUMER_SECRET","accessTokenKey","TWITTER_ACCESS_TOKEN_KEY","accessTokenSecret","TWITTER_ACCESS_TOKEN_SECRET","GOOGLE_CLIENT_ID","GOOGLE_CLIENT_SECRET","MAILGUN_API_KEY","MAILGUN_DOMAIN","EMBEDLY_API_KEY","aws","iamAccessKeyId","AWS_IAM_ACCESS_KEY_ID","iamAccessKeySecret","AWS_IAM_ACCESS_KEY_SECRET","s3","bucket","AWS_S3_BUCKET","SHIPPO_TOKEN","SHIPPO_FROM_ZIP","SHIPPO_FROM_COUNTRY","STRIPE_CLIENT_ID","STRIPE_CLIENT_SECRET","STRIPE_API_KEY","VIMEO_CLIENT_ID","VIMEO_CLIENT_SECRET","zencoder","ZENCODER_API_KEY","ZENCODER_S3_BUCKET","credentials","ZENCODER_S3_CREDENTIALS","__dirname","Api","defaultConfig","Function","bind","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","_len6","_key6","_len7","_key7","_len8","_key8","_len9","_key9","_len10","_key10","Instagram","_len11","_key11","_len12","_key12","_len13","_key13","_len14","_key14","_len15","_key15","_len16","_key16","_len17","_key17","_len18","_key18","_len19","_key19","_len20","_key20","_len21","_key21"],"mappings":"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","file":"ace-api.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AceApi\"] = factory();\n\telse\n\t\troot[\"AceApi\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssmbly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 68);\n","module.exports = require(\"babel-runtime/helpers/createClass\");","module.exports = require(\"babel-runtime/helpers/classCallCheck\");","module.exports = require(\"lodash\");","const _ = require('lodash');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Roles = require('./roles');\n\nconst roles = new Roles();\n\nconst DEFAULT_CLIENT_CONFIG = {\n  _id: 'config',\n  client: {},\n  schemas: [],\n  taxonomies: [],\n  users: [],\n  roles: roles.roles(),\n};\n\nclass ClientConfig {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async get() {\n    let clientConfig = DEFAULT_CLIENT_CONFIG;\n\n    try {\n      clientConfig = await Db.connect(this.config).get('config');\n\n      clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n    } catch (error) {\n      //\n    }\n\n    clientConfig.slug = this.config.slug;\n\n    return clientConfig;\n  }\n\n  async set(clientConfig) {\n    clientConfig._id = 'config';\n\n    delete clientConfig.roles;\n\n    clientConfig = await Helpers.createOrUpdate(this.config, clientConfig);\n\n    clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n\n    return clientConfig;\n  }\n}\n\n\nmodule.exports = ClientConfig;\n","module.exports = require(\"babel-runtime/helpers/asyncToGenerator\");","module.exports = require(\"babel-runtime/regenerator\");","module.exports = require(\"bluebird\");","const Cloudant = require('@cloudant/cloudant');\n\nclass Db {\n  constructor (config, dbName) {\n    this.config = config;\n\n    return Db.connect(config, dbName);\n  }\n\n  static connect (config, dbName) {\n    const cloudant = new Cloudant({\n      url: config.db.url,\n      maxAttempt: 5,\n      plugins: [\n        'promises',\n        {\n          retry: {\n            retryDelayMultiplier: 2,\n            retryInitialDelayMsecs: 500,\n          },\n        },\n      ],\n    });\n\n    return cloudant.db.use(dbName || config.db.name);\n  }\n}\n\nmodule.exports = Db;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\n\nclass Helpers {\n  constructor(config) {\n    this.config = config;\n    this.assistUrl = config.assist.url;\n    this.slug = config.slug;\n  }\n\n  static createOrUpdate (config, doc) {\n    return new Promise((resolve, reject) => {\n      Db.connect(config).insert(doc)\n        .then((response) => {\n          doc._id = response.id;\n          doc._rev = response.rev;\n          resolve(doc);\n        }, (error) => {\n          if (error.statusCode !== 409) {\n            reject(error);\n            return;\n          }\n\n          Db.connect(config).get(doc._id)\n            .then((response) => {\n              doc._rev = response._rev;\n\n              Db.connect(config).insert(doc)\n                .then((response) => {\n                  doc._rev = response.rev;\n                  resolve(doc);\n                }, reject);\n            }, reject);\n        });\n    });\n  }\n\n  static chunkUpdate (config, docs, chunkSize = 1000) {\n    return new Promise((resolve, reject) => {\n      const chunks = _.chunk(docs, chunkSize);\n      const promises = [];\n\n      chunks.forEach((chunk) => {\n        promises.push(new Promise((resolve, reject) => {\n          Db.connect(config).bulk({\n            docs: chunk,\n          }).then(resolve, reject);\n        }));\n      });\n\n      Promise.all(promises).then(resolve, reject);\n    });\n  }\n\n  static groupEntities (entities, groupSize = Infinity) {\n    const grouped = [];\n\n    let group = {\n      entities: [],\n    };\n\n    entities.forEach((entity) => {\n      if (!entity.groupBefore || group.entities.length >= groupSize) {\n        group = {\n          entities: [],\n        };\n      }\n\n      group.entities.push(entity);\n\n      if (!entity.groupAfter || group.entities.length >= groupSize) {\n        group.ratio = 0;\n\n        group.entities.forEach((entity) => {\n          group.ratio += (entity.thumbnail || entity).ratio;\n        });\n\n        group.entities.forEach((entity) => {\n          entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n        });\n\n        grouped.push(group);\n      }\n    });\n\n    return grouped;\n  }\n\n  static now () {\n    return JSON.stringify(new Date()).replace(/\"/g, '');\n  }\n\n  static replace (array, replacementObject, key) {\n    return array.map((object) => {\n      if (object[key] === replacementObject[key]) {\n        return replacementObject;\n      }\n      return object;\n    });\n  }\n\n  thumbnailSrc (thumbnail, settings, cropSlug, cropDefault) {\n    if (!thumbnail) {\n      return '';\n    }\n\n    let settingsArray;\n\n    if (typeof settings === 'string') {\n      settingsArray = settings.split(/,|;/);\n\n      settings = {};\n\n      settingsArray.forEach((setting) => {\n        setting = setting.split(/_|:/);\n\n        settings[setting[0]] = setting[1];\n      });\n    }\n\n    const crop = thumbnail.crops ? thumbnail.crops[cropSlug] : false;\n\n    if (crop) {\n      settings.x = crop[0];\n      settings.y = crop[1];\n      settings.x2 = crop[2];\n      settings.y2 = crop[3];\n    } else if (cropDefault) {\n      settings.g = cropDefault;\n    }\n\n    settingsArray = [];\n\n    _.forEach(settings, (value, key) => {\n      settingsArray.push([key, value].join(':'));\n    });\n\n    const settingsString = settingsArray.join(';');\n\n    if (/image/.test(thumbnail.thumbnailType)) {\n      const fileName = thumbnail.fileName;\n      const ext = fileName.split('.').pop().toLowerCase();\n\n      if (ext === 'svg') {\n        return [this.assistUrl, this.slug, fileName].join('/');\n      }\n\n      return [this.assistUrl, this.slug, 'transform', settingsString, fileName].join('/');\n    }\n\n    if (/video|oembed|proxy/.test(thumbnail.thumbnailType)) {\n      const thumbnailUrl = thumbnail.thumbnailUrl.replace(/https?:\\/\\//, '');\n\n      return [this.assistUrl, this.slug, 'proxy', 'transform', settingsString, thumbnailUrl].join('/');\n    }\n\n    return '';\n  }\n\n}\n\nmodule.exports = Helpers;\n","module.exports = require(\"babel-runtime/core-js/json/stringify\");","module.exports = require(\"babel-runtime/helpers/typeof\");","module.exports = require(\"request-promise\");","const _ = require('lodash');\n\nconst fields = [\n  {\n    type: 'attachment',\n    name: 'Attachment',\n    dataType: null,\n  },\n  {\n    type: 'audio',\n    name: 'Audio',\n    dataType: null,\n  },\n  {\n    type: 'checkbox',\n    name: 'Checkbox',\n    dataType: 'boolean',\n  },\n  {\n    type: 'color',\n    name: 'Color',\n    dataType: 'string',\n  },\n  {\n    type: 'date',\n    name: 'Date',\n    dataType: 'string',\n  },\n  {\n    type: 'embedly',\n    name: 'Embedly',\n    dataType: null,\n  },\n  {\n    type: 'entity',\n    name: 'Entity',\n    dataType: 'array',\n  },\n  {\n    type: 'entityGrid',\n    name: 'Entity Grid',\n    dataType: 'array',\n  },\n  {\n    type: 'entityTile',\n    name: 'Entity Tile',\n    dataType: 'array',\n  },\n  {\n    type: 'image',\n    name: 'Image',\n    dataType: null,\n  },\n  {\n    type: 'keyValue',\n    name: 'Key Value',\n    dataType: null,\n  },\n  {\n    type: 'number',\n    name: 'Number',\n    dataType: 'number',\n  },\n  {\n    type: 'richText',\n    name: 'Rich Text',\n    dataType: null,\n  },\n  {\n    type: 'select',\n    name: 'Select',\n    dataType: 'array',\n  },\n  {\n    type: 'taxonomy',\n    name: 'Taxonomy',\n    dataType: null,\n  },\n  {\n    type: 'text',\n    name: 'Text',\n    dataType: 'string',\n  },\n  {\n    type: 'textArea',\n    name: 'Text Area',\n    dataType: 'string',\n  },\n  {\n    type: 'video',\n    name: 'Video',\n    dataType: null,\n  },\n  {\n    type: 'vimeo',\n    name: 'Vimeo',\n    dataType: null,\n  },\n];\n\nclass Fields {\n  static fields() {\n    return fields.map(field => Object.freeze(field));\n  }\n  static field(type) {\n    return _.find(Fields.fields(), { type });\n  }\n}\n\nmodule.exports = Fields;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Fields = require('./fields');\n\nclass Schema {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas.push(schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(schemaSlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const schema = _.find(clientConfig.schemas, { slug: schemaSlug });\n\n    if (!schema) {\n      throw Error(`Schema not found: ${schemaSlug}`);\n    }\n\n    return schema;\n  }\n\n  async update(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.schemas, { slug: schema.slug });\n\n    if (index === -1) {\n      throw Error(`Schema not found: ${schema.slug}`);\n    }\n\n    clientConfig.schemas.splice(index, 1, schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(schemaSlugs) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    schemaSlugs = _.isArray(schemaSlugs) ? schemaSlugs : [schemaSlugs];\n\n    clientConfig.schemas = clientConfig.schemas.filter(schema => schemaSlugs.indexOf(schema.slug) === -1);\n\n    clientConfig.schemas = clientConfig.schemas.map((schema) => {\n      if (!schema.fields) {\n        return schema;\n      }\n      schema.fields = schema.fields.map((field) => {\n        if (!field.settings) {\n          return field;\n        }\n        if (field.settings.schemas) {\n          field.settings.schemas = field.settings.schemas.filter(schema => schemaSlugs.indexOf(schema) === -1);\n        }\n        return field;\n      });\n      return schema;\n    });\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateAll(schemas) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas = schemas;\n\n    // await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateEntityIndex(schemas) {\n    let fields = [];\n\n    schemas.forEach((schema) => {\n      fields = fields.concat(schema.fields);\n    });\n\n    fields = _.uniqBy(fields, 'slug');\n\n    const index = {\n      name: 'entity',\n      type: 'text',\n      ddoc: 'entityIndex',\n      index: {\n        default_field: {\n          enabled: true,\n          analyzer: 'standard',\n        },\n        selector: {\n          $and: [\n            {\n              type: 'entity',\n            },\n          ],\n        },\n        fields: [\n          {\n            name: 'published',\n            type: 'boolean',\n          },\n          {\n            name: 'trashed',\n            type: 'boolean',\n          },\n          {\n            name: 'title',\n            type: 'string',\n          },\n          {\n            name: 'slug',\n            type: 'string',\n          },\n          {\n            name: 'schema',\n            type: 'string',\n          },\n          {\n            name: 'modifiedAt',\n            type: 'string',\n          },\n          {\n            name: 'publishedAt',\n            type: 'string',\n          },\n        ],\n      },\n    };\n\n    fields.forEach((field) => {\n      const fieldRef = Fields.field(field.type);\n\n      if (/number|string|boolean/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value`,\n          type: fieldRef.dataType,\n        });\n      }\n\n      if (/array/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.[].slug`,\n          type: 'string',\n        });\n      }\n\n      if (/taxonomy/.test(field.type)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.terms.[].slug`,\n          type: 'string',\n        });\n      }\n    });\n\n    const result = await Db.connect(this.config).index(index);\n\n    return result;\n  }\n\n}\n\nmodule.exports = Schema;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst diff = require('deep-diff').diff;\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Schema = require('./schema');\nconst Assist = require('./assist');\n\nconst CHUNK_UPDATE_SIZE = 1000;\n\nclass Entity {\n  constructor (config) {\n    this.config = config;\n\n    // Expose helpers\n    this.flattenValues = Entity.flattenValues;\n  }\n\n  static flattenValues (docs) {\n    return docs.map((doc) => {\n      if (!doc.fields || !_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (/entity/.test(field.type) && _.isArray(field.value)) { // entity / entityTile / entityGrid\n          field.value = Entity.flattenValues(field.value);\n        }\n        return field.value;\n      });\n\n      return doc;\n    });\n  }\n\n  static filterEntityFields (docs, role = 'guest') {\n    const isArray = _.isArray(docs);\n\n    docs = (isArray ? docs : [docs]).map((doc) => {\n      if (_.size(doc.fields)) {\n        doc.fields = _.mapValues(doc.fields, (field) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter((obj) => {\n              if (!obj) {\n                return false;\n              }\n              if (obj.type && obj.type === 'entity' && role === 'guest') {\n                return obj.published !== undefined ? obj.published : true;\n              }\n              return true;\n            });\n          }\n          return field;\n        });\n      }\n      return doc;\n    });\n\n    return isArray ? docs : docs[0];\n  }\n\n  static _consolidateChildren (docs, childrenMap) {\n    return docs.map((doc) => {\n      if (!_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (_.isArray(field.value)) {\n          field.value = field.value.filter((obj) => {\n            if (!obj) {\n              return false;\n            }\n            if (obj.type === 'entity') {\n              return childrenMap[obj.id] !== undefined;\n            }\n            return true;\n          });\n\n          field.value = field.value.map((obj) => {\n            if (obj.type === 'entity') {\n              obj = _.merge(obj, childrenMap[obj.id]);\n            }\n            obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n            return obj;\n          });\n        }\n\n        return field;\n      });\n\n      return doc;\n    });\n  }\n\n  static consolidateResult (result, children = null, parents = null, role = 'guest') {\n    let docs = [];\n    let entityMap = {};\n    let childrenMap = {};\n\n    result.rows.forEach((row) => {\n      if (!row.doc) {\n        return;\n      }\n\n      if (children && row.value.type === 'field') {\n        childrenMap[row.doc._id] = Entity.filterEntityFields(row.doc, role);\n      }\n\n      if (parents && row.value.type === 'entity') {\n        row.doc.parents = [];\n        entityMap[row.key] = row.doc;\n      }\n\n      if (row.value.type === 'entity') {\n        docs.push(row.doc);\n      }\n    });\n\n    if (children) {\n      docs = Entity._consolidateChildren(docs, childrenMap);\n    }\n\n    if (parents) {\n      result.rows.forEach((row) => {\n        if (row.doc && row.value.type === 'parent') {\n          entityMap[row.key].parents.push(Entity.filterEntityFields(row.doc, role));\n        }\n      });\n\n      entityMap = _.mapValues(entityMap, (entity) => {\n        entity.parents = _.uniqBy(entity.parents, entity => entity._id);\n        return entity;\n      });\n    }\n\n    entityMap = null;\n    childrenMap = null;\n\n    return docs;\n  }\n\n  static _fileNames (entities) {\n    const fileNames = [];\n\n    entities.forEach((entity) => {\n      _.forEach(entity.fields, (field) => {\n        if (field.value && field.value.file) {\n          fileNames.push(field.value.file.name);\n        }\n      });\n    });\n\n    return _.uniq(fileNames);\n  }\n\n  async fieldValues (fieldSlug, searchTerm) {\n    const result = await Db.connect(this.config).viewWithList('entity', 'byField', 'search', {\n      startkey: [fieldSlug],\n      endkey: [fieldSlug, {}],\n      group: true,\n      searchTerm,\n    });\n    return result;\n  }\n\n  entitiesById (ids, children = null, parents = null, role = 'guest') {\n    return new Promise((resolve, reject) => {\n      if (ids.length === 0) {\n        resolve([]);\n        return;\n      }\n      Db.connect(this.config).view('entity', parents ? 'byIdExtended' : 'byId', {\n        keys: ids,\n        include_docs: true,\n      })\n        .then((result) => {\n          const docs = Entity.consolidateResult(result, children, parents, role);\n          resolve(docs);\n        }, reject);\n    });\n  }\n\n  async _getDocMap (docs, children, parents, role, docMap = {}, childDepth = 0) {\n    if ((!parents && !children)) {\n      return docMap;\n    }\n\n    const ids = [];\n\n    docs.forEach((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      const doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (children && _.size(doc.fields)) {\n        _.forEach(doc.fields, (field) => {\n          if (_.isArray(field.value)) {\n            field.value.forEach((obj) => {\n              if (obj.id && !docMap[obj.id]) {\n                // if (/^(entity)$/.test(obj.type)) {\n                //   ids.push(obj.id);\n                // }\n                ids.push(obj.id);\n              }\n            });\n          }\n        });\n\n      } else {\n        ids.push(doc.id || doc._id);\n      }\n    });\n\n    let _docs = await this.entitiesById(ids, children, parents, role);\n\n    _docs.forEach((doc) => {\n      docMap[doc._id] = doc;\n    });\n\n    childDepth += 1;\n\n    if (!children || (children && childDepth >= children)) {\n      return docMap;\n    }\n\n    docMap = await this._getDocMap(_docs, children, parents, role, docMap, childDepth);\n\n    _docs = null;\n\n    return docMap;\n  }\n\n  static _mergeDocs(docs, docMap, children, childDepth = 0) {\n    childDepth += 1;\n\n    if (children && childDepth >= children) {\n      return docs;\n    }\n\n    docs = docs.map((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      const doc = docMap[rowOrDoc.id || rowOrDoc._id] || (isRow ? rowOrDoc.doc : rowOrDoc);\n\n      if (children && doc.fields) {\n        doc.fields = _.mapValues(doc.fields, (field) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.map((obj) => {\n              if (obj.id && docMap[obj.id]) {\n                obj = _.merge(obj, docMap[obj.id] || {});\n                obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n              }\n              return obj;\n            });\n            field.value = Entity._mergeDocs(field.value, docMap, children, childDepth);\n          }\n\n          return field;\n        });\n      }\n\n      if (isRow) {\n        rowOrDoc.doc = doc;\n      } else {\n        rowOrDoc = doc;\n      }\n\n      return rowOrDoc;\n    });\n\n    return docs;\n  }\n\n  async _extendDocs (docs, children, parents, role) {\n    let docMap = await this._getDocMap(docs, children, parents, role);\n\n    docs = Entity._mergeDocs(docs, docMap, children);\n\n    docMap = null;\n\n    return docs;\n  }\n\n  _removeChildren (entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      entities = entities.map(entity => entity._id);\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const updatedEntities = _.uniqBy(response.rows, row => row.doc._id).map((row) => {\n            row.doc.fields = _.mapValues(row.doc.fields, (field) => {\n              if (_.isArray(field.value)) {\n                field.value = _.remove(field.value, obj => obj.type === 'entity' && entities.indexOf(obj.id) !== -1);\n              }\n              return field;\n            });\n\n            return row.doc;\n          });\n\n          if (updatedEntities.length === 0) {\n            resolve([]);\n            return;\n          }\n\n          Helpers.chunkUpdate(this.config, updatedEntities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  _updateChildren (entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      const entityMap = {};\n\n      entities = entities.map((entity) => {\n        entityMap[entity._id] = entity;\n\n        return entity._id;\n      });\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const entities = response.rows.map((row) => {\n            const entity = row.doc;\n\n            _.forEach(entity.fields, (field, fieldSlug) => {\n              if (_.isArray(field.value)) {\n                entity.fields[fieldSlug].value = field.value.map((obj) => {\n                  if (obj.type === 'entity' && entityMap[obj.id]) {\n                    obj.slug = entityMap[obj.id].slug;\n                    obj.title = entityMap[obj.id].title;\n                    obj.schema = entityMap[obj.id].schema;\n                    obj.published = entityMap[obj.id].published;\n\n                    if (entityMap[obj.id].thumbnail) {\n                      obj.thumbnail = entityMap[obj.id].thumbnail;\n                    } else {\n                      obj.thumbnail = null;\n                    }\n                  }\n\n                  return obj;\n                });\n              }\n            });\n\n            return entity;\n          });\n\n          Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  entityList (query, children = null, parents = null, role = 'guest') {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('entity', 'byId', query)\n        .then((result) => {\n          result.rows = Entity.consolidateResult(result, children, parents, role);\n\n          if ((!children && !parents) || result.total_rows === 0) {\n            resolve(result.rows);\n            return;\n          }\n\n          this._extendDocs(result.rows, children, parents, role)\n            .then((docs) => {\n              result.rows = docs;\n\n              resolve(result.rows);\n            }, reject);\n\n        }, reject);\n    });\n  }\n\n  _entitySearch (query, children = null, parents = null, role = 'guest') {\n    return new Promise((resolve, reject) => {\n      query.limit = Math.min(query.limit ? parseInt(query.limit, 10) : 200, 200);\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      if (children) {\n        query.include_docs = true;\n      }\n\n      Db.connect(this.config).search('entity', query.index || 'all', query)\n        .then((result) => {\n\n          if (result.groups) {\n            const promises = [];\n\n            result.groups = result.groups.map((group) => {\n              promises.push(new Promise((resolve, reject) => {\n                if ((!children && !parents) || group.total_rows === 0) {\n                  resolve();\n                  return;\n                }\n\n                this._extendDocs(group.hits, children, parents, role)\n                  .then((docs) => {\n                    group.hits = docs;\n\n                    resolve();\n                  }, reject);\n              }));\n              return group;\n            });\n\n            Promise.all(promises)\n              .then(() => {\n                resolve(result);\n              }, reject);\n\n            return;\n          }\n\n          if ((!children && !parents) || result.total_rows === 0) {\n            resolve(result);\n            return;\n          }\n\n          this._extendDocs(result.rows, children, parents, role)\n            .then((docs) => {\n              result.rows = docs;\n\n              resolve(result);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entitySearch (query, children = null, parents = null, role = 'guest') {\n    return new Promise((resolve, reject) => {\n      const limit = query.limit ? parseInt(query.limit, 10) : 25;\n\n      if (limit <= 200) {\n        this._entitySearch(query, children, parents, role)\n          .then(resolve, reject);\n        return;\n      }\n\n      let rows = [];\n      let groups = [];\n\n      function __entitySearch (bookmark) {\n        const _query = _.clone(query);\n\n        if (bookmark) {\n          _query.bookmark = bookmark;\n        }\n\n        this._entitySearch(_query, children, parents, role)\n          .then((result) => {\n            if (result.rows) {\n              rows = rows.concat(result.rows);\n            }\n            if (result.groups) {\n              groups = groups.concat(result.groups);\n            }\n\n            if (rows.length < result.total_rows && rows.length < limit) {\n              __entitySearch.call(this, result.bookmark);\n              return;\n            }\n\n            result.rows = rows;\n            result.groups = groups;\n\n            resolve(result);\n          }, reject);\n      }\n\n      __entitySearch.call(this);\n    });\n  }\n\n  async entityFind (query, children = null, parents = null, role = 'guest') {\n    let result;\n\n    try {\n      result = await Db.connect(this.config).find(query);\n    } catch (error) {\n      if (error.error === 'no_usable_index') {\n        const cc = new ClientConfig(this.config);\n        const clientConfig = await cc.get();\n\n        const schema = new Schema(this.config);\n        await schema.updateEntityIndex(clientConfig.schemas);\n\n        result = await Db.connect(this.config).find(query);\n      }\n    }\n\n    if (children === false) {\n      return result;\n    }\n\n    if (query.fields && query.fields.indexOf('_id') === -1) {\n      throw new Error('_id field required for `children`');\n    }\n\n    result.docs = await this._extendDocs(result.docs, children, parents, role);\n\n    return result;\n  }\n\n  entityRevisions (entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId, {\n        revs_info: true,\n      })\n        .then((response) => {\n          const revisionIds = [];\n\n          response._revs_info.forEach((revision) => {\n            if (revision.status === 'available') {\n              revisionIds.push(revision.rev);\n            }\n          });\n\n          Db.connect(this.config).get(entityId, {\n            open_revs: JSON.stringify(revisionIds),\n          })\n            .then((response) => {\n              const revisions = [];\n              const childrenIds = [];\n\n              response.forEach((revision) => {\n                if (revision.ok) {\n                  revisions.push(revision.ok);\n\n                  _.forEach(revision.ok.fields, (field) => {\n                    if (/entity/.test(field.type)) {\n                      _.forEach(field.value, (obj) => {\n                        if (obj.id) {\n                          childrenIds.push(obj.id);\n                        }\n                      });\n                    }\n\n                    if (/image/.test(field.type) && field.value.id) {\n                      childrenIds.push(field.value.id);\n                    }\n                  });\n                }\n              });\n\n              Db.connect(this.config).fetch({\n                keys: _.uniq(childrenIds),\n                include_docs: true,\n              })\n                .then((result) => {\n                  const childrenMap = {};\n\n                  result.rows.forEach((row) => {\n                    try {\n                      childrenMap[row.doc._id] = row.doc;\n                    } catch (error) {\n                      console.error('Error: child no longer exists');\n                    }\n                  });\n\n                  resolve(Entity._consolidateChildren(revisions, childrenMap));\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entityCreate (entity) {\n    return new Promise((resolve, reject) => {\n      entity.type = 'entity';\n\n      Db.connect(this.config).insert(entity)\n        .then((response) => {\n          entity._id = response.id;\n          entity._rev = response.rev;\n\n          resolve(entity);\n        }, reject);\n    });\n  }\n\n  entityRead (entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId)\n        .then(resolve, reject);\n    });\n  }\n\n  entityUpdate (entities, restore) {\n    return new Promise((resolve, reject) => {\n      entities = _.isArray(entities) ? entities : [entities];\n\n      const entityMap = {};\n\n      const entityIds = entities.map((entityOrEntityId) => {\n        let entityId;\n\n        if (_.isObject(entityOrEntityId)) {\n          entityId = entityOrEntityId._id;\n          entityMap[entityId] = entityOrEntityId;\n        }\n        if (_.isString(entityOrEntityId)) {\n          entityId = entityOrEntityId;\n        }\n\n        return entityId;\n      });\n\n      Db.connect(this.config).fetch({\n        keys: entityIds,\n        include_docs: true,\n      })\n        .then((response) => {\n          const children = [];\n\n          const entities = response.rows.map((row) => {\n            const oldEntity = row.doc;\n            const newEntity = entityMap[oldEntity._id];\n\n            let entity = oldEntity;\n\n            if (newEntity) {\n              delete newEntity._rev;\n\n              const diffs = diff(oldEntity, newEntity);\n\n              diffs.forEach((diff) => {\n                if (/slug|title|thumbnail/.test(diff.path[0])) {\n                  if (children.indexOf(newEntity) === -1 && entityIds.indexOf(newEntity._id) !== -1) {\n                    children.push(newEntity);\n                  }\n                }\n              });\n\n              entity = _.mergeWith({}, oldEntity, newEntity, (a, b) => {\n                if (_.isArray(a) && _.isArray(b)) {\n                  return b;\n                }\n                return undefined;\n              });\n            }\n\n            if (restore) {\n              entity.trashed = false;\n            }\n\n            return entity;\n          });\n\n          this._updateChildren(children)\n            .then(() => {\n              Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n                .then(resolve, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  async entityDelete (entityIds, forever = false) {\n    let entities;\n    let filesResult;\n\n    if (entityIds === 'trashed') {\n      forever = true;\n\n      entities = (await Db.connect(this.config).view('entity', 'trashed', {\n        include_docs: true,\n      })).rows;\n\n    } else {\n      entities = (await Db.connect(this.config).fetch({\n        keys: _.isArray(entityIds) ? entityIds : [entityIds],\n        include_docs: true,\n      })).rows;\n    }\n\n    entities = entities.filter(entity => !entity.value || !entity.value.deleted);\n\n    entities = entities.map(entity => entity.doc);\n\n    if (forever) {\n      await this._removeChildren(entities);\n\n      const fileNames = Entity._fileNames(entities);\n\n      if (fileNames.length) {\n        const assist = new Assist(this.config);\n        filesResult = await assist.deleteFiles(fileNames);\n      }\n\n      entities = entities.map(entity => ({\n        _id: entity._id,\n        _rev: entity._rev,\n        _deleted: true,\n      }));\n\n    } else {\n      entities = entities.map((entity) => {\n        entity.trashed = true;\n        return entity;\n      });\n    }\n\n    const entitiesResult = await Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE);\n\n    return {\n      entities: entitiesResult,\n      files: filesResult,\n    };\n  }\n\n}\n\nmodule.exports = Entity;\n","module.exports = require(\"react\");","module.exports = require(\"lodash/merge\");","module.exports = require(\"mjml-core\");","module.exports = require(\"babel-runtime/core-js/object/define-property\");","module.exports = require(\"babel-runtime/core-js/object/create\");","module.exports = require(\"babel-runtime/core-js/object/set-prototype-of\");","module.exports = require(\"babel-runtime/core-js/object/get-prototype-of\");","module.exports = require(\"mjml\");","module.exports = require(\"fs\");","const path = require('path');\nconst fs = require('fs');\nconst _ = require('lodash');\nconst Promise = require('bluebird');\nconst nodemailer = require('nodemailer');\nconst Createsend = Promise.promisifyAll(require('createsend-node'));\nconst nodemailerMailgunTransport = require('nodemailer-mailgun-transport');\nconst EmailTemplate = require('email-templates');\nconst Inky = require('inky').Inky;\nconst mjml2html = require('mjml').mjml2html;\nconst registerMJElement = require('mjml').registerMJElement;\nconst htmlToText = require('html-to-text');\nconst moment = require('moment');\nconst countries = require('i18n-iso-countries');\nconst sass = require('node-sass');\n\nconst ClientConfig = require('./client-config');\nconst Helpers = require('./helpers');\n\nconst mcSection = require('../mjml/components/mc-section/lib').default;\nconst mcImage = require('../mjml/components/mc-image/lib').default;\n\nclass Email {\n  constructor(config) {\n    this.config = config;\n\n    this.inky = new Inky();\n\n    registerMJElement(mcSection);\n    registerMJElement(mcImage);\n  }\n\n  getTemplate(templateSlug, templateData, options = {}) {\n    return new Promise((resolve, reject) => {\n      options = _.merge({}, {\n        preview: false,\n        inky: false,\n        mjml: false,\n        skipValidation: false,\n      }, options);\n\n      const templatePath = path.resolve(this.config.email.templatesPath, templateSlug);\n\n      // Support ejs for backwards compatibility\n      // TODO: convert ejs templates to pug and remove\n      let extension = 'pug';\n      if (fs.existsSync(`${templatePath}/html.ejs`)) {\n        extension = 'ejs';\n      }\n\n      const style = sass.renderSync({\n        file: path.resolve(templatePath, 'style.scss'),\n        sourceMapContents: options.preview,\n        sourceMapEmbed: options.preview,\n      }).css.toString().replace(/\"/g, '\\'');\n\n      const emailTemplate = new EmailTemplate({\n        views: {\n          root: this.config.email.templatesPath,\n          options: {\n            extension,\n          },\n        },\n        juice: !options.preview,\n        juiceResources: {\n          preserveMediaQueries: true,\n          preserveFontFaces: true,\n          removeStyleTags: false,\n          removeLinkTags: false,\n          preserveImportant: true,\n          webResources: {\n            links: false,\n            scripts: false,\n            // relativeTo: '',\n          },\n        },\n        transport: {\n          jsonTransport: true,\n        },\n      });\n\n      const cc = new ClientConfig(this.config);\n      const helpers = new Helpers(this.config);\n\n      cc.get()\n        .then((clientConfig) => {\n          templateData = _.merge({}, templateData, {\n            config: _.pick(clientConfig, ['client', 'assets']),\n            helpers,\n            style,\n            moment,\n            countries,\n            template: templateSlug,\n            preview: options.preview,\n          });\n\n          emailTemplate.render(`${templateSlug}/html`, templateData)\n            .then((html) => {\n\n              if (options.mjml) {\n                const convertMjmlResult = mjml2html(html, {\n                  level: options.skipValidation ? 'skip' : 'soft',\n                });\n\n                if (convertMjmlResult.errors && convertMjmlResult.errors.length) {\n                  reject(convertMjmlResult.errors);\n                  return;\n                }\n\n                html = convertMjmlResult.html;\n              }\n\n              if (options.inky) {\n                html = this.inky.releaseTheKraken(html);\n              }\n\n              resolve({\n                html,\n                text: htmlToText.fromString(html),\n              });\n            }, reject);\n        }, reject);\n    });\n  }\n\n  sendEmail(email, template, templateData, options) {\n    return new Promise((resolve, reject) => {\n      const nodemailerMailgun = nodemailer.createTransport(nodemailerMailgunTransport({\n        auth: {\n          api_key: this.config.mailgun.apiKey,\n          domain: this.config.mailgun.domain,\n        },\n      }));\n\n      this.getTemplate(template, templateData, options)\n        .then((emailTemplate) => {\n          email.html = emailTemplate.html;\n          email.text = emailTemplate.text;\n\n          nodemailerMailgun.sendMail(email, (error, metadata) => {\n            if (error) {\n              reject(error);\n              return;\n            }\n\n            resolve({\n              metadata,\n              email,\n            });\n          });\n        }, reject);\n    });\n  }\n\n  subscribe(details, provider, listId) {\n    return new Promise((resolve, reject) => {\n      const cc = new ClientConfig(this.config);\n\n      cc.get()\n        .then((clientConfig) => {\n          if (provider === 'createsend') {\n            if (clientConfig.provider.createsend) {\n              const cs = new Createsend({\n                apiKey: clientConfig.provider.createsend.clientApiKey,\n              });\n\n              const subscribers = Promise.promisifyAll(cs.subscribers);\n\n              subscribers.addSubscriberAsync(listId, {\n                EmailAddress: details.email,\n                Name: details.name,\n                Resubscribe: true,\n                RestartSubscriptionBasedAutoresponders: true,\n              })\n                .then((result) => {\n                  resolve(`Email.subscribe(): ${result.emailAddress}`);\n                })\n                .catch((error) => {\n                  reject(error.Message);\n                });\n\n              return;\n            }\n            reject(new Error('Subscriber list not configured'));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Email;\n","module.exports = require(\"babel-runtime/core-js/object/freeze\");","const _ = require('lodash');\n\nconst roles = [\n  {\n    name: 'Admin',\n    slug: 'admin',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: true,\n      settings: true,\n      tools: true,\n      ecommerce: true,\n    },\n  },\n  {\n    name: 'Editor',\n    slug: 'editor',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n  {\n    name: 'Guest',\n    slug: 'guest',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: false,\n      entityRead: true,\n      entityUpdate: false,\n      entityDelete: false,\n\n      taxonomyCreate: false,\n      taxonomyRead: true,\n      taxonomyUpdate: false,\n      taxonomyDelete: false,\n\n      fileCreate: false,\n      fileRead: true,\n      fileUpdate: false,\n      fileDelete: false,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n];\n\nclass Roles {\n  roles() {\n    return roles.map(role => Object.freeze(role));\n  }\n  role(slug) {\n    return _.find(Roles.roles(), { slug });\n  }\n}\n\nmodule.exports = Roles;\n","module.exports = require(\"@cloudant/cloudant\");","module.exports = require(\"axios\");","const _ = require('lodash');\nconst axios = require('axios');\nconst passwordHash = require('password-hash');\nconst ClientConfig = require('./client-config');\n\nclass Assist {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async deleteFiles(fileNames) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetsSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n\n    if (fileNames.length === 0) {\n      return [];\n    }\n\n    const result = (await axios.post(`${this.config.assist.url}/${assetsSlug}/file/delete`, { fileNames }, {\n      auth: {\n        username: this.config.assist.username,\n        password: passwordHash.generate(this.config.assist.password),\n      },\n    })).data;\n\n    return result;\n  }\n\n}\n\nmodule.exports = Assist;\n","module.exports = require(\"path\");","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass User {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.users.push(user);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async update(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.users, { id: user.id });\n\n    if (index === -1) {\n      throw Error(`User not found: ${user.id}`);\n    }\n\n    clientConfig.users.splice(index, 1, user);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    userId = _.isArray(userId) ? userId : [userId];\n\n    clientConfig.users = clientConfig.users.filter(user => userId.indexOf(user.id) === -1);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = User;\n","const Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst Cloudant = require('@cloudant/cloudant');\nconst Db = require('./db');\n\nclass Tools {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getDb() {\n    const result = await Db.connect(this.config).fetch({\n      include_docs: true,\n    });\n\n    return result;\n  }\n\n  async getChanges() {\n    const result = await Db.connect(this.config).changes({\n      limit: 50,\n      include_docs: true,\n      filter: 'tools/changesEntity',\n    });\n\n    return result;\n  }\n\n  async importDb(dbBackupFile) {\n    const dbName = this.config.db.name;\n\n    const fileConents = await fs.readFileAsync(dbBackupFile.path);\n\n    const docs = JSON.parse(fileConents).rows.map((row) => {\n      const { doc } = row;\n      delete doc._rev;\n      return doc;\n    });\n\n    await fs.unlinkAsync(dbBackupFile.path);\n\n    const cloudant = new Cloudant({\n      url: this.config.db.url,\n      plugins: ['promises', 'retry'],\n    }).db;\n\n    try {\n      await cloudant.destroy(dbName);\n    } catch (error) {\n      //\n    }\n\n    await cloudant.create(dbName);\n\n    const result = await Db.connect(this.config, dbName).bulk({ docs });\n\n    return result;\n  }\n\n}\n\nmodule.exports = Tools;\n","const _ = require('lodash');\nconst Db = require('./db');\nconst ClientConfig = require('./client-config');\n\nclass Taxonomy {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async create(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.taxonomies.push(taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const taxonomy = _.find(clientConfig.taxonomies, { slug: taxonomySlug });\n\n    if (!taxonomy) {\n      throw Error(`Taxonomy not found: ${taxonomySlug}`);\n    }\n\n    return taxonomy;\n  }\n\n  async update(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.taxonomies, { slug: taxonomy.slug });\n\n    if (index === -1) {\n      throw Error(`Taxonomy not found: ${taxonomy.slug}`);\n    }\n\n    clientConfig.taxonomies.splice(index, 1, taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    taxonomySlug = _.isArray(taxonomySlug) ? taxonomySlug : [taxonomySlug];\n\n    clientConfig.taxonomies = clientConfig.taxonomies.filter(taxonomy => taxonomySlug.indexOf(taxonomy.slug) === -1);\n\n    return cc.set(clientConfig);\n  }\n\n  async entitiesByTerm(term) {\n    const db = Db.connect(this.config);\n\n    const entityGroups = (await db.view('entity', 'byTaxonomyTerm', { keys: [term.id], group: true })).rows.map(row => row.value)[0];\n\n    if (!entityGroups) {\n      return [];\n    }\n\n    let entityIds = [];\n\n    _.forEach(entityGroups, (entities) => {\n      entityIds = entityIds.concat(entities);\n    });\n\n    entityIds = _.uniq(entityIds);\n\n    return (await db.fetch({ keys: entityIds, include_docs: true })).rows.map(row => row.doc);\n  }\n\n  async createTerm(taxonomySlug, term) {\n    const taxonomy = await this.read(taxonomySlug);\n\n    taxonomy.terms.push(term);\n\n    return this.update(taxonomy);\n  }\n\n  async updateTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.map((_term) => {\n            if (_term.id === term.id) {\n              _term.title = term.title;\n              _term.slug = term.slug;\n            }\n\n            if (!_term.parents) {\n              _term.parents = [];\n            }\n\n            _term.parents = _term.parents.map((parent) => {\n              if (parent.id === term.id) {\n                parent.title = term.title;\n                parent.slug = term.slug;\n              }\n              return parent;\n            });\n\n            return _term;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n\n  async deleteTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.filter((_term) => {\n            if (_term.id === term.id) {\n              return false;\n            }\n\n            if ((_term.parents || []).filter(parent => parent.id === term.id).length) {\n              return false;\n            }\n\n            return true;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n}\n\nmodule.exports = Taxonomy;\n","module.exports = require(\"hashids\");","module.exports = require(\"stripe\");","const _ = require('lodash');\nconst Stripe = require('stripe');\nconst Promise = require('bluebird');\nconst Hashids = require('hashids');\n\nconst ClientConfig = require('./client-config');\nconst Email = require('./email');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass StripeClass {\n  constructor(config) {\n    this.config = config;\n\n    this.stripe = Stripe(this.config.stripe.apiKey);\n    this.email = new Email(this.config);\n\n    this.hashids = new Hashids(this.config.slug, 6, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n  }\n\n  async getSettings() {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    let settings;\n\n    try {\n      settings = clientConfig.module.ecommerce;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    try {\n      settings.clientStripeAccountId = clientConfig.provider.stripe.stripe_user_id;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    settings.client = clientConfig.client;\n    settings.assets = clientConfig.assets;\n\n    return settings;\n  }\n\n  checkout(token, order) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n\n          const listId = _.get(settings, 'createsend.checkoutSubscriberListId');\n\n          if (order.subscribe && listId) {\n            this.email.subscribe(order.customerDetails, 'createsend', listId)\n              .then((result) => {\n                console.log(result);\n              }, (error) => {\n                console.error(error);\n              });\n          }\n\n          // lookup customer by email, create if not found\n          this.findOrCreateCustomer(order.customerDetails.email, order)\n            .then((customer) => {\n\n              // store order data (customer, items, address)\n              this.createOrder(order, customer)\n                .then((order) => {\n\n                  this.updateOrCreateStripeCustomer(settings.clientStripeAccountId, customer, token, order)\n                    .then((stripeCustomer) => {\n\n                      // update customer, append order to customer, update metadata\n                      this.updateCustomer(customer, stripeCustomer, order)\n                        .then((customer) => {\n\n                          // create charge, take fee\n                          this.createCharge(settings, stripeCustomer, customer, order)\n                            .then((updatedOrder) => {\n\n                              this.sendReceipt(settings, customer, order)\n                                .then((orderReceipt) => {\n\n                                  updatedOrder.messages.orderReceipt = orderReceipt;\n\n                                  this.sendNotification(settings, customer, order)\n                                    .then((orderNotification) => {\n\n                                      updatedOrder.messages.orderNotification = orderNotification;\n\n                                      // update order charge status, charge id\n                                      this.updateOrder(updatedOrder)\n                                        .then((finalOrder) => {\n\n                                          resolve(finalOrder);\n\n                                        }, reject);\n                                    }, reject);\n                                }, reject);\n                            }, reject);\n                        }, reject);\n                    }, reject);\n                }, reject);\n            }, reject);\n        }, reject)\n        .catch(reject);\n    });\n  }\n\n  retrieveAccount() {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.accounts.retrieve(settings.clientStripeAccountId)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  refund(order, amount) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.refunds.create({\n            refund_application_fee: true,\n            charge: order.charge.id,\n            amount,\n          }, {\n            stripe_account: settings.clientStripeAccountId,\n          })\n            .then((refund) => {\n              this.stripe.charges.retrieve(order.charge.id, {\n                stripe_account: settings.clientStripeAccountId,\n              })\n                .then((charge) => {\n                  order.charge.status = charge.status;\n                  order.charge.amount = charge.amount;\n                  order.charge.amountRefunded = charge.amount_refunded;\n\n                  Helpers.createOrUpdate(this.config, order)\n                    .then(resolve, reject);\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  findOrCreateCustomer(email, order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'customerByEmail', {\n        keys: [email],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            resolve(body.rows[0].doc);\n\n          } else {\n            const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n            const newCustomer = {\n              type: 'customer',\n              createdAt: now,\n              modifiedAt: now,\n              email: order.customerDetails.email,\n              name: order.customerDetails.name,\n              phone: order.customerDetails.phone,\n              billingAddress: order.billingAddress,\n              shippingAddress: order.shippingAddress,\n              orders: [],\n            };\n\n            Db.connect(this.config).insert(newCustomer)\n              .then((body) => {\n                newCustomer._id = body.id;\n                newCustomer._rev = body.rev;\n\n                resolve(newCustomer);\n              }, reject);\n          }\n        }, reject);\n    });\n  }\n\n  updateOrCreateStripeCustomer(clientStripeAccountId, customer, token, order) {\n    return new Promise((resolve, reject) => {\n      const stripeCustomer = {\n        source: token,\n        email: order.customer.email,\n        description: order.customer.name,\n        metadata: {\n          customer_id: customer._id,\n        // billingAddress: JSON.stringify(order.billingAddress),\n        // shippingAddress: JSON.stringify(order.shippingAddress)\n        },\n      };\n\n      if (customer.stripe && customer.stripe.customer.id) {\n        this.stripe.customers.update(customer.stripe.customer.id, stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        })\n          .then(resolve, (error) => {\n            if (error.type === 'StripeInvalidRequestError' && error.param === 'id') {\n              this.stripe.customers.create(stripeCustomer, {\n                stripe_account: clientStripeAccountId,\n              }).then(resolve, reject);\n\n            } else {\n              reject(error);\n            }\n          });\n\n      } else {\n        this.stripe.customers.create(stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        }).then(resolve, reject);\n      }\n    });\n  }\n\n  createOrder(order, customer) {\n    return new Promise((resolve, reject) => {\n      const items = order.items.map(item => ({\n        id: item.id,\n        title: item.title.replace(/<br\\s?>/ig, ' ').replace(/<\\/?p>|<\\/?span>/ig, ''),\n        price: item.price,\n        quantity: item.quantity,\n        metadata: item.metadata || {},\n      }));\n\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      const newOrder = {\n        type: 'order',\n        orderId: this.hashids.encode(new Date().getTime()),\n        createdAt: now,\n        modifiedAt: now,\n        customer: {\n          id: customer._id,\n          email: customer.email,\n          name: customer.name,\n        },\n        items,\n        shippingMethod: {\n          name: order.shippingMethod.name,\n          amount: Number(order.shippingMethod.amount),\n        },\n        subtotal: Number(order.subtotal),\n        tax: {\n          rate: order.tax.rate || 0,\n          includedInPrice: order.tax.includedInPrice || false,\n          total: order.tax.total || 0,\n          show: order.tax.show || false,\n        },\n        discount: {\n          code: order.discount.code || '',\n          name: order.discount.name || '',\n          total: order.discount.total || 0,\n        },\n        total: Number(order.total),\n        billingAddress: order.billingAddress,\n        shippingAddress: order.shippingAddress,\n        messages: {},\n        status: 'pending',\n        test: true,\n      };\n\n      Db.connect(this.config).insert(newOrder)\n        .then((body) => {\n          newOrder._id = body.id;\n          newOrder._rev = body.rev;\n\n          resolve(newOrder);\n        }, reject);\n    });\n  }\n\n  updateOrder(order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).insert(order)\n        .then((body) => {\n          order._rev = body.rev;\n\n          resolve(order);\n        }, reject);\n    });\n  }\n\n  updateCustomer(customer, stripeCustomer, order) {\n    return new Promise((resolve, reject) => {\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      customer.modifiedAt = now;\n\n      if (!customer.orders) {\n        customer.orders = [];\n      }\n\n      customer.orders.push(order._id);\n\n      if (!customer.stripe) {\n        customer.stripe = {\n          customer: {\n            id: null,\n          },\n        };\n      }\n\n      customer.stripe.customer.id = stripeCustomer.id;\n\n      Db.connect(this.config).insert(customer)\n        .then((body) => {\n          customer._rev = body.rev;\n\n          resolve(customer);\n        }, reject);\n    });\n  }\n\n  createCharge(settings, stripeCustomer, customer, order) {\n    return new Promise((resolve, reject) => {\n      const amount = Number(order.total) * 100;\n\n      const charge = {\n        amount,\n        currency: settings.currency.iso.toLowerCase(),\n        customer: stripeCustomer.id,\n        capture: true,\n        description: order.orderId,\n        // shipping: order.shippingAddress, // fraud prevention, must follow expected schema\n        metadata: {\n          customer_id: customer._id,\n          order_id: order._id,\n        },\n        statement_descriptor: _.kebabCase(settings.storeName).toUpperCase(),\n        application_fee: Math.ceil(amount * 0.02),\n      };\n\n      this.stripe.charges.create(charge, {\n        stripe_account: settings.clientStripeAccountId,\n      })\n        .then((charge) => {\n\n          order.charge = {\n            paymentGateway: 'stripe',\n            id: charge.id,\n            status: charge.status,\n            currency: charge.currency.toUpperCase(),\n            amount: charge.amount,\n            amountRefunded: charge.amount_refunded,\n          };\n\n          order.test = !charge.livemode;\n\n          resolve(order);\n\n        }, reject);\n    });\n  }\n\n  sendReceipt(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: customer.email,\n        subject: `Your order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-receipt`, templateData).then(resolve, reject);\n    });\n  }\n\n  sendNotification(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: settings.emailSenderAddress,\n        subject: `New order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-notification`, templateData).then(resolve, reject);\n    });\n  }\n\n}\n\nmodule.exports = StripeClass;\n","module.exports = require(\"shippo\");","const Promise = require('bluebird');\nconst shippo = require('shippo');\n\nclass Shippo {\n  constructor(config) {\n    this.config = config;\n\n    this.shippo = shippo(config.shippo.token);\n  }\n\n  getQuote(address, parcel) {\n    return new Promise((resolve, reject) => {\n\n      const addressFrom = {\n        object_purpose: 'QUOTE',\n        zip: this.config.shippo.fromZip,\n        country: this.config.shippo.fromCountry,\n      };\n\n      const addressTo = {\n        object_purpose: 'QUOTE',\n        // 'name': address.name,\n        // 'company': '',\n        // 'street1': address.street1,\n        // 'street2': address.street2,\n        // 'city': address.city,\n        // 'state': '',\n        zip: address.zip,\n        country: address.country,\n        // 'phone': address.phone,\n        // 'email': address.email,\n        metadata: '',\n      };\n\n      parcel.distance_unit = 'cm';\n      parcel.mass_unit = 'kg';\n\n      this.shippo.shipment.create({\n        object_purpose: 'QUOTE',\n        address_from: addressFrom,\n        address_to: addressTo,\n        parcel,\n      })\n        .then((shipment) => {\n          const ratesReady = (shipment, attempts) => {\n            if ((shipment.object_status === 'QUEUED' || shipment.object_status === 'WAITING') && attempts < 10) {\n              this.shippo.shipment.retrieve(shipment.object_id).then((val) => {\n                ratesReady(val, attempts + 1);\n              });\n\n            } else {\n              this.shippo.shipment.rates(shipment.object_id)\n                .then((rates) => {\n                  resolve(rates);\n\n                }, (error) => {\n                  console.error('There was an error retrieving rates : %s', error);\n                  reject(error);\n                });\n            }\n          };\n\n          ratesReady(shipment, 0);\n\n        }, (error) => {\n          console.error('There was an error creating shipment: %s', error);\n          reject(error);\n        });\n\n    });\n  }\n\n}\n\nmodule.exports = Shippo;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass Settings {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async update(settings) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.client = _.merge({}, clientConfig.client, settings);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = Settings;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst request = require('request-promise');\nconst Entity = require('./entity');\nconst ClientConfig = require('./client-config');\n\nclass Pdf {\n  constructor (config) {\n    this.config = config;\n    this.templates = this.config.pdf.templates;\n  }\n\n  getPayload (templateId, entityId, role) {\n    return new Promise((resolve, reject) => {\n      if (!this.templates[templateId]) {\n        reject(new Error('Template not found'));\n        return;\n      }\n\n      const entity = new Entity(this.config);\n\n      entity.entitiesById([entityId], true, false, role)\n        .then((entities) => {\n          if (entities.length === 0) {\n            reject(new Error('Entity not found'));\n            return;\n          }\n\n          entities = Entity.flattenValues(entities);\n\n          const payload = this.templates[templateId](entities[0]);\n\n          try {\n            resolve(payload);\n          } catch (error) {\n            reject(error);\n          }\n        });\n    });\n  }\n\n  async getPdf (payload) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n    const assistPdfUrl = `${this.config.assist.url}/${assetSlug}/pdf/download`;\n\n    payload = typeof payload === 'object' ? JSON.stringify(payload).replace(/'/gi, '’') : payload;\n\n    const response = await request({\n      method: 'POST',\n      uri: assistPdfUrl,\n      encoding: null,\n      form: {\n        payload,\n      },\n    });\n\n    return response;\n  }\n\n}\n\nmodule.exports = Pdf;\n","module.exports = require(\"jsonwebtoken\");","const jwt = require('jsonwebtoken');\n\nclass Jwt {\n  constructor(config) {\n    this.config = config;\n  }\n\n  signToken(payload, options = {}) {\n    return jwt.sign(payload, this.config.auth.tokenSecret, options);\n  }\n\n  verifyToken(token) {\n    return jwt.verify(token, this.config.auth.tokenSecret);\n  }\n}\n\nmodule.exports = Jwt;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst request = require('request-promise');\n\nmodule.exports = function (options) {\n  const defaultOptions = {\n    client_id: null,\n    access_token: null,\n    version: 'v1',\n    host: 'https://api.instagram.com',\n  };\n\n  options = _.merge({}, defaultOptions, options || {});\n\n  const _request = (method, endpoint, query) => new Promise((resolve, reject) => {\n    const requestOptions = {\n      method,\n      url: [options.host, options.version, endpoint].join('/'),\n      qs: {\n        access_token: query.access_token || options.access_token,\n        client_id: query.client_id || options.client_id,\n      },\n    };\n\n    requestOptions.qs = _.extend({}, requestOptions.qs, query);\n\n    request(requestOptions)\n      .then((response) => {\n        resolve(JSON.parse(response));\n      }, reject);\n  });\n\n  this.get = (endpoint, query) => _request('GET', endpoint, query);\n};\n","module.exports = require(\"deep-diff\");","module.exports = require(\"embedly\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst EmbedlyApi = require('embedly');\n\nclass Embedly {\n  constructor(config) {\n    this.config = config;\n  }\n\n  oembed(urls) {\n    return new Promise((resolve, reject) => {\n      const embedly = new EmbedlyApi({\n        key: this.config.embedly.apiKey,\n      });\n\n      const opts = {\n        urls: _.isArray(urls) ? urls : [urls],\n        format: 'json',\n      };\n\n      embedly.oembed(opts, (error, result) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(result);\n      });\n    });\n  }\n\n}\n\nmodule.exports = Embedly;\n","module.exports = require(\"lodash/min\");","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class;\n\nvar _mjmlCore = require('mjml-core');\n\nvar _merge = require('lodash/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _min = require('lodash/min');\n\nvar _min2 = _interopRequireDefault(_min);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar tagName = 'mc-image';\nvar parentTag = ['mj-column', 'mj-hero-content'];\nvar defaultMJMLDefinition = {\n  attributes: {\n    'mc:edit': null,\n    'align': 'center',\n    'alt': '',\n    'border': 'none',\n    'border-radius': null,\n    'container-background-color': null,\n    'height': 'auto',\n    'href': '',\n    'padding-bottom': null,\n    'padding-left': null,\n    'padding-right': null,\n    'padding-top': null,\n    'padding': '10px 25px',\n    'src': '',\n    'target': '_blank',\n    'title': '',\n    'vertical-align': null,\n    'width': null\n  }\n};\nvar endingTag = true;\nvar baseStyles = {\n  table: {\n    borderCollapse: 'collapse',\n    borderSpacing: '0'\n  },\n  img: {\n    border: 'none',\n    borderRadius: '',\n    display: 'block',\n    outline: 'none',\n    textDecoration: 'none',\n    width: '100%'\n  }\n};\nvar postRender = function postRender($) {\n  $('[data-mc-edit]').each(function () {\n    $(this).attr('mc:edit', $(this).attr('data-mc-edit')).removeAttr('data-mc-edit');\n  });\n\n  return $;\n};\n\nvar Image = (0, _mjmlCore.MJMLElement)(_class = function (_Component) {\n  _inherits(Image, _Component);\n\n  function Image() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Image);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Image.__proto__ || Object.getPrototypeOf(Image)).call.apply(_ref, [this].concat(args))), _this), _this.styles = _this.getStyles(), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Image, [{\n    key: 'getContentWidth',\n    value: function getContentWidth() {\n      var _props = this.props,\n          mjAttribute = _props.mjAttribute,\n          getPadding = _props.getPadding;\n\n      var parentWidth = mjAttribute('parentWidth');\n\n      var width = (0, _min2.default)([parseInt(mjAttribute('width')), parseInt(parentWidth)]);\n\n      var paddingRight = getPadding('right');\n      var paddingLeft = getPadding('left');\n      var widthOverflow = paddingLeft + paddingRight + width - parseInt(parentWidth);\n\n      return widthOverflow > 0 ? width - widthOverflow : width;\n    }\n  }, {\n    key: 'getStyles',\n    value: function getStyles() {\n      var _props2 = this.props,\n          mjAttribute = _props2.mjAttribute,\n          defaultUnit = _props2.defaultUnit;\n\n\n      return (0, _merge2.default)({}, baseStyles, {\n        td: {\n          width: this.getContentWidth()\n        },\n        img: {\n          border: mjAttribute('border'),\n          height: mjAttribute('height'),\n          borderRadius: defaultUnit(mjAttribute('border-radius'), \"px\")\n        }\n      });\n    }\n  }, {\n    key: 'renderImage',\n    value: function renderImage() {\n      var mjAttribute = this.props.mjAttribute;\n\n\n      var img = _react2.default.createElement('img', {\n        'data-mc-edit': mjAttribute('mc:edit'),\n        alt: mjAttribute('alt'),\n        title: mjAttribute('title'),\n        height: mjAttribute('height'),\n        src: mjAttribute('src'),\n        style: this.styles.img,\n        width: this.getContentWidth() });\n\n      if (mjAttribute('href') != '') {\n        return _react2.default.createElement(\n          'a',\n          {\n            href: mjAttribute('href'),\n            target: mjAttribute('target') },\n          img\n        );\n      }\n\n      return img;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var mjAttribute = this.props.mjAttribute;\n\n\n      return _react2.default.createElement(\n        'table',\n        {\n          className: 'mc-image',\n          cellPadding: '0',\n          cellSpacing: '0',\n          'data-legacy-align': mjAttribute('align'),\n          'data-legacy-border': '0',\n          style: this.styles.table },\n        _react2.default.createElement(\n          'tbody',\n          null,\n          _react2.default.createElement(\n            'tr',\n            null,\n            _react2.default.createElement(\n              'td',\n              { style: this.styles.td },\n              this.renderImage()\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return Image;\n}(_react.Component)) || _class;\n\nImage.tagName = tagName;\nImage.parentTag = parentTag;\nImage.defaultMJMLDefinition = defaultMJMLDefinition;\nImage.endingTag = endingTag;\nImage.baseStyles = baseStyles;\nImage.postRender = postRender;\n\nexports.default = Image;\n","module.exports = require(\"mjml-raw\");","module.exports = require(\"mjml-group\");","module.exports = require(\"mjml-column\");","module.exports = require(\"lodash/cloneDeep\");","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class;\n\nvar _mjmlCore = require('mjml-core');\n\nvar _cloneDeep = require('lodash/cloneDeep');\n\nvar _cloneDeep2 = _interopRequireDefault(_cloneDeep);\n\nvar _merge = require('lodash/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _mjmlColumn = require('mjml-column');\n\nvar _mjmlColumn2 = _interopRequireDefault(_mjmlColumn);\n\nvar _mjmlGroup = require('mjml-group');\n\nvar _mjmlGroup2 = _interopRequireDefault(_mjmlGroup);\n\nvar _mjmlRaw = require('mjml-raw');\n\nvar _mjmlRaw2 = _interopRequireDefault(_mjmlRaw);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar tagName = 'mc-section';\nvar parentTag = ['mj-container'];\nvar defaultMJMLDefinition = {\n  attributes: {\n    'mc:hideable': null,\n    'mc:repeatable': null,\n    'mc:variant': null,\n    'mc:edit': null,\n    'background-color': null,\n    'background-url': null,\n    'background-repeat': 'repeat',\n    'background-size': 'auto',\n    'border': null,\n    'border-bottom': null,\n    'border-left': null,\n    'border-radius': null,\n    'border-right': null,\n    'border-top': null,\n    'direction': 'ltr',\n    'full-width': null,\n    'padding': '20px 0',\n    'padding-top': null,\n    'padding-bottom': null,\n    'padding-left': null,\n    'padding-right': null,\n    'text-align': 'center',\n    'vertical-align': 'top'\n  }\n};\nvar baseStyles = {\n  div: {\n    margin: '0 auto'\n  },\n  table: {\n    fontSize: '0px',\n    width: '100%'\n  },\n  td: {\n    textAlign: 'center',\n    verticalAlign: 'top'\n  }\n};\nvar postRender = function postRender($) {\n  $('.mc-section-outlook-background').each(function () {\n    var url = $(this).data('url');\n    var width = $(this).data('width');\n\n    $(this).removeAttr('class').removeAttr('data-url').removeAttr('data-width');\n\n    if (!url) {\n      return;\n    }\n\n    $(this).before(_mjmlCore.helpers.startConditionalTag + '\\n      <v:rect xmlns:v=\"urn:schemas-microsoft-com:vml\" fill=\"true\" stroke=\"false\" style=\"width:' + width + 'px;\">\\n        <v:fill origin=\"0.5, 0\" position=\"0.5,0\" type=\"tile\" src=\"' + url + '\" />\\n        <v:textbox style=\"mso-fit-shape-to-text:true\" inset=\"0,0,0,0\">\\n      ' + _mjmlCore.helpers.endConditionalTag);\n\n    $(this).after(_mjmlCore.helpers.startConditionalTag + '\\n        </v:textbox>\\n      </v:rect>\\n      ' + _mjmlCore.helpers.endConditionalTag);\n  });\n\n  $('.mc-section-outlook-open').each(function () {\n    var $columnDiv = $(this).next();\n\n    $(this).replaceWith(_mjmlCore.helpers.startConditionalTag + '\\n      <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\"><tr><td style=\"vertical-align:' + $columnDiv.data('vertical-align') + ';width:' + parseInt($(this).data('width')) + 'px;\">\\n      ' + _mjmlCore.helpers.endConditionalTag);\n\n    $columnDiv.removeAttr('data-vertical-align');\n  });\n\n  $('.mc-section-outlook-line').each(function () {\n    var $columnDiv = $(this).next();\n\n    $(this).replaceWith(_mjmlCore.helpers.startConditionalTag + '\\n      </td><td style=\"vertical-align:' + $columnDiv.data('vertical-align') + ';width:' + parseInt($(this).data('width')) + 'px;\">\\n      ' + _mjmlCore.helpers.endConditionalTag);\n\n    $columnDiv.removeAttr('data-vertical-align');\n  });\n\n  $('.mc-section-outlook-close').each(function () {\n    $(this).replaceWith(_mjmlCore.helpers.startConditionalTag + '\\n      </td></tr></table>\\n      ' + _mjmlCore.helpers.endConditionalTag);\n  });\n\n  $('[data-mc-hideable]').each(function () {\n    $(this).attr('mc:hideable', '').removeAttr('data-mc-hideable');\n  });\n\n  $('[data-mc-repeatable]').each(function () {\n    $(this).attr('mc:repeatable', $(this).attr('data-mc-repeatable'));\n    // .removeAttr('data-mc-repeatable')\n  });\n\n  $('[data-mc-variant]').each(function () {\n    $(this).attr('mc:variant', $(this).attr('data-mc-variant'));\n    // .removeAttr('data-mc-variant')\n  });\n\n  $('[data-mc-edit]').each(function () {\n    $(this).attr('mc:edit', $(this).attr('data-mc-edit')).removeAttr('data-mc-edit');\n  });\n\n  return $;\n};\n\nvar Section = (0, _mjmlCore.MJMLElement)(_class = function (_Component) {\n  _inherits(Section, _Component);\n\n  function Section() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Section);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Section.__proto__ || Object.getPrototypeOf(Section)).call.apply(_ref, [this].concat(args))), _this), _this.styles = _this.getStyles(), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Section, [{\n    key: 'isFullWidth',\n    value: function isFullWidth() {\n      var mjAttribute = this.props.mjAttribute;\n\n\n      return mjAttribute('full-width') == 'full-width';\n    }\n  }, {\n    key: 'getStyles',\n    value: function getStyles() {\n      var _props = this.props,\n          mjAttribute = _props.mjAttribute,\n          parentWidth = _props.parentWidth,\n          defaultUnit = _props.defaultUnit;\n\n\n      var background = mjAttribute('background-url') ? {\n        background: ((mjAttribute('background-color') || '') + ' url(' + mjAttribute('background-url') + ') top center / ' + (mjAttribute('background-size') || '') + ' ' + (mjAttribute('background-repeat') || '')).trim()\n      } : {\n        background: mjAttribute('background-color')\n      };\n\n      return (0, _merge2.default)({}, baseStyles, {\n        td: {\n          fontSize: '0px',\n          padding: defaultUnit(mjAttribute('padding'), 'px'),\n          paddingBottom: defaultUnit(mjAttribute('padding-bottom'), 'px'),\n          paddingLeft: defaultUnit(mjAttribute('padding-left'), 'px'),\n          paddingRight: defaultUnit(mjAttribute('padding-right'), 'px'),\n          paddingTop: defaultUnit(mjAttribute('padding-top'), 'px'),\n          textAlign: mjAttribute('text-align'),\n          verticalAlign: mjAttribute('vertical-align')\n        },\n        div: {\n          maxWidth: defaultUnit(parentWidth)\n        }\n      }, {\n        div: this.isFullWidth() ? {} : (0, _cloneDeep2.default)(background),\n        table: this.isFullWidth() ? {} : (0, _cloneDeep2.default)(background),\n        tableFullwidth: this.isFullWidth() ? (0, _cloneDeep2.default)(background) : {}\n      });\n    }\n  }, {\n    key: 'renderFullWidthSection',\n    value: function renderFullWidthSection() {\n      var mjAttribute = this.props.mjAttribute;\n\n\n      return _react2.default.createElement(\n        'table',\n        {\n          cellPadding: '0',\n          cellSpacing: '0',\n          'data-legacy-background': mjAttribute('background-url'),\n          'data-legacy-border': '0',\n          'data-mc-hideable': mjAttribute('mc:hideable'),\n          'data-mc-repeatable': mjAttribute('mc:repeatable'),\n          'data-mc-variant': mjAttribute('mc:variant'),\n          'data-mc-edit': mjAttribute('mc:edit'),\n          style: (0, _merge2.default)({}, this.styles.tableFullwidth, this.styles.table) },\n        _react2.default.createElement(\n          'tbody',\n          null,\n          _react2.default.createElement(\n            'tr',\n            null,\n            _react2.default.createElement(\n              'td',\n              null,\n              this.renderSection()\n            )\n          )\n        )\n      );\n    }\n  }, {\n    key: 'renderSection',\n    value: function renderSection() {\n      var _props2 = this.props,\n          renderWrappedOutlookChildren = _props2.renderWrappedOutlookChildren,\n          mjAttribute = _props2.mjAttribute,\n          children = _props2.children,\n          parentWidth = _props2.parentWidth;\n\n      var fullWidth = this.isFullWidth();\n\n      return _react2.default.createElement(\n        'div',\n        {\n          'data-mc-hideable': mjAttribute('mc:hideable'),\n          'data-mc-repeatable': mjAttribute('mc:repeatable'),\n          'data-mc-variant': mjAttribute('mc:variant'),\n          'data-mc-edit': mjAttribute('mc:edit'),\n          style: this.styles.div },\n        _react2.default.createElement(\n          'table',\n          {\n            cellPadding: '0',\n            cellSpacing: '0',\n            className: 'mc-section-outlook-background',\n            'data-legacy-align': 'center',\n            'data-legacy-background': fullWidth ? undefined : mjAttribute('background-url'),\n            'data-legacy-border': '0',\n            'data-url': mjAttribute('background-url') || '',\n            'data-width': parentWidth,\n            style: this.styles.table },\n          _react2.default.createElement(\n            'tbody',\n            null,\n            _react2.default.createElement(\n              'tr',\n              null,\n              _react2.default.createElement(\n                'td',\n                { style: this.styles.td },\n                renderWrappedOutlookChildren(children)\n              )\n            )\n          )\n        )\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return this.isFullWidth() ? this.renderFullWidthSection() : this.renderSection();\n    }\n  }]);\n\n  return Section;\n}(_react.Component)) || _class;\n\nSection.tagName = tagName;\nSection.parentTag = parentTag;\nSection.defaultMJMLDefinition = defaultMJMLDefinition;\nSection.baseStyles = baseStyles;\nSection.postRender = postRender;\n\n_mjmlColumn2.default.parentTag.push(tagName);\n\n_mjmlGroup2.default.parentTag.push(tagName);\n\n_mjmlRaw2.default.parentTag.push(tagName);\n\nexports.default = Section;\n","module.exports = require(\"node-sass\");","module.exports = require(\"i18n-iso-countries\");","module.exports = require(\"moment\");","module.exports = require(\"html-to-text\");","module.exports = require(\"inky\");","module.exports = require(\"email-templates\");","module.exports = require(\"nodemailer-mailgun-transport\");","module.exports = require(\"createsend-node\");","module.exports = require(\"nodemailer\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass Ecommerce {\n  constructor(config) {\n    this.config = config;\n  }\n\n  getType(type, query) {\n    return new Promise((resolve, reject) => {\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      Db.connect(this.config).search('ecommerce', type, query)\n        .then(resolve, reject);\n    });\n  }\n\n  setType(type, item) {\n    return new Promise((resolve, reject) => {\n      item.type = type;\n\n      Helpers.createOrUpdate(this.config, item)\n        .then(resolve, reject);\n    });\n  }\n\n  deleteType(items) {\n    return new Promise((resolve, reject) => {\n      items = items.map(item => ({\n        _id: item._id,\n        _rev: item._rev,\n        _deleted: true,\n      }));\n\n      Helpers.chunkUpdate(this.config, items, 1000)\n        .then(resolve, reject);\n    });\n  }\n\n  getOrder(orderId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'orderByOrderId', {\n        key: orderId,\n        include_docs: true,\n      })\n        .then((body) => {\n          if (!body.rows.length) {\n            reject(new Error('Order not found'));\n            return;\n          }\n\n          resolve(body.rows[0].doc);\n        }, reject);\n    });\n  }\n\n  verifyDiscount(code) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'discountByCode', {\n        keys: [code],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            const discount = body.rows[0].doc;\n\n            const now = new Date().getTime();\n\n            const dateStart = new Date(Date.parse(discount.dateStart)).getTime();\n            const dateEnd = new Date(Date.parse(discount.dateEnd)).getTime();\n\n            if (dateStart > now) {\n              reject(new Error('Discount not valid (not begun)'));\n              return;\n\n            }\n\n            if (dateEnd < now) {\n              reject(new Error('Discount not valid (expired)'));\n              return;\n            }\n\n            resolve(discount);\n\n          } else {\n            reject(new Error({\n              statusCode: 404,\n              message: `Discount code not found (${code})`,\n            }));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Ecommerce;\n","module.exports = require(\"querystring\");","const _ = require('lodash');\nconst querystring = require('querystring');\nconst axios = require('axios');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\n\nconst providerTokenUri = {\n  google: 'https://www.googleapis.com/oauth2/v4/token',\n  instagram: 'https://api.instagram.com/oauth/access_token',\n  stripe: 'https://connect.stripe.com/oauth/token',\n  vimeo: 'https://api.vimeo.com/oauth/access_token',\n};\n\nclass Auth {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async authoriseUser(slug, userId) {\n    const isSuperUser = this.config.auth.superUserId.split(',').map(superUser => superUser.trim()).indexOf(userId) > -1;\n\n    if (isSuperUser) {\n      return {\n        id: userId,\n        role: 'super',\n      };\n    }\n\n    const clientConfig = await Db.connect(this.config, slug).get('config');\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    if (!user.active) {\n      throw Error(`User not active: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async authenticateWithProvider(provider, params, refresh = false) {\n    const providerConfig = _.merge({}, this.config[provider], params);\n\n    const data = {\n      grant_type: refresh ? 'refresh_token' : 'authorization_code',\n      client_id: providerConfig.clientId,\n      client_secret: providerConfig.clientSecret,\n      redirect_uri: providerConfig.redirectUri,\n      code: params.code,\n      refresh_token: params.refresh_token,\n    };\n\n    const uri = providerTokenUri[provider];\n\n    let response;\n    try {\n      response = await axios.post(uri, querystring.stringify(data));\n    } catch (error) {\n      throw new Error(error.response.data.error_description);\n    }\n\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    if (!clientConfig.provider) {\n      clientConfig.provider = {};\n    }\n\n    const providerClientConfig = _.merge({}, clientConfig.provider[provider] || {}, response.data);\n\n    if (provider === 'google') {\n      providerClientConfig.expires = providerClientConfig.expires_in + Math.floor(+new Date() / 1000);\n      try {\n        providerClientConfig.user = (await axios.get(`https://www.googleapis.com/plus/v1/people/me?access_token=${providerClientConfig.access_token}`)).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    clientConfig.provider[provider] = providerClientConfig;\n\n    return cc.set(clientConfig);\n  }\n\n}\n\nmodule.exports = Auth;\n","module.exports = require(\"password-hash\");","const path = require('path');\n\nconst config = {\n  environment: process.env.ENVIRONMENT || 'development',\n  debug: process.env.DEBUG || false,\n\n  slug: process.env.SLUG,\n  baseUrl: process.env.BASE_URL || '',\n\n  db: {\n    url: process.env.DB_URL,\n    host: process.env.DB_HOST,\n    name: process.env.DB_NAME,\n    requestPlugin: process.env.DB_REQUEST_PLUGIN,\n    meterType: process.env.DB_METER_TYPE,\n  },\n\n  auth: {\n    superUserId: process.env.AUTH_SUPER_USER_ID,\n    tokenSecret: process.env.AUTH_TOKEN_SECRET || 'change_this_secret',\n  },\n\n  dev: {\n    userId: process.env.DEV_USER_ID || 'dev',\n    role: process.env.DEV_ROLE || 'super',\n  },\n\n  assist: {\n    url: process.env.ASSIST_URL,\n    username: process.env.ASSIST_USERNAME,\n    password: process.env.ASSIST_PASSWORD,\n  },\n\n  instagram: {\n    clientId: process.env.INSTAGRAM_CLIENT_ID,\n    clientSecret: process.env.INSTAGRAM_CLIENT_SECRET,\n  },\n\n  twitter: {\n    consumerKey: process.env.TWITTER_CONSUMER_KEY,\n    consumerSecret: process.env.TWITTER_CONSUMER_SECRET,\n    accessTokenKey: process.env.TWITTER_ACCESS_TOKEN_KEY,\n    accessTokenSecret: process.env.TWITTER_ACCESS_TOKEN_SECRET,\n  },\n\n  google: {\n    clientId: process.env.GOOGLE_CLIENT_ID,\n    clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n  },\n\n  mailgun: {\n    apiKey: process.env.MAILGUN_API_KEY,\n    domain: process.env.MAILGUN_DOMAIN,\n  },\n\n  embedly: {\n    apiKey: process.env.EMBEDLY_API_KEY,\n  },\n\n  aws: {\n    iamAccessKeyId: process.env.AWS_IAM_ACCESS_KEY_ID,\n    iamAccessKeySecret: process.env.AWS_IAM_ACCESS_KEY_SECRET,\n\n    s3: {\n      bucket: process.env.AWS_S3_BUCKET,\n    },\n\n    // tcode: {\n    //   region: process.env.AWS_TCODE_REGION,\n    //   pipelineId: process.env.AWS_TCODE_PIPELINE_ID,\n    //   bucketIn: process.env.AWS_TCODE_BUCKET_IN,\n    //   bucketOut: process.env.AWS_TCODE_BUCKET_OUT,\n    // },\n  },\n\n  shippo: {\n    token: process.env.SHIPPO_TOKEN,\n    fromZip: process.env.SHIPPO_FROM_ZIP,\n    fromCountry: process.env.SHIPPO_FROM_COUNTRY,\n  },\n\n  stripe: {\n    clientId: process.env.STRIPE_CLIENT_ID,\n    clientSecret: process.env.STRIPE_CLIENT_SECRET,\n    apiKey: process.env.STRIPE_API_KEY,\n  },\n\n  vimeo: {\n    clientId: process.env.VIMEO_CLIENT_ID,\n    clientSecret: process.env.VIMEO_CLIENT_SECRET,\n  },\n\n  zencoder: {\n    apiKey: process.env.ZENCODER_API_KEY,\n    s3: {\n      bucket: process.env.ZENCODER_S3_BUCKET,\n      credentials: process.env.ZENCODER_S3_CREDENTIALS,\n    },\n  },\n\n  pdf: {\n    templates: {},\n  },\n\n  email: {\n    templatesPath: path.resolve(__dirname, 'email'),\n  },\n};\n\nmodule.exports = config;\n","function Api() { }\n\nApi.defaultConfig = require('./config.default');\n\nApi.Assist = (...args) => new (require('./lib/assist'))(...args);\nApi.Auth = (...args) => new (require('./lib/auth'))(...args);\nApi.ClientConfig = (...args) => new (require('./lib/client-config'))(...args);\nApi.Db = (...args) => new (require('./lib/db'))(...args);\nApi.Ecommerce = (...args) => new (require('./lib/ecommerce'))(...args);\nApi.Email = (...args) => new (require('./lib/email'))(...args);\nApi.Embedly = (...args) => new (require('./lib/embedly'))(...args);\nApi.Entity = (...args) => new (require('./lib/entity'))(...args);\nApi.Fields = (...args) => new (require('./lib/fields'))(...args);\nApi.Helpers = (...args) => new (require('./lib/helpers'))(...args);\nApi.Instagram = (...args) => new (require('./lib/instagram'))(...args);\nApi.Jwt = (...args) => new (require('./lib/jwt'))(...args);\nApi.Pdf = (...args) => new (require('./lib/pdf'))(...args);\nApi.Roles = (...args) => new (require('./lib/roles'))(...args);\nApi.Schema = (...args) => new (require('./lib/schema'))(...args);\nApi.Settings = (...args) => new (require('./lib/settings'))(...args);\nApi.Shippo = (...args) => new (require('./lib/shippo'))(...args);\nApi.Stripe = (...args) => new (require('./lib/stripe'))(...args);\nApi.Taxonomy = (...args) => new (require('./lib/taxonomy'))(...args);\nApi.Tools = (...args) => new (require('./lib/tools'))(...args);\nApi.User = (...args) => new (require('./lib/user'))(...args);\n\nmodule.exports = Api;\n"],"sourceRoot":""}