{"version":3,"sources":["webpack://AceApiServer/webpack/universalModuleDefinition","webpack://AceApiServer/webpack/bootstrap","webpack://AceApiServer/external \"@babel/runtime/helpers/interopRequireDefault\"","webpack://AceApiServer/external \"@babel/runtime/regenerator\"","webpack://AceApiServer/external \"lodash\"","webpack://AceApiServer/./api/lib/client-config.js","webpack://AceApiServer/./api/lib/db.js","webpack://AceApiServer/external \"bluebird\"","webpack://AceApiServer/external \"axios\"","webpack://AceApiServer/./api/lib/helpers.js","webpack://AceApiServer/external \"path\"","webpack://AceApiServer/external \"fs\"","webpack://AceApiServer/./api/lib/assist.js","webpack://AceApiServer/external \"@cloudant/cloudant\"","webpack://AceApiServer/./api/lib/roles.js","webpack://AceApiServer/./api/lib/jwt.js","webpack://AceApiServer/./api/lib/entity.js","webpack://AceApiServer/./api/lib/schema.js","webpack://AceApiServer/./api/lib/fields.js","webpack://AceApiServer/external \"request-promise\"","webpack://AceApiServer/./server/server.js","webpack://AceApiServer/external \"express\"","webpack://AceApiServer/external \"cache-manager\"","webpack://AceApiServer/external \"cache-manager-redis-store\"","webpack://AceApiServer/external \"url-parse\"","webpack://AceApiServer/external \"zlib\"","webpack://AceApiServer/external \"circular-json-es6\"","webpack://AceApiServer/external \"object-sizeof\"","webpack://AceApiServer/external \"deep-freeze\"","webpack://AceApiServer/external \"xxhashjs\"","webpack://AceApiServer/external \"http\"","webpack://AceApiServer/external \"morgan\"","webpack://AceApiServer/external \"helmet\"","webpack://AceApiServer/external \"cookie-parser\"","webpack://AceApiServer/external \"body-parser\"","webpack://AceApiServer/external \"method-override\"","webpack://AceApiServer/external \"redis\"","webpack://AceApiServer/external \"express-session\"","webpack://AceApiServer/external \"connect-redis\"","webpack://AceApiServer/./api/api.js","webpack://AceApiServer/./api/api.config.js","webpack://AceApiServer/external \"password-hash\"","webpack://AceApiServer/./api/lib/auth.js","webpack://AceApiServer/external \"querystring\"","webpack://AceApiServer/external \"express-jwt\"","webpack://AceApiServer/external \"jwks-rsa\"","webpack://AceApiServer/external \"auth0\"","webpack://AceApiServer/external \"jsonwebtoken\"","webpack://AceApiServer/./api/lib/error-code.js","webpack://AceApiServer/./api/lib/email.js","webpack://AceApiServer/external \"nodemailer\"","webpack://AceApiServer/external \"createsend-node\"","webpack://AceApiServer/external \"nodemailer-mailgun-transport\"","webpack://AceApiServer/external \"inky\"","webpack://AceApiServer/external \"mjml\"","webpack://AceApiServer/external \"mjml-core\"","webpack://AceApiServer/external \"mjml-validator\"","webpack://AceApiServer/external \"mjml-mailchimp\"","webpack://AceApiServer/external \"html-to-text\"","webpack://AceApiServer/external \"moment\"","webpack://AceApiServer/external \"i18n-iso-countries\"","webpack://AceApiServer/external \"node-sass\"","webpack://AceApiServer/external \"pug\"","webpack://AceApiServer/external \"juice\"","webpack://AceApiServer/./api/lib/embedly.js","webpack://AceApiServer/external \"embedly\"","webpack://AceApiServer/external \"json-query\"","webpack://AceApiServer/external \"deep-diff\"","webpack://AceApiServer/./api/lib/instagram.js","webpack://AceApiServer/./api/lib/pdf.js","webpack://AceApiServer/external \"eval\"","webpack://AceApiServer/external \"recursive-readdir\"","webpack://AceApiServer/./api/lib sync","webpack://AceApiServer/./api/lib/settings.js","webpack://AceApiServer/./api/lib/shopify.js","webpack://AceApiServer/external \"he\"","webpack://AceApiServer/external \"handlebars\"","webpack://AceApiServer/external \"jsontoxml\"","webpack://AceApiServer/./api/lib/taxonomy.js","webpack://AceApiServer/./api/lib/tools.js","webpack://AceApiServer/./api/lib/user.js","webpack://AceApiServer/./server/server.config.js","webpack://AceApiServer/./server/routes/analytics.js","webpack://AceApiServer/./server/routes/auth.js","webpack://AceApiServer/./server/routes/connect.js","webpack://AceApiServer/external \"grant-express\"","webpack://AceApiServer/./server/routes/cache.js","webpack://AceApiServer/./server/routes/config.js","webpack://AceApiServer/external \"lodash/pick\"","webpack://AceApiServer/./server/routes/debug.js","webpack://AceApiServer/external \"express-useragent\"","webpack://AceApiServer/./server/routes/email.js","webpack://AceApiServer/./server/routes/embedly.js","webpack://AceApiServer/./server/routes/entity.js","webpack://AceApiServer/external \"lodash/isArray\"","webpack://AceApiServer/./server/routes/metadata.js","webpack://AceApiServer/./server/routes/pdf.js","webpack://AceApiServer/./server/routes/provider.js","webpack://AceApiServer/./server/routes/schema.js","webpack://AceApiServer/./server/routes/settings.js","webpack://AceApiServer/./server/routes/shopify.js","webpack://AceApiServer/./server/routes/social.js","webpack://AceApiServer/external \"twitter\"","webpack://AceApiServer/./server/routes/taxonomy.js","webpack://AceApiServer/./server/routes/token.js","webpack://AceApiServer/./server/routes/tools.js","webpack://AceApiServer/./server/routes/user.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","_","Db","Helpers","DEFAULT_CLIENT_CONFIG","_id","client","assets","schemas","taxonomies","users","roles","provider","constructor","config","this","clientConfig","connect","merge","slug","set","createOrUpdate","Cloudant","dbName","url","db","maxAttempt","plugins","retry","retryDelayMultiplier","retryInitialDelayMsecs","use","Promise","assistUrl","assist","doc","resolve","reject","insert","then","response","id","_rev","rev","error","statusCode","docs","chunkSize","chunks","chunk","promises","forEach","push","bulk","all","entities","groupSize","Infinity","grouped","group","entity","groupBefore","length","groupAfter","ratio","thumbnail","groupRatio","JSON","stringify","Date","replace","array","replacementObject","map","thumbnailSrc","settings","cropSlug","cropDefault","settingsArray","split","setting","crop","crops","x","y","x2","y2","g","join","settingsString","test","thumbnailType","ext","thumbnailUrl","axios","passwordHash","ClientConfig","deleteFiles","fileNames","cc","assetsSlug","post","auth","username","password","generate","result","data","permissions","entityGrid","entityCreate","entityRead","entityUpdate","entityDelete","taxonomyCreate","taxonomyRead","taxonomyUpdate","taxonomyDelete","fileCreate","fileRead","fileUpdate","fileDelete","schema","user","userSettings","tools","role","freeze","find","jwt","signToken","payload","options","sign","tokenSecret","verifyToken","token","verify","jsonQuery","diff","Schema","Assist","Entity","flattenValues","fields","size","mapValues","field","type","isArray","filter","obj","undefined","published","childrenMap","omitBy","startsWith","rows","parents","entityMap","row","_filterEntityFields","uniqBy","file","uniq","fieldValues","fieldSlug","searchTerm","viewWithList","startkey","endkey","query","isFieldQuery","queryParts","trim","selector","modifier","slice","locals","input","start","end","sample","sampleSize","pick","paths","copy","path","pathParts","match","pathFrom","pathTo","allowRegexp","queryString","methodArgs","queries","emptyArgs","times","splice","_entitiesById","ids","include_docs","keys","view","_appendParents","children","limit","isNumber","_getDocMap","rowsOrDocs","docMap","_childDepth","childIds","rowOrDoc","isRow","_queriesFromString","concat","flatten","_query","childDocs","_childDepthLimit","fieldQueryMap","_mergeDocs","_extendRowsOrDocs","select","_removeChildren","updatedEntities","indexOf","chunkUpdate","_updateChildren","title","entityList","_entitySearch","Math","min","include_fields","sort","bookmark","index","group_field","search","groups","total_rows","hits","entitySearch","__entitySearch","clone","entityFind","updateEntityIndex","Error","entityRevisions","entityId","revs_info","revisionIds","_revs_info","revision","status","open_revs","revisions","childrenIds","ok","fetch","console","_appendChildren","restore","entityIds","entityOrEntityId","isObject","isString","oldFileNames","oldEntity","newEntity","mergeWith","a","b","trashed","forever","deleted","_fileNames","filesResult","_deleted","entitiesResult","files","Fields","read","schemaSlug","update","findIndex","delete","schemaSlugs","updateAll","ddoc","default_field","enabled","analyzer","$and","fieldRef","dataType","toText","process","on","express","cacheManager","redisStore","URL","zlib","promisifyAll","CircularJSON","sizeof","deepFreeze","XXH","http","logger","helmet","cookieParser","bodyParser","methodOverride","redis","session","RedisStore","Api","PORT","env","HOST","defaultConfig","customConfig","customContext","listen","app","sessionOptions","secret","resave","saveUninitialized","environment","host","redisOptions","ttl","port","redisClient","createClient","unref","log","store","cookie","maxAge","json","urlencoded","extended","asyncMiddleware","fn","req","res","next","catch","skipMiddleware","route","RegExp","omitUndefined","forIn","isPlainObject","isUndefined","cloneConfig","parse","cloneDeep","cache","caching","getClient","max","memory","item","hash","body","h64","toString","cacheMiddleware","async","__cache","compress","gunzipAsync","Buffer","from","send","Jwt","router","Router","forceHttps","headers","scheme","redirect","api","enable","prefix","Vary","method","sendStatus","referrer","referer","referrerHostname","hostname","blacklistReferrer","code","message","apiToken","blacklistToken","userId","context","authMiddleware","permissionMiddleware","Roles","authorised","permission","getConfig","configClone","handleResponse","cacheResponse","gzipAsync","parseInt","handleError","stack","statusText","afterResponse","removeListener","server","createServer","args","Auth","Email","Embedly","Instagram","Pdf","Settings","Shopify","Taxonomy","Tools","User","ENVIRONMENT","debug","DEBUG","SLUG","baseUrl","BASE_URL","DB_URL","DB_HOST","DB_NAME","requestPlugin","DB_REQUEST_PLUGIN","meterType","DB_METER_TYPE","superUserId","AUTH_SUPER_USER_ID","AUTH_TOKEN_SECRET","auth0","domain","AUTH0_DOMAIN","audience","AUTH0_AUDIENCE","dev","DEV_USER_ID","DEV_ROLE","cms","CMS_TITLE","CMS_URL","ASSIST_URL","ASSIST_USERNAME","ASSIST_PASSWORD","mailgun","apiKey","MAILGUN_API_KEY","MAILGUN_DOMAIN","embedly","EMBEDLY_API_KEY","pdf","templatesPath","__dirname","email","google","clientId","GOOGLE_CLIENT_ID","clientSecret","GOOGLE_CLIENT_SECRET","instagram","INSTAGRAM_CLIENT_ID","INSTAGRAM_CLIENT_SECRET","spotify","SPOTIFY_CLIENT_ID","SPOTIFY_CLIENT_SECRET","twitter","consumerKey","TWITTER_CONSUMER_KEY","consumerSecret","TWITTER_CONSUMER_SECRET","accessTokenKey","TWITTER_ACCESS_TOKEN_KEY","accessTokenSecret","TWITTER_ACCESS_TOKEN_SECRET","vimeo","VIMEO_CLIENT_ID","VIMEO_CLIENT_SECRET","querystring","expressJwt","jwks","AuthenticationClient","ErrorCode","providerTokenUri","jwtCheck","expressJwtSecret","rateLimit","jwksRequestsPerMinute","jwksUri","issuer","algorithms","authUser","accessToken","getProfile","auth0Profile","superUser","active","toLowerCase","authProvider","params","refresh","providerConfig","providerClientConfig","grant_type","client_id","client_secret","redirect_uri","redirectUri","refresh_token","uri","providerAuth","begins","floor","getTime","access_token","fs","nodemailer","Createsend","nodemailerMailgunTransport","Inky","mjml2html","registerComponent","registerDependencies","McSection","McImage","htmlToText","moment","countries","sass","pug","juice","inky","getTemplate","templateSlug","templateData","templateOptions","inlineStyles","mjml","skipValidation","templatePath","statAsync","readdirAsync","templateFiles","htmlFileName","fileName","htmlFileExtension","style","renderAsync","sourceMapContents","sourceMapEmbed","css","helpers","html","readFileAsync","renderFile","convertMjmlResult","level","errors","formattedMessage","releaseTheKraken","preserveMediaQueries","preserveFontFaces","removeStyleTags","removeLinkTags","preserveImportant","webResources","links","scripts","images","text","fromString","sendEmail","emailOptions","nodemailerMailgun","createTransport","api_key","emailTemplate","sendMail","metadata","subscribe","details","listId","createsend","cs","clientApiKey","subscribers","addSubscriberAsync","EmailAddress","Name","Resubscribe","RestartSubscriptionBasedAutoresponders","emailAddress","Message","EmbedlyApi","oembed","urls","opts","format","request","version","_request","endpoint","requestOptions","qs","extend","_eval","readdir","getTemplates","templates","getPayload","templateId","template","readFileSync","getPdf","assetSlug","assistPdfUrl","encoding","form","webpackEmptyContext","e","he","Handlebars","jsontoxml","getCatalog","shopLink","productLinkTemplate","shopify","storefrontAccessToken","compile","products","shop","edges","edge","node","handle","encode","description","originalSrc","vendor","availableForSale","priceRange","minVariantPrice","amount","currencyCode","channel","product","taxonomy","taxonomySlug","entitiesByTerm","term","entityGroups","createTerm","terms","updateTerm","_term","parent","deleteTerm","getDb","getChanges","changes","importDb","dbBackupFile","fileConents","unlinkAsync","cloudant","destroy","API_PREFIX","API_FORCE_HTTPS","API_BLACKLIST_TOKEN","API_BLACKLIST_REFERRER","SESSION_SECRET","SESSION_TTL","CACHE_ENABLED","CACHE_TTL","CACHE_COMPRESS","CACHE_MEMORY_MAX","REDIS_URL","REDIS_HOST","REDIS_PORT","REDIS_PASSWORD","REDIS_DB","logentriesToken","LOGENTRIES_TOKEN","Analytics","analytics","authorization","error_description","put","grant","defaults","origin","protocol","scope","nonce","custom_params","access_type","callback","pattern","items","del","clientInfo","useragent","source","renderTemplate","fromName","fromEmail","toName","toEmail","to","subject","indexAsync","q","use_index","$or","$exists","attachment","providerApiBaseUrl","providerApiHandler","param","expires_in","token_type","baseURL","Authorization","schemaId","setHeader","instagramAccessTokenMap","Twitter","consumer_key","consumer_secret","access_token_key","access_token_secret","pagination","next_url","taxonomySlugs","pickBy","isNaN","userIds"],"mappings":"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","file":"server.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AceApiServer\"] = factory();\n\telse\n\t\troot[\"AceApiServer\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","module.exports = require(\"@babel/runtime/helpers/interopRequireDefault\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"lodash\");","const _ = require('lodash');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Roles = require('./roles');\n\nconst roles = new Roles();\n\nconst DEFAULT_CLIENT_CONFIG = {\n  _id: 'config',\n  client: {},\n  assets: {},\n  schemas: [],\n  taxonomies: [],\n  users: [],\n  roles: roles.roles(),\n  provider: {},\n  module: {},\n};\n\nclass ClientConfig {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async get() {\n    let clientConfig = DEFAULT_CLIENT_CONFIG;\n\n    try {\n      clientConfig = await Db.connect(this.config).get('config');\n\n      clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n    } catch (error) {\n      //\n    }\n\n    clientConfig.slug = this.config.slug;\n\n    return clientConfig;\n  }\n\n  async set(clientConfig) {\n    clientConfig._id = 'config';\n\n    delete clientConfig.roles;\n\n    clientConfig = await Helpers.createOrUpdate(this.config, clientConfig);\n\n    clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n\n    return clientConfig;\n  }\n}\n\nmodule.exports = ClientConfig;\n","const Cloudant = require('@cloudant/cloudant');\n\nclass Db {\n  constructor(config, dbName) {\n    this.config = config;\n\n    return Db.connect(config, dbName);\n  }\n\n  static connect(config, dbName) {\n    const cloudant = new Cloudant({\n      url: config.db.url,\n      maxAttempt: 5,\n      plugins: [\n        'promises',\n        {\n          retry: {\n            retryDelayMultiplier: 2,\n            retryInitialDelayMsecs: 500,\n          },\n        },\n      ],\n    });\n\n    return cloudant.db.use(dbName || config.db.name);\n  }\n}\n\nmodule.exports = Db;\n","module.exports = require(\"bluebird\");","module.exports = require(\"axios\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\n\nclass Helpers {\n  constructor(config) {\n    this.config = config;\n    this.assistUrl = config.assist.url;\n    this.slug = config.slug;\n  }\n\n  static createOrUpdate(config, doc) {\n    return new Promise((resolve, reject) => {\n      Db.connect(config)\n        .insert(doc)\n        .then(\n          response => {\n            doc._id = response.id;\n            doc._rev = response.rev;\n            resolve(doc);\n          },\n          error => {\n            if (error.statusCode !== 409) {\n              reject(error);\n              return;\n            }\n\n            Db.connect(config)\n              .get(doc._id)\n              .then(response => {\n                doc._rev = response._rev;\n\n                Db.connect(config)\n                  .insert(doc)\n                  .then(response => {\n                    doc._rev = response.rev;\n                    resolve(doc);\n                  }, reject);\n              }, reject);\n          }\n        );\n    });\n  }\n\n  static chunkUpdate(config, docs, chunkSize = 1000) {\n    return new Promise((resolve, reject) => {\n      const chunks = _.chunk(docs, chunkSize);\n      const promises = [];\n\n      chunks.forEach(chunk => {\n        promises.push(\n          new Promise((resolve, reject) => {\n            Db.connect(config)\n              .bulk({\n                docs: chunk,\n              })\n              .then(resolve, reject);\n          })\n        );\n      });\n\n      Promise.all(promises).then(resolve, reject);\n    });\n  }\n\n  static groupEntities(entities, groupSize = Infinity) {\n    const grouped = [];\n\n    let group = {\n      entities: [],\n    };\n\n    entities.forEach(entity => {\n      if (!entity.groupBefore || group.entities.length >= groupSize) {\n        group = {\n          entities: [],\n        };\n      }\n\n      group.entities.push(entity);\n\n      if (!entity.groupAfter || group.entities.length >= groupSize) {\n        group.ratio = 0;\n\n        group.entities.forEach(entity => {\n          group.ratio += (entity.thumbnail || entity).ratio;\n        });\n\n        group.entities.forEach(entity => {\n          entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n        });\n\n        grouped.push(group);\n      }\n    });\n\n    return grouped;\n  }\n\n  static now() {\n    return JSON.stringify(new Date()).replace(/\"/g, '');\n  }\n\n  static replace(array, replacementObject, key) {\n    return array.map(object => {\n      if (object[key] === replacementObject[key]) {\n        return replacementObject;\n      }\n      return object;\n    });\n  }\n\n  thumbnailSrc(thumbnail, settings, cropSlug, cropDefault) {\n    if (!thumbnail) {\n      return '';\n    }\n\n    let settingsArray;\n\n    if (typeof settings === 'string') {\n      settingsArray = settings.split(/,|;/);\n\n      settings = {};\n\n      settingsArray.forEach(setting => {\n        setting = setting.split(/_|:/);\n\n        settings[setting[0]] = setting[1];\n      });\n    }\n\n    const crop = thumbnail.crops ? thumbnail.crops[cropSlug] : false;\n\n    if (crop) {\n      settings.x = crop[0];\n      settings.y = crop[1];\n      settings.x2 = crop[2];\n      settings.y2 = crop[3];\n    } else if (cropDefault) {\n      settings.g = cropDefault;\n    }\n\n    settingsArray = [];\n\n    _.forEach(settings, (value, key) => {\n      settingsArray.push([key, value].join(':'));\n    });\n\n    const settingsString = settingsArray.join(';');\n\n    if (/(image)/.test(thumbnail.thumbnailType)) {\n      if (thumbnail.ext === 'svg') {\n        return [this.assistUrl, this.slug, thumbnail.name + thumbnail.ext].join(\n          '/'\n        );\n      }\n\n      return [\n        this.assistUrl,\n        this.slug,\n        'transform',\n        settingsString,\n        thumbnail.name + thumbnail.ext,\n      ].join('/');\n    }\n\n    if (/(video)/.test(thumbnail.thumbnailType)) {\n      return [\n        this.assistUrl,\n        this.slug,\n        'transform',\n        settingsString,\n        thumbnail.name,\n        'thumb.jpg',\n      ].join('/');\n    }\n\n    if (/(oembed|proxy)/.test(thumbnail.thumbnailType)) {\n      const thumbnailUrl = thumbnail.thumbnailUrl.replace(/https?:\\/\\//, '');\n\n      return [\n        this.assistUrl,\n        this.slug,\n        'proxy',\n        'transform',\n        settingsString,\n        thumbnailUrl,\n      ].join('/');\n    }\n\n    return '';\n  }\n}\n\nmodule.exports = Helpers;\n","module.exports = require(\"path\");","module.exports = require(\"fs\");","const _ = require('lodash');\nconst axios = require('axios');\nconst passwordHash = require('password-hash');\nconst ClientConfig = require('./client-config');\n\nclass Assist {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async deleteFiles(fileNames) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetsSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n\n    if (fileNames.length === 0) {\n      return [];\n    }\n\n    const result = (\n      await axios.post(\n        `${this.config.assist.url}/${assetsSlug}/file/delete`,\n        { fileNames },\n        {\n          auth: {\n            username: this.config.assist.username,\n            password: passwordHash.generate(this.config.assist.password),\n          },\n        }\n      )\n    ).data;\n\n    return result;\n  }\n}\n\nmodule.exports = Assist;\n","module.exports = require(\"@cloudant/cloudant\");","const _ = require('lodash');\n\nconst roles = [\n  {\n    name: 'Admin',\n    slug: 'admin',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: true,\n      settings: true,\n      userSettings: true,\n      tools: true,\n    },\n  },\n  {\n    name: 'Editor',\n    slug: 'editor',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: true,\n      tools: false,\n    },\n  },\n  {\n    name: 'Guest',\n    slug: 'guest',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: false,\n      entityRead: true,\n      entityUpdate: false,\n      entityDelete: false,\n\n      taxonomyCreate: false,\n      taxonomyRead: true,\n      taxonomyUpdate: false,\n      taxonomyDelete: false,\n\n      fileCreate: false,\n      fileRead: true,\n      fileUpdate: false,\n      fileDelete: false,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: false,\n      tools: false,\n    },\n  },\n];\n\nclass Roles {\n  roles() {\n    return roles.map(role => Object.freeze(role));\n  }\n  role(slug) {\n    return _.find(this.roles(), { slug });\n  }\n}\n\nmodule.exports = Roles;\n","const jwt = require('jsonwebtoken');\n\nclass Jwt {\n  constructor(config) {\n    this.config = config;\n  }\n\n  signToken(payload, options = {}) {\n    return jwt.sign(payload, this.config.auth.tokenSecret, options);\n  }\n\n  verifyToken(token) {\n    return jwt.verify(token, this.config.auth.tokenSecret);\n  }\n}\n\nmodule.exports = Jwt;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst jsonQuery = require('json-query');\nconst { diff } = require('deep-diff');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Schema = require('./schema');\nconst Assist = require('./assist');\n\nconst CHUNK_UPDATE_SIZE = 1000;\n\nclass Entity {\n  constructor(config) {\n    this.config = config;\n\n    // Expose helpers\n    this.flattenValues = Entity.flattenValues;\n  }\n\n  static flattenValues(docs) {\n    return docs.map(doc => {\n      if (!doc.fields || !_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, field => {\n        if (/entity/.test(field.type) && _.isArray(field.value)) {\n          // entity / entityTile / entityGrid\n          field.value = Entity.flattenValues(field.value);\n        }\n        return field.value;\n      });\n\n      return doc;\n    });\n  }\n\n  static _filterEntityFields(docs, role = 'guest') {\n    const isArray = _.isArray(docs);\n\n    docs = (isArray ? docs : [docs]).map(doc => {\n      if (_.size(doc.fields)) {\n        doc.fields = _.mapValues(doc.fields, field => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter(obj => {\n              if (!obj) {\n                return false;\n              }\n              if (obj.type && obj.type === 'entity' && role === 'guest') {\n                return obj.published !== undefined ? obj.published : true;\n              }\n              return true;\n            });\n          }\n          return field;\n        });\n      }\n      return doc;\n    });\n\n    return isArray ? docs : docs[0];\n  }\n\n  static _appendChildren(docs, childrenMap) {\n    return docs.map(doc => {\n      if (!_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, field => {\n        if (_.isArray(field.value)) {\n          field.value = field.value.filter(obj => {\n            if (!obj) {\n              return false;\n            }\n            if (obj.type === 'entity') {\n              return childrenMap[obj.id] !== undefined;\n            }\n            return true;\n          });\n\n          field.value = field.value.map(obj => {\n            if (obj.type === 'entity') {\n              obj = _.merge(obj, childrenMap[obj.id]);\n            }\n            obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n            return obj;\n          });\n        }\n\n        return field;\n      });\n\n      return doc;\n    });\n  }\n\n  static _appendParents(rows, parents = null, role = 'guest') {\n    let entityMap = {};\n\n    rows.forEach(row => {\n      if (row.doc && row.value.type === 'entity') {\n        entityMap[row.id] = { ...row.doc, parents: [] };\n      }\n    });\n\n    if (parents) {\n      rows.forEach(row => {\n        if (row.doc && row.value.type === 'parent') {\n          entityMap[row.key].parents.push(\n            Entity._filterEntityFields(row.doc, role)\n          );\n        }\n      });\n\n      entityMap = _.mapValues(entityMap, entity => {\n        entity.parents = _.uniqBy(entity.parents, entity => entity._id);\n        return entity;\n      });\n    }\n\n    rows = rows.map(row => {\n      row.doc = entityMap[row.id];\n      return row;\n    });\n\n    rows = rows.filter(row => row.value.type === 'entity');\n\n    return rows;\n  }\n\n  static _fileNames(entities) {\n    const fileNames = [];\n\n    entities.forEach(entity => {\n      _.forEach(entity.fields, field => {\n        if (field.value && field.value.file) {\n          fileNames.push(field.value.file.name);\n        }\n      });\n    });\n\n    return _.uniq(fileNames);\n  }\n\n  async fieldValues(fieldSlug, searchTerm) {\n    const result = await Db.connect(this.config).viewWithList(\n      'entity',\n      'byField',\n      'search',\n      {\n        startkey: [fieldSlug],\n        endkey: [fieldSlug, {}],\n        group: true,\n        searchTerm,\n      }\n    );\n    return result;\n  }\n\n  static _query(data, query, isFieldQuery = false) {\n    query = query.replace(/(\\s\\s|\\t|\\r|\\n)/g, '');\n\n    if (isFieldQuery) {\n      const queryParts = query.trim().split(/\\[|\\]/);\n      const selector = `fields.${queryParts[0]}.value[${queryParts[1] || '*'}]`;\n      const modifier = /\\]:/.test(query)\n        ? `:${query\n            .split(/\\]:/)\n            .slice(-1)[0]\n            .trim()}`\n        : '';\n      query = `${selector}${modifier}`;\n    }\n\n    const result = jsonQuery(query, {\n      data,\n      locals: {\n        slice: (input, start, end) => _.slice(input, start, end),\n        sample: (input, size = 1) => _.sampleSize(input, size),\n        group: (entities, groupSize = Infinity) => {\n          const grouped = [];\n\n          let group = [];\n\n          entities.forEach(entity => {\n            if (!entity.groupBefore || group.length >= groupSize) {\n              group = [];\n            }\n\n            group.push(entity);\n\n            if (!entity.groupAfter || group.length >= groupSize) {\n              group.ratio = 0;\n\n              group.forEach(entity => {\n                group.ratio += (entity.thumbnail || entity).ratio;\n              });\n\n              group.forEach(entity => {\n                entity.groupRatio =\n                  (entity.thumbnail || entity).ratio / group.ratio;\n              });\n\n              grouped.push(group);\n            }\n          });\n\n          return grouped;\n        },\n        pick: (input, ...paths) =>\n          _.map(input, obj => {\n            const copy = {\n              id: obj.id || undefined,\n            };\n            paths = paths.filter(path => path); // Remove empty paths (tolerate trailing comma in args)\n            paths.forEach(path => {\n              const pathParts = path.match(/([^\\s]+)/g);\n              const pathFrom = pathParts[0];\n              const pathTo = pathParts[pathParts.length - 1];\n              _.set(copy, pathTo, _.get(obj, pathFrom));\n            });\n            return copy;\n          }),\n      },\n      allowRegexp: true,\n    });\n\n    return result;\n  }\n\n  static _queriesFromString(queryString) {\n    // Remove white space\n    queryString = queryString.replace(/(\\s\\s|\\t|\\r|\\n)/gm, '');\n\n    // Match and store (...args) from query so we can split by comma\n    const methodArgs = queryString.match(/\\(([^)]+)\\)/g);\n\n    // Replace (...args) with empty ()\n    queryString = queryString.replace(/\\(.*?\\)/g, '()');\n\n    // Extract queries\n    let queries = queryString.split(/,(?![^([]*[\\])])/g);\n\n    queries = queries.map(query => {\n      // Replace () with original (...args)\n      const emptyArgs = query.match(/\\(\\)/g);\n      if (emptyArgs) {\n        _.times(emptyArgs.length, () => {\n          query = query.replace('()', methodArgs.splice(0, 1));\n        });\n      }\n      return query.trim();\n    });\n\n    return queries;\n  }\n\n  async _entitiesById(ids = [], options = {}) {\n    options = _.merge(\n      {\n        parents: false,\n        role: 'guest',\n      },\n      options\n    );\n\n    const query = {\n      include_docs: true,\n    };\n\n    if (ids.length) {\n      query.keys = ids;\n    }\n\n    const result = await Db.connect(this.config).view(\n      'entity',\n      options.parents ? 'byIdExtended' : 'byId',\n      query\n    );\n\n    result.rows = result.rows.map(row => {\n      row.doc = Entity._filterEntityFields(row.doc, options.role);\n      return row;\n    });\n\n    result.rows = Entity._appendParents(\n      result.rows,\n      options.parents,\n      options.role\n    );\n\n    return result;\n  }\n\n  static _childDepthLimit(children) {\n    let limit = 0;\n    if (_.isNumber(children)) {\n      limit = children - 1;\n    }\n    if (_.isArray(children)) {\n      limit = children.length - 1;\n    }\n    return limit;\n  }\n\n  async _getDocMap(rowsOrDocs, docMap = {}, options = {}) {\n    options._childDepth = options._childDepth || 0;\n\n    if (!options.parents && !options.children) {\n      return docMap;\n    }\n\n    let ids = [];\n    let childIds = [];\n\n    rowsOrDocs.forEach(rowOrDoc => {\n      const isRow = !!rowOrDoc.doc;\n\n      let doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      doc = Entity._filterEntityFields(doc, options.role);\n\n      if (options.children && doc.fields && _.size(doc.fields)) {\n        if (_.isArray(options.children)) {\n          Entity._queriesFromString(\n            options.children[options._childDepth]\n          ).forEach(query => {\n            childIds = childIds.concat(\n              _.flatten(Entity._query(doc, query, true).value).map(\n                obj => obj && obj.id\n              )\n            );\n          });\n        } else {\n          _.forEach(doc.fields, field => {\n            if (_.isArray(field.value)) {\n              field.value = field.value.filter(obj => obj);\n\n              field.value.forEach(obj => {\n                if (obj.id) {\n                  childIds.push(obj.id);\n                }\n              });\n            }\n          });\n        }\n      }\n\n      ids.push(isRow ? rowOrDoc.id : doc._id || doc.id);\n    });\n\n    ids = _.uniq(ids);\n    ids = ids.filter(id => !docMap[id]);\n\n    let docs = [];\n    if (ids.length > 0) {\n      docs = (await this._entitiesById(ids, options)).rows.map(row => row.doc);\n\n      docs.forEach(doc => {\n        docMap[doc._id] = doc;\n      });\n    }\n\n    childIds = _.uniq(childIds);\n    childIds = childIds.filter(id => !docMap[id]);\n\n    let childDocs = [];\n    if (childIds.length > 0) {\n      childDocs = (\n        await this._entitiesById(childIds, { ...options, parents: false })\n      ).rows.map(row => row.doc);\n\n      childDocs.forEach(doc => {\n        docMap[doc._id] = doc;\n      });\n    }\n\n    if (\n      !options.children ||\n      options._childDepth === Entity._childDepthLimit(options.children)\n    ) {\n      return docMap;\n    }\n\n    return await this._getDocMap(childDocs, docMap, {\n      ...options,\n      parents: false,\n      _childDepth: options._childDepth + 1,\n    });\n  }\n\n  static _mergeDocs(\n    docs,\n    docMap,\n    options = { children: false, parents: false }\n  ) {\n    options._childDepth = options._childDepth || 0;\n\n    if (\n      options.children &&\n      options._childDepth - 1 === Entity._childDepthLimit(options.children)\n    ) {\n      return docs;\n    }\n\n    docs = docs.map(rowOrDoc => {\n      const isRow = !!rowOrDoc.doc;\n\n      let doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (docMap[rowOrDoc.id || rowOrDoc._id]) {\n        doc = _.merge({}, doc, docMap[rowOrDoc.id || rowOrDoc._id]);\n      }\n\n      if (options.children && doc.fields && _.size(doc.fields)) {\n        let fieldQueryMap;\n\n        if (_.isArray(options.children)) {\n          fieldQueryMap = {};\n          Entity._queriesFromString(\n            options.children[options._childDepth]\n          ).forEach(query => {\n            const key = query.split(/\\[|\\]/)[0];\n            fieldQueryMap[key] = query;\n          });\n        }\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter(obj => obj);\n\n            if (!fieldQueryMap || (fieldQueryMap && fieldQueryMap[fieldSlug])) {\n              if (fieldQueryMap && fieldQueryMap[fieldSlug]) {\n                field.value = field.value.filter(\n                  obj => obj.id && docMap[obj.id]\n                );\n              }\n\n              field.value = field.value.map(obj => {\n                if (obj && obj.id && docMap[obj.id]) {\n                  obj = _.merge(obj, docMap[obj.id] || {});\n                  obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n                }\n                return obj;\n              });\n\n              field.value = Entity._mergeDocs(field.value, docMap, {\n                ...options,\n                _childDepth: options._childDepth + 1,\n              });\n            }\n          }\n          return field;\n        });\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            if (fieldQueryMap && fieldQueryMap[fieldSlug]) {\n              field.value = _.flatten(\n                Entity._query(doc, fieldQueryMap[fieldSlug], true).value\n              );\n            }\n          }\n          return field;\n        });\n      }\n\n      if (_.isArray(options.parents) && doc.parents) {\n        doc.parents = _.flatten(\n          Entity._query(doc.parents, options.parents[0]).value\n        );\n      }\n\n      if (isRow) {\n        rowOrDoc.doc = doc;\n      } else {\n        rowOrDoc = doc;\n      }\n\n      return rowOrDoc;\n    });\n\n    return docs;\n  }\n\n  async _extendRowsOrDocs(rowsOrDocs, options = {}) {\n    options = _.merge(\n      {\n        select: false,\n        children: false,\n        parents: false,\n        role: 'guest',\n      },\n      options\n    );\n\n    let docMap = await this._getDocMap(rowsOrDocs, {}, options);\n\n    rowsOrDocs = Entity._mergeDocs(rowsOrDocs, docMap, options);\n\n    if (options.select) {\n      rowsOrDocs = _.flatten(Entity._query(rowsOrDocs, options.select).value);\n    }\n\n    docMap = null;\n\n    return rowsOrDocs;\n  }\n\n  _removeChildren(entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      entities = entities.map(entity => entity._id);\n\n      Db.connect(this.config)\n        .view('entity', 'byChildren', {\n          keys: entities,\n          include_docs: true,\n        })\n        .then(response => {\n          const updatedEntities = _.uniqBy(\n            response.rows,\n            row => row.doc._id\n          ).map(row => {\n            row.doc.fields = _.mapValues(row.doc.fields, field => {\n              if (_.isArray(field.value)) {\n                field.value = _.filter(\n                  field.value,\n                  obj =>\n                    !(obj.type === 'entity' && entities.indexOf(obj.id) !== -1)\n                );\n              }\n              return field;\n            });\n\n            return row.doc;\n          });\n\n          if (updatedEntities.length === 0) {\n            resolve([]);\n            return;\n          }\n\n          Helpers.chunkUpdate(\n            this.config,\n            updatedEntities,\n            CHUNK_UPDATE_SIZE\n          ).then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  _updateChildren(entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      const entityMap = {};\n\n      entities = entities.map(entity => {\n        entityMap[entity._id] = entity;\n\n        return entity._id;\n      });\n\n      Db.connect(this.config)\n        .view('entity', 'byChildren', {\n          keys: entities,\n          include_docs: true,\n        })\n        .then(response => {\n          const entities = response.rows.map(row => {\n            const entity = row.doc;\n\n            _.forEach(entity.fields, (field, fieldSlug) => {\n              if (_.isArray(field.value)) {\n                entity.fields[fieldSlug].value = field.value\n                  .filter(obj => obj)\n                  .map(obj => {\n                    if (obj.type === 'entity' && entityMap[obj.id]) {\n                      obj.slug = entityMap[obj.id].slug;\n                      obj.title = entityMap[obj.id].title;\n                      obj.schema = entityMap[obj.id].schema;\n                      obj.published = entityMap[obj.id].published;\n\n                      if (entityMap[obj.id].thumbnail) {\n                        obj.thumbnail = entityMap[obj.id].thumbnail;\n                      } else {\n                        obj.thumbnail = null;\n                      }\n                    }\n\n                    return obj;\n                  });\n              }\n            });\n\n            return entity;\n          });\n\n          Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE).then(\n            resolve,\n            reject\n          );\n        }, reject);\n    });\n  }\n\n  async entityList(ids = [], options = {}) {\n    options = _.merge(\n      {\n        select: false,\n        children: false,\n        parents: false,\n        role: 'guest',\n      },\n      options\n    );\n\n    const result = await this._entitiesById(ids, options);\n\n    const rows = await this._extendRowsOrDocs(result.rows, options);\n\n    return rows;\n  }\n\n  _entitySearch(query, options = {}) {\n    return new Promise((resolve, reject) => {\n      query.limit = Math.min(query.limit || 200, 200);\n\n      if (options.children) {\n        query.include_docs = true;\n      }\n\n      if (!query.include_fields) {\n        query.include_fields = [];\n      }\n\n      if (!query.sort) {\n        delete query.sort;\n      }\n      if (!query.bookmark) {\n        delete query.bookmark;\n      }\n      if (!query.index) {\n        delete query.index;\n      }\n      if (!query.group_field) {\n        delete query.group_field;\n      }\n\n      Db.connect(this.config)\n        .search('entity', query.index || 'all', query)\n        .then(result => {\n          if (result.groups) {\n            const promises = [];\n\n            result.groups = result.groups.map(group => {\n              promises.push(\n                new Promise((resolve, reject) => {\n                  if (\n                    (!options.children && !options.parents) ||\n                    group.total_rows === 0\n                  ) {\n                    resolve();\n                    return;\n                  }\n\n                  this._extendRowsOrDocs(group.hits, options).then(docs => {\n                    group.hits = docs;\n\n                    resolve();\n                  }, reject);\n                })\n              );\n              return group;\n            });\n\n            Promise.all(promises).then(() => {\n              resolve(result);\n            }, reject);\n\n            return;\n          }\n\n          this._extendRowsOrDocs(result.rows, options).then(docs => {\n            result.rows = docs;\n\n            resolve(result);\n          }, reject);\n        }, reject);\n    });\n  }\n\n  entitySearch(query, options = {}) {\n    options = _.merge(\n      {\n        children: false,\n        parents: false,\n        role: 'guest',\n      },\n      options\n    );\n\n    return new Promise((resolve, reject) => {\n      const limit = query.limit || 25;\n\n      if (limit <= 200) {\n        this._entitySearch(query, options).then(resolve, reject);\n        return;\n      }\n\n      let rows = [];\n      let groups = [];\n\n      function __entitySearch(bookmark) {\n        const _query = _.clone(query);\n\n        if (bookmark) {\n          _query.bookmark = bookmark;\n        }\n\n        this._entitySearch(_query, options).then(result => {\n          if (result.rows) {\n            rows = rows.concat(result.rows);\n          }\n          if (result.groups) {\n            groups = groups.concat(result.groups);\n          }\n\n          if (rows.length < result.total_rows && rows.length < limit) {\n            __entitySearch.call(this, result.bookmark);\n            return;\n          }\n\n          result.rows = rows;\n          result.groups = groups;\n\n          resolve(result);\n        }, reject);\n      }\n\n      __entitySearch.call(this);\n    });\n  }\n\n  async entityFind(query, options = {}) {\n    options = _.merge(\n      {\n        children: false,\n        parents: false,\n        role: 'guest',\n      },\n      options\n    );\n\n    let result;\n\n    try {\n      result = await Db.connect(this.config).find(query);\n    } catch (error) {\n      if (error.error === 'no_usable_index') {\n        const cc = new ClientConfig(this.config);\n        const clientConfig = await cc.get();\n\n        const schema = new Schema(this.config);\n        await schema.updateEntityIndex(clientConfig.schemas);\n\n        result = await Db.connect(this.config).find(query);\n      }\n    }\n\n    if (options.children === false) {\n      return result;\n    }\n\n    if (query.fields && query.fields.indexOf('_id') === -1) {\n      throw Error('_id field required for `children`');\n    }\n\n    result.docs = await this._extendRowsOrDocs(result.docs, options);\n\n    return result;\n  }\n\n  entityRevisions(entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config)\n        .get(entityId, {\n          revs_info: true,\n        })\n        .then(response => {\n          const revisionIds = [];\n\n          response._revs_info.forEach(revision => {\n            if (revision.status === 'available') {\n              revisionIds.push(revision.rev);\n            }\n          });\n\n          Db.connect(this.config)\n            .get(entityId, {\n              open_revs: JSON.stringify(revisionIds),\n            })\n            .then(response => {\n              const revisions = [];\n              const childrenIds = [];\n\n              response.forEach(revision => {\n                if (revision.ok) {\n                  revisions.push(revision.ok);\n\n                  _.forEach(revision.ok.fields, field => {\n                    if (/entity/.test(field.type)) {\n                      _.forEach(field.value, obj => {\n                        if (obj.id) {\n                          childrenIds.push(obj.id);\n                        }\n                      });\n                    }\n                  });\n                }\n              });\n\n              Db.connect(this.config)\n                .fetch({\n                  keys: _.uniq(childrenIds),\n                  include_docs: true,\n                })\n                .then(result => {\n                  const childrenMap = {};\n\n                  result.rows.forEach(row => {\n                    try {\n                      childrenMap[row.doc._id] = row.doc;\n                    } catch (error) {\n                      console.error('Error: child no longer exists');\n                    }\n                  });\n\n                  resolve(Entity._appendChildren(revisions, childrenMap));\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entityCreate(entity) {\n    return new Promise((resolve, reject) => {\n      entity.type = 'entity';\n\n      Db.connect(this.config)\n        .insert(entity)\n        .then(response => {\n          entity._id = response.id;\n          entity._rev = response.rev;\n\n          resolve(entity);\n        }, reject);\n    });\n  }\n\n  entityRead(entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config)\n        .get(entityId)\n        .then(resolve, reject);\n    });\n  }\n\n  async entityUpdate(entities, restore) {\n    entities = _.isArray(entities) ? entities : [entities];\n\n    const entityMap = {};\n\n    const entityIds = entities.map(entityOrEntityId => {\n      let entityId;\n\n      if (_.isObject(entityOrEntityId)) {\n        entityId = entityOrEntityId._id;\n        entityMap[entityId] = entityOrEntityId;\n      }\n      if (_.isString(entityOrEntityId)) {\n        entityId = entityOrEntityId;\n      }\n\n      return entityId;\n    });\n\n    const response = await Db.connect(this.config).fetch({\n      keys: entityIds,\n      include_docs: true,\n    });\n\n    const children = [];\n    const oldFileNames = [];\n\n    entities = response.rows.map(row => {\n      const oldEntity = row.doc;\n      const newEntity = entityMap[oldEntity._id];\n\n      let entity = oldEntity;\n\n      if (newEntity) {\n        delete newEntity._rev;\n\n        const diffs = diff(oldEntity, newEntity);\n\n        diffs.forEach(diff => {\n          // If any reference fields have changed, update all references\n          if (/published|slug|title|thumbnail/.test(diff.path[0])) {\n            if (\n              children.indexOf(newEntity) === -1 &&\n              entityIds.indexOf(newEntity._id) !== -1\n            ) {\n              children.push(newEntity);\n            }\n          }\n\n          // If any file fields have changed, remove the old file\n          if (diff.path[0] === 'fields' && diff.path[2] === 'value') {\n            const field = oldEntity.fields[diff.path[1]];\n            if (\n              /attachment|image|audio|video/.test(field.type) &&\n              field.value\n            ) {\n              oldFileNames.push(field.value.file.name);\n            }\n          }\n        });\n\n        entity = _.mergeWith({}, oldEntity, newEntity, (a, b) => {\n          if (_.isArray(a) && _.isArray(b)) {\n            return b;\n          }\n          return undefined;\n        });\n      }\n\n      if (restore) {\n        entity.trashed = false;\n      }\n\n      return entity;\n    });\n\n    if (oldFileNames.length) {\n      // TODO: fix delete orphaned files\n      // const assist = new Assist(this.config);\n      // await assist.deleteFiles(oldFileNames);\n    }\n\n    if (children.length) {\n      await this._updateChildren(children);\n    }\n\n    const result = await Helpers.chunkUpdate(\n      this.config,\n      entities,\n      CHUNK_UPDATE_SIZE\n    );\n\n    return result;\n  }\n\n  async entityDelete(entityIds, forever = false) {\n    let entities;\n    let filesResult;\n\n    if (entityIds === 'trashed') {\n      forever = true;\n\n      entities = (\n        await Db.connect(this.config).view('entity', 'trashed', {\n          include_docs: true,\n        })\n      ).rows;\n    } else {\n      entities = (\n        await Db.connect(this.config).fetch({\n          keys: _.isArray(entityIds) ? entityIds : [entityIds],\n          include_docs: true,\n        })\n      ).rows;\n    }\n\n    entities = entities.filter(\n      entity => !entity.value || !entity.value.deleted\n    );\n\n    entities = entities.map(entity => entity.doc);\n\n    await this._removeChildren(entities);\n\n    if (forever) {\n      const fileNames = Entity._fileNames(entities);\n\n      if (fileNames.length) {\n        const assist = new Assist(this.config);\n        filesResult = await assist.deleteFiles(fileNames);\n      }\n\n      entities = entities.map(entity => ({\n        _id: entity._id,\n        _rev: entity._rev,\n        _deleted: true,\n      }));\n    } else {\n      entities = entities.map(entity => {\n        entity.trashed = true;\n        return entity;\n      });\n    }\n\n    const entitiesResult = await Helpers.chunkUpdate(\n      this.config,\n      entities,\n      CHUNK_UPDATE_SIZE\n    );\n\n    return {\n      entities: entitiesResult,\n      files: filesResult,\n    };\n  }\n}\n\nmodule.exports = Entity;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Fields = require('./fields');\n\nclass Schema {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas.push(schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(schemaSlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const schema = _.find(clientConfig.schemas, { slug: schemaSlug });\n\n    if (!schema) {\n      throw Error(`Schema not found: ${schemaSlug}`);\n    }\n\n    return schema;\n  }\n\n  async update(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.schemas, { slug: schema.slug });\n\n    if (index === -1) {\n      throw Error(`Schema not found: ${schema.slug}`);\n    }\n\n    clientConfig.schemas.splice(index, 1, schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(schemaSlugs) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    schemaSlugs = _.isArray(schemaSlugs) ? schemaSlugs : [schemaSlugs];\n\n    clientConfig.schemas = clientConfig.schemas.filter(\n      schema => schemaSlugs.indexOf(schema.slug) === -1\n    );\n\n    clientConfig.schemas = clientConfig.schemas.map(schema => {\n      if (!schema.fields) {\n        return schema;\n      }\n      schema.fields = schema.fields.map(field => {\n        if (!field.settings) {\n          return field;\n        }\n        if (field.settings.schemas) {\n          field.settings.schemas = field.settings.schemas.filter(\n            schema => schemaSlugs.indexOf(schema) === -1\n          );\n        }\n        return field;\n      });\n      return schema;\n    });\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateAll(schemas) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas = schemas;\n\n    // await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateEntityIndex(schemas) {\n    let fields = [];\n\n    schemas.forEach(schema => {\n      fields = fields.concat(schema.fields);\n    });\n\n    fields = _.uniqBy(fields, 'slug');\n\n    const index = {\n      name: 'entity',\n      type: 'text',\n      ddoc: 'entityIndex',\n      index: {\n        default_field: {\n          enabled: true,\n          analyzer: 'standard',\n        },\n        selector: {\n          $and: [\n            {\n              type: 'entity',\n            },\n          ],\n        },\n        fields: [\n          {\n            name: 'published',\n            type: 'boolean',\n          },\n          {\n            name: 'trashed',\n            type: 'boolean',\n          },\n          {\n            name: 'title',\n            type: 'string',\n          },\n          {\n            name: 'slug',\n            type: 'string',\n          },\n          {\n            name: 'schema',\n            type: 'string',\n          },\n          {\n            name: 'modifiedAt',\n            type: 'string',\n          },\n          {\n            name: 'publishedAt',\n            type: 'string',\n          },\n        ],\n      },\n    };\n\n    fields.forEach(field => {\n      const fieldRef = Fields.field(field.type);\n\n      if (/number|string|boolean/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value`,\n          type: fieldRef.dataType,\n        });\n      }\n\n      if (/array/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.[].slug`,\n          type: 'string',\n        });\n      }\n\n      if (/taxonomy/.test(field.type)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.terms.[].slug`,\n          type: 'string',\n        });\n      }\n    });\n\n    const result = await Db.connect(this.config).index(index);\n\n    return result;\n  }\n}\n\nmodule.exports = Schema;\n","const _ = require('lodash');\n\nconst fields = [\n  {\n    type: 'attachment',\n    name: 'Attachment',\n    dataType: 'object',\n  },\n  {\n    type: 'audio',\n    name: 'Audio',\n    dataType: 'object',\n  },\n  {\n    type: 'checkbox',\n    name: 'Checkbox',\n    dataType: 'boolean',\n  },\n  {\n    type: 'color',\n    name: 'Color',\n    dataType: 'string',\n  },\n  {\n    type: 'date',\n    name: 'Date',\n    dataType: 'number',\n  },\n  {\n    type: 'embedly',\n    name: 'Embedly',\n    dataType: 'object',\n  },\n  {\n    type: 'entity',\n    name: 'Entity',\n    dataType: 'array',\n  },\n  {\n    type: 'entityGrid',\n    name: 'Entity Grid',\n    dataType: 'array',\n  },\n  {\n    type: 'entityTile',\n    name: 'Entity Tile',\n    dataType: 'array',\n  },\n  {\n    type: 'image',\n    name: 'Image',\n    dataType: 'object',\n  },\n  {\n    type: 'keyValue',\n    name: 'Key Value',\n    dataType: 'object',\n    toText(value) {\n      if (_.isArray(value)) {\n        return value.map(obj => `${obj.key}: ${obj.value}`).join(', ');\n      }\n    },\n  },\n  {\n    type: 'number',\n    name: 'Number',\n    dataType: 'number',\n  },\n  {\n    type: 'richText',\n    name: 'Rich Text',\n    dataType: 'object',\n  },\n  {\n    type: 'select',\n    name: 'Select',\n    dataType: 'array',\n  },\n  {\n    type: 'taxonomy',\n    name: 'Taxonomy',\n    dataType: 'object',\n  },\n  {\n    type: 'text',\n    name: 'Text',\n    dataType: 'string',\n  },\n  {\n    type: 'textArea',\n    name: 'Text Area',\n    dataType: 'string',\n  },\n  {\n    type: 'user',\n    name: 'User',\n    dataType: 'array',\n  },\n  {\n    type: 'video',\n    name: 'Video',\n    dataType: 'object',\n  },\n  {\n    type: 'vimeo',\n    name: 'Vimeo',\n    dataType: 'object',\n  },\n];\n\nclass Fields {\n  static fields() {\n    return fields.map(field => Object.freeze(field));\n  }\n  static field(type) {\n    return _.find(Fields.fields(), { type });\n  }\n}\n\nmodule.exports = Fields;\n","module.exports = require(\"request-promise\");","process.on('unhandledRejection', (result) => console.error(result));\n\nconst _ = require('lodash');\nconst express = require('express');\nconst cacheManager = require('cache-manager');\nconst redisStore = require('cache-manager-redis-store');\nconst Promise = require('bluebird');\nconst URL = require('url-parse');\nconst zlib = Promise.promisifyAll(require('zlib'));\nconst CircularJSON = require('circular-json-es6');\nconst sizeof = require('object-sizeof');\nconst deepFreeze = require('deep-freeze');\nconst XXH = require('xxhashjs');\nconst http = require('http');\nconst logger = require('morgan');\nconst helmet = require('helmet');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst methodOverride = require('method-override');\nconst redis = require('redis');\nconst session = require('express-session');\nconst RedisStore = require('connect-redis')(session);\n\nconst Api = require('../api/api');\n\nconst PORT = process.env.PORT || 5001;\nconst HOST = process.env.HOST || 'localhost';\nconst HASH_SEED = 0xabcd;\n\nconst defaultConfig = require('./server.config');\n\nfunction Server(customConfig = {}, customContext = {}, listen = true) {\n  const config = deepFreeze(\n    _.merge({}, Api.defaultConfig, defaultConfig, customConfig)\n  );\n\n  const app = express();\n\n  const sessionOptions = {\n    secret: config.session.secret,\n    resave: true,\n    saveUninitialized: true,\n  };\n\n  if (\n    config.environment === 'production' &&\n    (config.redis.url || config.redis.host)\n  ) {\n    const redisOptions = {\n      ttl: config.session.ttl,\n    };\n\n    if (config.redis.url) {\n      redisOptions.url = config.redis.url;\n    } else {\n      redisOptions.host = config.redis.host;\n      redisOptions.port = config.redis.port;\n      redisOptions.password = config.redis.password;\n      redisOptions.db = config.redis.db;\n    }\n\n    const redisClient = redis.createClient(redisOptions);\n    redisClient.unref();\n    redisClient.on('ready', () => {\n      console.log('redis: ready');\n    });\n    redisClient.on('error', (error) => {\n      console.error('redis: error:', error);\n    });\n\n    sessionOptions.store = new RedisStore({ client: redisClient });\n  } else {\n    sessionOptions.cookie = {\n      maxAge: config.session.ttl,\n    };\n  }\n\n  app.use(helmet());\n  app.use(logger('tiny'));\n  app.use(cookieParser());\n  app.use(\n    bodyParser.json({\n      limit: '50mb',\n    })\n  );\n  app.use(\n    bodyParser.urlencoded({\n      extended: true,\n      limit: '50mb',\n    })\n  );\n  app.use(methodOverride());\n  app.use(session(sessionOptions));\n\n  // Async middleware\n\n  const asyncMiddleware = (fn) => (req, res, next) => {\n    Promise.resolve(fn(req, res, next)).catch(next);\n  };\n\n  // Skip middleware\n\n  const skipMiddleware = (req) => {\n    const prodAllowedRoutes = [\n      '/',\n      '/auth/user',\n      '/connect/(.+)/callback',\n      '/config/info',\n    ];\n\n    const devAllowedRoutes = ['/token', '/email'];\n\n    if (\n      _.find(prodAllowedRoutes, (route) =>\n        new RegExp(`^${route}`).test(req.path)\n      )\n    ) {\n      return true;\n    }\n\n    if (\n      config.environment === 'development' &&\n      _.find(devAllowedRoutes, (route) =>\n        new RegExp(`^${route}`).test(req.path)\n      )\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  // Auth middleware\n\n  const authMiddleware = (req, res, next) => {\n    if (skipMiddleware(req)) {\n      next();\n      return;\n    }\n\n    if (!req.session.userId) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  // Permissions middleware\n\n  const permissionMiddleware = (permissions, req, res, next) => {\n    if (!req.session.role) {\n      res.status(401);\n      res.send({\n        permissions,\n        message: 'Error: undefined role',\n      });\n      return;\n    }\n\n    if (req.session.role === 'super') {\n      next();\n      return;\n    }\n\n    const roles = Api.Roles();\n\n    if (_.isString(permissions)) {\n      permissions = permissions.split(',');\n    }\n\n    let authorised = false;\n\n    permissions.forEach((permission) => {\n      if (roles.role(req.session.role).permissions[permission.trim()]) {\n        authorised = true;\n      }\n    });\n\n    if (!roles.role(req.session.role) || !authorised) {\n      res.status(401);\n      res.send({\n        permissions,\n        message: 'Error: not authorised',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  // Clone and extend config per request/session\n\n  const omitUndefined = (obj) => {\n    _.forIn(obj, (value, key, obj) => {\n      if (_.isPlainObject(value)) {\n        value = omitUndefined(value);\n\n        if (_.keys(value).length === 0) {\n          delete obj[key];\n        }\n      }\n\n      if (_.isUndefined(value)) {\n        delete obj[key];\n      }\n    });\n\n    return obj;\n  };\n\n  const cloneConfig = (config) =>\n    _.mergeWith(\n      {},\n      JSON.parse(JSON.stringify(config)),\n      omitUndefined(_.cloneDeep(config))\n    );\n\n  const getConfig = async (slug) => {\n    const configClone = cloneConfig(config);\n\n    configClone.slug = slug;\n    configClone.db.name = slug;\n\n    return configClone;\n  };\n\n  // Cache\n\n  let cache;\n\n  if (config.environment === 'production' && config.cache.enabled) {\n    if (config.redis.url || config.redis.host) {\n      const redisOptions = {\n        ttl: config.cache.ttl,\n      };\n\n      if (config.redis.url) {\n        redisOptions.url = config.redis.url;\n      } else {\n        redisOptions.host = config.redis.host;\n        redisOptions.port = config.redis.port;\n        redisOptions.password = config.redis.password;\n        redisOptions.db = config.redis.db;\n      }\n\n      cache = cacheManager.caching(\n        _.merge({ store: redisStore }, redisOptions)\n      );\n\n      const redisClient = cache.store.getClient();\n      redisClient.on('ready', () => {\n        console.log('cache: ready');\n      });\n      redisClient.on('error', (error) => {\n        console.error('cache: error:', error);\n      });\n    } else {\n      cache = cacheManager.caching({\n        store: 'memory',\n        ttl: config.cache.ttl,\n        max: config.cache.memory.max,\n        length: (item) => {\n          // const length = Buffer.byteLength(item, 'utf8')\n          const length = sizeof(item);\n          return length;\n        },\n      });\n    }\n  }\n\n  // Cache middleware\n\n  const hash = (req) => {\n    const obj = {\n      path: req.path,\n      query: req.query,\n      body: req.body,\n    };\n    return `${req.session.slug}:${XXH.h64(\n      JSON.stringify(obj),\n      HASH_SEED\n    ).toString(16)}`;\n  };\n\n  const cacheMiddleware = asyncMiddleware(async (req, res, next) => {\n    const useCachedResponse =\n      config.cache.enabled &&\n      req.session.role === 'guest' && // TODO: Replace 'guest' with constant\n      (req.query.__cache && JSON.parse(req.query.__cache)) !== false;\n\n    if (useCachedResponse) {\n      try {\n        const key = hash(req);\n\n        let response = await cache.get(key);\n\n        if (typeof response === 'string') {\n          if (config.cache.compress) {\n            response = (\n              await zlib.gunzipAsync(Buffer.from(response, 'base64'))\n            ).toString();\n          }\n\n          try {\n            response = JSON.parse(response);\n          } catch (error) {\n            //\n          }\n\n          res.set('X-Cached-Response', true);\n          res.status(response ? 200 : 204);\n          res.send(response);\n\n          return;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    res.set('X-Cached-Response', false);\n    next();\n  });\n\n  // Response helpers\n\n  const handleError = (req, res, error) => {\n    if (Object.prototype.toString.call(error) === '[object Object]') {\n      error = CircularJSON.parse(CircularJSON.stringify(error));\n    }\n\n    error = error.response || error;\n\n    console.error(error);\n\n    const code = error.statusCode || error.status || error.code || 500;\n    const message =\n      error.stack ||\n      error.error ||\n      error.message ||\n      error.body ||\n      error.data ||\n      error.statusText ||\n      error;\n\n    res.status(typeof code === 'string' ? 500 : code);\n    res.send({\n      code,\n      message,\n    });\n  };\n\n  const handleResponse = async (req, res, response, cacheResponse = false) => {\n    if (response === undefined || response === null) {\n      response = '';\n      res.status(204);\n      res.send(response);\n    } else {\n      response = CircularJSON.stringify(response);\n      res.status(200);\n      res.send(JSON.parse(response));\n    }\n\n    if (cacheResponse && config.cache.enabled && req.session.role === 'guest') {\n      // TODO: Replace 'guest' with constant\n      const key = hash(req);\n\n      if (config.cache.compress) {\n        response = (await zlib.gzipAsync(Buffer.from(response))).toString(\n          'base64'\n        );\n      }\n\n      const ttl = req.query.__cache\n        ? parseInt(req.query.__cache, 10)\n        : config.cache.ttl;\n\n      cache.set(key, response, { ttl });\n    }\n  };\n\n  // Header middleware\n\n  const headerMiddleware = (req, res, next) => {\n    const headers = {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,OPTIONS',\n      'Access-Control-Expose-Headers': 'X-Slug, X-Role, X-User-Id',\n      Vary: 'Accept-Encoding, X-Api-Token',\n    };\n\n    if (req.headers['access-control-request-headers']) {\n      headers['Access-Control-Allow-Headers'] =\n        req.headers['access-control-request-headers'];\n    }\n\n    res.set(headers);\n\n    if (req.method === 'OPTIONS') {\n      res.sendStatus(200);\n      return;\n    }\n\n    next();\n  };\n\n  // Session middleware\n\n  const jwt = Api.Jwt(config);\n\n  const sessionMiddleware = (req, res, next) => {\n    if (skipMiddleware(req)) {\n      next();\n      return;\n    }\n\n    const referrer = req.headers.referrer || req.headers.referer;\n\n    if (referrer) {\n      const referrerHostname = new URL(referrer).hostname\n        .split('.')\n        .slice(-2)\n        .join('.');\n\n      if (config.api.blacklistReferrer.indexOf(referrerHostname) > -1) {\n        res.status(401);\n        res.send({\n          code: 401,\n          message: 'Not authorised, referrer blacklisted',\n        });\n        return;\n      }\n    }\n\n    const token =\n      req.headers['x-api-token'] || req.query.apiToken || req.session.apiToken;\n\n    if (!token) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing token',\n      });\n      return;\n    }\n\n    if (config.api.blacklistToken.indexOf(token) > -1) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, token blacklisted',\n      });\n      return;\n    }\n\n    try {\n      const payload = jwt.verifyToken(token);\n\n      req.session.userId = payload.userId;\n      req.session.slug = payload.slug;\n      req.session.role = payload.role || 'guest'; // TODO: Replace 'guest' with constant\n    } catch (error) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: `Not authorised, token verification failed (${error.message})`,\n        error,\n      });\n      return;\n    }\n\n    if (!req.session.slug) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing slug',\n      });\n      return;\n    }\n\n    if (!req.session.role) {\n      req.session.role = 'guest';\n    }\n\n    if (req.session.userId) {\n      res.set('X-User-Id', req.session.userId);\n    }\n\n    res.set('X-Environment', config.environment);\n    res.set('X-Slug', req.session.slug);\n    res.set('X-Role', req.session.role);\n\n    next();\n  };\n\n  // Router\n\n  const router = express.Router();\n\n  const forceHttps = (req, res, next) => {\n    if (\n      req.headers['x-forwarded-proto'] &&\n      req.headers['x-forwarded-proto'] !== 'https' &&\n      req.headers['cf-visitor'] &&\n      JSON.parse(req.headers['cf-visitor']).scheme !== 'https' // Fix for Cloudflare/Heroku flexible SSL\n    ) {\n      res.redirect(301, `https://${req.headers.host}${req.path}`);\n      return;\n    }\n    next();\n  };\n\n  if (config.environment === 'production' && config.api.forceHttps === true) {\n    if (app.enable) {\n      app.enable('trust proxy');\n    }\n    app.use(forceHttps);\n  }\n\n  app.use(`/${config.api.prefix}`, headerMiddleware, sessionMiddleware, router);\n\n  app.get(`/${config.api.prefix}`, (req, res) => {\n    res.send('<pre>ace-api</pre>');\n  });\n\n  // Context\n\n  const context = _.merge(\n    {\n      app,\n      router,\n      cache,\n      authMiddleware,\n      permissionMiddleware,\n      cacheMiddleware,\n      asyncMiddleware,\n      getConfig,\n      handleResponse,\n      handleError,\n    },\n    customContext\n  );\n\n  // Inject API into context\n\n  Object.keys(Api).forEach((key) => {\n    context[key] = Api[key];\n  });\n\n  const afterResponse = (req, res) => {\n    res.removeListener('finish', afterResponse);\n    res.removeListener('close', afterResponse);\n  };\n\n  if (config.environment !== 'production') {\n    app.use((req, res, next) => {\n      res.on('finish', afterResponse.bind(null, req, res));\n      res.on('close', afterResponse.bind(null, req, res));\n      next();\n    });\n  }\n\n  // Bootstrap Routes\n\n  require('./routes/analytics')(context, config);\n  require('./routes/auth')(context, config);\n  require('./routes/connect')(context, config);\n  require('./routes/cache')(context, config);\n  require('./routes/config')(context, config);\n  require('./routes/debug')(context, config);\n  require('./routes/email')(context, config);\n  require('./routes/embedly')(context, config);\n  require('./routes/entity')(context, config);\n  require('./routes/metadata')(context, config);\n  require('./routes/pdf')(context, config);\n  require('./routes/provider')(context, config);\n  require('./routes/schema')(context, config);\n  require('./routes/settings')(context, config);\n  require('./routes/shopify')(context, config);\n  require('./routes/social')(context, config);\n  require('./routes/taxonomy')(context, config);\n  require('./routes/token')(context, config);\n  require('./routes/tools')(context, config);\n  require('./routes/user')(context, config);\n\n  if (listen) {\n    const server = http.createServer(app);\n    server.on('listening', () => {\n      console.log(`listening: http://${HOST}:${PORT}`);\n    });\n    server.listen(PORT);\n  }\n\n  return app;\n}\n\nmodule.exports = Server;\n","module.exports = require(\"express\");","module.exports = require(\"cache-manager\");","module.exports = require(\"cache-manager-redis-store\");","module.exports = require(\"url-parse\");","module.exports = require(\"zlib\");","module.exports = require(\"circular-json-es6\");","module.exports = require(\"object-sizeof\");","module.exports = require(\"deep-freeze\");","module.exports = require(\"xxhashjs\");","module.exports = require(\"http\");","module.exports = require(\"morgan\");","module.exports = require(\"helmet\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"body-parser\");","module.exports = require(\"method-override\");","module.exports = require(\"redis\");","module.exports = require(\"express-session\");","module.exports = require(\"connect-redis\");","function Api() {}\n\nApi.defaultConfig = require('./api.config');\n\nApi.Assist = (...args) => new (require('./lib/assist'))(...args);\nApi.Auth = (...args) => new (require('./lib/auth'))(...args);\nApi.ClientConfig = (...args) => new (require('./lib/client-config'))(...args);\nApi.Db = (...args) => new (require('./lib/db'))(...args);\nApi.Email = (...args) => new (require('./lib/email'))(...args);\nApi.Embedly = (...args) => new (require('./lib/embedly'))(...args);\nApi.Entity = (...args) => new (require('./lib/entity'))(...args);\nApi.Fields = (...args) => new (require('./lib/fields'))(...args);\nApi.Helpers = (...args) => new (require('./lib/helpers'))(...args);\nApi.Instagram = (...args) => new (require('./lib/instagram'))(...args);\nApi.Jwt = (...args) => new (require('./lib/jwt'))(...args);\nApi.Pdf = (...args) => new (require('./lib/pdf'))(...args);\nApi.Roles = (...args) => new (require('./lib/roles'))(...args);\nApi.Schema = (...args) => new (require('./lib/schema'))(...args);\nApi.Settings = (...args) => new (require('./lib/settings'))(...args);\nApi.Shopify = (...args) => new (require('./lib/shopify'))(...args);\nApi.Taxonomy = (...args) => new (require('./lib/taxonomy'))(...args);\nApi.Tools = (...args) => new (require('./lib/tools'))(...args);\nApi.User = (...args) => new (require('./lib/user'))(...args);\n\nmodule.exports = Api;\n","const path = require('path');\n\nconst config = {\n  environment: process.env.ENVIRONMENT || 'development',\n  debug: process.env.DEBUG || false,\n\n  slug: process.env.SLUG,\n  baseUrl: process.env.BASE_URL || '',\n\n  db: {\n    url: process.env.DB_URL,\n    host: process.env.DB_HOST,\n    name: process.env.DB_NAME,\n    requestPlugin: process.env.DB_REQUEST_PLUGIN,\n    meterType: process.env.DB_METER_TYPE,\n  },\n\n  auth: {\n    superUserId: process.env.AUTH_SUPER_USER_ID,\n    tokenSecret: process.env.AUTH_TOKEN_SECRET || 'change_this_secret',\n  },\n\n  auth0: {\n    domain: process.env.AUTH0_DOMAIN,\n    audience: process.env.AUTH0_AUDIENCE,\n  },\n\n  dev: {\n    userId: process.env.DEV_USER_ID || 'dev',\n    role: process.env.DEV_ROLE || 'super',\n  },\n\n  cms: {\n    title: process.env.CMS_TITLE,\n    url: process.env.CMS_URL,\n  },\n\n  assist: {\n    url: process.env.ASSIST_URL,\n    username: process.env.ASSIST_USERNAME,\n    password: process.env.ASSIST_PASSWORD,\n  },\n\n  mailgun: {\n    apiKey: process.env.MAILGUN_API_KEY,\n    domain: process.env.MAILGUN_DOMAIN,\n  },\n\n  embedly: {\n    apiKey: process.env.EMBEDLY_API_KEY,\n  },\n\n  pdf: {\n    templatesPath: path.resolve(__dirname, 'pdf'),\n  },\n\n  email: {\n    templatesPath: path.resolve(__dirname, 'email'),\n  },\n\n  provider: {\n    google: {\n      clientId: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    },\n\n    instagram: {\n      clientId: process.env.INSTAGRAM_CLIENT_ID,\n      clientSecret: process.env.INSTAGRAM_CLIENT_SECRET,\n    },\n\n    spotify: {\n      clientId: process.env.SPOTIFY_CLIENT_ID,\n      clientSecret: process.env.SPOTIFY_CLIENT_SECRET,\n    },\n\n    twitter: {\n      consumerKey: process.env.TWITTER_CONSUMER_KEY,\n      consumerSecret: process.env.TWITTER_CONSUMER_SECRET,\n      accessTokenKey: process.env.TWITTER_ACCESS_TOKEN_KEY,\n      accessTokenSecret: process.env.TWITTER_ACCESS_TOKEN_SECRET,\n    },\n\n    vimeo: {\n      clientId: process.env.VIMEO_CLIENT_ID,\n      clientSecret: process.env.VIMEO_CLIENT_SECRET,\n    },\n  },\n};\n\nmodule.exports = config;\n","module.exports = require(\"password-hash\");","const _ = require('lodash');\nconst querystring = require('querystring');\nconst axios = require('axios');\nconst expressJwt = require('express-jwt');\nconst jwks = require('jwks-rsa');\nconst AuthenticationClient = require('auth0').AuthenticationClient;\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Jwt = require('./jwt');\nconst ErrorCode = require('./error-code');\n\nconst providerTokenUri = {\n  google: 'https://www.googleapis.com/oauth2/v4/token',\n  instagram: 'https://api.instagram.com/oauth/access_token',\n  vimeo: 'https://api.vimeo.com/oauth/access_token',\n  spotify: 'https://accounts.spotify.com/api/token',\n};\n\nclass Auth {\n  constructor(config) {\n    this.config = config;\n\n    this.jwtCheck = expressJwt({\n      secret: jwks.expressJwtSecret({\n        cache: true,\n        rateLimit: true,\n        jwksRequestsPerMinute: 5,\n        jwksUri:\n          'https://' + this.config.auth0.domain + '/.well-known/jwks.json',\n      }),\n      audience: this.config.auth0.audience,\n      issuer: 'https://' + this.config.auth0.domain + '/',\n      algorithms: ['RS256'],\n    });\n  }\n\n  async authUser(slug, accessToken) {\n    const auth0 = new AuthenticationClient({\n      domain: this.config.auth0.domain,\n    });\n\n    const auth0Profile = await auth0.getProfile(accessToken);\n\n    const userId = auth0Profile.email;\n\n    const isSuperUser =\n      _.get(this.config, 'auth.superUserId', '')\n        .split(',')\n        .map(superUser => superUser.trim())\n        .indexOf(userId) > -1;\n\n    let user;\n\n    if (isSuperUser) {\n      user = {\n        active: true,\n        role: 'super',\n      };\n    } else {\n      try {\n        const clientConfig = await Db.connect(this.config, slug).get('config');\n\n        user = _.find(\n          clientConfig.users,\n          user => user.email.toLowerCase() === userId.toLowerCase()\n        );\n      } catch (error) {\n        throw new ErrorCode(404, `Database not found: ${slug}`);\n      }\n    }\n\n    if (!user) {\n      throw new ErrorCode(401, `User not found: ${userId}`);\n    }\n\n    if (!user.active) {\n      throw new ErrorCode(401, `User not active: ${userId}`);\n    }\n\n    const payload = {\n      slug,\n      userId,\n      active: user.active,\n      role: user.role,\n    };\n\n    const jwt = new Jwt(this.config);\n\n    const apiToken = jwt.signToken(payload, {\n      // expiresIn: 7200,\n    });\n\n    return { ...payload, apiToken };\n  }\n\n  async authProvider(provider, params = {}, userId = null, refresh = false) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const providerConfig = _.merge(\n      {},\n      this.config.provider[provider],\n      params || {}\n    );\n\n    let providerClientConfig;\n\n    if (userId) {\n      providerClientConfig = _.get(clientConfig, [\n        'userSettings',\n        userId,\n        'provider',\n        provider,\n      ]);\n    } else {\n      providerClientConfig = _.get(clientConfig, ['provider', provider]);\n    }\n\n    if (!providerClientConfig) {\n      providerClientConfig = {};\n    }\n\n    const data = {\n      grant_type: refresh ? 'refresh_token' : 'authorization_code',\n      code: params && params.code ? params.code : undefined,\n      client_id: providerConfig.clientId,\n      client_secret: providerConfig.clientSecret,\n      redirect_uri: providerConfig.redirectUri,\n      refresh_token: refresh ? providerClientConfig.refresh_token : undefined,\n    };\n\n    const uri = providerTokenUri[provider];\n\n    let providerAuth;\n\n    try {\n      providerAuth = (await axios.post(uri, querystring.stringify(data))).data;\n    } catch (error) {\n      throw Error(JSON.stringify(error.response.data));\n    }\n\n    providerClientConfig = _.merge({}, providerClientConfig, providerAuth);\n    providerClientConfig.begins = Math.floor(new Date().getTime() / 1000);\n\n    if (provider === 'google') {\n      try {\n        providerClientConfig.user = (\n          await axios.get(\n            `https://www.googleapis.com/plus/v1/people/me?access_token=${providerClientConfig.access_token}`\n          )\n        ).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (provider === 'spotify') {\n      try {\n        providerClientConfig.user = (\n          await axios.get(\n            `https://api.spotify.com/v1/me?access_token=${providerClientConfig.access_token}`\n          )\n        ).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (userId) {\n      _.set(\n        clientConfig,\n        ['userSettings', userId, 'provider', provider],\n        providerClientConfig\n      );\n    } else {\n      _.set(clientConfig, ['provider', provider], providerClientConfig);\n    }\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = Auth;\n","module.exports = require(\"querystring\");","module.exports = require(\"express-jwt\");","module.exports = require(\"jwks-rsa\");","module.exports = require(\"auth0\");","module.exports = require(\"jsonwebtoken\");","class ErrorCode {\n  constructor(code, message) {\n    const error = Error(message);\n    error.code = code;\n    return error;\n  }\n}\n\nmodule.exports = ErrorCode;\n","const path = require('path');\nconst Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst _ = require('lodash');\nconst nodemailer = require('nodemailer');\nconst Createsend = Promise.promisifyAll(require('createsend-node'));\nconst nodemailerMailgunTransport = require('nodemailer-mailgun-transport');\nconst Inky = require('inky').Inky;\nconst mjml2html = require('mjml');\n// eslint-disable-next-line\nconst registerComponent = require('mjml-core').registerComponent;\n// eslint-disable-next-line\nconst registerDependencies = require('mjml-validator').registerDependencies;\nconst { McSection, McImage } = require('mjml-mailchimp');\nconst htmlToText = require('html-to-text');\nconst moment = require('moment');\nconst countries = require('i18n-iso-countries');\nconst sass = Promise.promisifyAll(require('node-sass'));\nconst pug = require('pug');\nconst juice = require('juice');\n\nconst ClientConfig = require('./client-config');\nconst Helpers = require('./helpers');\n\nclass Email {\n  constructor(config) {\n    this.config = config;\n\n    this.inky = new Inky();\n\n    registerComponent(McSection);\n    registerComponent(McImage);\n    registerDependencies({\n      'mc-section': ['mj-column', 'mj-group', 'mj-raw'],\n      'mj-column': ['mc-image'],\n      'mj-hero': ['mc-image'],\n    });\n  }\n\n  async getTemplate(templateSlug, templateData = {}, templateOptions = {}) {\n    const options = _.merge(\n      {},\n      {\n        inlineStyles: true,\n        inky: false,\n        mjml: false,\n        skipValidation: false,\n      },\n      templateOptions\n    );\n\n    let templatePath = path.join(this.config.email.templatesPath, templateSlug);\n\n    try {\n      await fs.statAsync(templatePath);\n    } catch (error) {\n      templatePath = path.resolve('../email', templateSlug);\n    }\n\n    const templateFiles = await fs.readdirAsync(templatePath);\n\n    let htmlFileName = 'html';\n    // Support mjml templates\n    if (_.find(templateFiles, fileName => /^html\\.mjml/.test(fileName))) {\n      htmlFileName = 'html.mjml';\n      options.mjml = true;\n    }\n\n    let htmlFileExtension = 'html';\n    if (_.find(templateFiles, fileName => /\\.pug$/.test(fileName))) {\n      htmlFileExtension = 'pug';\n    }\n\n    let style = '';\n    if (_.find(templateFiles, fileName => /^style\\.scss$/.test(fileName))) {\n      style = (\n        await sass.renderAsync({\n          file: path.join(templatePath, 'style.scss'),\n          sourceMapContents: !options.inlineStyles,\n          sourceMapEmbed: !options.inlineStyles,\n        })\n      ).css\n        .toString()\n        .replace(/\"/g, \"'\");\n    }\n\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n    const helpers = new Helpers(this.config);\n\n    templateData = _.merge({}, templateData, {\n      config: _.merge(\n        {},\n        _.pick(this.config, ['cms']),\n        _.pick(clientConfig, ['slug', 'client', 'assets'])\n      ),\n      helpers,\n      style,\n      moment,\n      countries,\n      templateSlug,\n    });\n\n    let html;\n    if (htmlFileExtension === 'html') {\n      html = fs.readFileAsync(\n        `${templatePath}/${htmlFileName}.${htmlFileExtension}`\n      );\n    }\n    if (htmlFileExtension === 'pug') {\n      html = pug.renderFile(\n        `${templatePath}/${htmlFileName}.${htmlFileExtension}`,\n        templateData\n      );\n    }\n\n    if (options.mjml) {\n      const convertMjmlResult = mjml2html(html, {\n        level: options.skipValidation ? 'skip' : 'soft',\n      });\n\n      if (convertMjmlResult.errors && convertMjmlResult.errors.length) {\n        throw Error(\n          _.uniq(\n            convertMjmlResult.errors.map(error => error.formattedMessage)\n          ).join('\\n')\n        );\n      }\n\n      html = convertMjmlResult.html;\n    }\n\n    if (options.inky) {\n      html = this.inky.releaseTheKraken(html);\n    }\n\n    if (options.inlineStyles) {\n      html = juice(html, {\n        preserveMediaQueries: true,\n        preserveFontFaces: true,\n        removeStyleTags: false,\n        removeLinkTags: false,\n        preserveImportant: true,\n        webResources: {\n          links: false,\n          scripts: false,\n          images: false,\n          // relativeTo: '',\n        },\n      });\n    }\n\n    return {\n      html,\n      text: htmlToText.fromString(html),\n    };\n  }\n\n  sendEmail(\n    emailOptions,\n    templateSlug,\n    templateData = {},\n    templateOptions = {}\n  ) {\n    return new Promise((resolve, reject) => {\n      const nodemailerMailgun = nodemailer.createTransport(\n        nodemailerMailgunTransport({\n          auth: {\n            api_key: this.config.mailgun.apiKey,\n            domain: this.config.mailgun.domain,\n          },\n        })\n      );\n\n      this.getTemplate(\n        templateSlug,\n        _.merge({}, emailOptions, templateData),\n        templateOptions\n      ).then(emailTemplate => {\n        emailOptions.html = emailTemplate.html;\n        emailOptions.text = emailTemplate.text;\n\n        nodemailerMailgun.sendMail(emailOptions, (error, metadata) => {\n          if (error) {\n            reject(error);\n            return;\n          }\n\n          resolve({\n            metadata,\n            email: emailOptions,\n          });\n        });\n      }, reject);\n    });\n  }\n\n  subscribe(details, provider, listId) {\n    return new Promise((resolve, reject) => {\n      const cc = new ClientConfig(this.config);\n\n      cc.get().then(clientConfig => {\n        if (provider === 'createsend') {\n          if (clientConfig.provider.createsend) {\n            const cs = new Createsend({\n              apiKey: clientConfig.provider.createsend.clientApiKey,\n            });\n\n            const subscribers = Promise.promisifyAll(cs.subscribers);\n\n            subscribers\n              .addSubscriberAsync(listId, {\n                EmailAddress: details.email,\n                Name: details.name,\n                Resubscribe: true,\n                RestartSubscriptionBasedAutoresponders: true,\n              })\n              .then(result => {\n                resolve(`Email.subscribe(): ${result.emailAddress}`);\n              })\n              .catch(error => {\n                reject(error.Message);\n              });\n\n            return;\n          }\n          reject(Error('Subscriber list not configured'));\n        }\n      }, reject);\n    });\n  }\n}\n\nmodule.exports = Email;\n","module.exports = require(\"nodemailer\");","module.exports = require(\"createsend-node\");","module.exports = require(\"nodemailer-mailgun-transport\");","module.exports = require(\"inky\");","module.exports = require(\"mjml\");","module.exports = require(\"mjml-core\");","module.exports = require(\"mjml-validator\");","module.exports = require(\"mjml-mailchimp\");","module.exports = require(\"html-to-text\");","module.exports = require(\"moment\");","module.exports = require(\"i18n-iso-countries\");","module.exports = require(\"node-sass\");","module.exports = require(\"pug\");","module.exports = require(\"juice\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst EmbedlyApi = require('embedly');\n\nclass Embedly {\n  constructor(config) {\n    this.config = config;\n  }\n\n  oembed(urls) {\n    return new Promise((resolve, reject) => {\n      const embedly = new EmbedlyApi({\n        key: this.config.embedly.apiKey,\n      });\n\n      const opts = {\n        urls: _.isArray(urls) ? urls : [urls],\n        format: 'json',\n      };\n\n      embedly.oembed(opts, (error, result) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(result);\n      });\n    });\n  }\n}\n\nmodule.exports = Embedly;\n","module.exports = require(\"embedly\");","module.exports = require(\"json-query\");","module.exports = require(\"deep-diff\");","const _ = require('lodash');\nconst request = require('request-promise');\n\nclass Instagram {\n  constructor(options) {\n    const defaultOptions = {\n      client_id: null,\n      access_token: null,\n      version: 'v1',\n      host: 'https://api.instagram.com',\n    };\n\n    this.options = _.merge({}, defaultOptions, options || {});\n  }\n\n  async _request(method, endpoint, query) {\n    const requestOptions = {\n      method,\n      url: [this.options.host, this.options.version, endpoint].join('/'),\n      qs: {\n        access_token: query.access_token || this.options.access_token,\n        client_id: query.client_id || this.options.client_id,\n      },\n    };\n\n    requestOptions.qs = _.extend({}, requestOptions.qs, query);\n\n    const response = await request(requestOptions);\n\n    return JSON.parse(response);\n  }\n\n  get(endpoint, query) {\n    return this._request('GET', endpoint, query);\n  }\n}\n\nmodule.exports = Instagram;\n","const fs = require('fs');\nconst path = require('path');\nconst _ = require('lodash');\nconst _eval = require('eval');\nconst request = require('request-promise');\nconst readdir = require('recursive-readdir');\nconst Entity = require('./entity');\nconst ClientConfig = require('./client-config');\n\nclass Pdf {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getTemplates() {\n    const templates = {};\n\n    const files = await readdir(this.config.pdf.templatesPath);\n\n    files.forEach(file => {\n      if (!/\\.js$/.test(file)) {\n        return;\n      }\n\n      const id = file\n        .replace(`${this.config.pdf.templatesPath}/`, '')\n        .replace('.js', '');\n\n      // eslint-disable-next-line\n      templates[id] = require(file);\n    });\n\n    return templates;\n  }\n\n  async getPayload(templateId, entityId, role) {\n    // if (!this.templates) {\n    //   this.templates = await this.getTemplates();\n    // }\n\n    // if (!this.templates[templateId]) {\n    //   throw Error('Template not found');\n    // }\n\n    const template = _eval(\n      fs.readFileSync(\n        path.join(this.config.pdf.templatesPath, `${templateId}.js`),\n        'utf-8'\n      ),\n      `${templateId}.js`,\n      {},\n      true\n    );\n\n    const entity = new Entity(this.config);\n\n    const entities = (\n      await entity.entityList([entityId], { children: 2, role })\n    ).map(row => row.doc);\n\n    if (entities.length === 0) {\n      throw Error('Entity not found');\n    }\n\n    const payload = template(Entity.flattenValues(entities)[0]);\n\n    return payload;\n  }\n\n  async getPdf(payload) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n    const assistPdfUrl = `${this.config.assist.url}/${assetSlug}/pdf/download`;\n\n    payload =\n      typeof payload === 'object'\n        ? JSON.stringify(payload).replace(/'/gi, '’')\n        : payload;\n\n    const response = await request({\n      method: 'POST',\n      uri: assistPdfUrl,\n      encoding: null,\n      form: {\n        payload,\n      },\n    });\n\n    return response;\n  }\n}\n\nmodule.exports = Pdf;\n","module.exports = require(\"eval\");","module.exports = require(\"recursive-readdir\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 70;","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass Settings {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async update(settings) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.client = _.merge({}, clientConfig.client, settings);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = Settings;\n","const axios = require('axios');\nconst he = require('he');\nconst Handlebars = require('handlebars');\nconst jsontoxml = require('jsontoxml');\n\nconst ClientConfig = require('./client-config');\n\nclass Shopify {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getCatalog({ shopLink, productLinkTemplate }) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const result = (\n      await axios({\n        url: `https://${clientConfig.provider.shopify.domain}.myshopify.com/api/graphql`,\n        method: 'post',\n        headers: {\n          'X-Shopify-Storefront-Access-Token':\n            clientConfig.provider.shopify.storefrontAccessToken,\n        },\n        data: {\n          query: `\n          query {\n            shop {\n              name\n              primaryDomain {\n                url\n              }\n              description\n              products(first: 250) {\n                edges {\n                  node {\n                    id\n                    handle\n                    title\n                    description\n                    onlineStoreUrl\n                    images(first: 1) {\n                      edges {\n                        node {\n                          originalSrc\n                          transformedSrc\n                        }\n                      }\n                    }\n                    productType\n                    vendor\n                    availableForSale\n                    priceRange {\n                      minVariantPrice {\n                        amount\n                        currencyCode\n                      }\n                      maxVariantPrice {\n                        amount\n                        currencyCode\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `,\n        },\n      })\n    ).data.data;\n\n    const template = Handlebars.compile(productLinkTemplate);\n\n    const products = result.shop.products.edges.map(edge => ({\n      'g:id': edge.node.handle,\n      'g:title': he.encode(edge.node.title),\n      'g:description': he.encode(edge.node.description),\n      // 'g:link': edge.node.onlineStoreUrl,\n      'g:link': template({ handle: edge.node.handle }),\n      'g:image_link': edge.node.images.edges[0].node.originalSrc,\n      'g:brand': edge.node.vendor,\n      'g:condition': 'new',\n      'g:availability': edge.node.availableForSale\n        ? 'in stock'\n        : 'out of stock',\n      'g:price': `${edge.node.priceRange.minVariantPrice.amount} ${edge.node.priceRange.minVariantPrice.currencyCode}`,\n      // 'g:google_product_category': he.encode(edge.node.productType),\n    }));\n\n    const channel = [\n      { name: 'title', text: result.shop.name },\n      // { name: 'link', text: result.shop.primaryDomain.url },\n      { name: 'link', text: shopLink },\n      { name: 'description', text: result.shop.description },\n    ];\n\n    products.forEach(product => {\n      channel.push({\n        name: 'item',\n        children: product,\n      });\n    });\n\n    return `<?xml version=\"1.0\"?>\n    <rss xmlns:g=\"http://base.google.com/ns/1.0\" version=\"2.0\">\n      ${jsontoxml({ channel })}\n    </rss>`;\n  }\n}\n\nmodule.exports = Shopify;\n","module.exports = require(\"he\");","module.exports = require(\"handlebars\");","module.exports = require(\"jsontoxml\");","const _ = require('lodash');\nconst Db = require('./db');\nconst ClientConfig = require('./client-config');\n\nclass Taxonomy {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async create(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.taxonomies.push(taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const taxonomy = _.find(clientConfig.taxonomies, { slug: taxonomySlug });\n\n    if (!taxonomy) {\n      throw Error(`Taxonomy not found: ${taxonomySlug}`);\n    }\n\n    return taxonomy;\n  }\n\n  async update(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.taxonomies, { slug: taxonomy.slug });\n\n    if (index === -1) {\n      throw Error(`Taxonomy not found: ${taxonomy.slug}`);\n    }\n\n    clientConfig.taxonomies.splice(index, 1, taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    taxonomySlug = _.isArray(taxonomySlug) ? taxonomySlug : [taxonomySlug];\n\n    clientConfig.taxonomies = clientConfig.taxonomies.filter(\n      taxonomy => taxonomySlug.indexOf(taxonomy.slug) === -1\n    );\n\n    return cc.set(clientConfig);\n  }\n\n  async entitiesByTerm(term) {\n    const db = Db.connect(this.config);\n\n    const entityGroups = (\n      await db.view('entity', 'byTaxonomyTerm', {\n        keys: [term.id],\n        group: true,\n      })\n    ).rows.map(row => row.value)[0];\n\n    if (!entityGroups) {\n      return [];\n    }\n\n    let entityIds = [];\n\n    _.forEach(entityGroups, entities => {\n      entityIds = entityIds.concat(entities);\n    });\n\n    entityIds = _.uniq(entityIds);\n\n    const entities = (\n      await db.fetch({ keys: entityIds, include_docs: true })\n    ).rows\n      .filter(row => row.doc)\n      .map(row => row.doc);\n\n    return entities;\n  }\n\n  async createTerm(taxonomySlug, term) {\n    const taxonomy = await this.read(taxonomySlug);\n\n    taxonomy.terms.push(term);\n\n    return this.update(taxonomy);\n  }\n\n  async updateTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map(entity => {\n      entity.fields = _.mapValues(entity.fields, field => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.map(_term => {\n            if (_term.id === term.id) {\n              _term.title = term.title;\n              _term.slug = term.slug;\n            }\n\n            if (!_term.parents) {\n              _term.parents = [];\n            }\n\n            _term.parents = _term.parents.map(parent => {\n              if (parent.id === term.id) {\n                parent.title = term.title;\n                parent.slug = term.slug;\n              }\n              return parent;\n            });\n\n            return _term;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n\n  async deleteTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map(entity => {\n      entity.fields = _.mapValues(entity.fields, field => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.filter(_term => {\n            if (_term.id === term.id) {\n              return false;\n            }\n\n            if (\n              (_term.parents || []).filter(parent => parent.id === term.id)\n                .length\n            ) {\n              return false;\n            }\n\n            return true;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n}\n\nmodule.exports = Taxonomy;\n","const Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst Cloudant = require('@cloudant/cloudant');\nconst Db = require('./db');\n\nclass Tools {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getDb() {\n    const result = await Db.connect(this.config).fetch({\n      include_docs: true,\n    });\n\n    return result;\n  }\n\n  async getChanges() {\n    const result = await Db.connect(this.config).changes({\n      limit: 50,\n      include_docs: true,\n      filter: 'entity/changes',\n    });\n\n    return result;\n  }\n\n  async importDb(dbBackupFile) {\n    const dbName = this.config.db.name;\n\n    const fileConents = await fs.readFileAsync(dbBackupFile.path);\n\n    const docs = JSON.parse(fileConents).rows.map(row => {\n      const { doc } = row;\n      delete doc._rev;\n      return doc;\n    });\n\n    await fs.unlinkAsync(dbBackupFile.path);\n\n    const cloudant = new Cloudant({\n      url: this.config.db.url,\n      plugins: ['promises', 'retry'],\n    }).db;\n\n    try {\n      await cloudant.destroy(dbName);\n    } catch (error) {\n      //\n    }\n\n    await cloudant.create(dbName);\n\n    const result = await Db.connect(this.config, dbName).bulk({ docs });\n\n    return result;\n  }\n}\n\nmodule.exports = Tools;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass User {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    user.id = user.id.toLowerCase();\n    user.email = user.email.toLowerCase();\n\n    clientConfig.users.push(user);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async update(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.users, { id: user.id });\n\n    if (index === -1) {\n      throw Error(`User not found: ${user.id}`);\n    }\n\n    user.email = user.email.toLowerCase();\n\n    clientConfig.users.splice(index, 1, user);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    userId = _.isArray(userId) ? userId : [userId];\n\n    clientConfig.users = clientConfig.users.filter(\n      user => userId.indexOf(user.id) === -1\n    );\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = User;\n","const config = {\n  environment: process.env.ENVIRONMENT || 'development',\n\n  api: {\n    prefix: process.env.API_PREFIX || '',\n    forceHttps: process.env.API_FORCE_HTTPS\n      ? JSON.parse(process.env.API_FORCE_HTTPS)\n      : false,\n    blacklistToken: (process.env.API_BLACKLIST_TOKEN || '').split(','),\n    blacklistReferrer: (process.env.API_BLACKLIST_REFERRER || '').split(','),\n  },\n\n  session: {\n    secret: process.env.SESSION_SECRET || 'change_me',\n    ttl: parseInt(process.env.SESSION_TTL || 7200, 10),\n  },\n\n  cache: {\n    enabled: process.env.CACHE_ENABLED\n      ? JSON.parse(process.env.CACHE_ENABLED)\n      : false,\n    ttl: parseInt(process.env.CACHE_TTL || 30, 10) * 60, // 30mins\n    compress: process.env.CACHE_COMPRESS\n      ? JSON.parse(process.env.CACHE_COMPRESS)\n      : false,\n    memory: {\n      max: parseInt(process.env.CACHE_MEMORY_MAX || 128, 10) * 1000 * 1000, // ~128mb\n    },\n  },\n\n  redis: {\n    url: process.env.REDIS_URL,\n    host: process.env.REDIS_HOST,\n    port: process.env.REDIS_PORT,\n    password: process.env.REDIS_PASSWORD,\n    db: parseInt(process.env.REDIS_DB || 0, 10),\n  },\n\n  logentriesToken: process.env.LOGENTRIES_TOKEN,\n};\n\nmodule.exports = config;\n","module.exports = ({\n  Analytics,\n  router,\n  authMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  router.get(\n    '/analytics.:ext?',\n    authMiddleware,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const analytics = Analytics(await getConfig());\n\n      try {\n        handleResponse(req, res, await analytics.get(req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = async ({\n  Auth,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  const config = await getConfig();\n  const auth = Auth(config);\n\n  router.get(\n    '/auth/user.:ext?',\n    auth.jwtCheck,\n    asyncMiddleware(async (req, res) => {\n      try {\n        const authUser = await auth.authUser(\n          req.query.slug,\n          req.headers.authorization.split(' ')[1]\n        );\n\n        handleResponse(req, res, authUser);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/auth/provider/:provider/config',\n    authMiddleware,\n    permissionMiddleware.bind(null, ['settings', 'userSettings']),\n    asyncMiddleware(async (req, res) => {\n      if (!config.provider[req.params.provider]) {\n        res.status(404);\n        res.send({});\n        return;\n      }\n\n      res.status(200);\n      res.send({ clientId: config.provider[req.params.provider].clientId });\n    })\n  );\n\n  router.get(\n    '/auth/provider/:provider',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    (req, res) => {\n      res.status(req.query.error ? 500 : 200);\n      res.send(\n        `${req.params.provider}: ${\n          req.query.error_description\n            ? req.query.error_description\n            : 'successfully authenticated'\n        }`\n      );\n    }\n  );\n\n  router.post(\n    '/auth/provider/:provider',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await auth.authProvider(req.params.provider, req.body)\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/auth/provider/:provider/refresh',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await auth.authProvider(req.params.provider, req.body, null, true)\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/auth/provider/:provider/:userId',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'userSettings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await auth.authProvider(\n            req.params.provider,\n            req.body,\n            req.params.userId\n          )\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/auth/provider/:provider/:userId/refresh',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await auth.authProvider(\n            req.params.provider,\n            req.body,\n            req.params.userId,\n            true\n          )\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const grant = require('grant-express');\n\nmodule.exports = async ({ app, getConfig }) => {\n  const config = await getConfig();\n\n  app.all('/connect*', (req, res, next) => {\n    grant({\n      defaults: {\n        origin: req.protocol + '://' + req.get('Host'),\n        // transport: 'session',\n        // state: true,\n      },\n      google: {\n        key: config.provider.google.clientId,\n        secret: config.provider.google.clientSecret,\n        scope: ['openid', 'profile', 'email'],\n        nonce: true,\n        custom_params: { access_type: 'offline' },\n        callback: config.cms.url + '/connect',\n      },\n      instagram: {\n        key: config.provider.instagram.clientId,\n        secret: config.provider.instagram.clientSecret,\n        scope: ['basic'],\n        nonce: true,\n        callback: config.cms.url + '/connect',\n      },\n      spotify: {\n        key: config.provider.spotify.clientId,\n        secret: config.provider.spotify.clientSecret,\n        scope: [\n          'user-read-email',\n          'user-top-read',\n          'user-read-recently-played',\n        ],\n        nonce: true,\n        callback: config.cms.url + '/connect',\n      },\n      vimeo: {\n        key: config.provider.vimeo.clientId,\n        secret: config.provider.vimeo.clientSecret,\n        scope: ['public', 'private', 'video_files'],\n        nonce: true,\n        callback: config.cms.url + '/connect',\n      },\n    })(req, res, next);\n  });\n};\n","module.exports = require(\"grant-express\");","module.exports = ({\n  router,\n  cache,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n}) => {\n  /**\n   * @swagger\n   * /cache/clear:\n   *  get:\n   *    tags:\n   *      - cache\n   *    summary: Clear cache\n   *    description: Clears the LRU cache of API responses\n   *    produces:\n   *      - text/plain\n   *    responses:\n   *      200:\n   *        description: Result\n   */\n  router.get(\n    '/cache/clear.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      if (!config.cache.enabled) {\n        handleResponse(req, res, 'Cache disabled');\n        return;\n      }\n\n      const pattern = cache.store.name === 'redis' ? '*' : undefined;\n\n      cache.keys(pattern).then(keys => {\n        const items = keys.filter(key => key.indexOf(req.session.slug) === 0);\n\n        items.forEach(key => cache.del(key));\n\n        handleResponse(req, res, `${items.length} items removed from cache`);\n      });\n    })\n  );\n};\n","const pick = require('lodash/pick');\n\nmodule.exports = ({\n  ClientConfig,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  router.get(\n    '/config/info.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(\n        await getConfig(req.query.slug || req.session.slug)\n      );\n\n      const clientInfo = pick(await clientConfig.get(), ['client.name']);\n\n      if (Object.keys(clientInfo).length === 0) {\n        handleError(req, res, Error('Account ID not found'));\n        return;\n      }\n\n      try {\n        handleResponse(req, res, clientInfo);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/config.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.get());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/config.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'config'),\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.set(req.body.config));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = require(\"lodash/pick\");","module.exports = ({ router }) => {\n  router.all('/debug/useragent.:ext?', (req, res) => {\n    const expressUseragent = require('express-useragent');\n    const useragent = expressUseragent.parse(req.headers['user-agent']);\n\n    res.status(200);\n    res.send(`\n      <html>\n        <head>\n          <title>${useragent.source}</title>\n          <meta name=\"description\" content=\"${useragent.source}\">\n        </head>\n        <body>${useragent.source}</body>\n      </html>\n    `);\n  });\n};\n","module.exports = require(\"express-useragent\");","module.exports = ({\n  Email,\n  Entity,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  /**\n   * @swagger\n   * /email/preview:\n   *  get:\n   *    tags:\n   *      - email\n   *    summary: Preview email template\n   * #   description: Preview email template\n   *    produces:\n   *      - text/html\n   *    parameters:\n   *      - name: slug\n   *        description: Slug (optionally override slug in development mode)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: templateSlug\n   *        description: Template slug (folder name of the template)\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: payload\n   *        description: JSON payload from which to render the template\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: entityId\n   *        description: Entity `_id` from which to render the template\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: inlineStyles\n   *        description: Inline CSS\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: true\n   *    responses:\n   *      200:\n   *        description: Template\n   */\n  router.all(\n    '/email/preview.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query || {};\n\n      const templateOptions = {\n        data: input.data ? JSON.parse(input.data) : false,\n        inlineStyles: input.inlineStyles\n          ? JSON.parse(input.inlineStyles)\n          : true,\n        inky: input.inky ? JSON.parse(input.inky) : false,\n        mjml: input.mjml ? JSON.parse(input.mjml) : false,\n        skipValidation: input.skipValidation\n          ? JSON.parse(input.skipValidation)\n          : false,\n      };\n\n      const slug = input.slug || req.session.slug;\n\n      // if (!slug) {\n      //   throw Error('Missing `slug` parameter');\n      // }\n\n      async function renderTemplate(data = {}) {\n        if (templateOptions.data) {\n          handleResponse(req, res, data);\n          return;\n        }\n\n        const email = Email(await getConfig(slug));\n\n        try {\n          const template = await email.getTemplate(\n            input.templateSlug,\n            data,\n            templateOptions\n          );\n\n          handleResponse(req, res, template.html);\n        } catch (error) {\n          handleError(req, res, error);\n        }\n      }\n\n      if (input.payload) {\n        renderTemplate(JSON.parse(input.payload));\n        return;\n      }\n\n      if (input.entityId) {\n        const entity = Entity(await getConfig(slug));\n\n        const entities = (\n          await entity.entityList([input.entityId], { children: 2 })\n        ).map(row => row.doc);\n\n        renderTemplate(entity.flattenValues(entities)[0]);\n        return;\n      }\n\n      renderTemplate();\n    })\n  );\n\n  router.all(\n    '/email/send.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query || {};\n\n      const templateOptions = {\n        inlineStyles: input.inlineStyles\n          ? JSON.parse(input.inlineStyles)\n          : true,\n        inky: input.inky ? JSON.parse(input.inky) : false,\n        mjml: input.mjml ? JSON.parse(input.mjml) : false,\n        skipValidation: input.skipValidation\n          ? JSON.parse(input.skipValidation)\n          : true,\n      };\n\n      const emailOptions = {\n        fromName: input.fromName || '',\n        fromEmail: input.fromEmail,\n        toName: input.toName || '',\n        toEmail: input.toEmail,\n        from: `${input.fromName || ''} <${input.fromEmail}>`,\n        to: input.toEmail,\n        subject: input.subject,\n      };\n\n      const slug = input.slug || req.session.slug;\n\n      const email = Email(await getConfig(slug));\n\n      try {\n        const result = await email.sendEmail(\n          emailOptions,\n          input.templateSlug,\n          input.payload,\n          templateOptions\n        );\n\n        handleResponse(req, res, result);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/email/subscribe.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const email = Email(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await email.subscribe({\n            email: req.body.email || req.query.email,\n            name: req.body.name || req.query.name || '',\n          })\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Embedly,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  router.get(\n    '/embedly/oembed.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const embedly = Embedly(await getConfig());\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await embedly.oembed(req.query.url || req.query.urls)\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const isArray = require('lodash/isArray');\n\nmodule.exports = ({\n  Db,\n  Entity,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  /**\n   * @swagger\n   * definitions:\n   *  Entity:\n   *    type: object\n   *    required:\n   *      - _id\n   *      - _rev\n   *    properties:\n   *      _id:\n   *        type: string\n   *      _rev:\n   *        type: string\n   *      schema:\n   *        type: string\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      thumbnail:\n   *        type: object\n   *      fields:\n   *        type: object\n   *      published:\n   *        type: boolean\n   *      publishedAt:\n   *        type: string\n   */\n\n  /**\n   * @swagger\n   * /entities/index:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Show indexes\n   *    description: Show all indexes, use this to find fields available for search/query.\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Indexes\n   */\n  router.get(\n    '/entities/index.:ext?',\n    asyncMiddleware(async (req, res) => {\n      try {\n        handleResponse(\n          req,\n          res,\n          await Db(await getConfig(req.session.slug)).indexAsync()\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/search:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Search entities\n   *    description: This endpoint extends Cloudant's Lucene based search. Learn more from Cloudant's [documentation](https://docs.cloudant.com/search.html).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: Lucene search query\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: include_docs\n   *        description: Include docs in search results (ignored if `children` or `parents` is `true`)\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: sort\n   *        description: Field to sort results by. Prefixed with `-` to reverse order. Suffixed with &#60;`string|number`&#62;\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: limit\n   *        description: Limit results (max 200)\n   *        in: query\n   *        required: false\n   *        type: number\n   *      - name: bookmark\n   *        description: Bookmark for the next page of results\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: group_field\n   *        description: Field to group results by\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: index\n   *        description: Search index\n   *        in: query\n   *        required: false\n   *        type: string\n   *        default: all\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: trashed\n   *        description: Get trashed entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Search result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            total_rows:\n   *              type: number\n   *            rows:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/search?.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      // eslint-disable-next-line\n      const include_docs =\n        input.include_docs !== undefined\n          ? JSON.parse(input.include_docs)\n          : false;\n\n      // eslint-disable-next-line\n      const include_fields =\n        input.include_fields !== undefined\n          ? typeof input.include_fields === 'object'\n            ? input.include_fields\n            : JSON.parse(input.include_fields)\n          : [];\n\n      const select = input.select !== undefined ? input.select : false;\n\n      let children =\n        input.children !== undefined\n          ? typeof input.children === 'object'\n            ? input.children\n            : JSON.parse(input.children)\n          : false;\n      let parents =\n        input.parents !== undefined\n          ? typeof input.parents === 'object'\n            ? input.parents\n            : JSON.parse(input.parents)\n          : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      const trashed =\n        input.trashed !== undefined ? JSON.parse(input.trashed) : false;\n\n      const sort = input.sort !== undefined ? input.sort : null;\n      const limit =\n        input.limit !== undefined ? parseInt(input.limit, 10) : null;\n\n      const bookmark = input.bookmark !== undefined ? input.bookmark : null;\n\n      // eslint-disable-next-line\n      const group_field =\n        input.group_field !== undefined ? input.group_field : null;\n\n      const index = input.index !== undefined ? input.index : null;\n\n      const q = input.query || input.q;\n\n      let query = [];\n\n      query.push(trashed ? 'trashed:true' : '!trashed:true');\n\n      if (req.session.role === 'guest') {\n        query.push('published:true');\n      }\n\n      if (q) {\n        query.push(`(${q})`);\n      }\n\n      query = query.join(' AND ');\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await entity.entitySearch(\n            {\n              query,\n              include_docs,\n              include_fields,\n              sort,\n              limit,\n              bookmark,\n              group_field,\n              index,\n            },\n            {\n              select,\n              children,\n              parents,\n              role: req.session.role,\n            }\n          ),\n          true\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/find:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Query entities\n   *    description: This endpoint extends CouchDB's Mango query. Learn more from Cloudant's [documentation](https://docs.cloudant.com/cloudant_query.html#finding-documents-using-an-index).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: JSON query object, refer to CouchDB/Cloudant docs.\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Query result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            docs:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/find.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      let children =\n        input.children !== undefined\n          ? typeof input.children === 'object'\n            ? input.children\n            : JSON.parse(input.children)\n          : false;\n      let parents =\n        input.parents !== undefined\n          ? typeof input.parents === 'object'\n            ? input.parents\n            : JSON.parse(input.parents)\n          : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      const trashed =\n        input.trashed !== undefined ? JSON.parse(input.trashed) : false;\n\n      const query = input.query ? JSON.parse(input.query) : { selector: {} };\n\n      query.use_index = ['entityIndex', 'entity'];\n\n      if (!query.selector.$and) {\n        query.selector = {\n          $and: [query.selector],\n        };\n      }\n\n      if (trashed) {\n        query.selector.$and.push({ trashed: true });\n      } else {\n        query.selector.$and.push({\n          $or: [\n            {\n              trashed: {\n                $exists: false,\n              },\n            },\n            {\n              trashed: false,\n            },\n          ],\n        });\n      }\n\n      if (req.session.role === 'guest') {\n        query.selector.$and.push({ published: true });\n      }\n\n      if (req.query.limit) {\n        query.limit = parseInt(req.query.limit, 10);\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await entity.entityFind(query, {\n            children,\n            parents,\n            role: req.session.role,\n          }),\n          true\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entities/field.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await entity.fieldValues(\n            req.query.slug || req.query.fieldSlug,\n            req.query.searchTerm\n          ),\n          true\n        );\n      } catch (error) {\n        handleError(res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Get all entities\n   *    description: Get all entities, optionally from an array of IDs\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: id\n   *        description: Entity ID\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: ids\n   *        description: Entity IDs\n   *        in: query\n   *        required: false\n   *        type: array\n   *        items:\n   *          type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Entities\n   *        schema:\n   *          type: array\n   *          items:\n   *            $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      const select = input.select !== undefined ? input.select : false;\n\n      let children =\n        input.children !== undefined\n          ? typeof input.children === 'object'\n            ? input.children\n            : JSON.parse(input.children)\n          : false;\n      let parents =\n        input.parents !== undefined\n          ? typeof input.parents === 'object'\n            ? input.parents\n            : JSON.parse(input.parents)\n          : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      let ids = input.ids || input.id;\n\n      if (ids) {\n        ids = isArray(ids) ? ids : [ids];\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await entity.entityList(ids, {\n            select,\n            children,\n            parents,\n            role: req.session.role,\n          }),\n          true\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity/revisions.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRevisions(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityCreate'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityCreate(req.body.entity));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRead(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await entity.entityUpdate(\n            req.body.entity || req.body.entities,\n            req.body.restore || false\n          )\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await entity.entityDelete(\n            req.body.entity || req.body.entities,\n            req.body.forever || false\n          )\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity/trashed.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityDelete('trashed'));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = require(\"lodash/isArray\");","module.exports = ({\n  ClientConfig,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  /**\n   * @swagger\n   * /metadata:\n   *  get:\n   *    tags:\n   *      - metadata\n   *    summary: Get metadata\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Metadata\n   *        schema:\n   *          type: object\n   *          properties:\n   *            description:\n   *              type: string\n   */\n  router.get(\n    '/metadata.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const cc = ClientConfig(await getConfig(req.session.slug));\n\n      const clientConfig = await cc.get();\n\n      try {\n        handleResponse(req, res, clientConfig.client.metadata, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const _ = require('lodash');\n\nmodule.exports = ({\n  Pdf,\n  ClientConfig,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleError,\n}) => {\n  router.get(\n    '/pdf/view.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf\n        .getPayload(req.query.template, req.query.id, req.session.role)\n        .then(payload => {\n          pdf.getPdf(payload).then(pdf => {\n            res.type('application/pdf');\n            res.status(200);\n            res.send(pdf);\n          }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/download.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf\n        .getPayload(req.query.template, req.query.id, req.session.role)\n        .then(payload => {\n          pdf.getPdf(payload).then(pdf => {\n            res.attachment(payload.fileName || 'download.pdf');\n            res.status(200);\n            res.send(pdf);\n          }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/payload.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf\n        .getPayload(req.query.template, req.query.id, req.session.role)\n        .then(payload => {\n          res.status(200);\n          res.json(payload);\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/submit.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig(req.session.slug);\n\n      const cc = ClientConfig(config);\n      const clientConfig = await cc.get();\n\n      const assetSlug = _.get(clientConfig, 'assets.slug', req.session.slug);\n\n      const pdf = Pdf(config);\n\n      pdf\n        .getPayload(req.query.template, req.query.id, req.session.role)\n        .then(payload => {\n          payload = JSON.stringify(payload).replace(/'/gi, '’');\n\n          res.status(200);\n          res.send(`\n          <body onload='form.submit()'>\n            <form id='form' method='POST' action='${config.assist.url}/${assetSlug}/pdf/download' target='_self'>\n              <input type='hidden' name='payload' value='${payload}' />\n            </form>\n          </body>\n        `);\n        }, handleError.bind(null, req, res));\n    })\n  );\n};\n","const _ = require('lodash');\nconst axios = require('axios');\n\nmodule.exports = ({\n  Auth,\n  ClientConfig,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  const providerApiBaseUrl = {\n    google: 'https://www.googleapis.com',\n    instagram: 'https://api.instagram.com',\n    spotify: 'https://api.spotify.com',\n    vimeo: 'https://api.vimeo.com',\n  };\n\n  const providerApiHandler = asyncMiddleware(async (req, res) => {\n    const method = req.method;\n    const provider = req.params[0];\n    const userId = req.params[2] ? req.params[1] : null;\n    const endpoint = (req.params[2] || req.params[1])\n      .split('/')\n      .filter(param => param !== '')\n      .join('/');\n\n    const config = await getConfig(req.session.slug);\n\n    const cc = ClientConfig(config);\n\n    let clientConfig = await cc.get();\n    let providerConfig;\n\n    if (userId) {\n      if (!clientConfig.userSettings[userId]) {\n        throw Error(`User settings not found: ${userId}`);\n      }\n      providerConfig = clientConfig.userSettings[userId].provider[provider];\n    } else {\n      providerConfig = clientConfig.provider[provider];\n    }\n\n    if (\n      Math.floor(new Date().getTime() / 1000) - (providerConfig.begins || 0) >\n      providerConfig.expires_in\n    ) {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      if (userId) {\n        clientConfig = await auth.authProvider(provider, {}, userId, true);\n        providerConfig = clientConfig.userSettings[userId].provider[provider];\n      } else {\n        clientConfig = await auth.authProvider(provider, {}, null, true);\n        providerConfig = clientConfig.provider[provider];\n      }\n    }\n\n    let params = _.merge({}, req.query);\n    params = _.omitBy(params, (value, key) => /^(__)/.test(key));\n\n    if (!/bearer/i.test(providerConfig.token_type)) {\n      params.access_token = providerConfig.access_token;\n    }\n\n    try {\n      const result = await axios.request({\n        url: endpoint,\n        baseURL: providerApiBaseUrl[provider],\n        method,\n        headers: {\n          Authorization: `Bearer ${providerConfig.access_token}`,\n        },\n        params,\n      });\n\n      handleResponse(req, res, result.data, true);\n    } catch (error) {\n      handleError(req, res, error);\n    }\n  });\n\n  router.all(\n    /\\/provider\\/([^/]+)\\/([^/]+)\\/api\\/?(.+)?/,\n    cacheMiddleware,\n    providerApiHandler\n  );\n\n  router.all(\n    /\\/provider\\/([^/]+)\\/api\\/?(.+)?/,\n    cacheMiddleware,\n    providerApiHandler\n  );\n};\n","module.exports = ({\n  Schema,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  router.post(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.create(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.read(req.query.schemaId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.update(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await schema.delete(\n            req.body.schemaSlug ||\n              req.body.schemaSlugs ||\n              req.query.schemaSlug ||\n              req.query.schemaSlugs\n          )\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schemas.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.updateAll(req.body.schemas));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Settings,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  router.post(\n    '/settings.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const settings = Settings(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await settings.update(req.body.settings));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Shopify,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  /**\n   * @swagger\n   * /shopify/catalog:\n   *  get:\n   *    tags:\n   *      - shopify\n   *    summary: Get Facebook product feed xml\n   * #   description: Get Facebook product feed xml\n   *    produces:\n   *      - application/rss+xml\n   *    parameters:\n   *      - name: shopLink\n   *        description: Shop URL\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: productLinkTemplate\n   *        description: Product URL Handlebars template, containing {{handle}}\n   *        in: query\n   *        required: true\n   *        type: string\n   *    responses:\n   *      200:\n   *        description: XML Product Feed\n   */\n  router.get(\n    '/shopify/catalog.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const shopify = Shopify(await getConfig(req.session.slug));\n\n      try {\n        res.setHeader('Content-Type', 'application/rss+xml');\n        handleResponse(req, res, await shopify.getCatalog(req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  ClientConfig,\n  Instagram,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  const instagramAccessTokenMap = {};\n\n  router.get(\n    /\\/social\\/twitter\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      const Promise = require('bluebird');\n      const Twitter = require('twitter');\n\n      const twitter = Promise.promisifyAll(\n        new Twitter({\n          consumer_key: config.provider.twitter.consumerKey,\n          consumer_secret: config.provider.twitter.consumerSecret,\n          access_token_key: config.provider.twitter.accessTokenKey,\n          access_token_secret: config.provider.twitter.accessTokenSecret,\n        })\n      );\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await twitter[`${method}Async`](params.join('/'), req.query),\n          true\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    /\\/social\\/instagram\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      let accessToken = instagramAccessTokenMap[req.session.slug];\n\n      if (!accessToken) {\n        const cc = ClientConfig(config);\n\n        try {\n          const clientConfig = await cc.get();\n          accessToken = clientConfig.provider.instagram.access_token;\n        } catch (error) {\n          handleError(res, Error('Instagram: access_token required'));\n          return;\n        }\n      }\n\n      // eslint-disable-next-line\n      instagramAccessTokenMap[req.session.slug] = accessToken;\n\n      const instagram = Instagram({\n        client_id: config.provider.instagram.clientId,\n      });\n\n      try {\n        const result = await instagram[method](params.join('/'), {\n          ...req.query,\n          access_token: accessToken,\n        });\n        try {\n          delete result.pagination.next_url;\n        } catch (error) {\n          //\n        }\n        handleResponse(req, res, result, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = require(\"twitter\");","module.exports = ({\n  Taxonomy,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  /**\n   * @swagger\n   * definitions:\n   *  TaxonomyTerm:\n   *    type: object\n   *    properties:\n   *      id:\n   *        type: string\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      terms:\n   *        type: array\n   *        items:\n   *          type: object\n   *          $ref: '#/definitions/TaxonomyTerm'\n   */\n\n  /**\n   * @swagger\n   * definitions:\n   *  Taxonomy:\n   *    type: object\n   *    properties:\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      terms:\n   *        type: array\n   *        items:\n   *          type: object\n   *          $ref: '#/definitions/TaxonomyTerm'\n   */\n\n  router.post(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.create(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /taxonomy:\n   *  get:\n   *    tags:\n   *      - taxonomy\n   *    summary: Get taxonomy\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Taxonomy slug\n   *        in: query\n   *        required: true\n   *        type: string\n   *    responses:\n   *      200:\n   *        description: Taxonomy\n   *        schema:\n   *          type: object\n   *          $ref: '#/definitions/Taxonomy'\n   */\n  router.get(\n    '/taxonomy.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await taxonomy.read(req.query.slug || req.query.taxonomySlug),\n          true\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.update(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await taxonomy.delete(\n            req.body.taxonomySlug ||\n              req.body.taxonomySlugs ||\n              req.query.taxonomySlug ||\n              req.query.taxonomySlugs\n          )\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await taxonomy.createTerm(\n            req.body.slug || req.body.taxonomySlug,\n            req.body.term\n          )\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await taxonomy.updateTerm(req.query.term || req.body.term)\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await taxonomy.deleteTerm(req.query.term || req.body.term)\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Jwt,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  // handleError,\n}) => {\n  /**\n   * @swagger\n   * /token:\n   *  get:\n   *    tags:\n   *      - token\n   *    summary: Get JWT\n   *    description: Get Json Web Token (JWT) for API access\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Slug for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: userId\n   *        description: User ID for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: role\n   *        description: Role for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: expiresIn\n   *        description: Duration of token in seconds\n   *        in: query\n   *        required: false\n   *        type: number\n   *    responses:\n   *      200:\n   *        description: Token\n   */\n\n  router.get(\n    '/token.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      const payload = {\n        role: req.session.role,\n        slug: req.session.slug,\n        userId: req.session.userId,\n      };\n\n      if (\n        req.session.role === 'super' ||\n        config.environment === 'development'\n      ) {\n        payload.role = req.query.role || req.session.role || config.dev.role;\n        payload.slug = req.query.slug || req.session.slug || config.dev.slug;\n        if (payload.role !== 'guest') {\n          payload.userId =\n            req.query.userId || req.session.userId || config.dev.userId;\n        }\n      }\n\n      const _ = require('lodash');\n\n      let options = _.pickBy(req.query, (value, key) =>\n        /^(expiresIn|notBefore|audience|issuer|jwtid|subject|noTimestamp|header)$/.test(\n          key\n        )\n      );\n\n      options = _.mapValues(options, value => {\n        if (!_.isNaN(+value)) {\n          // Check if value is a numeric string\n          return +value; // Convert numeric string to number\n        }\n        return value;\n      });\n\n      const jwt = Jwt(config);\n\n      const token = jwt.signToken(payload, options);\n\n      req.session.apiToken = token;\n\n      const response = {\n        token,\n        payload,\n        options,\n      };\n\n      handleResponse(req, res, response);\n    })\n  );\n};\n","module.exports = ({\n  Tools,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  router.get(\n    '/tools/export-db.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'tools'),\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        const db = await tools.getDb();\n\n        res.setHeader(\n          'Content-Disposition',\n          `attachment; filename=${req.session.slug}.json`\n        );\n        res.setHeader('Content-Type', 'application/json');\n        res.status(200);\n        res.send(db);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/tools/changes.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await tools.getChanges());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  User,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  router.post(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.create(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.read(req.query.userId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.update(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await user.delete(\n            req.body.userId ||\n              req.body.userIds ||\n              req.query.userId ||\n              req.query.userIds\n          )\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n"],"sourceRoot":""}