{"version":3,"sources":["webpack://AceApi/webpack/universalModuleDefinition","webpack://AceApi/webpack/bootstrap","webpack://AceApi/external \"lodash\"","webpack://AceApi/external \"@babel/runtime/helpers/interopRequireDefault\"","webpack://AceApi/external \"@babel/runtime/regenerator\"","webpack://AceApi/./lib/client-config.js","webpack://AceApi/./lib/db.js","webpack://AceApi/external \"bluebird\"","webpack://AceApi/./lib/helpers.js","webpack://AceApi/external \"path\"","webpack://AceApi/external \"axios\"","webpack://AceApi/external \"fs\"","webpack://AceApi/./lib/assist.js","webpack://AceApi/external \"@cloudant/cloudant\"","webpack://AceApi/./lib/roles.js","webpack://AceApi/./lib/email.js","webpack://AceApi/./lib/entity.js","webpack://AceApi/./lib/schema.js","webpack://AceApi/./lib/fields.js","webpack://AceApi/external \"request-promise\"","webpack://AceApi/./index.js","webpack://AceApi/./config.default.js","webpack://AceApi/external \"password-hash\"","webpack://AceApi/./lib/auth.js","webpack://AceApi/external \"querystring\"","webpack://AceApi/./lib/ecommerce.js","webpack://AceApi/external \"nodemailer\"","webpack://AceApi/external \"createsend-node\"","webpack://AceApi/external \"nodemailer-mailgun-transport\"","webpack://AceApi/external \"inky\"","webpack://AceApi/external \"mjml\"","webpack://AceApi/external \"mjml-core\"","webpack://AceApi/external \"mjml-validator\"","webpack://AceApi/external \"mjml-mailchimp\"","webpack://AceApi/external \"html-to-text\"","webpack://AceApi/external \"moment\"","webpack://AceApi/external \"i18n-iso-countries\"","webpack://AceApi/external \"node-sass\"","webpack://AceApi/external \"pug\"","webpack://AceApi/external \"ejs\"","webpack://AceApi/external \"juice\"","webpack://AceApi/./lib/embedly.js","webpack://AceApi/external \"embedly\"","webpack://AceApi/external \"@babel/runtime/helpers/objectSpread\"","webpack://AceApi/external \"json-query\"","webpack://AceApi/external \"deep-diff\"","webpack://AceApi/./lib/instagram.js","webpack://AceApi/./lib/jwt.js","webpack://AceApi/external \"jsonwebtoken\"","webpack://AceApi/./lib/pdf.js","webpack://AceApi/external \"eval\"","webpack://AceApi/external \"recursive-readdir\"","webpack://AceApi/./lib sync","webpack://AceApi/./lib/settings.js","webpack://AceApi/./lib/shippo.js","webpack://AceApi/external \"shippo\"","webpack://AceApi/./lib/shopify.js","webpack://AceApi/external \"he\"","webpack://AceApi/external \"handlebars\"","webpack://AceApi/external \"jsontoxml\"","webpack://AceApi/./lib/stripe.js","webpack://AceApi/external \"stripe\"","webpack://AceApi/external \"hashids\"","webpack://AceApi/./lib/taxonomy.js","webpack://AceApi/./lib/tools.js","webpack://AceApi/./lib/user.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","_","Db","Helpers","DEFAULT_CLIENT_CONFIG","_id","client","assets","schemas","taxonomies","users","roles","provider","constructor","config","this","clientConfig","_regenerator","default","async","_context","prev","next","awrap","connect","sent","merge","t0","slug","abrupt","stop","set","_context2","createOrUpdate","Cloudant","dbName","[object Object]","url","db","maxAttempt","plugins","retry","retryDelayMultiplier","retryInitialDelayMsecs","use","Promise","assistUrl","assist","doc","resolve","reject","insert","then","response","id","_rev","rev","error","statusCode","docs","chunkSize","promises","chunk","forEach","push","bulk","all","entities","groupSize","Infinity","grouped","group","entity","groupBefore","length","groupAfter","ratio","thumbnail","groupRatio","JSON","stringify","Date","replace","array","replacementObject","map","thumbnailSrc","settings","cropSlug","cropDefault","settingsArray","split","setting","crop","crops","x","y","x2","y2","g","join","settingsString","test","thumbnailType","ext","thumbnailUrl","axios","passwordHash","ClientConfig","deleteFiles","fileNames","cc","assetsSlug","result","post","auth","username","password","generate","data","permissions","entityGrid","entityCreate","entityRead","entityUpdate","entityDelete","taxonomyCreate","taxonomyRead","taxonomyUpdate","taxonomyDelete","fileCreate","fileRead","fileUpdate","fileDelete","schema","user","userSettings","tools","ecommerce","role","freeze","find","path","fs","promisifyAll","nodemailer","Createsend","nodemailerMailgunTransport","Inky","mjml2html","registerComponent","registerDependencies","McSection","McImage","htmlToText","moment","countries","sass","pug","ejs","juice","inky","mc-section","mj-column","mj-hero","getTemplate","templateSlug","templateData","templateOptions","options","templatePath","templateFiles","htmlFileName","htmlFileExtension","style","helpers","html","convertMjmlResult","inlineStyles","mjml","skipValidation","email","templatesPath","statAsync","readdirAsync","fileName","renderAsync","file","sourceMapContents","sourceMapEmbed","css","toString","pick","readFileAsync","renderFile","level","errors","Error","releaseTheKraken","preserveMediaQueries","preserveFontFaces","removeStyleTags","removeLinkTags","preserveImportant","webResources","links","scripts","images","text","fromString","sendEmail","emailOptions","nodemailerMailgun","createTransport","api_key","mailgun","apiKey","domain","emailTemplate","sendMail","metadata","subscribe","details","listId","createsend","cs","clientApiKey","subscribers","addSubscriberAsync","EmailAddress","Name","Resubscribe","RestartSubscriptionBasedAutoresponders","emailAddress","catch","Message","jsonQuery","diff","Schema","Assist","CHUNK_UPDATE_SIZE","Entity","flattenValues","fields","size","mapValues","field","type","isArray","filter","obj","undefined","published","childrenMap","omitBy","startsWith","rows","parents","entityMap","row","_objectSpread2","_filterEntityFields","uniqBy","uniq","fieldValues","fieldSlug","searchTerm","viewWithList","startkey","endkey","query","isFieldQuery","queryParts","trim","slice","locals","input","start","end","sample","sampleSize","paths","copy","pathParts","match","pathFrom","pathTo","allowRegexp","queryString","methodArgs","queries","emptyArgs","times","splice","_entitiesById","ids","include_docs","keys","view","_appendParents","children","limit","isNumber","_getDocMap","rowsOrDocs","docMap","childIds","childDocs","_context3","_childDepth","rowOrDoc","isRow","_queriesFromString","concat","flatten","_query","t1","_childDepthLimit","fieldQueryMap","_mergeDocs","_extendRowsOrDocs","_context4","select","_removeChildren","updatedEntities","indexOf","chunkUpdate","_updateChildren","title","entityList","_context5","_entitySearch","Math","min","sort","isString","include_fields","bookmark","index","group_field","search","groups","total_rows","hits","entitySearch","__entitySearch","clone","entityFind","_context6","updateEntityIndex","entityRevisions","entityId","revs_info","revisionIds","_revs_info","revision","status","open_revs","revisions","childrenIds","ok","fetch","console","_appendChildren","restore","entityIds","oldFileNames","_context7","entityOrEntityId","isObject","oldEntity","newEntity","mergeWith","a","b","trashed","forever","filesResult","entitiesResult","_context8","deleted","_fileNames","_deleted","files","Fields","read","schemaSlug","update","findIndex","delete","schemaSlugs","updateAll","ddoc","default_field","enabled","analyzer","selector","$and","fieldRef","dataType","Api","defaultConfig","args","Auth","Ecommerce","Email","Embedly","Instagram","Jwt","Pdf","Roles","Settings","Shippo","Shopify","Stripe","Taxonomy","Tools","User","environment","process","env","ENVIRONMENT","debug","DEBUG","SLUG","baseUrl","BASE_URL","DB_URL","host","DB_HOST","DB_NAME","requestPlugin","DB_REQUEST_PLUGIN","meterType","DB_METER_TYPE","superUserId","AUTH_SUPER_USER_ID","tokenSecret","AUTH_TOKEN_SECRET","dev","userId","DEV_USER_ID","DEV_ROLE","cms","CMS_TITLE","CMS_URL","ASSIST_URL","ASSIST_USERNAME","ASSIST_PASSWORD","MAILGUN_API_KEY","MAILGUN_DOMAIN","embedly","EMBEDLY_API_KEY","pdf","__dirname","google","clientId","GOOGLE_CLIENT_ID","clientSecret","GOOGLE_CLIENT_SECRET","instagram","INSTAGRAM_CLIENT_ID","INSTAGRAM_CLIENT_SECRET","spotify","SPOTIFY_CLIENT_ID","SPOTIFY_CLIENT_SECRET","stripe","STRIPE_CLIENT_ID","STRIPE_CLIENT_SECRET","STRIPE_API_KEY","twitter","consumerKey","TWITTER_CONSUMER_KEY","consumerSecret","TWITTER_CONSUMER_SECRET","accessTokenKey","TWITTER_ACCESS_TOKEN_KEY","accessTokenSecret","TWITTER_ACCESS_TOKEN_SECRET","vimeo","VIMEO_CLIENT_ID","VIMEO_CLIENT_SECRET","querystring","providerTokenUri","authoriseUser","superUser","active","authProvider","params","refresh","providerConfig","providerClientConfig","uri","providerAuth","grant_type","code","client_id","client_secret","redirect_uri","redirectUri","refresh_token","begins","floor","getTime","access_token","t2","getType","setType","item","deleteType","items","getOrder","orderId","body","verifyDiscount","discount","now","dateStart","parse","dateEnd","message","EmbedlyApi","oembed","urls","opts","format","request","version","endpoint","method","requestOptions","qs","extend","_request","jwt","signToken","payload","sign","verifyToken","token","verify","_eval","readdir","getTemplates","templates","getPayload","templateId","template","readFileSync","getPdf","assetSlug","assistPdfUrl","encoding","form","webpackEmptyContext","req","e","shippo","getQuote","address","parcel","addressFrom","object_purpose","zip","fromZip","country","fromCountry","addressTo","distance_unit","mass_unit","shipment","address_from","address_to","ratesReady","attempts","object_status","retrieve","object_id","val","rates","he","Handlebars","jsontoxml","getCatalog","shopLink","productLinkTemplate","products","channel","shopify","headers","X-Shopify-Storefront-Access-Token","storefrontAccessToken","compile","shop","edges","edge","g:id","node","handle","g:title","encode","g:description","description","g:link","g:image_link","originalSrc","g:brand","vendor","g:condition","g:availability","availableForSale","g:price","priceRange","minVariantPrice","amount","currencyCode","product","Hashids","hashids","getSettings","clientStripeAccountId","stripe_user_id","checkout","order","customerDetails","log","findOrCreateCustomer","customer","createOrder","updateOrCreateStripeCustomer","stripeCustomer","updateCustomer","createCharge","updatedOrder","sendReceipt","orderReceipt","messages","sendNotification","orderNotification","updateOrder","finalOrder","retrieveAccount","accounts","refund","refunds","refund_application_fee","charge","stripe_account","charges","amountRefunded","amount_refunded","newCustomer","createdAt","modifiedAt","phone","billingAddress","shippingAddress","orders","source","customer_id","customers","param","price","quantity","newOrder","shippingMethod","Number","subtotal","tax","rate","includedInPrice","total","show","currency","iso","toLowerCase","capture","order_id","statement_descriptor","kebabCase","storeName","toUpperCase","application_fee","ceil","paymentGateway","livemode","from","emailSenderName","emailSenderAddress","to","subject","taxonomy","taxonomySlug","entitiesByTerm","term","entityGroups","createTerm","terms","updateTerm","_term","parent","deleteTerm","getDb","getChanges","changes","importDb","dbBackupFile","fileConents","cloudant","unlinkAsync","destroy"],"mappings":"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","file":"api.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AceApi\"] = factory();\n\telse\n\t\troot[\"AceApi\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","module.exports = require(\"lodash\");","module.exports = require(\"@babel/runtime/helpers/interopRequireDefault\");","module.exports = require(\"@babel/runtime/regenerator\");","const _ = require('lodash');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Roles = require('./roles');\n\nconst roles = new Roles();\n\nconst DEFAULT_CLIENT_CONFIG = {\n  _id: 'config',\n  client: {},\n  assets: {},\n  schemas: [],\n  taxonomies: [],\n  users: [],\n  roles: roles.roles(),\n  provider: {},\n  module: {},\n};\n\nclass ClientConfig {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async get() {\n    let clientConfig = DEFAULT_CLIENT_CONFIG;\n\n    try {\n      clientConfig = await Db.connect(this.config).get('config');\n\n      clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n    } catch (error) {\n      //\n    }\n\n    clientConfig.slug = this.config.slug;\n\n    return clientConfig;\n  }\n\n  async set(clientConfig) {\n    clientConfig._id = 'config';\n\n    delete clientConfig.roles;\n\n    clientConfig = await Helpers.createOrUpdate(this.config, clientConfig);\n\n    clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n\n    return clientConfig;\n  }\n}\n\n\nmodule.exports = ClientConfig;\n","const Cloudant = require('@cloudant/cloudant');\n\nclass Db {\n  constructor (config, dbName) {\n    this.config = config;\n\n    return Db.connect(config, dbName);\n  }\n\n  static connect (config, dbName) {\n    const cloudant = new Cloudant({\n      url: config.db.url,\n      maxAttempt: 5,\n      plugins: [\n        'promises',\n        {\n          retry: {\n            retryDelayMultiplier: 2,\n            retryInitialDelayMsecs: 500,\n          },\n        },\n      ],\n    });\n\n    return cloudant.db.use(dbName || config.db.name);\n  }\n}\n\nmodule.exports = Db;\n","module.exports = require(\"bluebird\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\n\nclass Helpers {\n  constructor(config) {\n    this.config = config;\n    this.assistUrl = config.assist.url;\n    this.slug = config.slug;\n  }\n\n  static createOrUpdate (config, doc) {\n    return new Promise((resolve, reject) => {\n      Db.connect(config).insert(doc)\n        .then((response) => {\n          doc._id = response.id;\n          doc._rev = response.rev;\n          resolve(doc);\n        }, (error) => {\n          if (error.statusCode !== 409) {\n            reject(error);\n            return;\n          }\n\n          Db.connect(config).get(doc._id)\n            .then((response) => {\n              doc._rev = response._rev;\n\n              Db.connect(config).insert(doc)\n                .then((response) => {\n                  doc._rev = response.rev;\n                  resolve(doc);\n                }, reject);\n            }, reject);\n        });\n    });\n  }\n\n  static chunkUpdate (config, docs, chunkSize = 1000) {\n    return new Promise((resolve, reject) => {\n      const chunks = _.chunk(docs, chunkSize);\n      const promises = [];\n\n      chunks.forEach((chunk) => {\n        promises.push(new Promise((resolve, reject) => {\n          Db.connect(config).bulk({\n            docs: chunk,\n          }).then(resolve, reject);\n        }));\n      });\n\n      Promise.all(promises).then(resolve, reject);\n    });\n  }\n\n  static groupEntities (entities, groupSize = Infinity) {\n    const grouped = [];\n\n    let group = {\n      entities: [],\n    };\n\n    entities.forEach((entity) => {\n      if (!entity.groupBefore || group.entities.length >= groupSize) {\n        group = {\n          entities: [],\n        };\n      }\n\n      group.entities.push(entity);\n\n      if (!entity.groupAfter || group.entities.length >= groupSize) {\n        group.ratio = 0;\n\n        group.entities.forEach((entity) => {\n          group.ratio += (entity.thumbnail || entity).ratio;\n        });\n\n        group.entities.forEach((entity) => {\n          entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n        });\n\n        grouped.push(group);\n      }\n    });\n\n    return grouped;\n  }\n\n  static now () {\n    return JSON.stringify(new Date()).replace(/\"/g, '');\n  }\n\n  static replace (array, replacementObject, key) {\n    return array.map((object) => {\n      if (object[key] === replacementObject[key]) {\n        return replacementObject;\n      }\n      return object;\n    });\n  }\n\n  thumbnailSrc (thumbnail, settings, cropSlug, cropDefault) {\n    if (!thumbnail) {\n      return '';\n    }\n\n    let settingsArray;\n\n    if (typeof settings === 'string') {\n      settingsArray = settings.split(/,|;/);\n\n      settings = {};\n\n      settingsArray.forEach((setting) => {\n        setting = setting.split(/_|:/);\n\n        settings[setting[0]] = setting[1];\n      });\n    }\n\n    const crop = thumbnail.crops ? thumbnail.crops[cropSlug] : false;\n\n    if (crop) {\n      settings.x = crop[0];\n      settings.y = crop[1];\n      settings.x2 = crop[2];\n      settings.y2 = crop[3];\n    } else if (cropDefault) {\n      settings.g = cropDefault;\n    }\n\n    settingsArray = [];\n\n    _.forEach(settings, (value, key) => {\n      settingsArray.push([key, value].join(':'));\n    });\n\n    const settingsString = settingsArray.join(';');\n\n    if (/(image)/.test(thumbnail.thumbnailType)) {\n      if (thumbnail.ext === 'svg') {\n        return [this.assistUrl, this.slug, thumbnail.name + thumbnail.ext].join('/');\n      }\n\n      return [this.assistUrl, this.slug, 'transform', settingsString, thumbnail.name + thumbnail.ext].join('/');\n    }\n\n    if (/(video)/.test(thumbnail.thumbnailType)) {\n      return [this.assistUrl, this.slug, 'transform', settingsString, thumbnail.name, 'thumb.jpg'].join('/');\n    }\n\n    if (/(oembed|proxy)/.test(thumbnail.thumbnailType)) {\n      const thumbnailUrl = thumbnail.thumbnailUrl.replace(/https?:\\/\\//, '');\n\n      return [this.assistUrl, this.slug, 'proxy', 'transform', settingsString, thumbnailUrl].join('/');\n    }\n\n    return '';\n  }\n\n}\n\nmodule.exports = Helpers;\n","module.exports = require(\"path\");","module.exports = require(\"axios\");","module.exports = require(\"fs\");","const _ = require('lodash');\nconst axios = require('axios');\nconst passwordHash = require('password-hash');\nconst ClientConfig = require('./client-config');\n\nclass Assist {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async deleteFiles(fileNames) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetsSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n\n    if (fileNames.length === 0) {\n      return [];\n    }\n\n    const result = (await axios.post(`${this.config.assist.url}/${assetsSlug}/file/delete`, { fileNames }, {\n      auth: {\n        username: this.config.assist.username,\n        password: passwordHash.generate(this.config.assist.password),\n      },\n    })).data;\n\n    return result;\n  }\n\n}\n\nmodule.exports = Assist;\n","module.exports = require(\"@cloudant/cloudant\");","const _ = require('lodash');\n\nconst roles = [\n  {\n    name: 'Admin',\n    slug: 'admin',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: true,\n      settings: true,\n      userSettings: true,\n      tools: true,\n      ecommerce: true,\n    },\n  },\n  {\n    name: 'Editor',\n    slug: 'editor',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: true,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n  {\n    name: 'Guest',\n    slug: 'guest',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: false,\n      entityRead: true,\n      entityUpdate: false,\n      entityDelete: false,\n\n      taxonomyCreate: false,\n      taxonomyRead: true,\n      taxonomyUpdate: false,\n      taxonomyDelete: false,\n\n      fileCreate: false,\n      fileRead: true,\n      fileUpdate: false,\n      fileDelete: false,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: false,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n];\n\nclass Roles {\n  roles() {\n    return roles.map(role => Object.freeze(role));\n  }\n  role(slug) {\n    return _.find(this.roles(), { slug });\n  }\n}\n\nmodule.exports = Roles;\n","const path = require('path');\nconst Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst _ = require('lodash');\nconst nodemailer = require('nodemailer');\nconst Createsend = Promise.promisifyAll(require('createsend-node'));\nconst nodemailerMailgunTransport = require('nodemailer-mailgun-transport');\nconst Inky = require('inky').Inky;\nconst mjml2html = require('mjml').default;\n// eslint-disable-next-line\nconst registerComponent = require('mjml-core').registerComponent;\n// eslint-disable-next-line\nconst registerDependencies = require('mjml-validator').registerDependencies;\nconst { McSection, McImage } = require('mjml-mailchimp');\nconst htmlToText = require('html-to-text');\nconst moment = require('moment');\nconst countries = require('i18n-iso-countries');\nconst sass = Promise.promisifyAll(require('node-sass'));\nconst pug = require('pug');\nconst ejs = require('ejs');\nconst juice = require('juice');\n\nconst ClientConfig = require('./client-config');\nconst Helpers = require('./helpers');\n\nclass Email {\n  constructor(config) {\n    this.config = config;\n\n    this.inky = new Inky();\n\n    registerComponent(McSection);\n    registerComponent(McImage);\n    registerDependencies({\n      'mc-section': ['mj-column', 'mj-group', 'mj-raw'],\n      'mj-column': ['mc-image'],\n      'mj-hero': ['mc-image'],\n    });\n  }\n\n  async getTemplate(templateSlug, templateData = {}, templateOptions = {}) {\n    const options = _.merge({}, {\n      inlineStyles: true,\n      inky: false,\n      mjml: false,\n      skipValidation: false,\n    }, templateOptions);\n\n    let templatePath = path.join(this.config.email.templatesPath, templateSlug);\n\n    try {\n      await fs.statAsync(templatePath);\n    } catch (error) {\n      templatePath = path.resolve('../email', templateSlug);\n    }\n\n    const templateFiles = await fs.readdirAsync(templatePath);\n\n    let htmlFileName = 'html';\n    // Support mjml templates\n    if (_.find(templateFiles, fileName => /^html\\.mjml/.test(fileName))) {\n      htmlFileName = 'html.mjml';\n      options.mjml = true;\n    }\n\n    let htmlFileExtension = 'html';\n    if (_.find(templateFiles, fileName => /\\.pug$/.test(fileName))) {\n      htmlFileExtension = 'pug';\n    }\n    if (_.find(templateFiles, fileName => /\\.ejs$/.test(fileName))) {\n      htmlFileExtension = 'ejs';\n    }\n\n    let style = '';\n    if (_.find(templateFiles, fileName => /^style\\.scss$/.test(fileName))) {\n      style = (await sass.renderAsync({\n        file: path.join(templatePath, 'style.scss'),\n        sourceMapContents: !options.inlineStyles,\n        sourceMapEmbed: !options.inlineStyles,\n      })).css.toString().replace(/\"/g, '\\'');\n    }\n\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n    const helpers = new Helpers(this.config);\n\n    templateData = _.merge({}, templateData, {\n      config: _.merge({}, _.pick(this.config, ['cms']), _.pick(clientConfig, ['slug', 'client', 'assets'])),\n      helpers,\n      style,\n      moment,\n      countries,\n      templateSlug,\n    });\n\n    let html;\n    if (htmlFileExtension === 'html') {\n      html = fs.readFileAsync(`${templatePath}/${htmlFileName}.${htmlFileExtension}`);\n    }\n    if (htmlFileExtension === 'pug') {\n      html = pug.renderFile(`${templatePath}/${htmlFileName}.${htmlFileExtension}`, templateData);\n    }\n    if (htmlFileExtension === 'ejs') {\n      html = await ejs.renderFile(`${templatePath}/${htmlFileName}.${htmlFileExtension}`, templateData);\n    }\n\n    if (options.mjml) {\n      const convertMjmlResult = mjml2html(html, {\n        level: options.skipValidation ? 'skip' : 'soft',\n      });\n\n      if (convertMjmlResult.errors && convertMjmlResult.errors.length) {\n        throw new Error(convertMjmlResult.errors);\n      }\n\n      html = convertMjmlResult.html;\n    }\n\n    if (options.inky) {\n      html = this.inky.releaseTheKraken(html);\n    }\n\n    if (options.inlineStyles) {\n      html = juice(html, {\n        preserveMediaQueries: true,\n        preserveFontFaces: true,\n        removeStyleTags: false,\n        removeLinkTags: false,\n        preserveImportant: true,\n        webResources: {\n          links: false,\n          scripts: false,\n          images: false,\n          // relativeTo: '',\n        },\n      });\n    }\n\n    return {\n      html,\n      text: htmlToText.fromString(html),\n    };\n  }\n\n  sendEmail(emailOptions, templateSlug, templateData = {}, templateOptions = {}) {\n    return new Promise((resolve, reject) => {\n      const nodemailerMailgun = nodemailer.createTransport(nodemailerMailgunTransport({\n        auth: {\n          api_key: this.config.mailgun.apiKey,\n          domain: this.config.mailgun.domain,\n        },\n      }));\n\n      this.getTemplate(templateSlug, _.merge({}, emailOptions, templateData), templateOptions)\n        .then((emailTemplate) => {\n          emailOptions.html = emailTemplate.html;\n          emailOptions.text = emailTemplate.text;\n\n          nodemailerMailgun.sendMail(emailOptions, (error, metadata) => {\n            if (error) {\n              reject(error);\n              return;\n            }\n\n            resolve({\n              metadata,\n              email: emailOptions,\n            });\n          });\n        }, reject);\n    });\n  }\n\n  subscribe(details, provider, listId) {\n    return new Promise((resolve, reject) => {\n      const cc = new ClientConfig(this.config);\n\n      cc.get()\n        .then((clientConfig) => {\n          if (provider === 'createsend') {\n            if (clientConfig.provider.createsend) {\n              const cs = new Createsend({\n                apiKey: clientConfig.provider.createsend.clientApiKey,\n              });\n\n              const subscribers = Promise.promisifyAll(cs.subscribers);\n\n              subscribers.addSubscriberAsync(listId, {\n                EmailAddress: details.email,\n                Name: details.name,\n                Resubscribe: true,\n                RestartSubscriptionBasedAutoresponders: true,\n              })\n                .then((result) => {\n                  resolve(`Email.subscribe(): ${result.emailAddress}`);\n                })\n                .catch((error) => {\n                  reject(error.Message);\n                });\n\n              return;\n            }\n            reject(new Error('Subscriber list not configured'));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Email;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst jsonQuery = require('json-query');\nconst { diff } = require('deep-diff');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Schema = require('./schema');\nconst Assist = require('./assist');\n\nconst CHUNK_UPDATE_SIZE = 1000;\n\nclass Entity {\n  constructor(config) {\n    this.config = config;\n\n    // Expose helpers\n    this.flattenValues = Entity.flattenValues;\n  }\n\n  static flattenValues(docs) {\n    return docs.map((doc) => {\n      if (!doc.fields || !_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (/entity/.test(field.type) && _.isArray(field.value)) { // entity / entityTile / entityGrid\n          field.value = Entity.flattenValues(field.value);\n        }\n        return field.value;\n      });\n\n      return doc;\n    });\n  }\n\n  static _filterEntityFields(docs, role = 'guest') {\n    const isArray = _.isArray(docs);\n\n    docs = (isArray ? docs : [docs]).map((doc) => {\n      if (_.size(doc.fields)) {\n        doc.fields = _.mapValues(doc.fields, (field) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter((obj) => {\n              if (!obj) {\n                return false;\n              }\n              if (obj.type && obj.type === 'entity' && role === 'guest') {\n                return obj.published !== undefined ? obj.published : true;\n              }\n              return true;\n            });\n          }\n          return field;\n        });\n      }\n      return doc;\n    });\n\n    return isArray ? docs : docs[0];\n  }\n\n  static _appendChildren(docs, childrenMap) {\n    return docs.map((doc) => {\n      if (!_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (_.isArray(field.value)) {\n          field.value = field.value.filter((obj) => {\n            if (!obj) {\n              return false;\n            }\n            if (obj.type === 'entity') {\n              return childrenMap[obj.id] !== undefined;\n            }\n            return true;\n          });\n\n          field.value = field.value.map((obj) => {\n            if (obj.type === 'entity') {\n              obj = _.merge(obj, childrenMap[obj.id]);\n            }\n            obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n            return obj;\n          });\n        }\n\n        return field;\n      });\n\n      return doc;\n    });\n  }\n\n  static _appendParents(rows, parents = null, role = 'guest') {\n    let entityMap = {};\n\n    rows.forEach((row) => {\n      if (row.doc && row.value.type === 'entity') {\n        entityMap[row.id] = { ...row.doc, parents: [] };\n      }\n    });\n\n    if (parents) {\n      rows.forEach((row) => {\n        if (row.doc && row.value.type === 'parent') {\n          entityMap[row.key].parents.push(Entity._filterEntityFields(row.doc, role));\n        }\n      });\n\n      entityMap = _.mapValues(entityMap, (entity) => {\n        entity.parents = _.uniqBy(entity.parents, entity => entity._id);\n        return entity;\n      });\n    }\n\n    rows = rows.map((row) => {\n      row.doc = entityMap[row.id];\n      return row;\n    });\n\n    rows = rows.filter(row => row.value.type === 'entity');\n\n    return rows;\n  }\n\n  static _fileNames(entities) {\n    const fileNames = [];\n\n    entities.forEach((entity) => {\n      _.forEach(entity.fields, (field) => {\n        if (field.value && field.value.file) {\n          fileNames.push(field.value.file.name);\n        }\n      });\n    });\n\n    return _.uniq(fileNames);\n  }\n\n  async fieldValues(fieldSlug, searchTerm) {\n    const result = await Db.connect(this.config).viewWithList('entity', 'byField', 'search', {\n      startkey: [fieldSlug],\n      endkey: [fieldSlug, {}],\n      group: true,\n      searchTerm,\n    });\n    return result;\n  }\n\n  static _query(data, query, isFieldQuery = false) {\n    query = query.replace(/(\\s\\s|\\t|\\r|\\n)/g, '');\n\n    if (isFieldQuery) {\n      const queryParts = query.trim().split(/\\[|\\]/);\n      const selector = `fields.${queryParts[0]}.value[${queryParts[1] || '*'}]`;\n      const modifier = /\\]:/.test(query) ? `:${query.split(/\\]:/).slice(-1)[0].trim()}` : '';\n      query = `${selector}${modifier}`;\n    }\n\n    const result = jsonQuery(query, {\n      data,\n      locals: {\n        slice: (input, start, end) => _.slice(input, start, end),\n        sample: (input, size = 1) => _.sampleSize(input, size),\n        group: (entities, groupSize = Infinity) => {\n          const grouped = [];\n\n          let group = [];\n\n          entities.forEach((entity) => {\n            if (!entity.groupBefore || group.length >= groupSize) {\n              group = [];\n            }\n\n            group.push(entity);\n\n            if (!entity.groupAfter || group.length >= groupSize) {\n              group.ratio = 0;\n\n              group.forEach((entity) => {\n                group.ratio += (entity.thumbnail || entity).ratio;\n              });\n\n              group.forEach((entity) => {\n                entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n              });\n\n              grouped.push(group);\n            }\n          });\n\n          return grouped;\n        },\n        pick: (input, ...paths) => _.map(input, (obj) => {\n          const copy = {\n            id: obj.id || undefined,\n          };\n          paths = paths.filter(path => path); // Remove empty paths (tolerate trailing comma in args)\n          paths.forEach((path) => {\n            const pathParts = path.match(/([^\\s]+)/g);\n            const pathFrom = pathParts[0];\n            const pathTo = pathParts[pathParts.length - 1];\n            _.set(copy, pathTo, _.get(obj, pathFrom));\n          });\n          return copy;\n        }),\n      },\n      allowRegexp: true,\n    });\n\n    return result;\n  }\n\n  static _queriesFromString(queryString) {\n    // Remove white space\n    queryString = queryString.replace(/(\\s\\s|\\t|\\r|\\n)/gm, '');\n\n    // Match and store (...args) from query so we can split by comma\n    const methodArgs = queryString.match(/\\(([^)]+)\\)/g);\n\n    // Replace (...args) with empty ()\n    queryString = queryString.replace(/\\(.*?\\)/g, '()');\n\n    // Extract queries\n    let queries = queryString.split(/,(?![^([]*[\\])])/g);\n\n    queries = queries.map((query) => {\n      // Replace () with original (...args)\n      const emptyArgs = query.match(/\\(\\)/g);\n      if (emptyArgs) {\n        _.times(emptyArgs.length, () => {\n          query = query.replace('()', methodArgs.splice(0, 1));\n        });\n      }\n      return query.trim();\n    });\n\n    return queries;\n  }\n\n  async _entitiesById(ids = [], options = {}) {\n    options = _.merge({\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    const query = {\n      include_docs: true,\n    };\n\n    if (ids.length) {\n      query.keys = ids;\n    }\n\n    const result = await Db.connect(this.config)\n      .view('entity', options.parents ? 'byIdExtended' : 'byId', query);\n\n    result.rows = result.rows.map((row) => {\n      row.doc = Entity._filterEntityFields(row.doc, options.role);\n      return row;\n    });\n\n    result.rows = Entity._appendParents(result.rows, options.parents, options.role);\n\n    return result;\n  }\n\n  static _childDepthLimit(children) {\n    let limit = 0;\n    if (_.isNumber(children)) {\n      limit = children - 1;\n    }\n    if (_.isArray(children)) {\n      limit = children.length - 1;\n    }\n    return limit;\n  }\n\n  async _getDocMap(rowsOrDocs, docMap = {}, options = {}) {\n    options._childDepth = options._childDepth || 0;\n\n    if (!options.parents && !options.children) {\n      return docMap;\n    }\n\n    let ids = [];\n    let childIds = [];\n\n    rowsOrDocs.forEach((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      let doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      doc = Entity._filterEntityFields(doc, options.role);\n\n      if (options.children && doc.fields && _.size(doc.fields)) {\n        if (_.isArray(options.children)) {\n          Entity._queriesFromString(options.children[options._childDepth]).forEach((query) => {\n            childIds = childIds.concat(_.flatten(Entity._query(doc, query, true).value).map(obj => obj && obj.id));\n          });\n\n        } else {\n          _.forEach(doc.fields, (field) => {\n            if (_.isArray(field.value)) {\n              field.value = field.value.filter(obj => obj);\n\n              field.value.forEach((obj) => {\n                if (obj.id) {\n                  childIds.push(obj.id);\n                }\n              });\n            }\n          });\n        }\n      }\n\n      ids.push(isRow ? rowOrDoc.id : doc._id || doc.id);\n    });\n\n    ids = _.uniq(ids);\n    ids = ids.filter(id => !docMap[id]);\n\n    let docs = [];\n    if (ids.length > 0) {\n      docs = (await this._entitiesById(ids, options)).rows.map(row => row.doc);\n\n      docs.forEach((doc) => {\n        docMap[doc._id] = doc;\n      });\n    }\n\n    childIds = _.uniq(childIds);\n    childIds = childIds.filter(id => !docMap[id]);\n\n    let childDocs = [];\n    if (childIds.length > 0) {\n      childDocs = (await this._entitiesById(childIds, { ...options, parents: false })).rows.map(row => row.doc);\n\n      childDocs.forEach((doc) => {\n        docMap[doc._id] = doc;\n      });\n    }\n\n    if (!options.children || (options._childDepth === Entity._childDepthLimit(options.children))) {\n      return docMap;\n    }\n\n    docMap = await this._getDocMap(childDocs, docMap, { ...options, parents: false, _childDepth: options._childDepth + 1 });\n\n    return docMap;\n  }\n\n  static _mergeDocs(docs, docMap, options = { children: false, parents: false }) {\n    options._childDepth = options._childDepth || 0;\n\n    if (options.children && (options._childDepth - 1 === Entity._childDepthLimit(options.children))) {\n      return docs;\n    }\n\n    docs = docs.map((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      let doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (docMap[rowOrDoc.id || rowOrDoc._id]) {\n        doc = _.merge({}, doc, docMap[rowOrDoc.id || rowOrDoc._id]);\n      }\n\n      if (options.children && doc.fields && _.size(doc.fields)) {\n\n        let fieldQueryMap;\n\n        if (_.isArray(options.children)) {\n          fieldQueryMap = {};\n          Entity._queriesFromString(options.children[options._childDepth]).forEach((query) => {\n            const key = query.split(/\\[|\\]/)[0];\n            fieldQueryMap[key] = query;\n          });\n        }\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter(obj => obj);\n\n            if (!fieldQueryMap || (fieldQueryMap && fieldQueryMap[fieldSlug])) {\n              if (fieldQueryMap && fieldQueryMap[fieldSlug]) {\n                field.value = field.value.filter(obj => obj.id && docMap[obj.id]);\n              }\n\n              field.value = field.value.map((obj) => {\n                if (obj && obj.id && docMap[obj.id]) {\n                  obj = _.merge(obj, docMap[obj.id] || {});\n                  obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n                }\n                return obj;\n              });\n\n              field.value = Entity._mergeDocs(field.value, docMap, { ...options, _childDepth: options._childDepth + 1 });\n            }\n          }\n          return field;\n        });\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            if (fieldQueryMap && fieldQueryMap[fieldSlug]) {\n              field.value = _.flatten(Entity._query(doc, fieldQueryMap[fieldSlug], true).value);\n            }\n          }\n          return field;\n        });\n      }\n\n      if (_.isArray(options.parents) && doc.parents) {\n        doc.parents = _.flatten(Entity._query(doc.parents, options.parents[0]).value);\n      }\n\n      if (isRow) {\n        rowOrDoc.doc = doc;\n      } else {\n        rowOrDoc = doc;\n      }\n\n      return rowOrDoc;\n    });\n\n    return docs;\n  }\n\n  async _extendRowsOrDocs(rowsOrDocs, options = {}) {\n    options = _.merge({\n      select: false,\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    let docMap = await this._getDocMap(rowsOrDocs, {}, options);\n\n    rowsOrDocs = Entity._mergeDocs(rowsOrDocs, docMap, options);\n\n    if (options.select) {\n      rowsOrDocs = _.flatten(Entity._query(rowsOrDocs, options.select).value);\n    }\n\n    docMap = null;\n\n    return rowsOrDocs;\n  }\n\n  _removeChildren(entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      entities = entities.map(entity => entity._id);\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const updatedEntities = _.uniqBy(response.rows, row => row.doc._id).map((row) => {\n            row.doc.fields = _.mapValues(row.doc.fields, (field) => {\n              if (_.isArray(field.value)) {\n                field.value = _.filter(field.value, obj => !(obj.type === 'entity' && entities.indexOf(obj.id) !== -1));\n              }\n              return field;\n            });\n\n            return row.doc;\n          });\n\n          if (updatedEntities.length === 0) {\n            resolve([]);\n            return;\n          }\n\n          Helpers.chunkUpdate(this.config, updatedEntities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  _updateChildren(entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      const entityMap = {};\n\n      entities = entities.map((entity) => {\n        entityMap[entity._id] = entity;\n\n        return entity._id;\n      });\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const entities = response.rows.map((row) => {\n            const entity = row.doc;\n\n            _.forEach(entity.fields, (field, fieldSlug) => {\n              if (_.isArray(field.value)) {\n                entity.fields[fieldSlug].value = field.value\n                  .filter(obj => obj)\n                  .map((obj) => {\n                    if (obj.type === 'entity' && entityMap[obj.id]) {\n                      obj.slug = entityMap[obj.id].slug;\n                      obj.title = entityMap[obj.id].title;\n                      obj.schema = entityMap[obj.id].schema;\n                      obj.published = entityMap[obj.id].published;\n\n                      if (entityMap[obj.id].thumbnail) {\n                        obj.thumbnail = entityMap[obj.id].thumbnail;\n                      } else {\n                        obj.thumbnail = null;\n                      }\n                    }\n\n                    return obj;\n                  });\n              }\n            });\n\n            return entity;\n          });\n\n          Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  async entityList(ids = [], options = {}) {\n    options = _.merge({\n      select: false,\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    const result = await this._entitiesById(ids, options);\n\n    const rows = await this._extendRowsOrDocs(result.rows, options);\n\n    return rows;\n  }\n\n  _entitySearch(query, options = {}) {\n    return new Promise((resolve, reject) => {\n      query.limit = Math.min(query.limit || 200, 200);\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      if (options.children) {\n        query.include_docs = true;\n      }\n\n      if (!query.include_fields) {\n        query.include_fields = [];\n      }\n\n      if (_.isArray(query.include_fields)) {\n        query.include_fields = JSON.stringify(query.include_fields);\n      }\n\n      if (!query.sort) {\n        delete query.sort;\n      }\n      if (!query.bookmark) {\n        delete query.bookmark;\n      }\n      if (!query.index) {\n        delete query.index;\n      }\n      if (!query.group_field) {\n        delete query.group_field;\n      }\n\n      Db.connect(this.config).search('entity', query.index || 'all', query)\n        .then((result) => {\n\n          if (result.groups) {\n            const promises = [];\n\n            result.groups = result.groups.map((group) => {\n              promises.push(new Promise((resolve, reject) => {\n                if ((!options.children && !options.parents) || group.total_rows === 0) {\n                  resolve();\n                  return;\n                }\n\n                this._extendRowsOrDocs(group.hits, options)\n                  .then((docs) => {\n                    group.hits = docs;\n\n                    resolve();\n                  }, reject);\n              }));\n              return group;\n            });\n\n            Promise.all(promises)\n              .then(() => {\n                resolve(result);\n              }, reject);\n\n            return;\n          }\n\n          this._extendRowsOrDocs(result.rows, options)\n            .then((docs) => {\n              result.rows = docs;\n\n              resolve(result);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entitySearch(query, options = {}) {\n    options = _.merge({\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    return new Promise((resolve, reject) => {\n      const limit = query.limit || 25;\n\n      if (limit <= 200) {\n        this._entitySearch(query, options)\n          .then(resolve, reject);\n        return;\n      }\n\n      let rows = [];\n      let groups = [];\n\n      function __entitySearch(bookmark) {\n        const _query = _.clone(query);\n\n        if (bookmark) {\n          _query.bookmark = bookmark;\n        }\n\n        this._entitySearch(_query, options)\n          .then((result) => {\n            if (result.rows) {\n              rows = rows.concat(result.rows);\n            }\n            if (result.groups) {\n              groups = groups.concat(result.groups);\n            }\n\n            if (rows.length < result.total_rows && rows.length < limit) {\n              __entitySearch.call(this, result.bookmark);\n              return;\n            }\n\n            result.rows = rows;\n            result.groups = groups;\n\n            resolve(result);\n          }, reject);\n      }\n\n      __entitySearch.call(this);\n    });\n  }\n\n  async entityFind(query, options = {}) {\n    options = _.merge({\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    let result;\n\n    try {\n      result = await Db.connect(this.config).find(query);\n    } catch (error) {\n      if (error.error === 'no_usable_index') {\n        const cc = new ClientConfig(this.config);\n        const clientConfig = await cc.get();\n\n        const schema = new Schema(this.config);\n        await schema.updateEntityIndex(clientConfig.schemas);\n\n        result = await Db.connect(this.config).find(query);\n      }\n    }\n\n    if (options.children === false) {\n      return result;\n    }\n\n    if (query.fields && query.fields.indexOf('_id') === -1) {\n      throw new Error('_id field required for `children`');\n    }\n\n    result.docs = await this._extendRowsOrDocs(result.docs, options);\n\n    return result;\n  }\n\n  entityRevisions(entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId, {\n        revs_info: true,\n      })\n        .then((response) => {\n          const revisionIds = [];\n\n          response._revs_info.forEach((revision) => {\n            if (revision.status === 'available') {\n              revisionIds.push(revision.rev);\n            }\n          });\n\n          Db.connect(this.config).get(entityId, {\n            open_revs: JSON.stringify(revisionIds),\n          })\n            .then((response) => {\n              const revisions = [];\n              const childrenIds = [];\n\n              response.forEach((revision) => {\n                if (revision.ok) {\n                  revisions.push(revision.ok);\n\n                  _.forEach(revision.ok.fields, (field) => {\n                    if (/entity/.test(field.type)) {\n                      _.forEach(field.value, (obj) => {\n                        if (obj.id) {\n                          childrenIds.push(obj.id);\n                        }\n                      });\n                    }\n                  });\n                }\n              });\n\n              Db.connect(this.config).fetch({\n                keys: _.uniq(childrenIds),\n                include_docs: true,\n              })\n                .then((result) => {\n                  const childrenMap = {};\n\n                  result.rows.forEach((row) => {\n                    try {\n                      childrenMap[row.doc._id] = row.doc;\n                    } catch (error) {\n                      console.error('Error: child no longer exists');\n                    }\n                  });\n\n                  resolve(Entity._appendChildren(revisions, childrenMap));\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entityCreate(entity) {\n    return new Promise((resolve, reject) => {\n      entity.type = 'entity';\n\n      Db.connect(this.config).insert(entity)\n        .then((response) => {\n          entity._id = response.id;\n          entity._rev = response.rev;\n\n          resolve(entity);\n        }, reject);\n    });\n  }\n\n  entityRead(entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId)\n        .then(resolve, reject);\n    });\n  }\n\n  async entityUpdate(entities, restore) {\n    entities = _.isArray(entities) ? entities : [entities];\n\n    const entityMap = {};\n\n    const entityIds = entities.map((entityOrEntityId) => {\n      let entityId;\n\n      if (_.isObject(entityOrEntityId)) {\n        entityId = entityOrEntityId._id;\n        entityMap[entityId] = entityOrEntityId;\n      }\n      if (_.isString(entityOrEntityId)) {\n        entityId = entityOrEntityId;\n      }\n\n      return entityId;\n    });\n\n    const response = await Db.connect(this.config).fetch({\n      keys: entityIds,\n      include_docs: true,\n    });\n\n    const children = [];\n    const oldFileNames = [];\n\n    entities = response.rows.map((row) => {\n      const oldEntity = row.doc;\n      const newEntity = entityMap[oldEntity._id];\n\n      let entity = oldEntity;\n\n      if (newEntity) {\n        delete newEntity._rev;\n\n        const diffs = diff(oldEntity, newEntity);\n\n        diffs.forEach((diff) => {\n\n          // If any reference fields have changed, update all references\n          if (/published|slug|title|thumbnail/.test(diff.path[0])) {\n            if (children.indexOf(newEntity) === -1 && entityIds.indexOf(newEntity._id) !== -1) {\n              children.push(newEntity);\n            }\n          }\n\n          // If any file fields have changed, remove the old file\n          if (diff.path[0] === 'fields' && diff.path[2] === 'value') {\n            const field = oldEntity.fields[diff.path[1]];\n            if (/attachment|image|audio|video/.test(field.type) && field.value) {\n              oldFileNames.push(field.value.file.name);\n            }\n          }\n\n        });\n\n        entity = _.mergeWith({}, oldEntity, newEntity, (a, b) => {\n          if (_.isArray(a) && _.isArray(b)) {\n            return b;\n          }\n          return undefined;\n        });\n      }\n\n      if (restore) {\n        entity.trashed = false;\n      }\n\n      return entity;\n    });\n\n    if (oldFileNames.length) {\n      // TODO: fix delete orphaned files\n      // const assist = new Assist(this.config);\n      // await assist.deleteFiles(oldFileNames);\n    }\n\n    if (children.length) {\n      await this._updateChildren(children);\n    }\n\n    const result = await Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE);\n\n    return result;\n  }\n\n  async entityDelete(entityIds, forever = false) {\n    let entities;\n    let filesResult;\n\n    if (entityIds === 'trashed') {\n      forever = true;\n\n      entities = (await Db.connect(this.config).view('entity', 'trashed', {\n        include_docs: true,\n      })).rows;\n\n    } else {\n      entities = (await Db.connect(this.config).fetch({\n        keys: _.isArray(entityIds) ? entityIds : [entityIds],\n        include_docs: true,\n      })).rows;\n    }\n\n    entities = entities.filter(entity => !entity.value || !entity.value.deleted);\n\n    entities = entities.map(entity => entity.doc);\n\n    await this._removeChildren(entities);\n\n    if (forever) {\n      const fileNames = Entity._fileNames(entities);\n\n      if (fileNames.length) {\n        const assist = new Assist(this.config);\n        filesResult = await assist.deleteFiles(fileNames);\n      }\n\n      entities = entities.map(entity => ({\n        _id: entity._id,\n        _rev: entity._rev,\n        _deleted: true,\n      }));\n\n    } else {\n      entities = entities.map((entity) => {\n        entity.trashed = true;\n        return entity;\n      });\n    }\n\n    const entitiesResult = await Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE);\n\n    return {\n      entities: entitiesResult,\n      files: filesResult,\n    };\n  }\n\n}\n\nmodule.exports = Entity;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Fields = require('./fields');\n\nclass Schema {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas.push(schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(schemaSlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const schema = _.find(clientConfig.schemas, { slug: schemaSlug });\n\n    if (!schema) {\n      throw Error(`Schema not found: ${schemaSlug}`);\n    }\n\n    return schema;\n  }\n\n  async update(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.schemas, { slug: schema.slug });\n\n    if (index === -1) {\n      throw Error(`Schema not found: ${schema.slug}`);\n    }\n\n    clientConfig.schemas.splice(index, 1, schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(schemaSlugs) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    schemaSlugs = _.isArray(schemaSlugs) ? schemaSlugs : [schemaSlugs];\n\n    clientConfig.schemas = clientConfig.schemas.filter(schema => schemaSlugs.indexOf(schema.slug) === -1);\n\n    clientConfig.schemas = clientConfig.schemas.map((schema) => {\n      if (!schema.fields) {\n        return schema;\n      }\n      schema.fields = schema.fields.map((field) => {\n        if (!field.settings) {\n          return field;\n        }\n        if (field.settings.schemas) {\n          field.settings.schemas = field.settings.schemas.filter(schema => schemaSlugs.indexOf(schema) === -1);\n        }\n        return field;\n      });\n      return schema;\n    });\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateAll(schemas) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas = schemas;\n\n    // await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateEntityIndex(schemas) {\n    let fields = [];\n\n    schemas.forEach((schema) => {\n      fields = fields.concat(schema.fields);\n    });\n\n    fields = _.uniqBy(fields, 'slug');\n\n    const index = {\n      name: 'entity',\n      type: 'text',\n      ddoc: 'entityIndex',\n      index: {\n        default_field: {\n          enabled: true,\n          analyzer: 'standard',\n        },\n        selector: {\n          $and: [\n            {\n              type: 'entity',\n            },\n          ],\n        },\n        fields: [\n          {\n            name: 'published',\n            type: 'boolean',\n          },\n          {\n            name: 'trashed',\n            type: 'boolean',\n          },\n          {\n            name: 'title',\n            type: 'string',\n          },\n          {\n            name: 'slug',\n            type: 'string',\n          },\n          {\n            name: 'schema',\n            type: 'string',\n          },\n          {\n            name: 'modifiedAt',\n            type: 'string',\n          },\n          {\n            name: 'publishedAt',\n            type: 'string',\n          },\n        ],\n      },\n    };\n\n    fields.forEach((field) => {\n      const fieldRef = Fields.field(field.type);\n\n      if (/number|string|boolean/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value`,\n          type: fieldRef.dataType,\n        });\n      }\n\n      if (/array/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.[].slug`,\n          type: 'string',\n        });\n      }\n\n      if (/taxonomy/.test(field.type)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.terms.[].slug`,\n          type: 'string',\n        });\n      }\n    });\n\n    const result = await Db.connect(this.config).index(index);\n\n    return result;\n  }\n\n}\n\nmodule.exports = Schema;\n","const _ = require('lodash');\n\nconst fields = [\n  {\n    type: 'attachment',\n    name: 'Attachment',\n    dataType: null,\n  },\n  {\n    type: 'audio',\n    name: 'Audio',\n    dataType: null,\n  },\n  {\n    type: 'checkbox',\n    name: 'Checkbox',\n    dataType: 'boolean',\n  },\n  {\n    type: 'color',\n    name: 'Color',\n    dataType: 'string',\n  },\n  {\n    type: 'date',\n    name: 'Date',\n    dataType: 'string',\n  },\n  {\n    type: 'embedly',\n    name: 'Embedly',\n    dataType: null,\n  },\n  {\n    type: 'entity',\n    name: 'Entity',\n    dataType: 'array',\n  },\n  {\n    type: 'entityGrid',\n    name: 'Entity Grid',\n    dataType: 'array',\n  },\n  {\n    type: 'entityTile',\n    name: 'Entity Tile',\n    dataType: 'array',\n  },\n  {\n    type: 'image',\n    name: 'Image',\n    dataType: null,\n  },\n  {\n    type: 'keyValue',\n    name: 'Key Value',\n    dataType: null,\n  },\n  {\n    type: 'number',\n    name: 'Number',\n    dataType: 'number',\n  },\n  {\n    type: 'richText',\n    name: 'Rich Text',\n    dataType: null,\n  },\n  {\n    type: 'select',\n    name: 'Select',\n    dataType: 'array',\n  },\n  {\n    type: 'taxonomy',\n    name: 'Taxonomy',\n    dataType: null,\n  },\n  {\n    type: 'text',\n    name: 'Text',\n    dataType: 'string',\n  },\n  {\n    type: 'textArea',\n    name: 'Text Area',\n    dataType: 'string',\n  },\n  {\n    type: 'user',\n    name: 'User',\n    dataType: 'array',\n  },\n  {\n    type: 'video',\n    name: 'Video',\n    dataType: null,\n  },\n  {\n    type: 'vimeo',\n    name: 'Vimeo',\n    dataType: null,\n  },\n];\n\nclass Fields {\n  static fields() {\n    return fields.map(field => Object.freeze(field));\n  }\n  static field(type) {\n    return _.find(Fields.fields(), { type });\n  }\n}\n\nmodule.exports = Fields;\n","module.exports = require(\"request-promise\");","function Api() { }\n\nApi.defaultConfig = require('./config.default');\n\nApi.Assist = (...args) => new (require('./lib/assist'))(...args);\nApi.Auth = (...args) => new (require('./lib/auth'))(...args);\nApi.ClientConfig = (...args) => new (require('./lib/client-config'))(...args);\nApi.Db = (...args) => new (require('./lib/db'))(...args);\nApi.Ecommerce = (...args) => new (require('./lib/ecommerce'))(...args);\nApi.Email = (...args) => new (require('./lib/email'))(...args);\nApi.Embedly = (...args) => new (require('./lib/embedly'))(...args);\nApi.Entity = (...args) => new (require('./lib/entity'))(...args);\nApi.Fields = (...args) => new (require('./lib/fields'))(...args);\nApi.Helpers = (...args) => new (require('./lib/helpers'))(...args);\nApi.Instagram = (...args) => new (require('./lib/instagram'))(...args);\nApi.Jwt = (...args) => new (require('./lib/jwt'))(...args);\nApi.Pdf = (...args) => new (require('./lib/pdf'))(...args);\nApi.Roles = (...args) => new (require('./lib/roles'))(...args);\nApi.Schema = (...args) => new (require('./lib/schema'))(...args);\nApi.Settings = (...args) => new (require('./lib/settings'))(...args);\nApi.Shippo = (...args) => new (require('./lib/shippo'))(...args);\nApi.Shopify = (...args) => new (require('./lib/shopify'))(...args);\nApi.Stripe = (...args) => new (require('./lib/stripe'))(...args);\nApi.Taxonomy = (...args) => new (require('./lib/taxonomy'))(...args);\nApi.Tools = (...args) => new (require('./lib/tools'))(...args);\nApi.User = (...args) => new (require('./lib/user'))(...args);\n\nmodule.exports = Api;\n","const path = require('path');\n\nconst config = {\n  environment: process.env.ENVIRONMENT || 'development',\n  debug: process.env.DEBUG || false,\n\n  slug: process.env.SLUG,\n  baseUrl: process.env.BASE_URL || '',\n\n  db: {\n    url: process.env.DB_URL,\n    host: process.env.DB_HOST,\n    name: process.env.DB_NAME,\n    requestPlugin: process.env.DB_REQUEST_PLUGIN,\n    meterType: process.env.DB_METER_TYPE,\n  },\n\n  auth: {\n    superUserId: process.env.AUTH_SUPER_USER_ID,\n    tokenSecret: process.env.AUTH_TOKEN_SECRET || 'change_this_secret',\n  },\n\n  dev: {\n    userId: process.env.DEV_USER_ID || 'dev',\n    role: process.env.DEV_ROLE || 'super',\n  },\n\n  cms: {\n    title: process.env.CMS_TITLE,\n    url: process.env.CMS_URL,\n  },\n\n  assist: {\n    url: process.env.ASSIST_URL,\n    username: process.env.ASSIST_USERNAME,\n    password: process.env.ASSIST_PASSWORD,\n  },\n\n  mailgun: {\n    apiKey: process.env.MAILGUN_API_KEY,\n    domain: process.env.MAILGUN_DOMAIN,\n  },\n\n  embedly: {\n    apiKey: process.env.EMBEDLY_API_KEY,\n  },\n\n  pdf: {\n    templatesPath: path.resolve(__dirname, 'pdf'),\n  },\n\n  email: {\n    templatesPath: path.resolve(__dirname, 'email'),\n  },\n\n  provider: {\n    google: {\n      clientId: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    },\n\n    instagram: {\n      clientId: process.env.INSTAGRAM_CLIENT_ID,\n      clientSecret: process.env.INSTAGRAM_CLIENT_SECRET,\n    },\n\n    spotify: {\n      clientId: process.env.SPOTIFY_CLIENT_ID,\n      clientSecret: process.env.SPOTIFY_CLIENT_SECRET,\n    },\n\n    stripe: {\n      clientId: process.env.STRIPE_CLIENT_ID,\n      clientSecret: process.env.STRIPE_CLIENT_SECRET,\n      apiKey: process.env.STRIPE_API_KEY,\n    },\n\n    twitter: {\n      consumerKey: process.env.TWITTER_CONSUMER_KEY,\n      consumerSecret: process.env.TWITTER_CONSUMER_SECRET,\n      accessTokenKey: process.env.TWITTER_ACCESS_TOKEN_KEY,\n      accessTokenSecret: process.env.TWITTER_ACCESS_TOKEN_SECRET,\n    },\n\n    vimeo: {\n      clientId: process.env.VIMEO_CLIENT_ID,\n      clientSecret: process.env.VIMEO_CLIENT_SECRET,\n    },\n  },\n};\n\nmodule.exports = config;\n","module.exports = require(\"password-hash\");","const _ = require('lodash');\nconst querystring = require('querystring');\nconst axios = require('axios');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\n\nconst providerTokenUri = {\n  google: 'https://www.googleapis.com/oauth2/v4/token',\n  instagram: 'https://api.instagram.com/oauth/access_token',\n  stripe: 'https://connect.stripe.com/oauth/token',\n  vimeo: 'https://api.vimeo.com/oauth/access_token',\n  spotify: 'https://accounts.spotify.com/api/token',\n};\n\nclass Auth {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async authoriseUser(slug, userId) {\n    const isSuperUser = this.config.auth.superUserId.split(',').map(superUser => superUser.trim()).indexOf(userId) > -1;\n\n    if (isSuperUser) {\n      return {\n        id: userId,\n        role: 'super',\n      };\n    }\n\n    const clientConfig = await Db.connect(this.config, slug).get('config');\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    if (!user.active) {\n      throw Error(`User not active: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async authProvider(provider, params = {}, userId = null, refresh = false) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const providerConfig = _.merge({}, this.config.provider[provider], params || {});\n\n    let providerClientConfig;\n\n    if (userId) {\n      providerClientConfig = _.get(clientConfig, ['userSettings', userId, 'provider', provider], {});\n    } else {\n      providerClientConfig = _.get(clientConfig, ['provider', provider], {});\n    }\n\n    const data = {\n      grant_type: refresh ? 'refresh_token' : 'authorization_code',\n      code: params && params.code ? params.code : undefined,\n      client_id: providerConfig.clientId,\n      client_secret: providerConfig.clientSecret,\n      redirect_uri: providerConfig.redirectUri,\n      refresh_token: providerClientConfig.refresh_token,\n    };\n\n    const uri = providerTokenUri[provider];\n\n    let providerAuth;\n\n    try {\n      providerAuth = (await axios.post(uri, querystring.stringify(data))).data;\n    } catch (error) {\n      throw new Error(JSON.stringify(error.response.data));\n    }\n\n    providerClientConfig = _.merge({}, providerClientConfig, providerAuth);\n    providerClientConfig.begins = Math.floor(new Date().getTime() / 1000);\n\n    if (provider === 'google') {\n      try {\n        providerClientConfig.user = (await axios.get(`https://www.googleapis.com/plus/v1/people/me?access_token=${providerClientConfig.access_token}`)).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (provider === 'spotify') {\n      try {\n        providerClientConfig.user = (await axios.get(`https://api.spotify.com/v1/me?access_token=${providerClientConfig.access_token}`)).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (userId) {\n      _.set(clientConfig, ['userSettings', userId, 'provider', provider], providerClientConfig);\n    } else {\n      _.set(clientConfig, ['provider', provider], providerClientConfig);\n    }\n\n    return cc.set(clientConfig);\n  }\n\n}\n\nmodule.exports = Auth;\n","module.exports = require(\"querystring\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass Ecommerce {\n  constructor(config) {\n    this.config = config;\n  }\n\n  getType(type, query) {\n    return new Promise((resolve, reject) => {\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      Db.connect(this.config).search('ecommerce', type, query)\n        .then(resolve, reject);\n    });\n  }\n\n  setType(type, item) {\n    return new Promise((resolve, reject) => {\n      item.type = type;\n\n      Helpers.createOrUpdate(this.config, item)\n        .then(resolve, reject);\n    });\n  }\n\n  deleteType(items) {\n    return new Promise((resolve, reject) => {\n      items = items.map(item => ({\n        _id: item._id,\n        _rev: item._rev,\n        _deleted: true,\n      }));\n\n      Helpers.chunkUpdate(this.config, items, 1000)\n        .then(resolve, reject);\n    });\n  }\n\n  getOrder(orderId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'orderByOrderId', {\n        key: orderId,\n        include_docs: true,\n      })\n        .then((body) => {\n          if (!body.rows.length) {\n            reject(new Error('Order not found'));\n            return;\n          }\n\n          resolve(body.rows[0].doc);\n        }, reject);\n    });\n  }\n\n  verifyDiscount(code) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'discountByCode', {\n        keys: [code],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            const discount = body.rows[0].doc;\n\n            const now = new Date().getTime();\n\n            const dateStart = new Date(Date.parse(discount.dateStart)).getTime();\n            const dateEnd = new Date(Date.parse(discount.dateEnd)).getTime();\n\n            if (dateStart > now) {\n              reject(new Error('Discount not valid (not begun)'));\n              return;\n\n            }\n\n            if (dateEnd < now) {\n              reject(new Error('Discount not valid (expired)'));\n              return;\n            }\n\n            resolve(discount);\n\n          } else {\n            reject(new Error({\n              statusCode: 404,\n              message: `Discount code not found (${code})`,\n            }));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Ecommerce;\n","module.exports = require(\"nodemailer\");","module.exports = require(\"createsend-node\");","module.exports = require(\"nodemailer-mailgun-transport\");","module.exports = require(\"inky\");","module.exports = require(\"mjml\");","module.exports = require(\"mjml-core\");","module.exports = require(\"mjml-validator\");","module.exports = require(\"mjml-mailchimp\");","module.exports = require(\"html-to-text\");","module.exports = require(\"moment\");","module.exports = require(\"i18n-iso-countries\");","module.exports = require(\"node-sass\");","module.exports = require(\"pug\");","module.exports = require(\"ejs\");","module.exports = require(\"juice\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst EmbedlyApi = require('embedly');\n\nclass Embedly {\n  constructor(config) {\n    this.config = config;\n  }\n\n  oembed(urls) {\n    return new Promise((resolve, reject) => {\n      const embedly = new EmbedlyApi({\n        key: this.config.embedly.apiKey,\n      });\n\n      const opts = {\n        urls: _.isArray(urls) ? urls : [urls],\n        format: 'json',\n      };\n\n      embedly.oembed(opts, (error, result) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(result);\n      });\n    });\n  }\n\n}\n\nmodule.exports = Embedly;\n","module.exports = require(\"embedly\");","module.exports = require(\"@babel/runtime/helpers/objectSpread\");","module.exports = require(\"json-query\");","module.exports = require(\"deep-diff\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst request = require('request-promise');\n\nmodule.exports = function (options) {\n  const defaultOptions = {\n    client_id: null,\n    access_token: null,\n    version: 'v1',\n    host: 'https://api.instagram.com',\n  };\n\n  options = _.merge({}, defaultOptions, options || {});\n\n  const _request = (method, endpoint, query) => new Promise((resolve, reject) => {\n    const requestOptions = {\n      method,\n      url: [options.host, options.version, endpoint].join('/'),\n      qs: {\n        access_token: query.access_token || options.access_token,\n        client_id: query.client_id || options.client_id,\n      },\n    };\n\n    requestOptions.qs = _.extend({}, requestOptions.qs, query);\n\n    request(requestOptions)\n      .then((response) => {\n        resolve(JSON.parse(response));\n      }, reject);\n  });\n\n  this.get = (endpoint, query) => _request('GET', endpoint, query);\n};\n","const jwt = require('jsonwebtoken');\n\nclass Jwt {\n  constructor(config) {\n    this.config = config;\n  }\n\n  signToken(payload, options = {}) {\n    return jwt.sign(payload, this.config.auth.tokenSecret, options);\n  }\n\n  verifyToken(token) {\n    return jwt.verify(token, this.config.auth.tokenSecret);\n  }\n}\n\nmodule.exports = Jwt;\n","module.exports = require(\"jsonwebtoken\");","const fs = require('fs');\nconst path = require('path');\nconst _ = require('lodash');\nconst _eval = require('eval');\nconst request = require('request-promise');\nconst readdir = require('recursive-readdir');\nconst Entity = require('./entity');\nconst ClientConfig = require('./client-config');\n\nclass Pdf {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getTemplates() {\n    const templates = {};\n\n    const files = await readdir(this.config.pdf.templatesPath);\n\n    files.forEach((file) => {\n      if (!/\\.js$/.test(file)) {\n        return;\n      }\n\n      const id = file\n        .replace(`${this.config.pdf.templatesPath}/`, '')\n        .replace('.js', '');\n\n      // eslint-disable-next-line\n      templates[id] = require(file);\n    });\n\n    return templates;\n  }\n\n  async getPayload(templateId, entityId, role) {\n    // if (!this.templates) {\n    //   this.templates = await this.getTemplates();\n    // }\n\n    // if (!this.templates[templateId]) {\n    //   throw new Error('Template not found');\n    // }\n\n    const template = _eval(fs.readFileSync(path.join(this.config.pdf.templatesPath, `${templateId}.js`), 'utf-8'), `${templateId}.js`, {}, true);\n\n    const entity = new Entity(this.config);\n\n    const entities = (await entity.entityList([entityId], { children: 2, role })).map(row => row.doc);\n\n    if (entities.length === 0) {\n      throw new Error('Entity not found');\n    }\n\n    const payload = template(Entity.flattenValues(entities)[0]);\n\n    return payload;\n  }\n\n  async getPdf(payload) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n    const assistPdfUrl = `${this.config.assist.url}/${assetSlug}/pdf/download`;\n\n    payload = typeof payload === 'object' ? JSON.stringify(payload).replace(/'/gi, '’') : payload;\n\n    const response = await request({\n      method: 'POST',\n      uri: assistPdfUrl,\n      encoding: null,\n      form: {\n        payload,\n      },\n    });\n\n    return response;\n  }\n\n}\n\nmodule.exports = Pdf;\n","module.exports = require(\"eval\");","module.exports = require(\"recursive-readdir\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 50;","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass Settings {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async update(settings) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.client = _.merge({}, clientConfig.client, settings);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = Settings;\n","const Promise = require('bluebird');\nconst shippo = require('shippo');\n\nclass Shippo {\n  constructor(config) {\n    this.config = config;\n\n    this.shippo = shippo(config.shippo.token);\n  }\n\n  getQuote(address, parcel) {\n    return new Promise((resolve, reject) => {\n\n      const addressFrom = {\n        object_purpose: 'QUOTE',\n        zip: this.config.shippo.fromZip,\n        country: this.config.shippo.fromCountry,\n      };\n\n      const addressTo = {\n        object_purpose: 'QUOTE',\n        // 'name': address.name,\n        // 'company': '',\n        // 'street1': address.street1,\n        // 'street2': address.street2,\n        // 'city': address.city,\n        // 'state': '',\n        zip: address.zip,\n        country: address.country,\n        // 'phone': address.phone,\n        // 'email': address.email,\n        metadata: '',\n      };\n\n      parcel.distance_unit = 'cm';\n      parcel.mass_unit = 'kg';\n\n      this.shippo.shipment.create({\n        object_purpose: 'QUOTE',\n        address_from: addressFrom,\n        address_to: addressTo,\n        parcel,\n      })\n        .then((shipment) => {\n          const ratesReady = (shipment, attempts) => {\n            if ((shipment.object_status === 'QUEUED' || shipment.object_status === 'WAITING') && attempts < 10) {\n              this.shippo.shipment.retrieve(shipment.object_id).then((val) => {\n                ratesReady(val, attempts + 1);\n              });\n\n            } else {\n              this.shippo.shipment.rates(shipment.object_id)\n                .then((rates) => {\n                  resolve(rates);\n\n                }, (error) => {\n                  console.error('There was an error retrieving rates : %s', error);\n                  reject(error);\n                });\n            }\n          };\n\n          ratesReady(shipment, 0);\n\n        }, (error) => {\n          console.error('There was an error creating shipment: %s', error);\n          reject(error);\n        });\n\n    });\n  }\n\n}\n\nmodule.exports = Shippo;\n","module.exports = require(\"shippo\");","const axios = require('axios');\nconst he = require('he');\nconst Handlebars = require('handlebars');\nconst jsontoxml = require('jsontoxml');\n\nconst ClientConfig = require('./client-config');\n\nclass Shopify {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getCatalog({ shopLink, productLinkTemplate }) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const result = (await axios({\n      url: `https://${clientConfig.provider.shopify.domain}.myshopify.com/api/graphql`,\n      method: 'post',\n      headers: {\n        'X-Shopify-Storefront-Access-Token': clientConfig.provider.shopify.storefrontAccessToken,\n      },\n      data: {\n        query: `\n          query {\n            shop {\n              name\n              primaryDomain {\n                url\n              }\n              description\n              products(first: 250) {\n                edges {\n                  node {\n                    id\n                    handle\n                    title\n                    description\n                    onlineStoreUrl\n                    images(first: 1) {\n                      edges {\n                        node {\n                          originalSrc\n                          transformedSrc\n                        }\n                      }\n                    }\n                    productType\n                    vendor\n                    availableForSale\n                    priceRange {\n                      minVariantPrice {\n                        amount\n                        currencyCode\n                      }\n                      maxVariantPrice {\n                        amount\n                        currencyCode\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `,\n      },\n    })).data.data;\n\n    const template = Handlebars.compile(productLinkTemplate);\n\n    const products = result.shop.products.edges.map(edge => ({\n      'g:id': edge.node.handle,\n      'g:title': he.encode(edge.node.title),\n      'g:description': he.encode(edge.node.description),\n      // 'g:link': edge.node.onlineStoreUrl,\n      'g:link': template({ handle: edge.node.handle }),\n      'g:image_link': edge.node.images.edges[0].node.originalSrc,\n      'g:brand': edge.node.vendor,\n      'g:condition': 'new',\n      'g:availability': edge.node.availableForSale ? 'in stock' : 'out of stock',\n      'g:price': `${edge.node.priceRange.minVariantPrice.amount} ${edge.node.priceRange.minVariantPrice.currencyCode}`,\n      // 'g:google_product_category': he.encode(edge.node.productType),\n    }));\n\n    const channel = [\n      { name: 'title', text: result.shop.name },\n      // { name: 'link', text: result.shop.primaryDomain.url },\n      { name: 'link', text: shopLink },\n      { name: 'description', text: result.shop.description },\n    ];\n\n    products.forEach((product) => {\n      channel.push({\n        name: 'item',\n        children: product,\n      });\n    });\n\n    return `<?xml version=\"1.0\"?>\n    <rss xmlns:g=\"http://base.google.com/ns/1.0\" version=\"2.0\">\n      ${jsontoxml({ channel })}\n    </rss>`;\n  }\n}\n\nmodule.exports = Shopify;\n","module.exports = require(\"he\");","module.exports = require(\"handlebars\");","module.exports = require(\"jsontoxml\");","const _ = require('lodash');\nconst Stripe = require('stripe');\nconst Promise = require('bluebird');\nconst Hashids = require('hashids');\n\nconst ClientConfig = require('./client-config');\nconst Email = require('./email');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass StripeClass {\n  constructor(config) {\n    this.config = config;\n\n    this.stripe = Stripe(this.config.stripe.apiKey);\n    this.email = new Email(this.config);\n\n    this.hashids = new Hashids(this.config.slug, 6, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n  }\n\n  async getSettings() {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    let settings;\n\n    try {\n      settings = clientConfig.module.ecommerce;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    try {\n      settings.clientStripeAccountId = clientConfig.provider.stripe.stripe_user_id;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    settings.client = clientConfig.client;\n    settings.assets = clientConfig.assets;\n\n    return settings;\n  }\n\n  checkout(token, order) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n\n          const listId = _.get(settings, 'createsend.checkoutSubscriberListId');\n\n          if (order.subscribe && listId) {\n            this.email.subscribe(order.customerDetails, 'createsend', listId)\n              .then((result) => {\n                console.log(result);\n              }, (error) => {\n                console.error(error);\n              });\n          }\n\n          // lookup customer by email, create if not found\n          this.findOrCreateCustomer(order.customerDetails.email, order)\n            .then((customer) => {\n\n              // store order data (customer, items, address)\n              this.createOrder(order, customer)\n                .then((order) => {\n\n                  this.updateOrCreateStripeCustomer(settings.clientStripeAccountId, customer, token, order)\n                    .then((stripeCustomer) => {\n\n                      // update customer, append order to customer, update metadata\n                      this.updateCustomer(customer, stripeCustomer, order)\n                        .then((customer) => {\n\n                          // create charge, take fee\n                          this.createCharge(settings, stripeCustomer, customer, order)\n                            .then((updatedOrder) => {\n\n                              this.sendReceipt(settings, customer, order)\n                                .then((orderReceipt) => {\n\n                                  updatedOrder.messages.orderReceipt = orderReceipt;\n\n                                  this.sendNotification(settings, customer, order)\n                                    .then((orderNotification) => {\n\n                                      updatedOrder.messages.orderNotification = orderNotification;\n\n                                      // update order charge status, charge id\n                                      this.updateOrder(updatedOrder)\n                                        .then((finalOrder) => {\n\n                                          resolve(finalOrder);\n\n                                        }, reject);\n                                    }, reject);\n                                }, reject);\n                            }, reject);\n                        }, reject);\n                    }, reject);\n                }, reject);\n            }, reject);\n        }, reject)\n        .catch(reject);\n    });\n  }\n\n  retrieveAccount() {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.accounts.retrieve(settings.clientStripeAccountId)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  refund(order, amount) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.refunds.create({\n            refund_application_fee: true,\n            charge: order.charge.id,\n            amount,\n          }, {\n            stripe_account: settings.clientStripeAccountId,\n          })\n            .then((refund) => {\n              this.stripe.charges.retrieve(order.charge.id, {\n                stripe_account: settings.clientStripeAccountId,\n              })\n                .then((charge) => {\n                  order.charge.status = charge.status;\n                  order.charge.amount = charge.amount;\n                  order.charge.amountRefunded = charge.amount_refunded;\n\n                  Helpers.createOrUpdate(this.config, order)\n                    .then(resolve, reject);\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  findOrCreateCustomer(email, order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'customerByEmail', {\n        keys: [email],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            resolve(body.rows[0].doc);\n\n          } else {\n            const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n            const newCustomer = {\n              type: 'customer',\n              createdAt: now,\n              modifiedAt: now,\n              email: order.customerDetails.email,\n              name: order.customerDetails.name,\n              phone: order.customerDetails.phone,\n              billingAddress: order.billingAddress,\n              shippingAddress: order.shippingAddress,\n              orders: [],\n            };\n\n            Db.connect(this.config).insert(newCustomer)\n              .then((body) => {\n                newCustomer._id = body.id;\n                newCustomer._rev = body.rev;\n\n                resolve(newCustomer);\n              }, reject);\n          }\n        }, reject);\n    });\n  }\n\n  updateOrCreateStripeCustomer(clientStripeAccountId, customer, token, order) {\n    return new Promise((resolve, reject) => {\n      const stripeCustomer = {\n        source: token,\n        email: order.customer.email,\n        description: order.customer.name,\n        metadata: {\n          customer_id: customer._id,\n        // billingAddress: JSON.stringify(order.billingAddress),\n        // shippingAddress: JSON.stringify(order.shippingAddress)\n        },\n      };\n\n      if (customer.stripe && customer.stripe.customer.id) {\n        this.stripe.customers.update(customer.stripe.customer.id, stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        })\n          .then(resolve, (error) => {\n            if (error.type === 'StripeInvalidRequestError' && error.param === 'id') {\n              this.stripe.customers.create(stripeCustomer, {\n                stripe_account: clientStripeAccountId,\n              }).then(resolve, reject);\n\n            } else {\n              reject(error);\n            }\n          });\n\n      } else {\n        this.stripe.customers.create(stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        }).then(resolve, reject);\n      }\n    });\n  }\n\n  createOrder(order, customer) {\n    return new Promise((resolve, reject) => {\n      const items = order.items.map(item => ({\n        id: item.id,\n        title: item.title.replace(/<br\\s?>/ig, ' ').replace(/<\\/?p>|<\\/?span>/ig, ''),\n        price: item.price,\n        quantity: item.quantity,\n        metadata: item.metadata || {},\n      }));\n\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      const newOrder = {\n        type: 'order',\n        orderId: this.hashids.encode(new Date().getTime()),\n        createdAt: now,\n        modifiedAt: now,\n        customer: {\n          id: customer._id,\n          email: customer.email,\n          name: customer.name,\n        },\n        items,\n        shippingMethod: {\n          name: order.shippingMethod.name,\n          amount: Number(order.shippingMethod.amount),\n        },\n        subtotal: Number(order.subtotal),\n        tax: {\n          rate: order.tax.rate || 0,\n          includedInPrice: order.tax.includedInPrice || false,\n          total: order.tax.total || 0,\n          show: order.tax.show || false,\n        },\n        discount: {\n          code: order.discount.code || '',\n          name: order.discount.name || '',\n          total: order.discount.total || 0,\n        },\n        total: Number(order.total),\n        billingAddress: order.billingAddress,\n        shippingAddress: order.shippingAddress,\n        messages: {},\n        status: 'pending',\n        test: true,\n      };\n\n      Db.connect(this.config).insert(newOrder)\n        .then((body) => {\n          newOrder._id = body.id;\n          newOrder._rev = body.rev;\n\n          resolve(newOrder);\n        }, reject);\n    });\n  }\n\n  updateOrder(order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).insert(order)\n        .then((body) => {\n          order._rev = body.rev;\n\n          resolve(order);\n        }, reject);\n    });\n  }\n\n  updateCustomer(customer, stripeCustomer, order) {\n    return new Promise((resolve, reject) => {\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      customer.modifiedAt = now;\n\n      if (!customer.orders) {\n        customer.orders = [];\n      }\n\n      customer.orders.push(order._id);\n\n      if (!customer.stripe) {\n        customer.stripe = {\n          customer: {\n            id: null,\n          },\n        };\n      }\n\n      customer.stripe.customer.id = stripeCustomer.id;\n\n      Db.connect(this.config).insert(customer)\n        .then((body) => {\n          customer._rev = body.rev;\n\n          resolve(customer);\n        }, reject);\n    });\n  }\n\n  createCharge(settings, stripeCustomer, customer, order) {\n    return new Promise((resolve, reject) => {\n      const amount = Number(order.total) * 100;\n\n      const charge = {\n        amount,\n        currency: settings.currency.iso.toLowerCase(),\n        customer: stripeCustomer.id,\n        capture: true,\n        description: order.orderId,\n        // shipping: order.shippingAddress, // fraud prevention, must follow expected schema\n        metadata: {\n          customer_id: customer._id,\n          order_id: order._id,\n        },\n        statement_descriptor: _.kebabCase(settings.storeName).toUpperCase(),\n        application_fee: Math.ceil(amount * 0.02),\n      };\n\n      this.stripe.charges.create(charge, {\n        stripe_account: settings.clientStripeAccountId,\n      })\n        .then((charge) => {\n\n          order.charge = {\n            paymentGateway: 'stripe',\n            id: charge.id,\n            status: charge.status,\n            currency: charge.currency.toUpperCase(),\n            amount: charge.amount,\n            amountRefunded: charge.amount_refunded,\n          };\n\n          order.test = !charge.livemode;\n\n          resolve(order);\n\n        }, reject);\n    });\n  }\n\n  sendReceipt(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: customer.email,\n        subject: `Your order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-receipt`, templateData).then(resolve, reject);\n    });\n  }\n\n  sendNotification(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: settings.emailSenderAddress,\n        subject: `New order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-notification`, templateData).then(resolve, reject);\n    });\n  }\n\n}\n\nmodule.exports = StripeClass;\n","module.exports = require(\"stripe\");","module.exports = require(\"hashids\");","const _ = require('lodash');\nconst Db = require('./db');\nconst ClientConfig = require('./client-config');\n\nclass Taxonomy {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async create(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.taxonomies.push(taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const taxonomy = _.find(clientConfig.taxonomies, { slug: taxonomySlug });\n\n    if (!taxonomy) {\n      throw Error(`Taxonomy not found: ${taxonomySlug}`);\n    }\n\n    return taxonomy;\n  }\n\n  async update(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.taxonomies, { slug: taxonomy.slug });\n\n    if (index === -1) {\n      throw Error(`Taxonomy not found: ${taxonomy.slug}`);\n    }\n\n    clientConfig.taxonomies.splice(index, 1, taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    taxonomySlug = _.isArray(taxonomySlug) ? taxonomySlug : [taxonomySlug];\n\n    clientConfig.taxonomies = clientConfig.taxonomies.filter(taxonomy => taxonomySlug.indexOf(taxonomy.slug) === -1);\n\n    return cc.set(clientConfig);\n  }\n\n  async entitiesByTerm(term) {\n    const db = Db.connect(this.config);\n\n    const entityGroups = (await db.view('entity', 'byTaxonomyTerm', { keys: [term.id], group: true })).rows.map(row => row.value)[0];\n\n    if (!entityGroups) {\n      return [];\n    }\n\n    let entityIds = [];\n\n    _.forEach(entityGroups, (entities) => {\n      entityIds = entityIds.concat(entities);\n    });\n\n    entityIds = _.uniq(entityIds);\n\n    const entities = (await db.fetch({ keys: entityIds, include_docs: true })).rows\n      .filter(row => row.doc)\n      .map(row => row.doc);\n\n    return entities;\n  }\n\n  async createTerm(taxonomySlug, term) {\n    const taxonomy = await this.read(taxonomySlug);\n\n    taxonomy.terms.push(term);\n\n    return this.update(taxonomy);\n  }\n\n  async updateTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.map((_term) => {\n            if (_term.id === term.id) {\n              _term.title = term.title;\n              _term.slug = term.slug;\n            }\n\n            if (!_term.parents) {\n              _term.parents = [];\n            }\n\n            _term.parents = _term.parents.map((parent) => {\n              if (parent.id === term.id) {\n                parent.title = term.title;\n                parent.slug = term.slug;\n              }\n              return parent;\n            });\n\n            return _term;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n\n  async deleteTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.filter((_term) => {\n            if (_term.id === term.id) {\n              return false;\n            }\n\n            if ((_term.parents || []).filter(parent => parent.id === term.id).length) {\n              return false;\n            }\n\n            return true;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n}\n\nmodule.exports = Taxonomy;\n","const Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst Cloudant = require('@cloudant/cloudant');\nconst Db = require('./db');\n\nclass Tools {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getDb() {\n    const result = await Db.connect(this.config).fetch({\n      include_docs: true,\n    });\n\n    return result;\n  }\n\n  async getChanges() {\n    const result = await Db.connect(this.config).changes({\n      limit: 50,\n      include_docs: true,\n      filter: 'tools/changesEntity',\n    });\n\n    return result;\n  }\n\n  async importDb(dbBackupFile) {\n    const dbName = this.config.db.name;\n\n    const fileConents = await fs.readFileAsync(dbBackupFile.path);\n\n    const docs = JSON.parse(fileConents).rows.map((row) => {\n      const { doc } = row;\n      delete doc._rev;\n      return doc;\n    });\n\n    await fs.unlinkAsync(dbBackupFile.path);\n\n    const cloudant = new Cloudant({\n      url: this.config.db.url,\n      plugins: ['promises', 'retry'],\n    }).db;\n\n    try {\n      await cloudant.destroy(dbName);\n    } catch (error) {\n      //\n    }\n\n    await cloudant.create(dbName);\n\n    const result = await Db.connect(this.config, dbName).bulk({ docs });\n\n    return result;\n  }\n\n}\n\nmodule.exports = Tools;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass User {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.users.push(user);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async update(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.users, { id: user.id });\n\n    if (index === -1) {\n      throw Error(`User not found: ${user.id}`);\n    }\n\n    clientConfig.users.splice(index, 1, user);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    userId = _.isArray(userId) ? userId : [userId];\n\n    clientConfig.users = clientConfig.users.filter(user => userId.indexOf(user.id) === -1);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = User;\n"],"sourceRoot":""}