{"version":3,"sources":["webpack://AceApiServer/webpack/universalModuleDefinition","webpack://AceApiServer/webpack/bootstrap","webpack://AceApiServer/external \"babel-runtime/regenerator\"","webpack://AceApiServer/external \"babel-runtime/helpers/asyncToGenerator\"","webpack://AceApiServer/external \"lodash\"","webpack://AceApiServer/external \"babel-runtime/helpers/classCallCheck\"","webpack://AceApiServer/external \"babel-runtime/helpers/createClass\"","webpack://AceApiServer/./lib/client-config.js","webpack://AceApiServer/external \"bluebird\"","webpack://AceApiServer/./lib/db.js","webpack://AceApiServer/external \"babel-runtime/core-js/json/stringify\"","webpack://AceApiServer/./lib/helpers.js","webpack://AceApiServer/external \"axios\"","webpack://AceApiServer/external \"babel-runtime/core-js/object/keys\"","webpack://AceApiServer/external \"path\"","webpack://AceApiServer/external \"fs\"","webpack://AceApiServer/external \"express\"","webpack://AceApiServer/./lib/assist.js","webpack://AceApiServer/external \"@cloudant/cloudant\"","webpack://AceApiServer/./lib/roles.js","webpack://AceApiServer/external \"babel-runtime/core-js/object/freeze\"","webpack://AceApiServer/./lib/email.js","webpack://AceApiServer/./lib/entity.js","webpack://AceApiServer/./lib/schema.js","webpack://AceApiServer/./lib/fields.js","webpack://AceApiServer/external \"request-promise\"","webpack://AceApiServer/external \"babel-runtime/helpers/typeof\"","webpack://AceApiServer/./server/config.default.js","webpack://AceApiServer/external \"lodash/isArray\"","webpack://AceApiServer/./server/server.js","webpack://AceApiServer/external \"http\"","webpack://AceApiServer/external \"morgan\"","webpack://AceApiServer/external \"helmet\"","webpack://AceApiServer/external \"cookie-parser\"","webpack://AceApiServer/external \"body-parser\"","webpack://AceApiServer/external \"method-override\"","webpack://AceApiServer/external \"express-session\"","webpack://AceApiServer/external \"connect-redis\"","webpack://AceApiServer/./server/index.js","webpack://AceApiServer/external \"cache-manager\"","webpack://AceApiServer/external \"cache-manager-redis-store\"","webpack://AceApiServer/external \"url-parse\"","webpack://AceApiServer/external \"zlib\"","webpack://AceApiServer/external \"le_node\"","webpack://AceApiServer/external \"circular-json-es6\"","webpack://AceApiServer/external \"object-sizeof\"","webpack://AceApiServer/external \"deep-freeze\"","webpack://AceApiServer/external \"xxhashjs\"","webpack://AceApiServer/./index.js","webpack://AceApiServer/./config.default.js","webpack://AceApiServer/external \"password-hash\"","webpack://AceApiServer/./lib/auth.js","webpack://AceApiServer/external \"querystring\"","webpack://AceApiServer/./lib/ecommerce.js","webpack://AceApiServer/external \"nodemailer\"","webpack://AceApiServer/external \"createsend-node\"","webpack://AceApiServer/external \"nodemailer-mailgun-transport\"","webpack://AceApiServer/external \"email-templates\"","webpack://AceApiServer/external \"inky\"","webpack://AceApiServer/external \"mjml\"","webpack://AceApiServer/external \"mjml-core\"","webpack://AceApiServer/external \"mjml-validator\"","webpack://AceApiServer/external \"mjml-mailchimp\"","webpack://AceApiServer/external \"html-to-text\"","webpack://AceApiServer/external \"moment\"","webpack://AceApiServer/external \"i18n-iso-countries\"","webpack://AceApiServer/external \"node-sass\"","webpack://AceApiServer/./lib/embedly.js","webpack://AceApiServer/external \"embedly\"","webpack://AceApiServer/external \"json-query\"","webpack://AceApiServer/external \"deep-diff\"","webpack://AceApiServer/./lib/instagram.js","webpack://AceApiServer/./lib/jwt.js","webpack://AceApiServer/external \"jsonwebtoken\"","webpack://AceApiServer/./lib/pdf.js","webpack://AceApiServer/external \"eval\"","webpack://AceApiServer/external \"recursive-readdir\"","webpack://AceApiServer/./lib sync","webpack://AceApiServer/./lib/settings.js","webpack://AceApiServer/./lib/shippo.js","webpack://AceApiServer/external \"shippo\"","webpack://AceApiServer/./lib/shopify.js","webpack://AceApiServer/external \"he\"","webpack://AceApiServer/external \"handlebars\"","webpack://AceApiServer/external \"jsontoxml\"","webpack://AceApiServer/./lib/stripe.js","webpack://AceApiServer/external \"stripe\"","webpack://AceApiServer/external \"hashids\"","webpack://AceApiServer/./lib/taxonomy.js","webpack://AceApiServer/./lib/tools.js","webpack://AceApiServer/./lib/user.js","webpack://AceApiServer/./server/routes/analytics.js","webpack://AceApiServer/./server/routes/auth.js","webpack://AceApiServer/./server/routes/cache.js","webpack://AceApiServer/./server/routes/config.js","webpack://AceApiServer/./server/routes/debug.js","webpack://AceApiServer/external \"express-useragent\"","webpack://AceApiServer/./server/routes/ecommerce.js","webpack://AceApiServer/./server/routes/email.js","webpack://AceApiServer/./server/routes/embedly.js","webpack://AceApiServer/./server/routes/entity.js","webpack://AceApiServer/./server/routes/metadata.js","webpack://AceApiServer/./server/routes/pdf.js","webpack://AceApiServer/./server/routes/provider.js","webpack://AceApiServer/./server/routes/schema.js","webpack://AceApiServer/./server/routes/settings.js","webpack://AceApiServer/./server/routes/shippo.js","webpack://AceApiServer/./server/routes/shopify.js","webpack://AceApiServer/./server/routes/social.js","webpack://AceApiServer/external \"twitter\"","webpack://AceApiServer/./server/routes/stripe.js","webpack://AceApiServer/./server/routes/taxonomy.js","webpack://AceApiServer/./server/routes/token.js","webpack://AceApiServer/./server/routes/tools.js","webpack://AceApiServer/./server/routes/user.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","_","Db","Helpers","DEFAULT_CLIENT_CONFIG","_id","client","assets","schemas","taxonomies","users","roles","provider","ClientConfig","config","_classCallCheck3","default","this","clientConfig","connect","merge","slug","createOrUpdate","Cloudant","dbName","url","db","maxAttempt","plugins","retry","retryDelayMultiplier","retryInitialDelayMsecs","use","Promise","assistUrl","assist","thumbnail","settings","cropSlug","cropDefault","settingsArray","split","forEach","setting","crop","crops","x","y","x2","y2","g","push","join","settingsString","test","thumbnailType","ext","thumbnailUrl","replace","doc","resolve","reject","insert","then","response","id","_rev","rev","error","statusCode","docs","chunkSize","arguments","length","undefined","promises","chunk","bulk","all","entities","groupSize","Infinity","grouped","group","entity","groupBefore","groupAfter","ratio","groupRatio","_stringify2","Date","array","replacementObject","map","axios","passwordHash","Assist","fileNames","cc","assetsSlug","post","auth","username","password","generate","result","data","permissions","entityGrid","entityCreate","entityRead","entityUpdate","entityDelete","taxonomyCreate","taxonomyRead","taxonomyUpdate","taxonomyDelete","fileCreate","fileRead","fileUpdate","fileDelete","schema","user","userSettings","tools","ecommerce","Roles","role","_freeze2","find","path","fs","nodemailer","Createsend","promisifyAll","nodemailerMailgunTransport","EmailTemplate","Inky","mjml2html","registerComponent","registerDependencies","McSection","McImage","htmlToText","moment","countries","sass","Email","inky","mc-section","mj-column","mj-hero","templateSlug","_this","templateData","templateOptions","options","inlineStyles","mjml","skipValidation","templatePath","email","templatesPath","existsSync","templateFiles","readdirSync","htmlPath","fileName","extension","style","renderSync","file","sourceMapContents","sourceMapEmbed","css","toString","emailTemplate","views","juice","juiceResources","preserveMediaQueries","preserveFontFaces","removeStyleTags","removeLinkTags","preserveImportant","webResources","links","scripts","images","transport","jsonTransport","helpers","pick","render","html","convertMjmlResult","level","errors","releaseTheKraken","text","fromString","emailOptions","_this2","nodemailerMailgun","createTransport","api_key","mailgun","apiKey","domain","getTemplate","sendMail","metadata","details","listId","_this3","createsend","cs","clientApiKey","subscribers","addSubscriberAsync","EmailAddress","Name","Resubscribe","RestartSubscriptionBasedAutoresponders","emailAddress","catch","Message","Error","jsonQuery","diff","Schema","Entity","flattenValues","fieldSlug","searchTerm","viewWithList","startkey","endkey","ids","parents","query","include_docs","keys","view","_appendParents","docMap","childDepth","children","rowOrDoc","isRow","fields","size","isArray","_queriesFromString","concat","flatten","_query","obj","field","filter","uniq","_entitiesById","row","_docs","rows","_childDepthLimit","_getDocMap","select","_mergeDocs","updatedEntities","uniqBy","mapValues","remove","type","indexOf","chunkUpdate","entityMap","title","published","_extendDocs","limit","Math","min","sort","isString","include_fields","bookmark","index","group_field","search","groups","total_rows","hits","_this4","_entitySearch","__entitySearch","_this5","clone","_context6","t0","updateEntityIndex","entityId","_this6","revs_info","revisionIds","_revs_info","revision","status","open_revs","revisions","childrenIds","ok","fetch","childrenMap","console","_appendChildren","_this7","_this8","restore","entityIds","entityOrEntityId","isObject","oldFileNames","oldEntity","newEntity","mergeWith","a","b","trashed","deleteFiles","_updateChildren","forever","filesResult","deleted","_removeChildren","_fileNames","_deleted","entitiesResult","files","omitBy","startsWith","filterEntityFields","queryParts","trim","selector","slice","locals","input","start","end","sample","sampleSize","_len","paths","Array","_key","copy","pathParts","match","pathFrom","pathTo","set","allowRegexp","queryString","methodArgs","queries","splice","merging","isNumber","fieldQueryMap","Fields","schemaSlug","findIndex","schemaSlugs","ddoc","default_field","enabled","analyzer","$and","fieldRef","dataType","environment","process","env","ENVIRONMENT","api","prefix","API_PREFIX","forceHttps","API_FORCE_HTTPS","JSON","parse","blacklistToken","API_BLACKLIST_TOKEN","blacklistReferrer","API_BLACKLIST_REFERRER","session","secret","SESSION_SECRET","ttl","parseInt","SESSION_TTL","cache","CACHE_ENABLED","CACHE_TTL","compress","CACHE_COMPRESS","memory","max","CACHE_MEMORY_MAX","redis","REDIS_URL","host","REDIS_HOST","port","REDIS_PORT","REDIS_PASSWORD","REDIS_DB","logentriesToken","LOGENTRIES_TOKEN","PORT","HOST","express","http","logger","helmet","cookieParser","bodyParser","methodOverride","RedisStore","AceApiServer","defaultConfig","customConfig","listen","app","sessionOptions","resave","saveUninitialized","redisOptions","store","cookie","maxAge","json","urlencoded","extended","server","createServer","on","log","cacheManager","redisStore","URL","zlib","Logger","CircularJSON","sizeof","deepFreeze","XXH","Api","HASH_SEED","customAuthMiddleware","asyncMiddleware","fn","req","res","next","skipAuth","route","RegExp","authMiddleware","userId","send","code","message","cloneConfig","omitUndefined","forIn","isPlainObject","isUndefined","cloneDeep","getConfig","_ref","_asyncToGenerator3","_regenerator2","mark","_callee","configClone","wrap","_context","prev","abrupt","stop","_x3","apply","redisClient","caching","getClient","item","hash","body","h64","cacheMiddleware","_ref2","_callee2","_context2","__cache","sent","gunzipAsync","Buffer","from","_x4","_x5","_x6","handleResponse","_ref3","_callee3","cacheResponse","_context3","stringify","gzipAsync","_x7","_x8","_x9","jwt","Jwt","router","Router","enable","headers","scheme","redirect","Access-Control-Allow-Origin","Access-Control-Allow-Methods","Access-Control-Expose-Headers","Vary","method","sendStatus","referrer","referer","referrerHostname","hostname","token","apiToken","payload","verifyToken","context","permissionMiddleware","authorised","permission","handleError","stack","statusText","_keys2","afterResponse","removeListener","args","Function","Auth","_len2","_key2","_len3","_key3","_len4","_key4","Ecommerce","_len5","_key5","_len6","_key6","Embedly","_len7","_key7","_len8","_key8","_len9","_key9","_len10","_key10","Instagram","_len11","_key11","_len12","_key12","Pdf","_len13","_key13","_len14","_key14","_len15","_key15","Settings","_len16","_key16","Shippo","_len17","_key17","Shopify","_len18","_key18","Stripe","_len19","_key19","Taxonomy","_len20","_key20","Tools","_len21","_key21","User","_len22","_key22","debug","DEBUG","SLUG","baseUrl","BASE_URL","DB_URL","DB_HOST","DB_NAME","requestPlugin","DB_REQUEST_PLUGIN","meterType","DB_METER_TYPE","superUserId","AUTH_SUPER_USER_ID","tokenSecret","AUTH_TOKEN_SECRET","dev","DEV_USER_ID","DEV_ROLE","cms","CMS_TITLE","CMS_URL","ASSIST_URL","ASSIST_USERNAME","ASSIST_PASSWORD","MAILGUN_API_KEY","MAILGUN_DOMAIN","embedly","EMBEDLY_API_KEY","pdf","__dirname","google","clientId","GOOGLE_CLIENT_ID","clientSecret","GOOGLE_CLIENT_SECRET","instagram","INSTAGRAM_CLIENT_ID","INSTAGRAM_CLIENT_SECRET","spotify","SPOTIFY_CLIENT_ID","SPOTIFY_CLIENT_SECRET","stripe","STRIPE_CLIENT_ID","STRIPE_CLIENT_SECRET","STRIPE_API_KEY","twitter","consumerKey","TWITTER_CONSUMER_KEY","consumerSecret","TWITTER_CONSUMER_SECRET","accessTokenKey","TWITTER_ACCESS_TOKEN_KEY","accessTokenSecret","TWITTER_ACCESS_TOKEN_SECRET","vimeo","VIMEO_CLIENT_ID","VIMEO_CLIENT_SECRET","querystring","providerTokenUri","superUser","active","params","refresh","providerConfig","providerClientConfig","grant_type","client_id","client_secret","redirect_uri","redirectUri","refresh_token","uri","providerAuth","begins","floor","getTime","access_token","t1","t2","items","orderId","discount","now","dateStart","dateEnd","EmbedlyApi","urls","opts","format","oembed","request","version","endpoint","requestOptions","qs","extend","_request","sign","verify","_eval","readdir","templates","templateId","template","readFileSync","entityList","assetSlug","assistPdfUrl","_typeof3","encoding","form","webpackEmptyContext","e","shippo","address","parcel","addressFrom","object_purpose","zip","fromZip","country","fromCountry","addressTo","distance_unit","mass_unit","shipment","address_from","address_to","ratesReady","attempts","object_status","retrieve","object_id","val","rates","he","Handlebars","jsontoxml","shopLink","productLinkTemplate","shopify","X-Shopify-Storefront-Access-Token","storefrontAccessToken","compile","products","shop","edges","edge","g:id","node","handle","g:title","encode","g:description","description","g:link","g:image_link","originalSrc","g:brand","vendor","g:condition","g:availability","availableForSale","g:price","priceRange","minVariantPrice","amount","currencyCode","channel","product","Hashids","StripeClass","hashids","clientStripeAccountId","stripe_user_id","order","getSettings","subscribe","customerDetails","findOrCreateCustomer","customer","createOrder","updateOrCreateStripeCustomer","stripeCustomer","updateCustomer","createCharge","updatedOrder","sendReceipt","orderReceipt","messages","sendNotification","orderNotification","updateOrder","finalOrder","accounts","refunds","refund_application_fee","charge","stripe_account","refund","charges","amountRefunded","amount_refunded","newCustomer","createdAt","modifiedAt","phone","billingAddress","shippingAddress","orders","source","customer_id","customers","update","param","price","quantity","newOrder","shippingMethod","Number","subtotal","tax","rate","includedInPrice","total","show","_this9","currency","iso","toLowerCase","capture","order_id","statement_descriptor","kebabCase","storeName","toUpperCase","application_fee","ceil","paymentGateway","livemode","_this10","emailSenderName","emailSenderAddress","to","subject","sendEmail","_this11","taxonomy","taxonomySlug","term","entityGroups","read","terms","entitiesByTerm","_term","parent","changes","dbBackupFile","readFileAsync","fileConents","unlinkAsync","cloudant","destroy","Analytics","analytics","t3","t4","t5","t6","_x","_x2","error_description","authProvider","put","_ref4","_ref5","_callee4","_context4","_ref6","_callee5","_context5","_x10","pattern","del","useragent","getOrder","getType","setType","delete","deleteType","verifyDiscount","renderTemplate","fromName","fromEmail","toName","toEmail","indexAsync","q","entitySearch","use_index","$or","$exists","entityFind","fieldValues","_ref7","_callee6","entityRevisions","_x11","_x12","_ref8","_callee7","_context7","_x13","_x14","_ref9","_callee8","_context8","_x15","_x16","_ref10","_callee9","_context9","_x17","_x18","_ref11","_callee10","_context10","_x19","_x20","_ref12","_callee11","_context11","_x21","_x22","getPayload","getPdf","attachment","providerApiBaseUrl","providerApiHandler","expires_in","token_type","baseURL","Authorization","schemaId","updateAll","getQuote","setHeader","getCatalog","instagramAccessTokenMap","Twitter","consumer_key","consumer_secret","access_token_key","access_token_secret","pagination","next_url","checkout","retrieveAccount","taxonomySlugs","createTerm","updateTerm","deleteTerm","pickBy","isNaN","signToken","getDb","getChanges","userIds"],"mappings":"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","file":"server.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AceApiServer\"] = factory();\n\telse\n\t\troot[\"AceApiServer\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","module.exports = require(\"babel-runtime/regenerator\");","module.exports = require(\"babel-runtime/helpers/asyncToGenerator\");","module.exports = require(\"lodash\");","module.exports = require(\"babel-runtime/helpers/classCallCheck\");","module.exports = require(\"babel-runtime/helpers/createClass\");","const _ = require('lodash');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Roles = require('./roles');\n\nconst roles = new Roles();\n\nconst DEFAULT_CLIENT_CONFIG = {\n  _id: 'config',\n  client: {},\n  assets: {},\n  schemas: [],\n  taxonomies: [],\n  users: [],\n  roles: roles.roles(),\n  provider: {},\n  module: {},\n};\n\nclass ClientConfig {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async get() {\n    let clientConfig = DEFAULT_CLIENT_CONFIG;\n\n    try {\n      clientConfig = await Db.connect(this.config).get('config');\n\n      clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n    } catch (error) {\n      //\n    }\n\n    clientConfig.slug = this.config.slug;\n\n    return clientConfig;\n  }\n\n  async set(clientConfig) {\n    clientConfig._id = 'config';\n\n    delete clientConfig.roles;\n\n    clientConfig = await Helpers.createOrUpdate(this.config, clientConfig);\n\n    clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n\n    return clientConfig;\n  }\n}\n\n\nmodule.exports = ClientConfig;\n","module.exports = require(\"bluebird\");","const Cloudant = require('@cloudant/cloudant');\n\nclass Db {\n  constructor (config, dbName) {\n    this.config = config;\n\n    return Db.connect(config, dbName);\n  }\n\n  static connect (config, dbName) {\n    const cloudant = new Cloudant({\n      url: config.db.url,\n      maxAttempt: 5,\n      plugins: [\n        'promises',\n        {\n          retry: {\n            retryDelayMultiplier: 2,\n            retryInitialDelayMsecs: 500,\n          },\n        },\n      ],\n    });\n\n    return cloudant.db.use(dbName || config.db.name);\n  }\n}\n\nmodule.exports = Db;\n","module.exports = require(\"babel-runtime/core-js/json/stringify\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\n\nclass Helpers {\n  constructor(config) {\n    this.config = config;\n    this.assistUrl = config.assist.url;\n    this.slug = config.slug;\n  }\n\n  static createOrUpdate (config, doc) {\n    return new Promise((resolve, reject) => {\n      Db.connect(config).insert(doc)\n        .then((response) => {\n          doc._id = response.id;\n          doc._rev = response.rev;\n          resolve(doc);\n        }, (error) => {\n          if (error.statusCode !== 409) {\n            reject(error);\n            return;\n          }\n\n          Db.connect(config).get(doc._id)\n            .then((response) => {\n              doc._rev = response._rev;\n\n              Db.connect(config).insert(doc)\n                .then((response) => {\n                  doc._rev = response.rev;\n                  resolve(doc);\n                }, reject);\n            }, reject);\n        });\n    });\n  }\n\n  static chunkUpdate (config, docs, chunkSize = 1000) {\n    return new Promise((resolve, reject) => {\n      const chunks = _.chunk(docs, chunkSize);\n      const promises = [];\n\n      chunks.forEach((chunk) => {\n        promises.push(new Promise((resolve, reject) => {\n          Db.connect(config).bulk({\n            docs: chunk,\n          }).then(resolve, reject);\n        }));\n      });\n\n      Promise.all(promises).then(resolve, reject);\n    });\n  }\n\n  static groupEntities (entities, groupSize = Infinity) {\n    const grouped = [];\n\n    let group = {\n      entities: [],\n    };\n\n    entities.forEach((entity) => {\n      if (!entity.groupBefore || group.entities.length >= groupSize) {\n        group = {\n          entities: [],\n        };\n      }\n\n      group.entities.push(entity);\n\n      if (!entity.groupAfter || group.entities.length >= groupSize) {\n        group.ratio = 0;\n\n        group.entities.forEach((entity) => {\n          group.ratio += (entity.thumbnail || entity).ratio;\n        });\n\n        group.entities.forEach((entity) => {\n          entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n        });\n\n        grouped.push(group);\n      }\n    });\n\n    return grouped;\n  }\n\n  static now () {\n    return JSON.stringify(new Date()).replace(/\"/g, '');\n  }\n\n  static replace (array, replacementObject, key) {\n    return array.map((object) => {\n      if (object[key] === replacementObject[key]) {\n        return replacementObject;\n      }\n      return object;\n    });\n  }\n\n  thumbnailSrc (thumbnail, settings, cropSlug, cropDefault) {\n    if (!thumbnail) {\n      return '';\n    }\n\n    let settingsArray;\n\n    if (typeof settings === 'string') {\n      settingsArray = settings.split(/,|;/);\n\n      settings = {};\n\n      settingsArray.forEach((setting) => {\n        setting = setting.split(/_|:/);\n\n        settings[setting[0]] = setting[1];\n      });\n    }\n\n    const crop = thumbnail.crops ? thumbnail.crops[cropSlug] : false;\n\n    if (crop) {\n      settings.x = crop[0];\n      settings.y = crop[1];\n      settings.x2 = crop[2];\n      settings.y2 = crop[3];\n    } else if (cropDefault) {\n      settings.g = cropDefault;\n    }\n\n    settingsArray = [];\n\n    _.forEach(settings, (value, key) => {\n      settingsArray.push([key, value].join(':'));\n    });\n\n    const settingsString = settingsArray.join(';');\n\n    if (/(image)/.test(thumbnail.thumbnailType)) {\n      if (thumbnail.ext === 'svg') {\n        return [this.assistUrl, this.slug, thumbnail.name + thumbnail.ext].join('/');\n      }\n\n      return [this.assistUrl, this.slug, 'transform', settingsString, thumbnail.name + thumbnail.ext].join('/');\n    }\n\n    if (/(video)/.test(thumbnail.thumbnailType)) {\n      return [this.assistUrl, this.slug, 'transform', settingsString, thumbnail.name, 'thumb.jpg'].join('/');\n    }\n\n    if (/(oembed|proxy)/.test(thumbnail.thumbnailType)) {\n      const thumbnailUrl = thumbnail.thumbnailUrl.replace(/https?:\\/\\//, '');\n\n      return [this.assistUrl, this.slug, 'proxy', 'transform', settingsString, thumbnailUrl].join('/');\n    }\n\n    return '';\n  }\n\n}\n\nmodule.exports = Helpers;\n","module.exports = require(\"axios\");","module.exports = require(\"babel-runtime/core-js/object/keys\");","module.exports = require(\"path\");","module.exports = require(\"fs\");","module.exports = require(\"express\");","const _ = require('lodash');\nconst axios = require('axios');\nconst passwordHash = require('password-hash');\nconst ClientConfig = require('./client-config');\n\nclass Assist {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async deleteFiles(fileNames) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetsSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n\n    if (fileNames.length === 0) {\n      return [];\n    }\n\n    const result = (await axios.post(`${this.config.assist.url}/${assetsSlug}/file/delete`, { fileNames }, {\n      auth: {\n        username: this.config.assist.username,\n        password: passwordHash.generate(this.config.assist.password),\n      },\n    })).data;\n\n    return result;\n  }\n\n}\n\nmodule.exports = Assist;\n","module.exports = require(\"@cloudant/cloudant\");","const _ = require('lodash');\n\nconst roles = [\n  {\n    name: 'Admin',\n    slug: 'admin',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: true,\n      settings: true,\n      userSettings: true,\n      tools: true,\n      ecommerce: true,\n    },\n  },\n  {\n    name: 'Editor',\n    slug: 'editor',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: true,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n  {\n    name: 'Guest',\n    slug: 'guest',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: false,\n      entityRead: true,\n      entityUpdate: false,\n      entityDelete: false,\n\n      taxonomyCreate: false,\n      taxonomyRead: true,\n      taxonomyUpdate: false,\n      taxonomyDelete: false,\n\n      fileCreate: false,\n      fileRead: true,\n      fileUpdate: false,\n      fileDelete: false,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: false,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n];\n\nclass Roles {\n  roles() {\n    return roles.map(role => Object.freeze(role));\n  }\n  role(slug) {\n    return _.find(this.roles(), { slug });\n  }\n}\n\nmodule.exports = Roles;\n","module.exports = require(\"babel-runtime/core-js/object/freeze\");","const path = require('path');\nconst fs = require('fs');\nconst _ = require('lodash');\nconst Promise = require('bluebird');\nconst nodemailer = require('nodemailer');\nconst Createsend = Promise.promisifyAll(require('createsend-node'));\nconst nodemailerMailgunTransport = require('nodemailer-mailgun-transport');\nconst EmailTemplate = require('email-templates');\nconst Inky = require('inky').Inky;\nconst mjml2html = require('mjml');\nconst registerComponent = require('mjml-core').registerComponent;\nconst registerDependencies = require('mjml-validator').registerDependencies;\nconst { McSection, McImage } = require('mjml-mailchimp');\nconst htmlToText = require('html-to-text');\nconst moment = require('moment');\nconst countries = require('i18n-iso-countries');\nconst sass = require('node-sass');\n\nconst ClientConfig = require('./client-config');\nconst Helpers = require('./helpers');\n\n\nclass Email {\n  constructor(config) {\n    this.config = config;\n\n    this.inky = new Inky();\n\n    registerComponent(McSection);\n    registerComponent(McImage);\n    registerDependencies({\n      'mc-section': ['mj-column', 'mj-group', 'mj-raw'],\n      'mj-column': ['mc-image'],\n      'mj-hero': ['mc-image'],\n    });\n  }\n\n  getTemplate(templateSlug, templateData = {}, templateOptions = {}) {\n    return new Promise((resolve, reject) => {\n      const options = _.merge({}, {\n        inlineStyles: true,\n        inky: false,\n        mjml: false,\n        skipValidation: false,\n      }, templateOptions);\n\n      let templatePath = path.join(this.config.email.templatesPath, templateSlug);\n\n      if (!fs.existsSync(templatePath)) {\n        templatePath = path.resolve('../email', templateSlug);\n      }\n\n      const templateFiles = fs.readdirSync(templatePath);\n\n      let htmlPath = 'html';\n      // Support mjml templates\n      if (_.find(templateFiles, fileName => /^html\\.mjml/.test(fileName))) {\n        htmlPath = 'html.mjml';\n        options.mjml = true;\n      }\n\n      // Support ejs templates (for backwards compatibility)\n      // TODO: convert ejs templates to pug and remove\n      let extension;\n      if (_.find(templateFiles, fileName => /\\.ejs$/.test(fileName))) {\n        extension = 'ejs';\n      }\n\n      let style = '';\n      if (_.find(templateFiles, fileName => /^style\\.scss$/.test(fileName))) {\n        style = sass.renderSync({\n          file: path.join(templatePath, 'style.scss'),\n          sourceMapContents: !options.inlineStyles,\n          sourceMapEmbed: !options.inlineStyles,\n        }).css.toString().replace(/\"/g, '\\'');\n      }\n\n      const emailTemplate = new EmailTemplate({\n        views: {\n          root: this.config.email.templatesPath,\n          options: {\n            extension,\n          },\n        },\n        juice: options.inlineStyles,\n        juiceResources: {\n          preserveMediaQueries: true,\n          preserveFontFaces: true,\n          removeStyleTags: false,\n          removeLinkTags: false,\n          preserveImportant: true,\n          webResources: {\n            links: false,\n            scripts: false,\n            images: false,\n            // relativeTo: '',\n          },\n        },\n        transport: {\n          jsonTransport: true,\n        },\n      });\n\n      const cc = new ClientConfig(this.config);\n      const helpers = new Helpers(this.config);\n\n      cc.get()\n        .then((clientConfig) => {\n          templateData = _.merge({}, templateData, {\n            config: _.merge({}, _.pick(this.config, ['cms']), _.pick(clientConfig, ['slug', 'client', 'assets'])),\n            helpers,\n            style,\n            moment,\n            countries,\n            templateSlug,\n          });\n\n          emailTemplate.render(`${templateSlug}/${htmlPath}`, templateData)\n            .then((html) => {\n\n              if (options.mjml) {\n                const convertMjmlResult = mjml2html(html, {\n                  level: options.skipValidation ? 'skip' : 'soft',\n                });\n\n                if (convertMjmlResult.errors && convertMjmlResult.errors.length) {\n                  reject(convertMjmlResult.errors);\n                  return;\n                }\n\n                html = convertMjmlResult.html;\n              }\n\n              if (options.inky) {\n                html = this.inky.releaseTheKraken(html);\n              }\n\n              resolve({\n                html,\n                text: htmlToText.fromString(html),\n              });\n            }, reject);\n        }, reject);\n    });\n  }\n\n  sendEmail(emailOptions, templateSlug, templateData = {}, templateOptions = {}) {\n    return new Promise((resolve, reject) => {\n      const nodemailerMailgun = nodemailer.createTransport(nodemailerMailgunTransport({\n        auth: {\n          api_key: this.config.mailgun.apiKey,\n          domain: this.config.mailgun.domain,\n        },\n      }));\n\n      this.getTemplate(templateSlug, _.merge({}, emailOptions, templateData), templateOptions)\n        .then((emailTemplate) => {\n          emailOptions.html = emailTemplate.html;\n          emailOptions.text = emailTemplate.text;\n\n          nodemailerMailgun.sendMail(emailOptions, (error, metadata) => {\n            if (error) {\n              reject(error);\n              return;\n            }\n\n            resolve({\n              metadata,\n              email: emailOptions,\n            });\n          });\n        }, reject);\n    });\n  }\n\n  subscribe(details, provider, listId) {\n    return new Promise((resolve, reject) => {\n      const cc = new ClientConfig(this.config);\n\n      cc.get()\n        .then((clientConfig) => {\n          if (provider === 'createsend') {\n            if (clientConfig.provider.createsend) {\n              const cs = new Createsend({\n                apiKey: clientConfig.provider.createsend.clientApiKey,\n              });\n\n              const subscribers = Promise.promisifyAll(cs.subscribers);\n\n              subscribers.addSubscriberAsync(listId, {\n                EmailAddress: details.email,\n                Name: details.name,\n                Resubscribe: true,\n                RestartSubscriptionBasedAutoresponders: true,\n              })\n                .then((result) => {\n                  resolve(`Email.subscribe(): ${result.emailAddress}`);\n                })\n                .catch((error) => {\n                  reject(error.Message);\n                });\n\n              return;\n            }\n            reject(new Error('Subscriber list not configured'));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Email;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst jsonQuery = require('json-query');\nconst { diff } = require('deep-diff');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Schema = require('./schema');\nconst Assist = require('./assist');\n\nconst CHUNK_UPDATE_SIZE = 1000;\n\nclass Entity {\n  constructor(config) {\n    this.config = config;\n\n    // Expose helpers\n    this.flattenValues = Entity.flattenValues;\n  }\n\n  static flattenValues(docs) {\n    return docs.map((doc) => {\n      if (!doc.fields || !_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (/entity/.test(field.type) && _.isArray(field.value)) { // entity / entityTile / entityGrid\n          field.value = Entity.flattenValues(field.value);\n        }\n        return field.value;\n      });\n\n      return doc;\n    });\n  }\n\n  static filterEntityFields(docs, role = 'guest') {\n    const isArray = _.isArray(docs);\n\n    docs = (isArray ? docs : [docs]).map((doc) => {\n      if (_.size(doc.fields)) {\n        doc.fields = _.mapValues(doc.fields, (field) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter((obj) => {\n              if (!obj) {\n                return false;\n              }\n              if (obj.type && obj.type === 'entity' && role === 'guest') {\n                return obj.published !== undefined ? obj.published : true;\n              }\n              return true;\n            });\n          }\n          return field;\n        });\n      }\n      return doc;\n    });\n\n    return isArray ? docs : docs[0];\n  }\n\n  static _appendChildren(docs, childrenMap) {\n    return docs.map((doc) => {\n      if (!_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (_.isArray(field.value)) {\n          field.value = field.value.filter((obj) => {\n            if (!obj) {\n              return false;\n            }\n            if (obj.type === 'entity') {\n              return childrenMap[obj.id] !== undefined;\n            }\n            return true;\n          });\n\n          field.value = field.value.map((obj) => {\n            if (obj.type === 'entity') {\n              obj = _.merge(obj, childrenMap[obj.id]);\n            }\n            obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n            return obj;\n          });\n        }\n\n        return field;\n      });\n\n      return doc;\n    });\n  }\n\n  static _appendParents(result, parents = null, role = 'guest') {\n    let entityMap = {};\n\n    result.rows.forEach((row) => {\n      if (!row.doc) {\n        return;\n      }\n\n      if (row.value.type === 'entity') {\n        if (parents) {\n          row.doc.parents = [];\n        }\n        entityMap[row.id] = row.doc;\n      }\n    });\n\n    if (parents) {\n      result.rows.forEach((row) => {\n        if (row.doc && row.value.type === 'parent') {\n          entityMap[row.key].parents.push(Entity.filterEntityFields(row.doc, role));\n        }\n      });\n\n      entityMap = _.mapValues(entityMap, (entity) => {\n        entity.parents = _.uniqBy(entity.parents, entity => entity._id);\n        return entity;\n      });\n    }\n\n    entityMap = null;\n\n    return result;\n  }\n\n  static _fileNames(entities) {\n    const fileNames = [];\n\n    entities.forEach((entity) => {\n      _.forEach(entity.fields, (field) => {\n        if (field.value && field.value.file) {\n          fileNames.push(field.value.file.name);\n        }\n      });\n    });\n\n    return _.uniq(fileNames);\n  }\n\n  async fieldValues(fieldSlug, searchTerm) {\n    const result = await Db.connect(this.config).viewWithList('entity', 'byField', 'search', {\n      startkey: [fieldSlug],\n      endkey: [fieldSlug, {}],\n      group: true,\n      searchTerm,\n    });\n    return result;\n  }\n\n  static _query(data, query, isFieldQuery = false) {\n    if (isFieldQuery) {\n      const queryParts = query.trim().split(/\\[|\\]/);\n      const selector = `fields.${queryParts[0]}.value[${queryParts[1] || '*'}]`;\n      const modifier = /\\]:/.test(query) ? `:${query.split(/\\]:/).slice(-1)[0].trim()}` : '';\n      query = `${selector}${modifier}`;\n    }\n\n    const result = jsonQuery(query, {\n      data,\n      locals: {\n        slice: (input, start, end) => _.slice(input, start, end),\n        sample: (input, size = 1) => _.sampleSize(input, size),\n        group: (entities, groupSize = Infinity) => {\n          const grouped = [];\n\n          let group = [];\n\n          entities.forEach((entity) => {\n            if (!entity.groupBefore || group.length >= groupSize) {\n              group = [];\n            }\n\n            group.push(entity);\n\n            if (!entity.groupAfter || group.length >= groupSize) {\n              group.ratio = 0;\n\n              group.forEach((entity) => {\n                group.ratio += (entity.thumbnail || entity).ratio;\n              });\n\n              group.forEach((entity) => {\n                entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n              });\n\n              grouped.push(group);\n            }\n          });\n\n          return grouped;\n        },\n        pick: (input, ...paths) => _.map(input, (obj) => {\n          const copy = {\n            id: obj.id || undefined,\n          };\n          paths = paths.filter(path => path); // Remove empty paths (tolerate trailing comma in args)\n          paths.forEach((path) => {\n            const pathParts = path.match(/([^\\s]+)/g);\n            const pathFrom = pathParts[0];\n            const pathTo = pathParts[pathParts.length - 1];\n            _.set(copy, pathTo, _.get(obj, pathFrom));\n          });\n          return copy;\n        }),\n      },\n      allowRegexp: true,\n    });\n\n    return result;\n  }\n\n  static _queriesFromString(queryString) {\n    // Remove new lines\n    queryString = queryString.replace(/(\\n|\\r)/gm, '');\n\n    // Match and store (...args) from query so we can split by comma\n    const methodArgs = queryString.match(/\\(([^)]+)\\)/g);\n\n    // Replace (...args) with empty ()\n    queryString = queryString.replace(/\\(.*?\\)/g, '()');\n\n    // Extract queries\n    let queries = queryString.split(/,(?![^([]*[\\])])/g);\n\n    queries = queries.map((query) => {\n      // Replace () with original (...args)\n      if (/\\(\\)/.test(query)) {\n        query = query.replace('()', methodArgs.splice(0, 1));\n      }\n      return query.trim();\n    });\n\n    return queries;\n  }\n\n  async _entitiesById(ids = [], options = {}) {\n    options = _.merge({\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    const query = {\n      include_docs: true,\n    };\n\n    if (ids.length) {\n      query.keys = ids;\n    }\n\n    let result = await Db.connect(this.config)\n      .view('entity', options.parents ? 'byIdExtended' : 'byId', query);\n\n    result = Entity._appendParents(result, options.parents, options.role);\n\n    return result;\n  }\n\n  static _childDepthLimit(children, merging = false) {\n    if (_.isNumber(children)) {\n      return children;\n    }\n    if (_.isArray(children)) {\n      if (merging) {\n        return children.length + 1;\n      }\n      return children.length;\n    }\n    return 1;\n  }\n\n  async _getDocMap(docs, options = {}, docMap = {}, childDepth = 0) {\n    if (!options.parents && !options.children) {\n      return docMap;\n    }\n\n    let ids = [];\n\n    docs.forEach((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      const doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (options.children && doc.fields && _.size(doc.fields)) {\n        if (_.isArray(options.children)) {\n          Entity._queriesFromString(options.children[childDepth]).forEach((query) => {\n            ids = ids.concat(_.flatten(Entity._query(doc, query, true).value).map(obj => obj && obj.id));\n          });\n\n        } else {\n          _.forEach(doc.fields, (field) => {\n            if (_.isArray(field.value)) {\n              field.value = field.value.filter(obj => obj);\n\n              field.value.forEach((obj) => {\n                if (obj.id) {\n                  ids.push(obj.id);\n                }\n              });\n            }\n          });\n        }\n      }\n\n      const id = isRow ? rowOrDoc.id : doc._id || doc.id;\n      if (!docMap[id]) {\n        ids.push(id);\n      }\n    });\n\n    ids = _.uniq(ids);\n\n    ids = ids.filter(id => !docMap[id]);\n\n    if (ids.length === 0) {\n      return docMap;\n    }\n\n    let _docs = (await this._entitiesById(ids, options)).rows.map(row => row.doc);\n\n    _docs.forEach((doc) => {\n      docMap[doc._id] = doc;\n    });\n\n    childDepth += 1;\n\n    if (!options.children || (childDepth >= Entity._childDepthLimit(options.children))) {\n      return docMap;\n    }\n\n    docMap = await this._getDocMap(_docs, options, docMap, childDepth);\n\n    _docs = null;\n\n    return docMap;\n  }\n\n  static _mergeDocs(docs, docMap, children, childDepth = 0) {\n    if (children && (childDepth + 1 >= Entity._childDepthLimit(children, true))) {\n      return docs;\n    }\n\n    docs = docs.map((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      let doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (!doc.fields && docMap[rowOrDoc.id || rowOrDoc._id]) {\n        doc = docMap[rowOrDoc.id || rowOrDoc._id];\n      }\n\n      if (children && doc.fields && _.size(doc.fields)) {\n\n        let fieldQueryMap;\n\n        if (_.isArray(children)) {\n          fieldQueryMap = {};\n          Entity._queriesFromString(children[childDepth]).forEach((query) => {\n            const key = query.split(/\\[|\\]/)[0];\n            fieldQueryMap[key] = query;\n          });\n        }\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter(obj => obj);\n\n            if (!fieldQueryMap || (fieldQueryMap && fieldQueryMap[fieldSlug])) {\n              if (fieldQueryMap && fieldQueryMap[fieldSlug]) {\n                field.value = field.value.filter(obj => obj.id && docMap[obj.id]);\n              }\n\n              field.value = field.value.map((obj) => {\n                if (obj && obj.id && docMap[obj.id]) {\n                  obj = _.merge(obj, docMap[obj.id] || {});\n                  obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n                }\n                return obj;\n              });\n\n              field.value = Entity._mergeDocs(field.value, docMap, children, childDepth + 1);\n            }\n          }\n          return field;\n        });\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            if (fieldQueryMap && fieldQueryMap[fieldSlug]) {\n              field.value = _.flatten(Entity._query(doc, fieldQueryMap[fieldSlug], true).value);\n            }\n          }\n          return field;\n        });\n      }\n\n      if (isRow) {\n        rowOrDoc.doc = doc;\n      } else {\n        rowOrDoc = doc;\n      }\n\n      return rowOrDoc;\n    });\n\n    return docs;\n  }\n\n  async _extendDocs(docs, options = {}) {\n    options = _.merge({\n      select: false,\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    let docMap = await this._getDocMap(docs, options);\n\n    docs = Entity._mergeDocs(docs, docMap, options.children);\n\n    if (options.select) {\n      docs = _.flatten(Entity._query(docs, options.select).value);\n    }\n\n    docMap = null;\n\n    return docs;\n  }\n\n  _removeChildren(entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      entities = entities.map(entity => entity._id);\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const updatedEntities = _.uniqBy(response.rows, row => row.doc._id).map((row) => {\n            row.doc.fields = _.mapValues(row.doc.fields, (field) => {\n              if (_.isArray(field.value)) {\n                field.value = _.remove(field.value, obj => obj.type === 'entity' && entities.indexOf(obj.id) !== -1);\n              }\n              return field;\n            });\n\n            return row.doc;\n          });\n\n          if (updatedEntities.length === 0) {\n            resolve([]);\n            return;\n          }\n\n          Helpers.chunkUpdate(this.config, updatedEntities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  _updateChildren(entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      const entityMap = {};\n\n      entities = entities.map((entity) => {\n        entityMap[entity._id] = entity;\n\n        return entity._id;\n      });\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const entities = response.rows.map((row) => {\n            const entity = row.doc;\n\n            _.forEach(entity.fields, (field, fieldSlug) => {\n              if (_.isArray(field.value)) {\n                entity.fields[fieldSlug].value = field.value.map((obj) => {\n                  if (obj.type === 'entity' && entityMap[obj.id]) {\n                    obj.slug = entityMap[obj.id].slug;\n                    obj.title = entityMap[obj.id].title;\n                    obj.schema = entityMap[obj.id].schema;\n                    obj.published = entityMap[obj.id].published;\n\n                    if (entityMap[obj.id].thumbnail) {\n                      obj.thumbnail = entityMap[obj.id].thumbnail;\n                    } else {\n                      obj.thumbnail = null;\n                    }\n                  }\n\n                  return obj;\n                });\n              }\n            });\n\n            return entity;\n          });\n\n          Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  async entityList(ids = [], options = {}) {\n    options = _.merge({\n      select: false,\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    const result = await this._entitiesById(ids, options);\n\n    // if ((!options.children && !options.parents) || result.total_rows === 0) {\n    //   return result.rows;\n    // }\n\n    const rows = await this._extendDocs(result.rows, options);\n\n    return rows;\n  }\n\n  _entitySearch(query, options = {}) {\n    return new Promise((resolve, reject) => {\n      query.limit = Math.min(query.limit || 200, 200);\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      if (options.children) {\n        query.include_docs = true;\n      }\n\n      if (!query.include_fields) {\n        query.include_fields = [];\n      }\n\n      if (_.isArray(query.include_fields)) {\n        query.include_fields = JSON.stringify(query.include_fields);\n      }\n\n      if (!query.sort) {\n        delete query.sort;\n      }\n      if (!query.bookmark) {\n        delete query.bookmark;\n      }\n      if (!query.index) {\n        delete query.index;\n      }\n      if (!query.group_field) {\n        delete query.group_field;\n      }\n\n      Db.connect(this.config).search('entity', query.index || 'all', query)\n        .then((result) => {\n\n          if (result.groups) {\n            const promises = [];\n\n            result.groups = result.groups.map((group) => {\n              promises.push(new Promise((resolve, reject) => {\n                if ((!options.children && !options.parents) || group.total_rows === 0) {\n                  resolve();\n                  return;\n                }\n\n                this._extendDocs(group.hits, options)\n                  .then((docs) => {\n                    group.hits = docs;\n\n                    resolve();\n                  }, reject);\n              }));\n              return group;\n            });\n\n            Promise.all(promises)\n              .then(() => {\n                resolve(result);\n              }, reject);\n\n            return;\n          }\n\n          if ((!options.children && !options.parents) || result.total_rows === 0) {\n            resolve(result);\n            return;\n          }\n\n          this._extendDocs(result.rows, options)\n            .then((docs) => {\n              result.rows = docs;\n\n              resolve(result);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entitySearch(query, options = {}) {\n    options = _.merge({\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    return new Promise((resolve, reject) => {\n      const limit = query.limit || 25;\n\n      if (limit <= 200) {\n        this._entitySearch(query, options)\n          .then(resolve, reject);\n        return;\n      }\n\n      let rows = [];\n      let groups = [];\n\n      function __entitySearch(bookmark) {\n        const _query = _.clone(query);\n\n        if (bookmark) {\n          _query.bookmark = bookmark;\n        }\n\n        this._entitySearch(_query, options)\n          .then((result) => {\n            if (result.rows) {\n              rows = rows.concat(result.rows);\n            }\n            if (result.groups) {\n              groups = groups.concat(result.groups);\n            }\n\n            if (rows.length < result.total_rows && rows.length < limit) {\n              __entitySearch.call(this, result.bookmark);\n              return;\n            }\n\n            result.rows = rows;\n            result.groups = groups;\n\n            resolve(result);\n          }, reject);\n      }\n\n      __entitySearch.call(this);\n    });\n  }\n\n  async entityFind(query, options = {}) {\n    options = _.merge({\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    let result;\n\n    try {\n      result = await Db.connect(this.config).find(query);\n    } catch (error) {\n      if (error.error === 'no_usable_index') {\n        const cc = new ClientConfig(this.config);\n        const clientConfig = await cc.get();\n\n        const schema = new Schema(this.config);\n        await schema.updateEntityIndex(clientConfig.schemas);\n\n        result = await Db.connect(this.config).find(query);\n      }\n    }\n\n    if (options.children === false) {\n      return result;\n    }\n\n    if (query.fields && query.fields.indexOf('_id') === -1) {\n      throw new Error('_id field required for `children`');\n    }\n\n    result.docs = await this._extendDocs(result.docs, options);\n\n    return result;\n  }\n\n  entityRevisions(entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId, {\n        revs_info: true,\n      })\n        .then((response) => {\n          const revisionIds = [];\n\n          response._revs_info.forEach((revision) => {\n            if (revision.status === 'available') {\n              revisionIds.push(revision.rev);\n            }\n          });\n\n          Db.connect(this.config).get(entityId, {\n            open_revs: JSON.stringify(revisionIds),\n          })\n            .then((response) => {\n              const revisions = [];\n              const childrenIds = [];\n\n              response.forEach((revision) => {\n                if (revision.ok) {\n                  revisions.push(revision.ok);\n\n                  _.forEach(revision.ok.fields, (field) => {\n                    if (/entity/.test(field.type)) {\n                      _.forEach(field.value, (obj) => {\n                        if (obj.id) {\n                          childrenIds.push(obj.id);\n                        }\n                      });\n                    }\n                  });\n                }\n              });\n\n              Db.connect(this.config).fetch({\n                keys: _.uniq(childrenIds),\n                include_docs: true,\n              })\n                .then((result) => {\n                  const childrenMap = {};\n\n                  result.rows.forEach((row) => {\n                    try {\n                      childrenMap[row.doc._id] = row.doc;\n                    } catch (error) {\n                      console.error('Error: child no longer exists');\n                    }\n                  });\n\n                  resolve(Entity._appendChildren(revisions, childrenMap));\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entityCreate(entity) {\n    return new Promise((resolve, reject) => {\n      entity.type = 'entity';\n\n      Db.connect(this.config).insert(entity)\n        .then((response) => {\n          entity._id = response.id;\n          entity._rev = response.rev;\n\n          resolve(entity);\n        }, reject);\n    });\n  }\n\n  entityRead(entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId)\n        .then(resolve, reject);\n    });\n  }\n\n  async entityUpdate(entities, restore) {\n    entities = _.isArray(entities) ? entities : [entities];\n\n    const entityMap = {};\n\n    const entityIds = entities.map((entityOrEntityId) => {\n      let entityId;\n\n      if (_.isObject(entityOrEntityId)) {\n        entityId = entityOrEntityId._id;\n        entityMap[entityId] = entityOrEntityId;\n      }\n      if (_.isString(entityOrEntityId)) {\n        entityId = entityOrEntityId;\n      }\n\n      return entityId;\n    });\n\n    const response = await Db.connect(this.config).fetch({\n      keys: entityIds,\n      include_docs: true,\n    });\n\n    const children = [];\n    const oldFileNames = [];\n\n    entities = response.rows.map((row) => {\n      const oldEntity = row.doc;\n      const newEntity = entityMap[oldEntity._id];\n\n      let entity = oldEntity;\n\n      if (newEntity) {\n        delete newEntity._rev;\n\n        const diffs = diff(oldEntity, newEntity);\n\n        diffs.forEach((diff) => {\n\n          // If any key fields have changed, update all references\n          if (/published|slug|title|thumbnail/.test(diff.path[0])) {\n            if (children.indexOf(newEntity) === -1 && entityIds.indexOf(newEntity._id) !== -1) {\n              children.push(newEntity);\n            }\n          }\n\n          // If any file fields have changed then remove the old file\n          if (diff.path[0] === 'fields' && diff.path[2] === 'value') {\n            const field = oldEntity.fields[diff.path[1]];\n            if (/attachment|image|audio|video/.test(field.type) && field.value) {\n              oldFileNames.push(field.value.file.name);\n            }\n          }\n\n        });\n\n        entity = _.mergeWith({}, oldEntity, newEntity, (a, b) => {\n          if (_.isArray(a) && _.isArray(b)) {\n            return b;\n          }\n          return undefined;\n        });\n      }\n\n      if (restore) {\n        entity.trashed = false;\n      }\n\n      return entity;\n    });\n\n    if (oldFileNames.length) {\n      const assist = new Assist(this.config);\n      await assist.deleteFiles(oldFileNames);\n    }\n\n    if (children.length) {\n      await this._updateChildren(children);\n    }\n\n    const result = await Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE);\n\n    return result;\n  }\n\n  async entityDelete(entityIds, forever = false) {\n    let entities;\n    let filesResult;\n\n    if (entityIds === 'trashed') {\n      forever = true;\n\n      entities = (await Db.connect(this.config).view('entity', 'trashed', {\n        include_docs: true,\n      })).rows;\n\n    } else {\n      entities = (await Db.connect(this.config).fetch({\n        keys: _.isArray(entityIds) ? entityIds : [entityIds],\n        include_docs: true,\n      })).rows;\n    }\n\n    entities = entities.filter(entity => !entity.value || !entity.value.deleted);\n\n    entities = entities.map(entity => entity.doc);\n\n    if (forever) {\n      await this._removeChildren(entities);\n\n      const fileNames = Entity._fileNames(entities);\n\n      if (fileNames.length) {\n        const assist = new Assist(this.config);\n        filesResult = await assist.deleteFiles(fileNames);\n      }\n\n      entities = entities.map(entity => ({\n        _id: entity._id,\n        _rev: entity._rev,\n        _deleted: true,\n      }));\n\n    } else {\n      entities = entities.map((entity) => {\n        entity.trashed = true;\n        return entity;\n      });\n    }\n\n    const entitiesResult = await Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE);\n\n    return {\n      entities: entitiesResult,\n      files: filesResult,\n    };\n  }\n\n}\n\nmodule.exports = Entity;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Fields = require('./fields');\n\nclass Schema {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas.push(schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(schemaSlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const schema = _.find(clientConfig.schemas, { slug: schemaSlug });\n\n    if (!schema) {\n      throw Error(`Schema not found: ${schemaSlug}`);\n    }\n\n    return schema;\n  }\n\n  async update(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.schemas, { slug: schema.slug });\n\n    if (index === -1) {\n      throw Error(`Schema not found: ${schema.slug}`);\n    }\n\n    clientConfig.schemas.splice(index, 1, schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(schemaSlugs) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    schemaSlugs = _.isArray(schemaSlugs) ? schemaSlugs : [schemaSlugs];\n\n    clientConfig.schemas = clientConfig.schemas.filter(schema => schemaSlugs.indexOf(schema.slug) === -1);\n\n    clientConfig.schemas = clientConfig.schemas.map((schema) => {\n      if (!schema.fields) {\n        return schema;\n      }\n      schema.fields = schema.fields.map((field) => {\n        if (!field.settings) {\n          return field;\n        }\n        if (field.settings.schemas) {\n          field.settings.schemas = field.settings.schemas.filter(schema => schemaSlugs.indexOf(schema) === -1);\n        }\n        return field;\n      });\n      return schema;\n    });\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateAll(schemas) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas = schemas;\n\n    // await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateEntityIndex(schemas) {\n    let fields = [];\n\n    schemas.forEach((schema) => {\n      fields = fields.concat(schema.fields);\n    });\n\n    fields = _.uniqBy(fields, 'slug');\n\n    const index = {\n      name: 'entity',\n      type: 'text',\n      ddoc: 'entityIndex',\n      index: {\n        default_field: {\n          enabled: true,\n          analyzer: 'standard',\n        },\n        selector: {\n          $and: [\n            {\n              type: 'entity',\n            },\n          ],\n        },\n        fields: [\n          {\n            name: 'published',\n            type: 'boolean',\n          },\n          {\n            name: 'trashed',\n            type: 'boolean',\n          },\n          {\n            name: 'title',\n            type: 'string',\n          },\n          {\n            name: 'slug',\n            type: 'string',\n          },\n          {\n            name: 'schema',\n            type: 'string',\n          },\n          {\n            name: 'modifiedAt',\n            type: 'string',\n          },\n          {\n            name: 'publishedAt',\n            type: 'string',\n          },\n        ],\n      },\n    };\n\n    fields.forEach((field) => {\n      const fieldRef = Fields.field(field.type);\n\n      if (/number|string|boolean/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value`,\n          type: fieldRef.dataType,\n        });\n      }\n\n      if (/array/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.[].slug`,\n          type: 'string',\n        });\n      }\n\n      if (/taxonomy/.test(field.type)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.terms.[].slug`,\n          type: 'string',\n        });\n      }\n    });\n\n    const result = await Db.connect(this.config).index(index);\n\n    return result;\n  }\n\n}\n\nmodule.exports = Schema;\n","const _ = require('lodash');\n\nconst fields = [\n  {\n    type: 'attachment',\n    name: 'Attachment',\n    dataType: null,\n  },\n  {\n    type: 'audio',\n    name: 'Audio',\n    dataType: null,\n  },\n  {\n    type: 'checkbox',\n    name: 'Checkbox',\n    dataType: 'boolean',\n  },\n  {\n    type: 'color',\n    name: 'Color',\n    dataType: 'string',\n  },\n  {\n    type: 'date',\n    name: 'Date',\n    dataType: 'string',\n  },\n  {\n    type: 'embedly',\n    name: 'Embedly',\n    dataType: null,\n  },\n  {\n    type: 'entity',\n    name: 'Entity',\n    dataType: 'array',\n  },\n  {\n    type: 'entityGrid',\n    name: 'Entity Grid',\n    dataType: 'array',\n  },\n  {\n    type: 'entityTile',\n    name: 'Entity Tile',\n    dataType: 'array',\n  },\n  {\n    type: 'image',\n    name: 'Image',\n    dataType: null,\n  },\n  {\n    type: 'keyValue',\n    name: 'Key Value',\n    dataType: null,\n  },\n  {\n    type: 'number',\n    name: 'Number',\n    dataType: 'number',\n  },\n  {\n    type: 'richText',\n    name: 'Rich Text',\n    dataType: null,\n  },\n  {\n    type: 'select',\n    name: 'Select',\n    dataType: 'array',\n  },\n  {\n    type: 'taxonomy',\n    name: 'Taxonomy',\n    dataType: null,\n  },\n  {\n    type: 'text',\n    name: 'Text',\n    dataType: 'string',\n  },\n  {\n    type: 'textArea',\n    name: 'Text Area',\n    dataType: 'string',\n  },\n  {\n    type: 'user',\n    name: 'User',\n    dataType: 'array',\n  },\n  {\n    type: 'video',\n    name: 'Video',\n    dataType: null,\n  },\n  {\n    type: 'vimeo',\n    name: 'Vimeo',\n    dataType: null,\n  },\n];\n\nclass Fields {\n  static fields() {\n    return fields.map(field => Object.freeze(field));\n  }\n  static field(type) {\n    return _.find(Fields.fields(), { type });\n  }\n}\n\nmodule.exports = Fields;\n","module.exports = require(\"request-promise\");","module.exports = require(\"babel-runtime/helpers/typeof\");","const config = {\n  environment: process.env.ENVIRONMENT || 'development',\n\n  api: {\n    prefix: process.env.API_PREFIX || '',\n    forceHttps: process.env.API_FORCE_HTTPS ? JSON.parse(process.env.API_FORCE_HTTPS) : false,\n    blacklistToken: (process.env.API_BLACKLIST_TOKEN || '').split(','),\n    blacklistReferrer: (process.env.API_BLACKLIST_REFERRER || '').split(','),\n  },\n\n  session: {\n    secret: process.env.SESSION_SECRET || 'change_me',\n    ttl: parseInt(process.env.SESSION_TTL || 7200, 10),\n  },\n\n  cache: {\n    enabled: process.env.CACHE_ENABLED ? JSON.parse(process.env.CACHE_ENABLED) : false,\n    ttl: parseInt(process.env.CACHE_TTL || 30, 10) * 60, // 30mins\n    compress: process.env.CACHE_COMPRESS ? JSON.parse(process.env.CACHE_COMPRESS) : false,\n    memory: {\n      max: parseInt(process.env.CACHE_MEMORY_MAX || 128, 10) * 1000 * 1000, // ~128mb\n    },\n  },\n\n  redis: {\n    url: process.env.REDIS_URL,\n    host: process.env.REDIS_HOST,\n    port: process.env.REDIS_PORT,\n    password: process.env.REDIS_PASSWORD,\n    db: parseInt(process.env.REDIS_DB || 0, 10),\n  },\n\n  logentriesToken: process.env.LOGENTRIES_TOKEN,\n};\n\nmodule.exports = config;\n","module.exports = require(\"lodash/isArray\");","const PORT = process.env.PORT || 5000;\nconst HOST = process.env.HOST || 'localhost';\n\nconst _ = require('lodash');\nconst express = require('express');\nconst http = require('http');\nconst logger = require('morgan');\nconst helmet = require('helmet');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst methodOverride = require('method-override');\nconst session = require('express-session');\nconst RedisStore = require('connect-redis')(session);\n\nconst AceApiServer = require('./index');\n\nconst defaultConfig = require('./config.default');\n\nfunction Serve (customConfig = {}, listen = true) {\n  const config = _.merge({}, defaultConfig, customConfig);\n\n  const app = express();\n\n  const sessionOptions = {\n    secret: config.session.secret,\n    resave: true,\n    saveUninitialized: true,\n  };\n\n  if (config.redis.url || config.redis.host) {\n    const redisOptions = {\n      ttl: config.session.ttl,\n    };\n\n    if (config.redis.url) {\n      redisOptions.url = config.redis.url;\n    } else {\n      redisOptions.host = config.redis.host;\n      redisOptions.port = config.redis.port;\n      redisOptions.password = config.redis.password;\n      redisOptions.db = config.redis.db;\n    }\n\n    sessionOptions.store = new RedisStore(redisOptions);\n  } else {\n    sessionOptions.cookie = {\n      maxAge: config.session.ttl,\n    };\n  }\n\n  app.use(helmet());\n  app.use(logger('tiny'));\n  app.use(cookieParser());\n  app.use(bodyParser.json({\n    limit: '50mb',\n  }));\n  app.use(bodyParser.urlencoded({\n    extended: true,\n    limit: '50mb',\n  }));\n  app.use(methodOverride());\n  app.use(session(sessionOptions));\n\n  AceApiServer(app, config);\n\n  if (listen) {\n    const server = http.createServer(app);\n    server.on('listening', () => {\n      console.log(`listening: http://${HOST}:${PORT}`);\n    });\n    server.listen(PORT);\n  }\n\n  return app;\n}\n\nmodule.exports = Serve;\n","module.exports = require(\"http\");","module.exports = require(\"morgan\");","module.exports = require(\"helmet\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"body-parser\");","module.exports = require(\"method-override\");","module.exports = require(\"express-session\");","module.exports = require(\"connect-redis\");","process.on('unhandledRejection', result => console.error(result));\n\nconst _ = require('lodash');\nconst express = require('express');\nconst cacheManager = require('cache-manager');\nconst redisStore = require('cache-manager-redis-store');\nconst Promise = require('bluebird');\nconst URL = require('url-parse');\nconst zlib = Promise.promisifyAll(require('zlib'));\nconst Logger = require('le_node');\nconst CircularJSON = require('circular-json-es6');\nconst sizeof = require('object-sizeof');\nconst deepFreeze = require('deep-freeze');\nconst XXH = require('xxhashjs');\n\nconst Api = require('../index');\n\nconst HASH_SEED = 0xABCD;\n\nconst defaultConfig = require('./config.default');\n\nfunction AceApiServer (app, customConfig = {}, customAuthMiddleware = null) {\n  const config = deepFreeze(_.merge({}, Api.defaultConfig, defaultConfig, customConfig));\n\n  // Async middleware\n\n  const asyncMiddleware = fn => (req, res, next) => {\n    Promise.resolve(fn(req, res, next))\n      .catch(next);\n  };\n\n  // Skip authorisation\n\n  const skipAuth = (req) => {\n    if (config.environment !== 'development') {\n      return false;\n    }\n    const allowedRoutes = [\n      '/token',\n      '/email',\n    ];\n    return _.find(allowedRoutes, route => new RegExp(`^${route}`).test(req.path));\n  };\n\n  // Default auth middleware\n\n  const defaultAuthMiddleware = (req, res, next) => {\n    if (skipAuth(req)) {\n      next();\n      return;\n    }\n\n    if (!req.session.userId) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  const authMiddleware = customAuthMiddleware || defaultAuthMiddleware;\n\n  // Permissions middleware\n\n  const permissionMiddleware = (permissions, req, res, next) => {\n    if (!req.session.role) {\n      res.status(401);\n      res.send({\n        permissions,\n        message: 'Error: role not defined in session.',\n      });\n      return;\n    }\n\n    if (req.session.role === 'super') {\n      next();\n      return;\n    }\n\n    const roles = Api.Roles();\n\n    if (_.isString(permissions)) {\n      permissions = permissions.split(',');\n    }\n\n    let authorised = false;\n\n    permissions.forEach((permission) => {\n      if (roles.role(req.session.role).permissions[permission.trim()]) {\n        authorised = true;\n      }\n    });\n\n    if (!roles.role(req.session.role) || !authorised) {\n      res.status(401);\n      res.send({\n        permissions,\n        message: 'Sorry, you\\'re not authorised to do this.',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  // Clone and extend config per request/session\n\n  const omitUndefined = (obj) => {\n    _.forIn(obj, (value, key, obj) => {\n      if (_.isPlainObject(value)) {\n        value = omitUndefined(value);\n\n        if (_.keys(value).length === 0) {\n          delete obj[key];\n        }\n      }\n\n      if (_.isUndefined(value)) {\n        delete obj[key];\n      }\n    });\n\n    return obj;\n  };\n\n  const cloneConfig = config => _.mergeWith({}, JSON.parse(JSON.stringify(config)), omitUndefined(_.cloneDeep(config)));\n\n  const getConfig = async (slug) => {\n    const configClone = cloneConfig(config);\n\n    configClone.slug = slug;\n    configClone.db.name = slug;\n\n    return configClone;\n  };\n\n  // Cache\n\n  let cache;\n\n  if (config.cache.enabled) {\n    if (config.redis.url || config.redis.host) {\n      const redisOptions = {\n        ttl: config.cache.ttl,\n      };\n\n      if (config.redis.url) {\n        redisOptions.url = config.redis.url;\n      } else {\n        redisOptions.host = config.redis.host;\n        redisOptions.port = config.redis.port;\n        redisOptions.password = config.redis.password;\n        redisOptions.db = config.redis.db;\n      }\n\n      cache = cacheManager.caching(_.merge({ store: redisStore }, redisOptions));\n\n      const redisClient = cache.store.getClient();\n      redisClient.on('ready', () => {\n        console.log('redis: ready');\n      });\n      redisClient.on('error', (error) => {\n        console.error('redis: error:', error);\n      });\n\n    } else {\n      cache = cacheManager.caching({\n        store: 'memory',\n        ttl: config.cache.ttl,\n        max: config.cache.memory.max,\n        length: (item) => {\n          // const length = Buffer.byteLength(item, 'utf8')\n          const length = sizeof(item);\n          return length;\n        },\n      });\n    }\n  }\n\n  // Cache middleware\n\n  const hash = (req) => {\n    const obj = {\n      path: req.path,\n      query: req.query,\n      body: req.body,\n    };\n    return `${req.session.slug}:${XXH.h64(JSON.stringify(obj), HASH_SEED).toString(16)}`;\n  };\n\n  const cacheMiddleware = asyncMiddleware(async (req, res, next) => {\n    const useCachedResponse = (\n      config.cache.enabled\n      && req.session.role === 'guest' // TODO: Replace 'guest' with constant\n      && (req.query.__cache && JSON.parse(req.query.__cache)) !== false\n    );\n\n    if (useCachedResponse) {\n      try {\n        const key = hash(req);\n\n        let response = await cache.get(key);\n\n        if (typeof response === 'string') {\n          if (config.cache.compress) {\n            response = (await zlib.gunzipAsync(Buffer.from(response, 'base64'))).toString();\n          }\n\n          try {\n            response = JSON.parse(response);\n          } catch (error) {\n            //\n          }\n\n          res.set('X-Cached-Response', true);\n          res.status(response ? 200 : 204);\n          res.send(response);\n\n          return;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    res.set('X-Cached-Response', false);\n    next();\n  });\n\n  // Response helpers\n\n  const handleError = (req, res, error) => {\n    if (Object.prototype.toString.call(error) === '[object Object]') {\n      error = CircularJSON.parse(CircularJSON.stringify(error));\n    }\n\n    error = error.response || error;\n\n    console.error(error);\n\n    const code = error.statusCode || error.status || error.code || 500;\n    const message = error.stack || error.error || error.message || error.body || error.data || error.statusText;\n\n    res.status(typeof code === 'string' ? 500 : code);\n    res.send({\n      code,\n      message,\n    });\n  };\n\n  const handleResponse = async (req, res, response, cacheResponse = false) => {\n    if (response === undefined || response === null) {\n      response = '';\n      res.status(204);\n      res.send(response);\n\n    } else {\n      response = CircularJSON.stringify(response);\n      res.status(200);\n      res.send(JSON.parse(response));\n    }\n\n    if (cacheResponse && config.cache.enabled && req.session.role === 'guest') { // TODO: Replace 'guest' with constant\n      const key = hash(req);\n\n      if (config.cache.compress) {\n        response = (await zlib.gzipAsync(Buffer.from(response))).toString('base64');\n      }\n\n      const ttl = req.query.__cache ? parseInt(req.query.__cache, 10) : config.cache.ttl;\n\n      cache.set(key, response, { ttl });\n    }\n  };\n\n  // Header middleware\n\n  const headerMiddleware = (req, res, next) => {\n    const headers = {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,OPTIONS',\n      'Access-Control-Expose-Headers': 'X-Slug, X-Role, X-User-Id',\n      Vary: 'Accept-Encoding, X-Api-Token',\n    };\n\n    if (req.headers['access-control-request-headers']) {\n      headers['Access-Control-Allow-Headers'] = req.headers['access-control-request-headers'];\n    }\n\n    res.set(headers);\n\n    if (req.method === 'OPTIONS') {\n      res.sendStatus(200);\n      return;\n    }\n\n    next();\n  };\n\n  // Session middleware\n\n  const jwt = Api.Jwt(config);\n\n  const sessionMiddleware = (req, res, next) => {\n    if (skipAuth(req)) {\n      next();\n      return;\n    }\n\n    const referrer = req.headers.referrer || req.headers.referer;\n\n    if (referrer) {\n      const referrerHostname = new URL(referrer)\n        .hostname.split('.').slice(-2).join('.');\n\n      if (config.api.blacklistReferrer.indexOf(referrerHostname) > -1) {\n        res.status(401);\n        res.send({\n          code: 401,\n          message: 'Not authorised, referrer blacklisted',\n        });\n        return;\n      }\n    }\n\n    const token = req.headers['x-api-token'] || req.query.apiToken || req.session.apiToken;\n\n    if (!token) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing token',\n      });\n      return;\n    }\n\n    if (config.api.blacklistToken.indexOf(token) > -1) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, token blacklisted',\n      });\n      return;\n    }\n\n    try {\n      const payload = jwt.verifyToken(token);\n\n      req.session.userId = payload.userId;\n      req.session.slug = payload.slug;\n      req.session.role = payload.role || 'guest'; // TODO: Replace 'guest' with constant\n\n    } catch (error) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: `Not authorised, token verification failed (${error.message})`,\n        error,\n      });\n      return;\n    }\n\n    if (!req.session.slug) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing slug',\n      });\n      return;\n    }\n\n    if (!req.session.role) {\n      req.session.role = 'guest';\n    }\n\n    if (req.session.userId) {\n      res.set('X-User-Id', req.session.userId);\n    }\n\n    res.set('X-Environment', config.environment);\n    res.set('X-Slug', req.session.slug);\n    res.set('X-Role', req.session.role);\n\n    next();\n  };\n\n  // Router\n\n  const router = express.Router();\n\n  const forceHttps = (req, res, next) => {\n    if (\n      (req.headers['x-forwarded-proto'] && req.headers['x-forwarded-proto'] !== 'https') &&\n      (req.headers['cf-visitor'] && JSON.parse(req.headers['cf-visitor']).scheme !== 'https') // Fix for Cloudflare/Heroku flexible SSL\n    ) {\n      res.redirect(301, `https://${req.headers.host}${req.path}`);\n      return;\n    }\n    next();\n  };\n\n  if (config.environment === 'production' && config.api.forceHttps === true) {\n    if (app.enable) {\n      app.enable('trust proxy');\n    }\n    app.use(forceHttps);\n  }\n\n  app.use(`/${config.api.prefix}`, headerMiddleware, sessionMiddleware, router);\n\n  app.get(`/${config.api.prefix}`, (req, res) => {\n    res.send('<pre> ______\\n|A     |\\n|  /\\\\  |\\n| /  \\\\ |\\n|(    )|\\n|  )(  |\\n|______|</pre>');\n  });\n\n  // Context\n\n  const context = {\n    app,\n    router,\n    cache,\n    authMiddleware,\n    permissionMiddleware,\n    cacheMiddleware,\n    asyncMiddleware,\n    getConfig,\n    handleResponse,\n    handleError,\n  };\n\n  // Inject API into context\n\n  Object.keys(Api).forEach((key) => {\n    context[key] = Api[key];\n  });\n\n  if (config.logentriesToken) {\n    context.log = new Logger({\n      token: config.logentriesToken,\n    });\n  }\n\n  const afterResponse = (req, res) => {\n    res.removeListener('finish', afterResponse);\n    res.removeListener('close', afterResponse);\n  };\n\n  if (config.environment !== 'production') {\n    app.use((req, res, next) => {\n      res.on('finish', afterResponse.bind(null, req, res));\n      res.on('close', afterResponse.bind(null, req, res));\n      next();\n    });\n  }\n\n  // Bootstrap Routes\n\n  require('./routes/analytics')(context, config);\n  require('./routes/auth')(context, config);\n  require('./routes/cache')(context, config);\n  require('./routes/config')(context, config);\n  require('./routes/debug')(context, config);\n  require('./routes/ecommerce')(context, config);\n  require('./routes/email')(context, config);\n  require('./routes/embedly')(context, config);\n  require('./routes/entity')(context, config);\n  require('./routes/metadata')(context, config);\n  require('./routes/pdf')(context, config);\n  require('./routes/provider')(context, config);\n  require('./routes/schema')(context, config);\n  require('./routes/settings')(context, config);\n  require('./routes/shippo')(context, config);\n  require('./routes/shopify')(context, config);\n  require('./routes/social')(context, config);\n  require('./routes/stripe')(context, config);\n  require('./routes/taxonomy')(context, config);\n  require('./routes/token')(context, config);\n  require('./routes/tools')(context, config);\n  require('./routes/user')(context, config);\n\n  return app;\n}\n\nmodule.exports = AceApiServer;\n","module.exports = require(\"cache-manager\");","module.exports = require(\"cache-manager-redis-store\");","module.exports = require(\"url-parse\");","module.exports = require(\"zlib\");","module.exports = require(\"le_node\");","module.exports = require(\"circular-json-es6\");","module.exports = require(\"object-sizeof\");","module.exports = require(\"deep-freeze\");","module.exports = require(\"xxhashjs\");","function Api() { }\n\nApi.defaultConfig = require('./config.default');\n\nApi.Assist = (...args) => new (require('./lib/assist'))(...args);\nApi.Auth = (...args) => new (require('./lib/auth'))(...args);\nApi.ClientConfig = (...args) => new (require('./lib/client-config'))(...args);\nApi.Db = (...args) => new (require('./lib/db'))(...args);\nApi.Ecommerce = (...args) => new (require('./lib/ecommerce'))(...args);\nApi.Email = (...args) => new (require('./lib/email'))(...args);\nApi.Embedly = (...args) => new (require('./lib/embedly'))(...args);\nApi.Entity = (...args) => new (require('./lib/entity'))(...args);\nApi.Fields = (...args) => new (require('./lib/fields'))(...args);\nApi.Helpers = (...args) => new (require('./lib/helpers'))(...args);\nApi.Instagram = (...args) => new (require('./lib/instagram'))(...args);\nApi.Jwt = (...args) => new (require('./lib/jwt'))(...args);\nApi.Pdf = (...args) => new (require('./lib/pdf'))(...args);\nApi.Roles = (...args) => new (require('./lib/roles'))(...args);\nApi.Schema = (...args) => new (require('./lib/schema'))(...args);\nApi.Settings = (...args) => new (require('./lib/settings'))(...args);\nApi.Shippo = (...args) => new (require('./lib/shippo'))(...args);\nApi.Shopify = (...args) => new (require('./lib/shopify'))(...args);\nApi.Stripe = (...args) => new (require('./lib/stripe'))(...args);\nApi.Taxonomy = (...args) => new (require('./lib/taxonomy'))(...args);\nApi.Tools = (...args) => new (require('./lib/tools'))(...args);\nApi.User = (...args) => new (require('./lib/user'))(...args);\n\nmodule.exports = Api;\n","const path = require('path');\n\nconst config = {\n  environment: process.env.ENVIRONMENT || 'development',\n  debug: process.env.DEBUG || false,\n\n  slug: process.env.SLUG,\n  baseUrl: process.env.BASE_URL || '',\n\n  db: {\n    url: process.env.DB_URL,\n    host: process.env.DB_HOST,\n    name: process.env.DB_NAME,\n    requestPlugin: process.env.DB_REQUEST_PLUGIN,\n    meterType: process.env.DB_METER_TYPE,\n  },\n\n  auth: {\n    superUserId: process.env.AUTH_SUPER_USER_ID,\n    tokenSecret: process.env.AUTH_TOKEN_SECRET || 'change_this_secret',\n  },\n\n  dev: {\n    userId: process.env.DEV_USER_ID || 'dev',\n    role: process.env.DEV_ROLE || 'super',\n  },\n\n  cms: {\n    title: process.env.CMS_TITLE,\n    url: process.env.CMS_URL,\n  },\n\n  assist: {\n    url: process.env.ASSIST_URL,\n    username: process.env.ASSIST_USERNAME,\n    password: process.env.ASSIST_PASSWORD,\n  },\n\n  mailgun: {\n    apiKey: process.env.MAILGUN_API_KEY,\n    domain: process.env.MAILGUN_DOMAIN,\n  },\n\n  embedly: {\n    apiKey: process.env.EMBEDLY_API_KEY,\n  },\n\n  pdf: {\n    templatesPath: path.resolve(__dirname, 'pdf'),\n  },\n\n  email: {\n    templatesPath: path.resolve(__dirname, 'email'),\n  },\n\n  provider: {\n    google: {\n      clientId: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    },\n\n    instagram: {\n      clientId: process.env.INSTAGRAM_CLIENT_ID,\n      clientSecret: process.env.INSTAGRAM_CLIENT_SECRET,\n    },\n\n    spotify: {\n      clientId: process.env.SPOTIFY_CLIENT_ID,\n      clientSecret: process.env.SPOTIFY_CLIENT_SECRET,\n    },\n\n    stripe: {\n      clientId: process.env.STRIPE_CLIENT_ID,\n      clientSecret: process.env.STRIPE_CLIENT_SECRET,\n      apiKey: process.env.STRIPE_API_KEY,\n    },\n\n    twitter: {\n      consumerKey: process.env.TWITTER_CONSUMER_KEY,\n      consumerSecret: process.env.TWITTER_CONSUMER_SECRET,\n      accessTokenKey: process.env.TWITTER_ACCESS_TOKEN_KEY,\n      accessTokenSecret: process.env.TWITTER_ACCESS_TOKEN_SECRET,\n    },\n\n    vimeo: {\n      clientId: process.env.VIMEO_CLIENT_ID,\n      clientSecret: process.env.VIMEO_CLIENT_SECRET,\n    },\n  },\n};\n\nmodule.exports = config;\n","module.exports = require(\"password-hash\");","const _ = require('lodash');\nconst querystring = require('querystring');\nconst axios = require('axios');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\n\nconst providerTokenUri = {\n  google: 'https://www.googleapis.com/oauth2/v4/token',\n  instagram: 'https://api.instagram.com/oauth/access_token',\n  stripe: 'https://connect.stripe.com/oauth/token',\n  vimeo: 'https://api.vimeo.com/oauth/access_token',\n  spotify: 'https://accounts.spotify.com/api/token',\n};\n\nclass Auth {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async authoriseUser(slug, userId) {\n    const isSuperUser = this.config.auth.superUserId.split(',').map(superUser => superUser.trim()).indexOf(userId) > -1;\n\n    if (isSuperUser) {\n      return {\n        id: userId,\n        role: 'super',\n      };\n    }\n\n    const clientConfig = await Db.connect(this.config, slug).get('config');\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    if (!user.active) {\n      throw Error(`User not active: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async authProvider(provider, params = {}, userId = null, refresh = false) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const providerConfig = _.merge({}, this.config.provider[provider], params || {});\n\n    let providerClientConfig;\n\n    if (userId) {\n      providerClientConfig = _.get(clientConfig, ['userSettings', userId, 'provider', provider], {});\n    } else {\n      providerClientConfig = _.get(clientConfig, ['provider', provider], {});\n    }\n\n    const data = {\n      grant_type: refresh ? 'refresh_token' : 'authorization_code',\n      code: params && params.code ? params.code : undefined,\n      client_id: providerConfig.clientId,\n      client_secret: providerConfig.clientSecret,\n      redirect_uri: providerConfig.redirectUri,\n      refresh_token: providerClientConfig.refresh_token,\n    };\n\n    const uri = providerTokenUri[provider];\n\n    let providerAuth;\n\n    try {\n      providerAuth = (await axios.post(uri, querystring.stringify(data))).data;\n    } catch (error) {\n      throw new Error(JSON.stringify(error.response.data));\n    }\n\n    providerClientConfig = _.merge({}, providerClientConfig, providerAuth);\n    providerClientConfig.begins = Math.floor(new Date().getTime() / 1000);\n\n    if (provider === 'google') {\n      try {\n        providerClientConfig.user = (await axios.get(`https://www.googleapis.com/plus/v1/people/me?access_token=${providerClientConfig.access_token}`)).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (provider === 'spotify') {\n      try {\n        providerClientConfig.user = (await axios.get(`https://api.spotify.com/v1/me?access_token=${providerClientConfig.access_token}`)).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (userId) {\n      _.set(clientConfig, ['userSettings', userId, 'provider', provider], providerClientConfig);\n    } else {\n      _.set(clientConfig, ['provider', provider], providerClientConfig);\n    }\n\n    return cc.set(clientConfig);\n  }\n\n}\n\nmodule.exports = Auth;\n","module.exports = require(\"querystring\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass Ecommerce {\n  constructor(config) {\n    this.config = config;\n  }\n\n  getType(type, query) {\n    return new Promise((resolve, reject) => {\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      Db.connect(this.config).search('ecommerce', type, query)\n        .then(resolve, reject);\n    });\n  }\n\n  setType(type, item) {\n    return new Promise((resolve, reject) => {\n      item.type = type;\n\n      Helpers.createOrUpdate(this.config, item)\n        .then(resolve, reject);\n    });\n  }\n\n  deleteType(items) {\n    return new Promise((resolve, reject) => {\n      items = items.map(item => ({\n        _id: item._id,\n        _rev: item._rev,\n        _deleted: true,\n      }));\n\n      Helpers.chunkUpdate(this.config, items, 1000)\n        .then(resolve, reject);\n    });\n  }\n\n  getOrder(orderId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'orderByOrderId', {\n        key: orderId,\n        include_docs: true,\n      })\n        .then((body) => {\n          if (!body.rows.length) {\n            reject(new Error('Order not found'));\n            return;\n          }\n\n          resolve(body.rows[0].doc);\n        }, reject);\n    });\n  }\n\n  verifyDiscount(code) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'discountByCode', {\n        keys: [code],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            const discount = body.rows[0].doc;\n\n            const now = new Date().getTime();\n\n            const dateStart = new Date(Date.parse(discount.dateStart)).getTime();\n            const dateEnd = new Date(Date.parse(discount.dateEnd)).getTime();\n\n            if (dateStart > now) {\n              reject(new Error('Discount not valid (not begun)'));\n              return;\n\n            }\n\n            if (dateEnd < now) {\n              reject(new Error('Discount not valid (expired)'));\n              return;\n            }\n\n            resolve(discount);\n\n          } else {\n            reject(new Error({\n              statusCode: 404,\n              message: `Discount code not found (${code})`,\n            }));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Ecommerce;\n","module.exports = require(\"nodemailer\");","module.exports = require(\"createsend-node\");","module.exports = require(\"nodemailer-mailgun-transport\");","module.exports = require(\"email-templates\");","module.exports = require(\"inky\");","module.exports = require(\"mjml\");","module.exports = require(\"mjml-core\");","module.exports = require(\"mjml-validator\");","module.exports = require(\"mjml-mailchimp\");","module.exports = require(\"html-to-text\");","module.exports = require(\"moment\");","module.exports = require(\"i18n-iso-countries\");","module.exports = require(\"node-sass\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst EmbedlyApi = require('embedly');\n\nclass Embedly {\n  constructor(config) {\n    this.config = config;\n  }\n\n  oembed(urls) {\n    return new Promise((resolve, reject) => {\n      const embedly = new EmbedlyApi({\n        key: this.config.embedly.apiKey,\n      });\n\n      const opts = {\n        urls: _.isArray(urls) ? urls : [urls],\n        format: 'json',\n      };\n\n      embedly.oembed(opts, (error, result) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(result);\n      });\n    });\n  }\n\n}\n\nmodule.exports = Embedly;\n","module.exports = require(\"embedly\");","module.exports = require(\"json-query\");","module.exports = require(\"deep-diff\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst request = require('request-promise');\n\nmodule.exports = function (options) {\n  const defaultOptions = {\n    client_id: null,\n    access_token: null,\n    version: 'v1',\n    host: 'https://api.instagram.com',\n  };\n\n  options = _.merge({}, defaultOptions, options || {});\n\n  const _request = (method, endpoint, query) => new Promise((resolve, reject) => {\n    const requestOptions = {\n      method,\n      url: [options.host, options.version, endpoint].join('/'),\n      qs: {\n        access_token: query.access_token || options.access_token,\n        client_id: query.client_id || options.client_id,\n      },\n    };\n\n    requestOptions.qs = _.extend({}, requestOptions.qs, query);\n\n    request(requestOptions)\n      .then((response) => {\n        resolve(JSON.parse(response));\n      }, reject);\n  });\n\n  this.get = (endpoint, query) => _request('GET', endpoint, query);\n};\n","const jwt = require('jsonwebtoken');\n\nclass Jwt {\n  constructor(config) {\n    this.config = config;\n  }\n\n  signToken(payload, options = {}) {\n    return jwt.sign(payload, this.config.auth.tokenSecret, options);\n  }\n\n  verifyToken(token) {\n    return jwt.verify(token, this.config.auth.tokenSecret);\n  }\n}\n\nmodule.exports = Jwt;\n","module.exports = require(\"jsonwebtoken\");","const fs = require('fs');\nconst path = require('path');\nconst _ = require('lodash');\nconst _eval = require('eval');\nconst request = require('request-promise');\nconst readdir = require('recursive-readdir');\nconst Entity = require('./entity');\nconst ClientConfig = require('./client-config');\n\nclass Pdf {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getTemplates() {\n    const templates = {};\n\n    const files = await readdir(this.config.pdf.templatesPath);\n\n    files.forEach((file) => {\n      if (!/\\.js$/.test(file)) {\n        return;\n      }\n\n      const id = file\n        .replace(`${this.config.pdf.templatesPath}/`, '')\n        .replace('.js', '');\n\n      // eslint-disable-next-line\n      templates[id] = require(file);\n    });\n\n    return templates;\n  }\n\n  async getPayload(templateId, entityId, role) {\n    // if (!this.templates) {\n    //   this.templates = await this.getTemplates();\n    // }\n\n    // if (!this.templates[templateId]) {\n    //   throw new Error('Template not found');\n    // }\n\n    const template = _eval(fs.readFileSync(path.join(this.config.pdf.templatesPath, `${templateId}.js`), 'utf-8'), `${templateId}.js`, {}, true);\n\n    const entity = new Entity(this.config);\n\n    const entities = (await entity.entityList([entityId], { children: 2, role })).map(row => row.doc);\n\n    if (entities.length === 0) {\n      throw new Error('Entity not found');\n    }\n\n    const payload = template(Entity.flattenValues(entities)[0]);\n\n    return payload;\n  }\n\n  async getPdf(payload) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n    const assistPdfUrl = `${this.config.assist.url}/${assetSlug}/pdf/download`;\n\n    payload = typeof payload === 'object' ? JSON.stringify(payload).replace(/'/gi, '’') : payload;\n\n    const response = await request({\n      method: 'POST',\n      uri: assistPdfUrl,\n      encoding: null,\n      form: {\n        payload,\n      },\n    });\n\n    return response;\n  }\n\n}\n\nmodule.exports = Pdf;\n","module.exports = require(\"eval\");","module.exports = require(\"recursive-readdir\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 75;","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass Settings {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async update(settings) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.client = _.merge({}, clientConfig.client, settings);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = Settings;\n","const Promise = require('bluebird');\nconst shippo = require('shippo');\n\nclass Shippo {\n  constructor(config) {\n    this.config = config;\n\n    this.shippo = shippo(config.shippo.token);\n  }\n\n  getQuote(address, parcel) {\n    return new Promise((resolve, reject) => {\n\n      const addressFrom = {\n        object_purpose: 'QUOTE',\n        zip: this.config.shippo.fromZip,\n        country: this.config.shippo.fromCountry,\n      };\n\n      const addressTo = {\n        object_purpose: 'QUOTE',\n        // 'name': address.name,\n        // 'company': '',\n        // 'street1': address.street1,\n        // 'street2': address.street2,\n        // 'city': address.city,\n        // 'state': '',\n        zip: address.zip,\n        country: address.country,\n        // 'phone': address.phone,\n        // 'email': address.email,\n        metadata: '',\n      };\n\n      parcel.distance_unit = 'cm';\n      parcel.mass_unit = 'kg';\n\n      this.shippo.shipment.create({\n        object_purpose: 'QUOTE',\n        address_from: addressFrom,\n        address_to: addressTo,\n        parcel,\n      })\n        .then((shipment) => {\n          const ratesReady = (shipment, attempts) => {\n            if ((shipment.object_status === 'QUEUED' || shipment.object_status === 'WAITING') && attempts < 10) {\n              this.shippo.shipment.retrieve(shipment.object_id).then((val) => {\n                ratesReady(val, attempts + 1);\n              });\n\n            } else {\n              this.shippo.shipment.rates(shipment.object_id)\n                .then((rates) => {\n                  resolve(rates);\n\n                }, (error) => {\n                  console.error('There was an error retrieving rates : %s', error);\n                  reject(error);\n                });\n            }\n          };\n\n          ratesReady(shipment, 0);\n\n        }, (error) => {\n          console.error('There was an error creating shipment: %s', error);\n          reject(error);\n        });\n\n    });\n  }\n\n}\n\nmodule.exports = Shippo;\n","module.exports = require(\"shippo\");","const axios = require('axios');\nconst he = require('he');\nconst Handlebars = require('handlebars');\nconst jsontoxml = require('jsontoxml');\n\nconst ClientConfig = require('./client-config');\n\nclass Shopify {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getCatalog({ shopLink, productLinkTemplate }) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const result = (await axios({\n      url: `https://${clientConfig.provider.shopify.domain}.myshopify.com/api/graphql`,\n      method: 'post',\n      headers: {\n        'X-Shopify-Storefront-Access-Token': clientConfig.provider.shopify.storefrontAccessToken,\n      },\n      data: {\n        query: `\n          query {\n            shop {\n              name\n              primaryDomain {\n                url\n              }\n              description\n              products(first: 250) {\n                edges {\n                  node {\n                    id\n                    handle\n                    title\n                    description\n                    onlineStoreUrl\n                    images(first: 1) {\n                      edges {\n                        node {\n                          originalSrc\n                          transformedSrc\n                        }\n                      }\n                    }\n                    productType\n                    vendor\n                    availableForSale\n                    priceRange {\n                      minVariantPrice {\n                        amount\n                        currencyCode\n                      }\n                      maxVariantPrice {\n                        amount\n                        currencyCode\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `,\n      },\n    })).data.data;\n\n    const template = Handlebars.compile(productLinkTemplate);\n\n    const products = result.shop.products.edges.map(edge => ({\n      'g:id': edge.node.handle,\n      'g:title': he.encode(edge.node.title),\n      'g:description': he.encode(edge.node.description),\n      // 'g:link': edge.node.onlineStoreUrl,\n      'g:link': template({ handle: edge.node.handle }),\n      'g:image_link': edge.node.images.edges[0].node.originalSrc,\n      'g:brand': edge.node.vendor,\n      'g:condition': 'new',\n      'g:availability': edge.node.availableForSale ? 'in stock' : 'out of stock',\n      'g:price': `${edge.node.priceRange.minVariantPrice.amount} ${edge.node.priceRange.minVariantPrice.currencyCode}`,\n      // 'g:google_product_category': he.encode(edge.node.productType),\n    }));\n\n    const channel = [\n      { name: 'title', text: result.shop.name },\n      // { name: 'link', text: result.shop.primaryDomain.url },\n      { name: 'link', text: shopLink },\n      { name: 'description', text: result.shop.description },\n    ];\n\n    products.forEach((product) => {\n      channel.push({\n        name: 'item',\n        children: product,\n      });\n    });\n\n    return `<?xml version=\"1.0\"?>\n    <rss xmlns:g=\"http://base.google.com/ns/1.0\" version=\"2.0\">\n      ${jsontoxml({ channel })}\n    </rss>`;\n  }\n}\n\nmodule.exports = Shopify;\n","module.exports = require(\"he\");","module.exports = require(\"handlebars\");","module.exports = require(\"jsontoxml\");","const _ = require('lodash');\nconst Stripe = require('stripe');\nconst Promise = require('bluebird');\nconst Hashids = require('hashids');\n\nconst ClientConfig = require('./client-config');\nconst Email = require('./email');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass StripeClass {\n  constructor(config) {\n    this.config = config;\n\n    this.stripe = Stripe(this.config.stripe.apiKey);\n    this.email = new Email(this.config);\n\n    this.hashids = new Hashids(this.config.slug, 6, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n  }\n\n  async getSettings() {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    let settings;\n\n    try {\n      settings = clientConfig.module.ecommerce;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    try {\n      settings.clientStripeAccountId = clientConfig.provider.stripe.stripe_user_id;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    settings.client = clientConfig.client;\n    settings.assets = clientConfig.assets;\n\n    return settings;\n  }\n\n  checkout(token, order) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n\n          const listId = _.get(settings, 'createsend.checkoutSubscriberListId');\n\n          if (order.subscribe && listId) {\n            this.email.subscribe(order.customerDetails, 'createsend', listId)\n              .then((result) => {\n                console.log(result);\n              }, (error) => {\n                console.error(error);\n              });\n          }\n\n          // lookup customer by email, create if not found\n          this.findOrCreateCustomer(order.customerDetails.email, order)\n            .then((customer) => {\n\n              // store order data (customer, items, address)\n              this.createOrder(order, customer)\n                .then((order) => {\n\n                  this.updateOrCreateStripeCustomer(settings.clientStripeAccountId, customer, token, order)\n                    .then((stripeCustomer) => {\n\n                      // update customer, append order to customer, update metadata\n                      this.updateCustomer(customer, stripeCustomer, order)\n                        .then((customer) => {\n\n                          // create charge, take fee\n                          this.createCharge(settings, stripeCustomer, customer, order)\n                            .then((updatedOrder) => {\n\n                              this.sendReceipt(settings, customer, order)\n                                .then((orderReceipt) => {\n\n                                  updatedOrder.messages.orderReceipt = orderReceipt;\n\n                                  this.sendNotification(settings, customer, order)\n                                    .then((orderNotification) => {\n\n                                      updatedOrder.messages.orderNotification = orderNotification;\n\n                                      // update order charge status, charge id\n                                      this.updateOrder(updatedOrder)\n                                        .then((finalOrder) => {\n\n                                          resolve(finalOrder);\n\n                                        }, reject);\n                                    }, reject);\n                                }, reject);\n                            }, reject);\n                        }, reject);\n                    }, reject);\n                }, reject);\n            }, reject);\n        }, reject)\n        .catch(reject);\n    });\n  }\n\n  retrieveAccount() {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.accounts.retrieve(settings.clientStripeAccountId)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  refund(order, amount) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.refunds.create({\n            refund_application_fee: true,\n            charge: order.charge.id,\n            amount,\n          }, {\n            stripe_account: settings.clientStripeAccountId,\n          })\n            .then((refund) => {\n              this.stripe.charges.retrieve(order.charge.id, {\n                stripe_account: settings.clientStripeAccountId,\n              })\n                .then((charge) => {\n                  order.charge.status = charge.status;\n                  order.charge.amount = charge.amount;\n                  order.charge.amountRefunded = charge.amount_refunded;\n\n                  Helpers.createOrUpdate(this.config, order)\n                    .then(resolve, reject);\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  findOrCreateCustomer(email, order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'customerByEmail', {\n        keys: [email],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            resolve(body.rows[0].doc);\n\n          } else {\n            const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n            const newCustomer = {\n              type: 'customer',\n              createdAt: now,\n              modifiedAt: now,\n              email: order.customerDetails.email,\n              name: order.customerDetails.name,\n              phone: order.customerDetails.phone,\n              billingAddress: order.billingAddress,\n              shippingAddress: order.shippingAddress,\n              orders: [],\n            };\n\n            Db.connect(this.config).insert(newCustomer)\n              .then((body) => {\n                newCustomer._id = body.id;\n                newCustomer._rev = body.rev;\n\n                resolve(newCustomer);\n              }, reject);\n          }\n        }, reject);\n    });\n  }\n\n  updateOrCreateStripeCustomer(clientStripeAccountId, customer, token, order) {\n    return new Promise((resolve, reject) => {\n      const stripeCustomer = {\n        source: token,\n        email: order.customer.email,\n        description: order.customer.name,\n        metadata: {\n          customer_id: customer._id,\n        // billingAddress: JSON.stringify(order.billingAddress),\n        // shippingAddress: JSON.stringify(order.shippingAddress)\n        },\n      };\n\n      if (customer.stripe && customer.stripe.customer.id) {\n        this.stripe.customers.update(customer.stripe.customer.id, stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        })\n          .then(resolve, (error) => {\n            if (error.type === 'StripeInvalidRequestError' && error.param === 'id') {\n              this.stripe.customers.create(stripeCustomer, {\n                stripe_account: clientStripeAccountId,\n              }).then(resolve, reject);\n\n            } else {\n              reject(error);\n            }\n          });\n\n      } else {\n        this.stripe.customers.create(stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        }).then(resolve, reject);\n      }\n    });\n  }\n\n  createOrder(order, customer) {\n    return new Promise((resolve, reject) => {\n      const items = order.items.map(item => ({\n        id: item.id,\n        title: item.title.replace(/<br\\s?>/ig, ' ').replace(/<\\/?p>|<\\/?span>/ig, ''),\n        price: item.price,\n        quantity: item.quantity,\n        metadata: item.metadata || {},\n      }));\n\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      const newOrder = {\n        type: 'order',\n        orderId: this.hashids.encode(new Date().getTime()),\n        createdAt: now,\n        modifiedAt: now,\n        customer: {\n          id: customer._id,\n          email: customer.email,\n          name: customer.name,\n        },\n        items,\n        shippingMethod: {\n          name: order.shippingMethod.name,\n          amount: Number(order.shippingMethod.amount),\n        },\n        subtotal: Number(order.subtotal),\n        tax: {\n          rate: order.tax.rate || 0,\n          includedInPrice: order.tax.includedInPrice || false,\n          total: order.tax.total || 0,\n          show: order.tax.show || false,\n        },\n        discount: {\n          code: order.discount.code || '',\n          name: order.discount.name || '',\n          total: order.discount.total || 0,\n        },\n        total: Number(order.total),\n        billingAddress: order.billingAddress,\n        shippingAddress: order.shippingAddress,\n        messages: {},\n        status: 'pending',\n        test: true,\n      };\n\n      Db.connect(this.config).insert(newOrder)\n        .then((body) => {\n          newOrder._id = body.id;\n          newOrder._rev = body.rev;\n\n          resolve(newOrder);\n        }, reject);\n    });\n  }\n\n  updateOrder(order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).insert(order)\n        .then((body) => {\n          order._rev = body.rev;\n\n          resolve(order);\n        }, reject);\n    });\n  }\n\n  updateCustomer(customer, stripeCustomer, order) {\n    return new Promise((resolve, reject) => {\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      customer.modifiedAt = now;\n\n      if (!customer.orders) {\n        customer.orders = [];\n      }\n\n      customer.orders.push(order._id);\n\n      if (!customer.stripe) {\n        customer.stripe = {\n          customer: {\n            id: null,\n          },\n        };\n      }\n\n      customer.stripe.customer.id = stripeCustomer.id;\n\n      Db.connect(this.config).insert(customer)\n        .then((body) => {\n          customer._rev = body.rev;\n\n          resolve(customer);\n        }, reject);\n    });\n  }\n\n  createCharge(settings, stripeCustomer, customer, order) {\n    return new Promise((resolve, reject) => {\n      const amount = Number(order.total) * 100;\n\n      const charge = {\n        amount,\n        currency: settings.currency.iso.toLowerCase(),\n        customer: stripeCustomer.id,\n        capture: true,\n        description: order.orderId,\n        // shipping: order.shippingAddress, // fraud prevention, must follow expected schema\n        metadata: {\n          customer_id: customer._id,\n          order_id: order._id,\n        },\n        statement_descriptor: _.kebabCase(settings.storeName).toUpperCase(),\n        application_fee: Math.ceil(amount * 0.02),\n      };\n\n      this.stripe.charges.create(charge, {\n        stripe_account: settings.clientStripeAccountId,\n      })\n        .then((charge) => {\n\n          order.charge = {\n            paymentGateway: 'stripe',\n            id: charge.id,\n            status: charge.status,\n            currency: charge.currency.toUpperCase(),\n            amount: charge.amount,\n            amountRefunded: charge.amount_refunded,\n          };\n\n          order.test = !charge.livemode;\n\n          resolve(order);\n\n        }, reject);\n    });\n  }\n\n  sendReceipt(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: customer.email,\n        subject: `Your order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-receipt`, templateData).then(resolve, reject);\n    });\n  }\n\n  sendNotification(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: settings.emailSenderAddress,\n        subject: `New order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-notification`, templateData).then(resolve, reject);\n    });\n  }\n\n}\n\nmodule.exports = StripeClass;\n","module.exports = require(\"stripe\");","module.exports = require(\"hashids\");","const _ = require('lodash');\nconst Db = require('./db');\nconst ClientConfig = require('./client-config');\n\nclass Taxonomy {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async create(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.taxonomies.push(taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const taxonomy = _.find(clientConfig.taxonomies, { slug: taxonomySlug });\n\n    if (!taxonomy) {\n      throw Error(`Taxonomy not found: ${taxonomySlug}`);\n    }\n\n    return taxonomy;\n  }\n\n  async update(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.taxonomies, { slug: taxonomy.slug });\n\n    if (index === -1) {\n      throw Error(`Taxonomy not found: ${taxonomy.slug}`);\n    }\n\n    clientConfig.taxonomies.splice(index, 1, taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    taxonomySlug = _.isArray(taxonomySlug) ? taxonomySlug : [taxonomySlug];\n\n    clientConfig.taxonomies = clientConfig.taxonomies.filter(taxonomy => taxonomySlug.indexOf(taxonomy.slug) === -1);\n\n    return cc.set(clientConfig);\n  }\n\n  async entitiesByTerm(term) {\n    const db = Db.connect(this.config);\n\n    const entityGroups = (await db.view('entity', 'byTaxonomyTerm', { keys: [term.id], group: true })).rows.map(row => row.value)[0];\n\n    if (!entityGroups) {\n      return [];\n    }\n\n    let entityIds = [];\n\n    _.forEach(entityGroups, (entities) => {\n      entityIds = entityIds.concat(entities);\n    });\n\n    entityIds = _.uniq(entityIds);\n\n    const entities = (await db.fetch({ keys: entityIds, include_docs: true })).rows\n      .filter(row => row.doc)\n      .map(row => row.doc);\n\n    return entities;\n  }\n\n  async createTerm(taxonomySlug, term) {\n    const taxonomy = await this.read(taxonomySlug);\n\n    taxonomy.terms.push(term);\n\n    return this.update(taxonomy);\n  }\n\n  async updateTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.map((_term) => {\n            if (_term.id === term.id) {\n              _term.title = term.title;\n              _term.slug = term.slug;\n            }\n\n            if (!_term.parents) {\n              _term.parents = [];\n            }\n\n            _term.parents = _term.parents.map((parent) => {\n              if (parent.id === term.id) {\n                parent.title = term.title;\n                parent.slug = term.slug;\n              }\n              return parent;\n            });\n\n            return _term;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n\n  async deleteTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.filter((_term) => {\n            if (_term.id === term.id) {\n              return false;\n            }\n\n            if ((_term.parents || []).filter(parent => parent.id === term.id).length) {\n              return false;\n            }\n\n            return true;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n}\n\nmodule.exports = Taxonomy;\n","const Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst Cloudant = require('@cloudant/cloudant');\nconst Db = require('./db');\n\nclass Tools {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getDb() {\n    const result = await Db.connect(this.config).fetch({\n      include_docs: true,\n    });\n\n    return result;\n  }\n\n  async getChanges() {\n    const result = await Db.connect(this.config).changes({\n      limit: 50,\n      include_docs: true,\n      filter: 'tools/changesEntity',\n    });\n\n    return result;\n  }\n\n  async importDb(dbBackupFile) {\n    const dbName = this.config.db.name;\n\n    const fileConents = await fs.readFileAsync(dbBackupFile.path);\n\n    const docs = JSON.parse(fileConents).rows.map((row) => {\n      const { doc } = row;\n      delete doc._rev;\n      return doc;\n    });\n\n    await fs.unlinkAsync(dbBackupFile.path);\n\n    const cloudant = new Cloudant({\n      url: this.config.db.url,\n      plugins: ['promises', 'retry'],\n    }).db;\n\n    try {\n      await cloudant.destroy(dbName);\n    } catch (error) {\n      //\n    }\n\n    await cloudant.create(dbName);\n\n    const result = await Db.connect(this.config, dbName).bulk({ docs });\n\n    return result;\n  }\n\n}\n\nmodule.exports = Tools;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass User {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.users.push(user);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async update(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.users, { id: user.id });\n\n    if (index === -1) {\n      throw Error(`User not found: ${user.id}`);\n    }\n\n    clientConfig.users.splice(index, 1, user);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    userId = _.isArray(userId) ? userId : [userId];\n\n    clientConfig.users = clientConfig.users.filter(user => userId.indexOf(user.id) === -1);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = User;\n","module.exports = ({\n  Analytics,\n  router,\n  authMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/analytics.:ext?',\n    authMiddleware,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const analytics = Analytics(await getConfig());\n\n      try {\n        handleResponse(req, res, await analytics.get(req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Auth,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/auth/:provider/config',\n    authMiddleware,\n    permissionMiddleware.bind(null, ['settings', 'userSettings']),\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      if (!config.provider[req.params.provider]) {\n        res.status(404);\n        res.send({});\n        return;\n      }\n\n      res.status(200);\n      res.send({ clientId: config.provider[req.params.provider].clientId });\n    })\n  );\n\n  router.get(\n    '/auth/:provider',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    (req, res) => {\n      res.status(req.query.error ? 500 : 200);\n      res.send(`${req.params.provider}: ${(req.query.error_description ? req.query.error_description : 'successfully authenticated')}`);\n    }\n  );\n\n  router.post(\n    '/auth/:provider',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/auth/:provider/refresh',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, null, true));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/auth/:provider/:userId',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'userSettings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, req.params.userId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/auth/:provider/:userId/refresh',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, req.params.userId, true));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  router,\n  cache,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n}) => {\n\n  /**\n   * @swagger\n   * /cache/clear:\n   *  get:\n   *    tags:\n   *      - cache\n   *    summary: Clear cache\n   *    description: Clears the LRU cache of API responses\n   *    produces:\n   *      - text/plain\n   *    responses:\n   *      200:\n   *        description: Result\n   */\n  router.get(\n    '/cache/clear.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      if (!config.cache.enabled) {\n        handleResponse(req, res, 'Cache disabled');\n        return;\n      }\n\n      const pattern = cache.store.name === 'redis' ? '*' : undefined;\n\n      cache.keys(pattern).then((keys) => {\n        const items = keys.filter(key => key.indexOf(req.session.slug) === 0);\n\n        items.forEach(key => cache.del(key));\n\n        handleResponse(req, res, `${items.length} items removed from cache`);\n      });\n    })\n  );\n\n};\n","module.exports = ({\n  ClientConfig,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/config.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.get());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/config.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'config'),\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.set(req.body.config));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  router,\n}) => {\n\n  router.all('/debug/useragent.:ext?', (req, res) => {\n    const expressUseragent = require('express-useragent');\n    const useragent = expressUseragent.parse(req.headers['user-agent']);\n\n    res.status(200);\n    res.send(`\n      <html>\n        <head>\n          <title>${useragent.source}</title>\n          <meta name=\"description\" content=\"${useragent.source}\">\n        </head>\n        <body>${useragent.source}</body>\n      </html>\n    `);\n  });\n\n};\n","module.exports = require(\"express-useragent\");","const isArray = require('lodash/isArray');\n\nmodule.exports = ({\n  Ecommerce,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/ecommerce/order/message/:message.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        const order = await ecommerce.getOrder(req.query.orderId);\n        handleResponse(req, res, order.messages[req.params.message].email.html);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (isArray(req.query.sort)) {\n        req.query.sort = JSON.stringify(req.query.sort).replace(/\\\\\"/g, '');\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.getType(req.params.type, req.query));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (!/^(discount|order)$/.test(req.params.type)) {\n        handleError(req, res, `Illegal type: ${req.params.type}`);\n        return;\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.setType(req.params.type, req.body.item));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (!/^(discount)$/.test(req.params.type)) {\n        handleError(req, res, `Illegal type: ${req.params.type}`);\n        return;\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.deleteType(req.body.item));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/ecommerce/discount/:code.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.verifyDiscount(req.params.code));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Email,\n  Entity,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /email/preview:\n   *  get:\n   *    tags:\n   *      - email\n   *    summary: Preview email template\n   * #   description: Preview email template\n   *    produces:\n   *      - text/html\n   *    parameters:\n   *      - name: slug\n   *        description: Slug (optionally override slug in development mode)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: templateSlug\n   *        description: Template slug (folder name of the template)\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: payload\n   *        description: JSON payload from which to render the template\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: entityId\n   *        description: Entity `_id` from which to render the template\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: inlineStyles\n   *        description: Inline CSS\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: true\n   *    responses:\n   *      200:\n   *        description: Template\n   */\n  router.all(\n    '/email/preview.:ext?',\n    asyncMiddleware(async(req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query || {};\n\n      const templateOptions = {\n        data: input.data ? JSON.parse(input.data) : false,\n        inlineStyles: input.inlineStyles ? JSON.parse(input.inlineStyles) : true,\n        inky: input.inky ? JSON.parse(input.inky) : false,\n        mjml: input.mjml ? JSON.parse(input.mjml) : false,\n        skipValidation: input.skipValidation ? JSON.parse(input.skipValidation) : false,\n      };\n\n      const slug = input.slug || req.session.slug;\n\n      // if (!slug) {\n      //   throw new Error('Missing `slug` parameter');\n      // }\n\n      async function renderTemplate(data = {}) {\n        if (templateOptions.data) {\n          handleResponse(req, res, data);\n          return;\n        }\n\n        const email = Email(await getConfig(slug));\n\n        try {\n          const template = await email.getTemplate(input.templateSlug, data, templateOptions);\n\n          handleResponse(req, res, template.html);\n        } catch (error) {\n          handleError(req, res, error);\n        }\n      }\n\n      if (input.payload) {\n        renderTemplate(JSON.parse(input.payload));\n        return;\n      }\n\n      if (input.entityId) {\n        const entity = Entity(await getConfig(slug));\n\n        const entities = (await entity.entityList([input.entityId], { children: 2 })).map(row => row.doc);\n\n        renderTemplate(entity.flattenValues(entities)[0]);\n        return;\n      }\n\n      renderTemplate();\n    })\n  );\n\n  router.all(\n    '/email/send.:ext?',\n    asyncMiddleware(async(req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query || {};\n\n      const templateOptions = {\n        inlineStyles: input.inlineStyles ? JSON.parse(input.inlineStyles) : true,\n        inky: input.inky ? JSON.parse(input.inky) : false,\n        mjml: input.mjml ? JSON.parse(input.mjml) : false,\n        skipValidation: input.skipValidation ? JSON.parse(input.skipValidation) : true,\n      };\n\n      const emailOptions = {\n        fromName: input.fromName || '',\n        fromEmail: input.fromEmail,\n        toName: input.toName || '',\n        toEmail: input.toEmail,\n        from: `${input.fromName || ''} <${input.fromEmail}>`,\n        to: input.toEmail,\n        subject: input.subject,\n      };\n\n      const slug = input.slug || req.session.slug;\n\n      const email = Email(await getConfig(slug));\n\n      try {\n        const result = await email.sendEmail(emailOptions, input.templateSlug, input.payload, templateOptions);\n\n        handleResponse(req, res, result);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/email/subscribe.:ext?',\n    asyncMiddleware(async(req, res) => {\n      const email = Email(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await email.subscribe({\n          email: req.body.email || req.query.email,\n          name: req.body.name || req.query.name || '',\n        }));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Embedly,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/embedly/oembed.:ext?',\n    authMiddleware,\n    asyncMiddleware(async(req, res) => {\n      const embedly = Embedly(await getConfig());\n\n      try {\n        handleResponse(req, res, await embedly.oembed(req.query.url || req.query.urls));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const isArray = require('lodash/isArray');\n\nmodule.exports = ({\n  Db,\n  Entity,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * definitions:\n   *  Entity:\n   *    type: object\n   *    required:\n   *      - _id\n   *      - _rev\n   *    properties:\n   *      _id:\n   *        type: string\n   *      _rev:\n   *        type: string\n   *      schema:\n   *        type: string\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      thumbnail:\n   *        type: object\n   *      fields:\n   *        type: object\n   *      published:\n   *        type: boolean\n   *      publishedAt:\n   *        type: string\n   */\n\n  /**\n   * @swagger\n   * /entities/index:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Show indexes\n   *    description: Show all indexes, use this to find fields available for search/query.\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Indexes\n   */\n  router.get(\n    '/entities/index.:ext?',\n    asyncMiddleware(async(req, res) => {\n      try {\n        handleResponse(req, res, await Db(await getConfig(req.session.slug)).indexAsync());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/search:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Search entities\n   *    description: This endpoint extends Cloudant's Lucene based search. Learn more from Cloudant's [documentation](https://docs.cloudant.com/search.html).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: Lucene search query\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: include_docs\n   *        description: Include docs in search results (ignored if `children` or `parents` is `true`)\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: sort\n   *        description: Field to sort results by. Prefixed with `-` to reverse order. Suffixed with &#60;`string|number`&#62;\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: limit\n   *        description: Limit results (max 200)\n   *        in: query\n   *        required: false\n   *        type: number\n   *      - name: bookmark\n   *        description: Bookmark for the next page of results\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: group_field\n   *        description: Field to group results by\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: index\n   *        description: Search index\n   *        in: query\n   *        required: false\n   *        type: string\n   *        default: all\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: trashed\n   *        description: Get trashed entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Search result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            total_rows:\n   *              type: number\n   *            rows:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/search?.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async(req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      // eslint-disable-next-line\n      const include_docs = input.include_docs !== undefined\n        ? JSON.parse(input.include_docs) : false;\n\n      // eslint-disable-next-line\n      const include_fields = input.include_fields !== undefined\n        ? typeof input.include_fields === 'object' ? input.include_fields : JSON.parse(input.include_fields)\n        : [];\n\n      let children = input.children !== undefined\n        ? typeof input.children === 'object' ? input.children : JSON.parse(input.children)\n        : false;\n      let parents = input.parents !== undefined\n        ? typeof input.parents === 'object' ? input.parents : JSON.parse(input.parents)\n        : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      const trashed = input.trashed !== undefined\n        ? JSON.parse(input.trashed) : false;\n\n      const sort = input.sort !== undefined\n        ? input.sort : null;\n      const limit = input.limit !== undefined\n        ? parseInt(input.limit, 10) : null;\n\n      const bookmark = input.bookmark !== undefined\n        ? input.bookmark : null;\n\n      // eslint-disable-next-line\n      const group_field = input.group_field !== undefined\n        ? input.group_field : null;\n\n      const index = input.index !== undefined\n        ? input.index : null;\n\n      const q = input.query || input.q;\n\n      let query = [];\n\n      query.push(trashed ? 'trashed:true' : '!trashed:true');\n\n      if (req.session.role === 'guest') {\n        query.push('published:true');\n      }\n\n      if (q) {\n        query.push(`(${q})`);\n      }\n\n      query = query.join(' AND ');\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entitySearch(\n          {\n            query,\n            include_docs,\n            include_fields,\n            sort,\n            limit,\n            bookmark,\n            group_field,\n            index,\n          },\n          {\n            children,\n            parents,\n            role: req.session.role,\n          }\n        ), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/find:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Query entities\n   *    description: This endpoint extends CouchDB's Mango query. Learn more from Cloudant's [documentation](https://docs.cloudant.com/cloudant_query.html#finding-documents-using-an-index).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: JSON query object, refer to CouchDB/Cloudant docs.\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Query result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            docs:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/find.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async(req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      let children = input.children !== undefined\n        ? typeof input.children === 'object' ? input.children : JSON.parse(input.children)\n        : false;\n      let parents = input.parents !== undefined\n        ? typeof input.parents === 'object' ? input.parents : JSON.parse(input.parents)\n        : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      const trashed = input.trashed !== undefined\n        ? JSON.parse(input.trashed) : false;\n\n      const query = input.query\n        ? JSON.parse(input.query) : { selector: {} };\n\n      query.use_index = ['entityIndex', 'entity'];\n\n      if (!query.selector.$and) {\n        query.selector = {\n          $and: [\n            query.selector,\n          ],\n        };\n      }\n\n      if (trashed) {\n        query.selector.$and.push({ trashed: true });\n      } else {\n        query.selector.$and.push({\n          $or: [\n            {\n              trashed: {\n                $exists: false,\n              },\n            },\n            {\n              trashed: false,\n            },\n          ],\n        });\n      }\n\n      if (req.session.role === 'guest') {\n        query.selector.$and.push({ published: true });\n      }\n\n      if (req.query.limit) {\n        query.limit = parseInt(req.query.limit, 10);\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityFind(query, { children, parents, role: req.session.role }), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entities/field.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async(req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.fieldValues(req.query.slug || req.query.fieldSlug, req.query.searchTerm), true);\n      } catch (error) {\n        handleError(res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Get all entities\n   *    description: Get all entities, optionally from an array of IDs\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: id\n   *        description: Entity ID\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: ids\n   *        description: Entity IDs\n   *        in: query\n   *        required: false\n   *        type: array\n   *        items:\n   *          type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Entities\n   *        schema:\n   *          type: array\n   *          items:\n   *            $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async(req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      const select = input.select !== undefined ? input.select : false;\n\n      let children = input.children !== undefined\n        ? typeof input.children === 'object' ? input.children : JSON.parse(input.children)\n        : false;\n      let parents = input.parents !== undefined\n        ? typeof input.parents === 'object' ? input.parents : JSON.parse(input.parents)\n        : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      let ids = input.ids || input.id;\n\n      if (ids) {\n        ids = isArray(ids) ? ids : [ids];\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityList(ids, {\n          select,\n          children,\n          parents,\n          role: req.session.role,\n        }), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity/revisions.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async(req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRevisions(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityCreate'),\n    asyncMiddleware(async(req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityCreate(req.body.entity));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async(req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRead(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityUpdate'),\n    asyncMiddleware(async(req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityUpdate(req.body.entity || req.body.entities, req.body.restore || false));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async(req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityDelete(req.body.entity || req.body.entities, req.body.forever || false));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity/trashed.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async(req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityDelete('trashed'));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  ClientConfig,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /metadata:\n   *  get:\n   *    tags:\n   *      - metadata\n   *    summary: Get metadata\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Metadata\n   *        schema:\n   *          type: object\n   *          properties:\n   *            description:\n   *              type: string\n   */\n  router.get(\n    '/metadata.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const cc = ClientConfig(await getConfig(req.session.slug));\n\n      const clientConfig = await cc.get();\n\n      try {\n        handleResponse(req, res, clientConfig.client.metadata, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","const _ = require('lodash');\n\nmodule.exports = ({\n  Pdf,\n  ClientConfig,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleError,\n}) => {\n\n  router.get(\n    '/pdf/view.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          pdf.getPdf(payload)\n            .then((pdf) => {\n              res.type('application/pdf');\n              res.status(200);\n              res.send(pdf);\n            }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/download.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          pdf.getPdf(payload)\n            .then((pdf) => {\n              res.attachment(payload.fileName || 'download.pdf');\n              res.status(200);\n              res.send(pdf);\n            }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/payload.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          res.status(200);\n          res.json(payload);\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/submit.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig(req.session.slug);\n\n      const cc = ClientConfig(config);\n      const clientConfig = await cc.get();\n\n      const assetSlug = _.get(clientConfig, 'assets.slug', req.session.slug);\n\n      const pdf = Pdf(config);\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          payload = JSON.stringify(payload).replace(/'/gi, '’');\n\n          res.status(200);\n          res.send(`\n          <body onload='form.submit()'>\n            <form id='form' method='POST' action='${config.assist.url}/${assetSlug}/pdf/download' target='_self'>\n              <input type='hidden' name='payload' value='${payload}' />\n            </form>\n          </body>\n        `);\n        }, handleError.bind(null, req, res));\n    })\n  );\n};\n","const _ = require('lodash');\nconst axios = require('axios');\n\nmodule.exports = ({\n  Auth,\n  ClientConfig,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  const providerApiBaseUrl = {\n    google: 'https://www.googleapis.com',\n    instagram: 'https://api.instagram.com',\n    spotify: 'https://api.spotify.com',\n    vimeo: 'https://api.vimeo.com',\n  };\n\n  const providerApiHandler = asyncMiddleware(async(req, res) => {\n    const method = req.method;\n    const provider = req.params[0];\n    const userId = req.params[2] ? req.params[1] : null;\n    const endpoint = (req.params[2] || req.params[1]).split('/').filter(param => param !== '').join('/');\n\n    const config = await getConfig(req.session.slug);\n\n    const cc = ClientConfig(config);\n\n    let clientConfig = await cc.get();\n    let providerConfig;\n\n    if (userId) {\n      if (!clientConfig.userSettings[userId]) {\n        throw Error(`User settings not found: ${userId}`);\n      }\n      providerConfig = clientConfig.userSettings[userId].provider[provider];\n    } else {\n      providerConfig = clientConfig.provider[provider];\n    }\n\n    if (Math.floor(new Date().getTime() / 1000) - (providerConfig.begins || 0) > providerConfig.expires_in) {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      if (userId) {\n        clientConfig = await auth.authProvider(provider, {}, userId, true);\n        providerConfig = clientConfig.userSettings[userId].provider[provider];\n      } else {\n        clientConfig = await auth.authProvider(provider, {}, null, true);\n        providerConfig = clientConfig.provider[provider];\n      }\n    }\n\n    let params = _.merge({}, req.query);\n    params = _.omitBy(params, (value, key) => /^(__)/.test(key));\n\n    if (!/bearer/i.test(providerConfig.token_type)) {\n      params.access_token = providerConfig.access_token;\n    }\n\n    try {\n      const result = await axios.request({\n        url: endpoint,\n        baseURL: providerApiBaseUrl[provider],\n        method,\n        headers: {\n          Authorization: `Bearer ${providerConfig.access_token}`,\n        },\n        params,\n      });\n\n      handleResponse(req, res, result.data, true);\n    } catch (error) {\n      handleError(req, res, error);\n    }\n  });\n\n  router.all(\n    /\\/provider\\/([^/]+)\\/([^/]+)\\/api\\/?(.+)?/,\n    cacheMiddleware,\n    providerApiHandler,\n  );\n\n  router.all(\n    /\\/provider\\/([^/]+)\\/api\\/?(.+)?/,\n    cacheMiddleware,\n    providerApiHandler,\n  );\n\n};\n","module.exports = ({\n  Schema,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.create(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.read(req.query.schemaId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.update(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.delete(req.body.schemaSlug || req.body.schemaSlugs || req.query.schemaSlug || req.query.schemaSlugs));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schemas.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.updateAll(req.body.schemas));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Settings,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/settings.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const settings = Settings(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await settings.update(req.body.settings));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Shippo,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.all(\n    '/shippo/quote.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const shippo = Shippo(await getConfig());\n\n      const address = req.body.address || JSON.parse(req.params.address);\n      const parcel = req.body.parcel || JSON.parse(req.params.parcel);\n\n      try {\n        handleResponse(req, res, await shippo.getQuote(address, parcel), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Shopify,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /shopify/catalog:\n   *  get:\n   *    tags:\n   *      - shopify\n   *    summary: Get Facebook product feed xml\n   * #   description: Get Facebook product feed xml\n   *    produces:\n   *      - application/rss+xml\n   *    parameters:\n   *      - name: shopLink\n   *        description: Shop URL\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: productLinkTemplate\n   *        description: Product URL Handlebars template, containing {{handle}}\n   *        in: query\n   *        required: true\n   *        type: string\n   *    responses:\n   *      200:\n   *        description: XML Product Feed\n   */\n  router.get(\n    '/shopify/catalog.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const shopify = Shopify(await getConfig(req.session.slug));\n\n      try {\n        res.setHeader('Content-Type', 'application/rss+xml');\n        handleResponse(req, res, await shopify.getCatalog(req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  ClientConfig,\n  Instagram,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  const instagramAccessTokenMap = {};\n\n  router.get(\n    /\\/social\\/twitter\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      const Promise = require('bluebird');\n      const Twitter = require('twitter');\n\n      const twitter = Promise.promisifyAll(new Twitter({\n        consumer_key: config.provider.twitter.consumerKey,\n        consumer_secret: config.provider.twitter.consumerSecret,\n        access_token_key: config.provider.twitter.accessTokenKey,\n        access_token_secret: config.provider.twitter.accessTokenSecret,\n      }));\n\n      try {\n        handleResponse(req, res, await twitter[`${method}Async`](params.join('/'), req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    /\\/social\\/instagram\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      if (!instagramAccessTokenMap[req.session.slug]) {\n        const cc = ClientConfig(config);\n\n        try {\n          const clientConfig = await cc.get();\n          instagramAccessTokenMap[req.session.slug] = clientConfig.provider.instagram.access_token;\n        } catch (error) {\n          handleError(res, new Error('Instagram: access_token required'));\n          return;\n        }\n      }\n\n      req.query.access_token = instagramAccessTokenMap[req.session.slug];\n\n      const instagram = Instagram({\n        client_id: config.provider.instagram.clientId,\n      });\n\n      try {\n        const result = await instagram[method](params.join('/'), req.query);\n        try {\n          delete result.pagination.next_url;\n        } catch (error) {\n          //\n        }\n        handleResponse(req, res, result, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = require(\"twitter\");","module.exports = ({\n  Ecommerce,\n  Email,\n  Stripe,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.all(\n    '/stripe/checkout.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const token = req.body.token || JSON.parse(req.query.token);\n      const order = req.body.order || JSON.parse(req.query.order);\n\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.checkout(token, order));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/stripe/refund.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const order = req.body.order || JSON.parse(req.query.order);\n      const amount = Number(req.body.amount || req.query.amount || 0) * 100;\n\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.refund(order, amount));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/stripe/account.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.retrieveAccount());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/stripe/email.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig(req.session.slug);\n      const email = Email(config);\n      const stripe = Stripe(config);\n      const ecommerce = Ecommerce(config);\n\n      const settings = await stripe.getSettings();\n      const order = await ecommerce.getOrder(req.query.orderId);\n\n      const data = {\n        settings,\n        order,\n      };\n\n      const template = await email.getTemplate(`${req.session.slug}/${req.query.template}`, data);\n\n      try {\n        handleResponse(req, res, template.html);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Taxonomy,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * definitions:\n   *  TaxonomyTerm:\n   *    type: object\n   *    properties:\n   *      id:\n   *        type: string\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      terms:\n   *        type: array\n   *        items:\n   *          type: object\n   *          $ref: '#/definitions/TaxonomyTerm'\n   */\n\n  /**\n   * @swagger\n   * definitions:\n   *  Taxonomy:\n   *    type: object\n   *    properties:\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      terms:\n   *        type: array\n   *        items:\n   *          type: object\n   *          $ref: '#/definitions/TaxonomyTerm'\n   */\n\n  router.post(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.create(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /taxonomy:\n   *  get:\n   *    tags:\n   *      - taxonomy\n   *    summary: Get taxonomy\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Taxonomy slug\n   *        in: query\n   *        required: true\n   *        type: string\n   *    responses:\n   *      200:\n   *        description: Taxonomy\n   *        schema:\n   *          type: object\n   *          $ref: '#/definitions/Taxonomy'\n   */\n  router.get(\n    '/taxonomy.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.read(req.query.slug || req.query.taxonomySlug), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.update(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.delete(req.body.taxonomySlug || req.body.taxonomySlugs || req.query.taxonomySlug || req.query.taxonomySlugs));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.createTerm(req.body.slug || req.body.taxonomySlug, req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.updateTerm(req.query.term || req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.deleteTerm(req.query.term || req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Jwt,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  // handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /token:\n   *  get:\n   *    tags:\n   *      - token\n   *    summary: Get JWT\n   *    description: Get Json Web Token (JWT) for API access\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Slug for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: userId\n   *        description: User ID for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: role\n   *        description: Role for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: expiresIn\n   *        description: Duration of token in seconds\n   *        in: query\n   *        required: false\n   *        type: number\n   *    responses:\n   *      200:\n   *        description: Token\n   */\n\n  router.get(\n    '/token.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      const payload = {\n        role: req.session.role,\n        slug: req.session.slug,\n        userId: req.session.userId,\n      };\n\n      if (req.session.role === 'super' || config.environment === 'development') {\n        payload.role = req.query.role || req.session.role || config.dev.role;\n        payload.slug = req.query.slug || req.session.slug || config.dev.slug;\n        if (payload.role !== 'guest') {\n          payload.userId = req.query.userId || req.session.userId || config.dev.userId;\n        }\n      }\n\n      const _ = require('lodash');\n\n      let options = _.pickBy(req.query, (value, key) => /^(expiresIn|notBefore|audience|issuer|jwtid|subject|noTimestamp|header)$/.test(key));\n\n      options = _.mapValues(options, (value) => {\n        if (!_.isNaN(+value)) { // Check if value is a numeric string\n          return +value; // Convert numeric string to number\n        }\n        return value;\n      });\n\n      const jwt = Jwt(config);\n\n      const token = jwt.signToken(payload, options);\n\n      req.session.apiToken = token;\n\n      const response = {\n        token,\n        payload,\n        options,\n      };\n\n      handleResponse(req, res, response);\n    })\n  );\n\n};\n","module.exports = ({\n  Tools,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/tools/export-db.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'tools'),\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        const db = await tools.getDb();\n\n        res.setHeader('Content-Disposition', `attachment; filename=${req.session.slug}.json`);\n        res.setHeader('Content-Type', 'application/json');\n        res.status(200);\n        res.send(db);\n\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/tools/changes.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await tools.getChanges());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  User,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.create(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.read(req.query.userId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.update(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.delete(req.body.userId || req.body.userIds || req.query.userId || req.query.userIds));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n"],"sourceRoot":""}