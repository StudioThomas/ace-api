{"version":3,"sources":["webpack://AceApiServer/webpack/universalModuleDefinition","webpack://AceApiServer/webpack/bootstrap","webpack://AceApiServer/external \"babel-runtime/helpers/asyncToGenerator\"","webpack://AceApiServer/external \"babel-runtime/regenerator\"","webpack://AceApiServer/external \"lodash\"","webpack://AceApiServer/external \"babel-runtime/helpers/createClass\"","webpack://AceApiServer/external \"babel-runtime/helpers/classCallCheck\"","webpack://AceApiServer/./lib/client-config.js","webpack://AceApiServer/external \"bluebird\"","webpack://AceApiServer/./lib/db.js","webpack://AceApiServer/external \"babel-runtime/core-js/json/stringify\"","webpack://AceApiServer/./lib/helpers.js","webpack://AceApiServer/external \"babel-runtime/core-js/object/keys\"","webpack://AceApiServer/external \"lodash/isArray\"","webpack://AceApiServer/./server/config.default.js","webpack://AceApiServer/external \"babel-runtime/helpers/typeof\"","webpack://AceApiServer/external \"request-promise\"","webpack://AceApiServer/./lib/fields.js","webpack://AceApiServer/./lib/schema.js","webpack://AceApiServer/./lib/entity.js","webpack://AceApiServer/external \"fs\"","webpack://AceApiServer/./lib/email.js","webpack://AceApiServer/external \"babel-runtime/core-js/object/freeze\"","webpack://AceApiServer/./lib/roles.js","webpack://AceApiServer/external \"@cloudant/cloudant\"","webpack://AceApiServer/external \"axios\"","webpack://AceApiServer/./lib/assist.js","webpack://AceApiServer/external \"path\"","webpack://AceApiServer/external \"express\"","webpack://AceApiServer/./server/routes/user.js","webpack://AceApiServer/./server/routes/tools.js","webpack://AceApiServer/./server/routes/token.js","webpack://AceApiServer/./server/routes/taxonomy.js","webpack://AceApiServer/./server/routes/stripe.js","webpack://AceApiServer/external \"twitter\"","webpack://AceApiServer/./server/routes/social.js","webpack://AceApiServer/./server/routes/shippo.js","webpack://AceApiServer/./server/routes/settings.js","webpack://AceApiServer/./server/routes/schema.js","webpack://AceApiServer/./server/routes/pdf.js","webpack://AceApiServer/./server/routes/metadata.js","webpack://AceApiServer/./server/routes/entity.js","webpack://AceApiServer/./server/routes/embedly.js","webpack://AceApiServer/./server/routes/email.js","webpack://AceApiServer/./server/routes/ecommerce.js","webpack://AceApiServer/external \"express-useragent\"","webpack://AceApiServer/./server/routes/debug.js","webpack://AceApiServer/./server/routes/config.js","webpack://AceApiServer/./server/routes/cache.js","webpack://AceApiServer/./server/routes/auth.js","webpack://AceApiServer/./server/routes/analytics.js","webpack://AceApiServer/./lib/user.js","webpack://AceApiServer/./lib/tools.js","webpack://AceApiServer/./lib/taxonomy.js","webpack://AceApiServer/external \"hashids\"","webpack://AceApiServer/external \"stripe\"","webpack://AceApiServer/./lib/stripe.js","webpack://AceApiServer/external \"shippo\"","webpack://AceApiServer/./lib/shippo.js","webpack://AceApiServer/./lib/settings.js","webpack://AceApiServer/./lib/pdf.js","webpack://AceApiServer/external \"jsonwebtoken\"","webpack://AceApiServer/./lib/jwt.js","webpack://AceApiServer/./lib/instagram.js","webpack://AceApiServer/external \"deep-diff\"","webpack://AceApiServer/external \"json-query\"","webpack://AceApiServer/external \"embedly\"","webpack://AceApiServer/./lib/embedly.js","webpack://AceApiServer/external \"node-sass\"","webpack://AceApiServer/external \"i18n-iso-countries\"","webpack://AceApiServer/external \"moment\"","webpack://AceApiServer/external \"html-to-text\"","webpack://AceApiServer/external \"mjml-mailchimp\"","webpack://AceApiServer/external \"mjml-validator\"","webpack://AceApiServer/external \"mjml-core\"","webpack://AceApiServer/external \"mjml\"","webpack://AceApiServer/external \"inky\"","webpack://AceApiServer/external \"email-templates\"","webpack://AceApiServer/external \"nodemailer-mailgun-transport\"","webpack://AceApiServer/external \"createsend-node\"","webpack://AceApiServer/external \"nodemailer\"","webpack://AceApiServer/./lib/ecommerce.js","webpack://AceApiServer/external \"querystring\"","webpack://AceApiServer/./lib/auth.js","webpack://AceApiServer/external \"password-hash\"","webpack://AceApiServer/./config.default.js","webpack://AceApiServer/./index.js","webpack://AceApiServer/external \"xxhashjs\"","webpack://AceApiServer/external \"deep-freeze\"","webpack://AceApiServer/external \"object-sizeof\"","webpack://AceApiServer/external \"circular-json-es6\"","webpack://AceApiServer/external \"le_node\"","webpack://AceApiServer/external \"zlib\"","webpack://AceApiServer/external \"url-parse\"","webpack://AceApiServer/external \"cache-manager-redis-store\"","webpack://AceApiServer/external \"cache-manager\"","webpack://AceApiServer/./server/index.js","webpack://AceApiServer/external \"connect-redis\"","webpack://AceApiServer/external \"express-session\"","webpack://AceApiServer/external \"method-override\"","webpack://AceApiServer/external \"body-parser\"","webpack://AceApiServer/external \"cookie-parser\"","webpack://AceApiServer/external \"helmet\"","webpack://AceApiServer/external \"morgan\"","webpack://AceApiServer/external \"http\"","webpack://AceApiServer/./server/server.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","w","s","require","_","Db","Helpers","DEFAULT_CLIENT_CONFIG","_id","client","schemas","taxonomies","users","roles","ClientConfig","config","_classCallCheck3","default","this","clientConfig","connect","merge","slug","createOrUpdate","Cloudant","dbName","url","db","maxAttempt","plugins","retry","retryDelayMultiplier","retryInitialDelayMsecs","use","Promise","assistUrl","assist","thumbnail","settings","cropSlug","cropDefault","settingsArray","split","forEach","setting","crop","crops","x","y","x2","y2","g","key","push","join","settingsString","test","thumbnailType","ext","thumbnailUrl","replace","doc","resolve","reject","insert","then","response","id","_rev","rev","error","statusCode","docs","chunkSize","arguments","length","undefined","promises","chunk","bulk","all","entities","groupSize","Infinity","grouped","group","entity","groupBefore","groupAfter","ratio","groupRatio","_stringify2","Date","array","replacementObject","map","environment","process","env","ENVIRONMENT","api","prefix","API_PREFIX","blacklistToken","API_BLACKLIST_TOKEN","blacklistReferrer","API_BLACKLIST_REFERRER","forceHttps","FORCE_HTTPS","JSON","parse","session","secret","SESSION_SECRET","ttl","parseInt","SESSION_TTL","cache","enabled","CACHE_ENABLED","CACHE_TTL","compress","CACHE_COMPRESS","memory","max","CACHE_MEMORY_MAX","redis","REDIS_URL","host","REDIS_HOST","port","REDIS_PORT","password","REDIS_PASSWORD","REDIS_DB","logentriesToken","LOGENTRIES_TOKEN","fields","type","dataType","Fields","field","_freeze2","find","Schema","schema","cc","updateEntityIndex","set","schemaSlug","Error","index","findIndex","splice","schemaSlugs","isArray","filter","indexOf","concat","uniqBy","ddoc","default_field","analyzer","selector","$and","fieldRef","result","jsonQuery","diff","Assist","Entity","flattenValues","fieldSlug","searchTerm","viewWithList","startkey","endkey","ids","parents","role","query","include_docs","keys","view","_appendParents","children","docMap","childDepth","rowOrDoc","isRow","size","flatten","_query","obj","uniq","_entitiesById","row","_docs","rows","_childDepthLimit","_getDocMap","_mergeDocs","_this","updatedEntities","mapValues","remove","chunkUpdate","_this2","entityMap","title","published","total_rows","_extendDocs","_this3","limit","Math","min","sort","isString","include_fields","bookmark","group_field","search","groups","hits","_this4","_entitySearch","__entitySearch","_this5","clone","_context6","t0","entityId","_this6","revs_info","revisionIds","_revs_info","revision","status","open_revs","revisions","childrenIds","ok","fetch","childrenMap","console","_appendChildren","_this7","_this8","restore","_this9","entityIds","entityOrEntityId","isObject","oldEntity","newEntity","path","mergeWith","a","b","trashed","_updateChildren","forever","filesResult","deleted","_removeChildren","fileNames","_fileNames","deleteFiles","_deleted","entitiesResult","files","omitBy","startsWith","filterEntityFields","file","forceId","queryParts","trim","modifier","slice","data","locals","input","start","end","sample","sampleSize","pick","_len","paths","Array","_key","copy","allowRegexp","merging","isNumber","queries","queryField","fs","nodemailer","Createsend","promisifyAll","nodemailerMailgunTransport","EmailTemplate","Inky","mjml2html","registerComponent","registerDependencies","McSection","McImage","htmlToText","moment","countries","sass","Email","inky","mc-section","mj-column","mj-hero","templateSlug","templateData","templateOptions","options","inlineStyles","mjml","skipValidation","templatePath","email","templatesPath","existsSync","__dirname","templateFiles","readdirSync","htmlPath","fileName","extension","style","renderSync","sourceMapContents","sourceMapEmbed","css","toString","emailTemplate","views","juice","juiceResources","preserveMediaQueries","preserveFontFaces","removeStyleTags","removeLinkTags","preserveImportant","webResources","links","scripts","images","transport","jsonTransport","helpers","render","html","convertMjmlResult","level","errors","releaseTheKraken","text","fromString","emailOptions","nodemailerMailgun","createTransport","auth","api_key","mailgun","apiKey","domain","getTemplate","sendMail","metadata","details","provider","listId","createsend","cs","clientApiKey","subscribers","addSubscriberAsync","EmailAddress","Name","Resubscribe","RestartSubscriptionBasedAutoresponders","emailAddress","catch","Message","permissions","entityGrid","entityCreate","entityRead","entityUpdate","entityDelete","taxonomyCreate","taxonomyRead","taxonomyUpdate","taxonomyDelete","fileCreate","fileRead","fileUpdate","fileDelete","user","userSettings","tools","ecommerce","Roles","axios","passwordHash","assetsSlug","post","username","generate","_ref","_ref2","_ref3","_ref4","_ref5","User","router","authMiddleware","permissionMiddleware","asyncMiddleware","getConfig","handleResponse","handleError","bind","_asyncToGenerator3","_regenerator2","mark","_callee","req","res","wrap","_context","prev","next","t1","sent","t2","t3","t4","create","body","t5","t6","stop","_x","_x2","apply","_callee2","_context2","read","userId","_x3","_x4","put","_callee3","_context3","update","_x5","_x6","delete","_callee4","_context4","userIds","_x7","_x8","Tools","getDb","setHeader","send","getChanges","Jwt","payload","jwt","token","dev","pickBy","isNaN","signToken","apiToken","_ref6","_ref7","_ref8","Taxonomy","cacheMiddleware","taxonomy","taxonomySlug","taxonomySlugs","_callee5","_context5","createTerm","term","_x9","_x10","_callee6","updateTerm","_x11","_x12","_callee7","_context7","deleteTerm","_x13","_x14","Ecommerce","Stripe","order","stripe","checkout","amount","Number","refund","retrieveAccount","template","getSettings","getOrder","orderId","Instagram","instagramAccessTokenMap","method","params","Twitter","twitter","param","consumer_key","consumerKey","consumer_secret","consumerSecret","access_token_key","accessTokenKey","access_token_secret","accessTokenSecret","instagram","access_token","abrupt","client_id","clientId","pagination","next_url","Shippo","shippo","address","parcel","getQuote","Settings","schemaId","updateAll","Pdf","pdf","getPayload","getPdf","attachment","json","assetSlug","_ref9","_ref10","_ref11","_ref12","indexAsync","q","_keys2","_typeof3","entitySearch","use_index","$or","$exists","entityFind","fieldValues","entityList","entityRevisions","_callee8","_context8","_x15","_x16","_callee9","_context9","_x17","_x18","_callee10","_context10","_x19","_x20","_callee11","_context11","_x21","_x22","Embedly","embedly","oembed","urls","renderTemplate","fromName","fromEmail","toName","toEmail","from","to","subject","sendEmail","subscribe","messages","message","getType","setType","item","deleteType","verifyDiscount","code","useragent","headers","source","items","del","Auth","error_description","authProvider","Analytics","analytics","changes","dbBackupFile","readFileAsync","fileConents","unlinkAsync","cloudant","destroy","entityGroups","terms","entitiesByTerm","_term","parent","Hashids","StripeClass","hashids","clientStripeAccountId","stripe_user_id","assets","customerDetails","log","findOrCreateCustomer","customer","createOrder","updateOrCreateStripeCustomer","stripeCustomer","updateCustomer","createCharge","updatedOrder","sendReceipt","orderReceipt","sendNotification","orderNotification","updateOrder","finalOrder","accounts","retrieve","refunds","refund_application_fee","charge","stripe_account","charges","amountRefunded","amount_refunded","now","newCustomer","createdAt","modifiedAt","phone","billingAddress","shippingAddress","orders","description","customer_id","customers","price","quantity","newOrder","encode","getTime","shippingMethod","subtotal","tax","rate","includedInPrice","total","show","discount","currency","iso","toLowerCase","capture","order_id","statement_descriptor","kebabCase","storeName","toUpperCase","application_fee","ceil","paymentGateway","livemode","_this10","emailSenderName","emailSenderAddress","_this11","addressFrom","object_purpose","zip","fromZip","country","fromCountry","addressTo","distance_unit","mass_unit","shipment","address_from","address_to","ratesReady","attempts","object_status","object_id","val","rates","request","templates","templateId","assistPdfUrl","uri","encoding","form","sign","tokenSecret","verify","version","endpoint","requestOptions","qs","extend","_request","EmbedlyApi","opts","format","dateStart","dateEnd","querystring","providerTokenUri","google","vimeo","spotify","superUserId","superUser","active","refresh","providerConfig","providerClientConfig","grant_type","client_secret","clientSecret","redirect_uri","redirectUri","refresh_token","providerAuth","stringify","begins","floor","debug","DEBUG","SLUG","baseUrl","BASE_URL","DB_URL","DB_HOST","DB_NAME","requestPlugin","DB_REQUEST_PLUGIN","meterType","DB_METER_TYPE","AUTH_SUPER_USER_ID","AUTH_TOKEN_SECRET","DEV_USER_ID","DEV_ROLE","cms","CMS_TITLE","CMS_URL","ASSIST_URL","ASSIST_USERNAME","ASSIST_PASSWORD","INSTAGRAM_CLIENT_ID","INSTAGRAM_CLIENT_SECRET","TWITTER_CONSUMER_KEY","TWITTER_CONSUMER_SECRET","TWITTER_ACCESS_TOKEN_KEY","TWITTER_ACCESS_TOKEN_SECRET","GOOGLE_CLIENT_ID","GOOGLE_CLIENT_SECRET","MAILGUN_API_KEY","MAILGUN_DOMAIN","EMBEDLY_API_KEY","aws","iamAccessKeyId","AWS_IAM_ACCESS_KEY_ID","iamAccessKeySecret","AWS_IAM_ACCESS_KEY_SECRET","s3","bucket","AWS_S3_BUCKET","SHIPPO_TOKEN","SHIPPO_FROM_ZIP","SHIPPO_FROM_COUNTRY","SPOTIFY_CLIENT_ID","SPOTIFY_CLIENT_SECRET","STRIPE_CLIENT_ID","STRIPE_CLIENT_SECRET","STRIPE_API_KEY","VIMEO_CLIENT_ID","VIMEO_CLIENT_SECRET","zencoder","ZENCODER_API_KEY","ZENCODER_S3_BUCKET","credentials","ZENCODER_S3_CREDENTIALS","Api","defaultConfig","args","Function","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","_len6","_key6","_len7","_key7","_len8","_key8","_len9","_key9","_len10","_key10","_len11","_key11","_len12","_key12","_len13","_key13","_len14","_key14","_len15","_key15","_len16","_key16","_len17","_key17","_len18","_key18","_len19","_key19","_len20","_key20","_len21","_key21","on","express","cacheManager","redisStore","URL","zlib","Logger","CircularJSON","sizeof","deepFreeze","XXH","HASH_SEED","app","customConfig","customAuthMiddleware","fn","skipAuth","route","RegExp","cloneConfig","omitUndefined","forIn","isPlainObject","isUndefined","cloneDeep","configClone","redisOptions","caching","store","getClient","hash","h64","__cache","gunzipAsync","Buffer","cacheResponse","gzipAsync","Router","enable","scheme","redirect","Access-Control-Allow-Origin","Access-Control-Allow-Methods","Access-Control-Expose-Headers","Vary","sendStatus","referrer","referer","referrerHostname","hostname","verifyToken","context","authorised","permission","errorMessage","stack","afterResponse","removeListener","PORT","HOST","http","logger","helmet","cookieParser","bodyParser","methodOverride","RedisStore","AceApiServer","listen","sessionOptions","resave","saveUninitialized","cookie","maxAge","urlencoded","extended","server","createServer"],"mappings":"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","file":"server.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AceApiServer\"] = factory();\n\telse\n\t\troot[\"AceApiServer\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 103);\n","module.exports = require(\"babel-runtime/helpers/asyncToGenerator\");","module.exports = require(\"babel-runtime/regenerator\");","module.exports = require(\"lodash\");","module.exports = require(\"babel-runtime/helpers/createClass\");","module.exports = require(\"babel-runtime/helpers/classCallCheck\");","const _ = require('lodash');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Roles = require('./roles');\n\nconst roles = new Roles();\n\nconst DEFAULT_CLIENT_CONFIG = {\n  _id: 'config',\n  client: {},\n  schemas: [],\n  taxonomies: [],\n  users: [],\n  roles: roles.roles(),\n};\n\nclass ClientConfig {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async get() {\n    let clientConfig = DEFAULT_CLIENT_CONFIG;\n\n    try {\n      clientConfig = await Db.connect(this.config).get('config');\n\n      clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n    } catch (error) {\n      //\n    }\n\n    clientConfig.slug = this.config.slug;\n\n    return clientConfig;\n  }\n\n  async set(clientConfig) {\n    clientConfig._id = 'config';\n\n    delete clientConfig.roles;\n\n    clientConfig = await Helpers.createOrUpdate(this.config, clientConfig);\n\n    clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n\n    return clientConfig;\n  }\n}\n\n\nmodule.exports = ClientConfig;\n","module.exports = require(\"bluebird\");","const Cloudant = require('@cloudant/cloudant');\n\nclass Db {\n  constructor (config, dbName) {\n    this.config = config;\n\n    return Db.connect(config, dbName);\n  }\n\n  static connect (config, dbName) {\n    const cloudant = new Cloudant({\n      url: config.db.url,\n      maxAttempt: 5,\n      plugins: [\n        'promises',\n        {\n          retry: {\n            retryDelayMultiplier: 2,\n            retryInitialDelayMsecs: 500,\n          },\n        },\n      ],\n    });\n\n    return cloudant.db.use(dbName || config.db.name);\n  }\n}\n\nmodule.exports = Db;\n","module.exports = require(\"babel-runtime/core-js/json/stringify\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\n\nclass Helpers {\n  constructor(config) {\n    this.config = config;\n    this.assistUrl = config.assist.url;\n    this.slug = config.slug;\n  }\n\n  static createOrUpdate (config, doc) {\n    return new Promise((resolve, reject) => {\n      Db.connect(config).insert(doc)\n        .then((response) => {\n          doc._id = response.id;\n          doc._rev = response.rev;\n          resolve(doc);\n        }, (error) => {\n          if (error.statusCode !== 409) {\n            reject(error);\n            return;\n          }\n\n          Db.connect(config).get(doc._id)\n            .then((response) => {\n              doc._rev = response._rev;\n\n              Db.connect(config).insert(doc)\n                .then((response) => {\n                  doc._rev = response.rev;\n                  resolve(doc);\n                }, reject);\n            }, reject);\n        });\n    });\n  }\n\n  static chunkUpdate (config, docs, chunkSize = 1000) {\n    return new Promise((resolve, reject) => {\n      const chunks = _.chunk(docs, chunkSize);\n      const promises = [];\n\n      chunks.forEach((chunk) => {\n        promises.push(new Promise((resolve, reject) => {\n          Db.connect(config).bulk({\n            docs: chunk,\n          }).then(resolve, reject);\n        }));\n      });\n\n      Promise.all(promises).then(resolve, reject);\n    });\n  }\n\n  static groupEntities (entities, groupSize = Infinity) {\n    const grouped = [];\n\n    let group = {\n      entities: [],\n    };\n\n    entities.forEach((entity) => {\n      if (!entity.groupBefore || group.entities.length >= groupSize) {\n        group = {\n          entities: [],\n        };\n      }\n\n      group.entities.push(entity);\n\n      if (!entity.groupAfter || group.entities.length >= groupSize) {\n        group.ratio = 0;\n\n        group.entities.forEach((entity) => {\n          group.ratio += (entity.thumbnail || entity).ratio;\n        });\n\n        group.entities.forEach((entity) => {\n          entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n        });\n\n        grouped.push(group);\n      }\n    });\n\n    return grouped;\n  }\n\n  static now () {\n    return JSON.stringify(new Date()).replace(/\"/g, '');\n  }\n\n  static replace (array, replacementObject, key) {\n    return array.map((object) => {\n      if (object[key] === replacementObject[key]) {\n        return replacementObject;\n      }\n      return object;\n    });\n  }\n\n  thumbnailSrc (thumbnail, settings, cropSlug, cropDefault) {\n    if (!thumbnail) {\n      return '';\n    }\n\n    let settingsArray;\n\n    if (typeof settings === 'string') {\n      settingsArray = settings.split(/,|;/);\n\n      settings = {};\n\n      settingsArray.forEach((setting) => {\n        setting = setting.split(/_|:/);\n\n        settings[setting[0]] = setting[1];\n      });\n    }\n\n    const crop = thumbnail.crops ? thumbnail.crops[cropSlug] : false;\n\n    if (crop) {\n      settings.x = crop[0];\n      settings.y = crop[1];\n      settings.x2 = crop[2];\n      settings.y2 = crop[3];\n    } else if (cropDefault) {\n      settings.g = cropDefault;\n    }\n\n    settingsArray = [];\n\n    _.forEach(settings, (value, key) => {\n      settingsArray.push([key, value].join(':'));\n    });\n\n    const settingsString = settingsArray.join(';');\n\n    if (/(image)/.test(thumbnail.thumbnailType)) {\n      if (thumbnail.ext === 'svg') {\n        return [this.assistUrl, this.slug, thumbnail.name + thumbnail.ext].join('/');\n      }\n\n      return [this.assistUrl, this.slug, 'transform', settingsString, thumbnail.name + thumbnail.ext].join('/');\n    }\n\n    if (/(video)/.test(thumbnail.thumbnailType)) {\n      return [this.assistUrl, this.slug, 'transform', settingsString, thumbnail.name, 'thumb.jpg'].join('/');\n    }\n\n    if (/(oembed|proxy)/.test(thumbnail.thumbnailType)) {\n      const thumbnailUrl = thumbnail.thumbnailUrl.replace(/https?:\\/\\//, '');\n\n      return [this.assistUrl, this.slug, 'proxy', 'transform', settingsString, thumbnailUrl].join('/');\n    }\n\n    return '';\n  }\n\n}\n\nmodule.exports = Helpers;\n","module.exports = require(\"babel-runtime/core-js/object/keys\");","module.exports = require(\"lodash/isArray\");","const config = {\n  environment: process.env.ENVIRONMENT || 'development',\n\n  api: {\n    prefix: process.env.API_PREFIX || '',\n    blacklistToken: (process.env.API_BLACKLIST_TOKEN || '').split(','),\n    blacklistReferrer: (process.env.API_BLACKLIST_REFERRER || '').split(','),\n  },\n\n  forceHttps: process.env.FORCE_HTTPS ? JSON.parse(process.env.FORCE_HTTPS) : false,\n\n  session: {\n    secret: process.env.SESSION_SECRET || 'change_me',\n    ttl: parseInt(process.env.SESSION_TTL || 7200, 10),\n  },\n\n  cache: {\n    enabled: process.env.CACHE_ENABLED ? JSON.parse(process.env.CACHE_ENABLED) : false,\n    ttl: parseInt(process.env.CACHE_TTL || 30, 10) * 60, // 30mins\n    compress: process.env.CACHE_COMPRESS ? JSON.parse(process.env.CACHE_COMPRESS) : false,\n    memory: {\n      max: parseInt(process.env.CACHE_MEMORY_MAX || 128, 10) * 1000 * 1000, // ~128mb\n    },\n  },\n\n  redis: {\n    url: process.env.REDIS_URL,\n    host: process.env.REDIS_HOST,\n    port: process.env.REDIS_PORT,\n    password: process.env.REDIS_PASSWORD,\n    db: parseInt(process.env.REDIS_DB || 0, 10),\n  },\n\n  logentriesToken: process.env.LOGENTRIES_TOKEN,\n};\n\nmodule.exports = config;\n","module.exports = require(\"babel-runtime/helpers/typeof\");","module.exports = require(\"request-promise\");","const _ = require('lodash');\n\nconst fields = [\n  {\n    type: 'attachment',\n    name: 'Attachment',\n    dataType: null,\n  },\n  {\n    type: 'audio',\n    name: 'Audio',\n    dataType: null,\n  },\n  {\n    type: 'checkbox',\n    name: 'Checkbox',\n    dataType: 'boolean',\n  },\n  {\n    type: 'color',\n    name: 'Color',\n    dataType: 'string',\n  },\n  {\n    type: 'date',\n    name: 'Date',\n    dataType: 'string',\n  },\n  {\n    type: 'embedly',\n    name: 'Embedly',\n    dataType: null,\n  },\n  {\n    type: 'entity',\n    name: 'Entity',\n    dataType: 'array',\n  },\n  {\n    type: 'entityGrid',\n    name: 'Entity Grid',\n    dataType: 'array',\n  },\n  {\n    type: 'entityTile',\n    name: 'Entity Tile',\n    dataType: 'array',\n  },\n  {\n    type: 'image',\n    name: 'Image',\n    dataType: null,\n  },\n  {\n    type: 'keyValue',\n    name: 'Key Value',\n    dataType: null,\n  },\n  {\n    type: 'number',\n    name: 'Number',\n    dataType: 'number',\n  },\n  {\n    type: 'richText',\n    name: 'Rich Text',\n    dataType: null,\n  },\n  {\n    type: 'select',\n    name: 'Select',\n    dataType: 'array',\n  },\n  {\n    type: 'taxonomy',\n    name: 'Taxonomy',\n    dataType: null,\n  },\n  {\n    type: 'text',\n    name: 'Text',\n    dataType: 'string',\n  },\n  {\n    type: 'textArea',\n    name: 'Text Area',\n    dataType: 'string',\n  },\n  {\n    type: 'user',\n    name: 'User',\n    dataType: 'array',\n  },\n  {\n    type: 'video',\n    name: 'Video',\n    dataType: null,\n  },\n  {\n    type: 'vimeo',\n    name: 'Vimeo',\n    dataType: null,\n  },\n];\n\nclass Fields {\n  static fields() {\n    return fields.map(field => Object.freeze(field));\n  }\n  static field(type) {\n    return _.find(Fields.fields(), { type });\n  }\n}\n\nmodule.exports = Fields;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Fields = require('./fields');\n\nclass Schema {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas.push(schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(schemaSlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const schema = _.find(clientConfig.schemas, { slug: schemaSlug });\n\n    if (!schema) {\n      throw Error(`Schema not found: ${schemaSlug}`);\n    }\n\n    return schema;\n  }\n\n  async update(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.schemas, { slug: schema.slug });\n\n    if (index === -1) {\n      throw Error(`Schema not found: ${schema.slug}`);\n    }\n\n    clientConfig.schemas.splice(index, 1, schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(schemaSlugs) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    schemaSlugs = _.isArray(schemaSlugs) ? schemaSlugs : [schemaSlugs];\n\n    clientConfig.schemas = clientConfig.schemas.filter(schema => schemaSlugs.indexOf(schema.slug) === -1);\n\n    clientConfig.schemas = clientConfig.schemas.map((schema) => {\n      if (!schema.fields) {\n        return schema;\n      }\n      schema.fields = schema.fields.map((field) => {\n        if (!field.settings) {\n          return field;\n        }\n        if (field.settings.schemas) {\n          field.settings.schemas = field.settings.schemas.filter(schema => schemaSlugs.indexOf(schema) === -1);\n        }\n        return field;\n      });\n      return schema;\n    });\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateAll(schemas) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas = schemas;\n\n    // await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateEntityIndex(schemas) {\n    let fields = [];\n\n    schemas.forEach((schema) => {\n      fields = fields.concat(schema.fields);\n    });\n\n    fields = _.uniqBy(fields, 'slug');\n\n    const index = {\n      name: 'entity',\n      type: 'text',\n      ddoc: 'entityIndex',\n      index: {\n        default_field: {\n          enabled: true,\n          analyzer: 'standard',\n        },\n        selector: {\n          $and: [\n            {\n              type: 'entity',\n            },\n          ],\n        },\n        fields: [\n          {\n            name: 'published',\n            type: 'boolean',\n          },\n          {\n            name: 'trashed',\n            type: 'boolean',\n          },\n          {\n            name: 'title',\n            type: 'string',\n          },\n          {\n            name: 'slug',\n            type: 'string',\n          },\n          {\n            name: 'schema',\n            type: 'string',\n          },\n          {\n            name: 'modifiedAt',\n            type: 'string',\n          },\n          {\n            name: 'publishedAt',\n            type: 'string',\n          },\n        ],\n      },\n    };\n\n    fields.forEach((field) => {\n      const fieldRef = Fields.field(field.type);\n\n      if (/number|string|boolean/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value`,\n          type: fieldRef.dataType,\n        });\n      }\n\n      if (/array/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.[].slug`,\n          type: 'string',\n        });\n      }\n\n      if (/taxonomy/.test(field.type)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.terms.[].slug`,\n          type: 'string',\n        });\n      }\n    });\n\n    const result = await Db.connect(this.config).index(index);\n\n    return result;\n  }\n\n}\n\nmodule.exports = Schema;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst jsonQuery = require('json-query');\nconst diff = require('deep-diff').diff;\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Schema = require('./schema');\nconst Assist = require('./assist');\n\nconst CHUNK_UPDATE_SIZE = 1000;\n\nclass Entity {\n  constructor (config) {\n    this.config = config;\n\n    // Expose helpers\n    this.flattenValues = Entity.flattenValues;\n  }\n\n  static flattenValues (docs) {\n    return docs.map((doc) => {\n      if (!doc.fields || !_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (/entity/.test(field.type) && _.isArray(field.value)) { // entity / entityTile / entityGrid\n          field.value = Entity.flattenValues(field.value);\n        }\n        return field.value;\n      });\n\n      return doc;\n    });\n  }\n\n  static filterEntityFields (docs, role = 'guest') {\n    const isArray = _.isArray(docs);\n\n    docs = (isArray ? docs : [docs]).map((doc) => {\n      if (_.size(doc.fields)) {\n        doc.fields = _.mapValues(doc.fields, (field) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter((obj) => {\n              if (!obj) {\n                return false;\n              }\n              if (obj.type && obj.type === 'entity' && role === 'guest') {\n                return obj.published !== undefined ? obj.published : true;\n              }\n              return true;\n            });\n          }\n          return field;\n        });\n      }\n      return doc;\n    });\n\n    return isArray ? docs : docs[0];\n  }\n\n  static _appendChildren (docs, childrenMap) {\n    return docs.map((doc) => {\n      if (!_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (_.isArray(field.value)) {\n          field.value = field.value.filter((obj) => {\n            if (!obj) {\n              return false;\n            }\n            if (obj.type === 'entity') {\n              return childrenMap[obj.id] !== undefined;\n            }\n            return true;\n          });\n\n          field.value = field.value.map((obj) => {\n            if (obj.type === 'entity') {\n              obj = _.merge(obj, childrenMap[obj.id]);\n            }\n            obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n            return obj;\n          });\n        }\n\n        return field;\n      });\n\n      return doc;\n    });\n  }\n\n  static _appendParents (result, parents = null, role = 'guest') {\n    let entityMap = {};\n\n    result.rows.forEach((row) => {\n      if (!row.doc) {\n        return;\n      }\n\n      if (row.value.type === 'entity') {\n        if (parents) {\n          row.doc.parents = [];\n        }\n        entityMap[row.id] = row.doc;\n      }\n    });\n\n    if (parents) {\n      result.rows.forEach((row) => {\n        if (row.doc && row.value.type === 'parent') {\n          entityMap[row.key].parents.push(Entity.filterEntityFields(row.doc, role));\n        }\n      });\n\n      entityMap = _.mapValues(entityMap, (entity) => {\n        entity.parents = _.uniqBy(entity.parents, entity => entity._id);\n        return entity;\n      });\n    }\n\n    entityMap = null;\n\n    return result;\n  }\n\n  static _fileNames (entities) {\n    const fileNames = [];\n\n    entities.forEach((entity) => {\n      _.forEach(entity.fields, (field) => {\n        if (field.value && field.value.file) {\n          fileNames.push(field.value.file.name);\n        }\n      });\n    });\n\n    return _.uniq(fileNames);\n  }\n\n  async fieldValues (fieldSlug, searchTerm) {\n    const result = await Db.connect(this.config).viewWithList('entity', 'byField', 'search', {\n      startkey: [fieldSlug],\n      endkey: [fieldSlug, {}],\n      group: true,\n      searchTerm,\n    });\n    return result;\n  }\n\n  static _query(doc, query, forceId = false) {\n    const queryParts = query.trim().split(/\\[|\\]/);\n    const selector = `fields.${queryParts[0]}.value[${queryParts[1] || '*'}]`;\n    const modifier = /\\]:/.test(query) ? `:${query.split(/\\]:/).slice(-1)[0].trim()}` : '';\n\n    const result = jsonQuery(`${selector}${modifier}`, {\n      data: doc,\n      locals: {\n        slice: (input, start, end) => _.slice(input, start, end),\n        sample: (input, size = 1) => _.sampleSize(input, size),\n        group: (entities, groupSize = Infinity) => {\n          const grouped = [];\n\n          let group = [];\n\n          entities.forEach((entity) => {\n            if (!entity.groupBefore || group.length >= groupSize) {\n              group = [];\n            }\n\n            group.push(entity);\n\n            if (!entity.groupAfter || group.length >= groupSize) {\n              group.ratio = 0;\n\n              group.forEach((entity) => {\n                group.ratio += (entity.thumbnail || entity).ratio;\n              });\n\n              group.forEach((entity) => {\n                entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n              });\n\n              grouped.push(group);\n            }\n          });\n\n          return grouped;\n        },\n        pick: (input, ...paths) => _.map(input, (obj) => {\n          const copy = {};\n          if (forceId && obj.id) {\n            copy.id = obj.id;\n          }\n          paths.forEach((path) => {\n            _.set(copy, path, _.get(obj, path));\n          });\n          return copy;\n        }),\n      },\n      allowRegexp: true,\n    });\n\n    return result;\n  }\n\n  async _entitiesById (ids = [], parents = null, role = 'guest') {\n    const query = {\n      include_docs: true,\n    };\n\n    if (ids.length) {\n      query.keys = ids;\n    }\n\n    let result = await Db.connect(this.config)\n      .view('entity', parents ? 'byIdExtended' : 'byId', query);\n\n    result = Entity._appendParents(result, parents, role);\n\n    return result;\n  }\n\n  static _childDepthLimit (children, merging = false) {\n    if (_.isNumber(children)) {\n      return children;\n    }\n    if (_.isArray(children)) {\n      if (merging) {\n        return children.length + 1;\n      }\n      return children.length;\n    }\n    return 1;\n  }\n\n  async _getDocMap (docs, children, parents, role, docMap = {}, childDepth = 0) {\n    if (!parents && !children) {\n      return docMap;\n    }\n\n    let ids = [];\n\n    docs.forEach((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      const doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (children && doc.fields && _.size(doc.fields)) {\n        if (_.isArray(children)) {\n          const queries = children[childDepth].split(/,(?![^([]*[\\])])/g);\n\n          queries.forEach((query) => {\n            ids = ids.concat(_.flatten(Entity._query(doc, query, true).value).map(obj => obj && obj.id));\n          });\n\n        } else {\n          _.forEach(doc.fields, (field) => {\n            if (_.isArray(field.value)) {\n              field.value = field.value.filter(obj => obj);\n\n              field.value.forEach((obj) => {\n                if (obj.id) {\n                  ids.push(obj.id);\n                }\n              });\n            }\n          });\n        }\n      }\n\n      const id = isRow ? rowOrDoc.id : doc._id || doc.id;\n      if (!docMap[id]) {\n        ids.push(id);\n      }\n    });\n\n    ids = _.uniq(ids);\n\n    ids = ids.filter(id => !docMap[id]);\n\n    if (ids.length === 0) {\n      return docMap;\n    }\n\n    let _docs = (await this._entitiesById(ids, parents, role)).rows.map(row => row.doc);\n\n    _docs.forEach((doc) => {\n      docMap[doc._id] = doc;\n    });\n\n    childDepth += 1;\n\n    if (!children || (childDepth >= Entity._childDepthLimit(children))) {\n      return docMap;\n    }\n\n    docMap = await this._getDocMap(_docs, children, parents, role, docMap, childDepth);\n\n    _docs = null;\n\n    return docMap;\n  }\n\n  static _mergeDocs(docs, docMap, children, childDepth = 0) {\n    if (children && (childDepth + 1 >= Entity._childDepthLimit(children, true))) {\n      return docs;\n    }\n\n    docs = docs.map((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      let doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (!doc.fields && docMap[rowOrDoc.id || rowOrDoc._id]) {\n        doc = docMap[rowOrDoc.id || rowOrDoc._id];\n      }\n\n      if (children && doc.fields && _.size(doc.fields)) {\n\n        let queries;\n\n        if (_.isArray(children)) {\n          queries = {};\n          children[childDepth].split(/,(?![^([]*[\\])])/g).forEach((query) => {\n            query = query.trim();\n            const queryField = query.split(/\\[|\\]/)[0];\n            queries[queryField] = query;\n          });\n        }\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter(obj => obj);\n\n            if (!queries || (queries && queries[fieldSlug])) {\n              if (queries && queries[fieldSlug]) {\n                field.value = field.value.filter(obj => obj.id && docMap[obj.id]);\n              }\n\n              field.value = field.value.map((obj) => {\n                if (obj && obj.id && docMap[obj.id]) {\n                  obj = _.merge(obj, docMap[obj.id] || {});\n                  obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n                }\n                return obj;\n              });\n\n              field.value = Entity._mergeDocs(field.value, docMap, children, childDepth + 1);\n            }\n          }\n          return field;\n        });\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            if (queries && queries[fieldSlug]) {\n              field.value = _.flatten(Entity._query(doc, queries[fieldSlug]).value);\n            }\n          }\n          return field;\n        });\n\n      }\n\n      if (isRow) {\n        rowOrDoc.doc = doc;\n      } else {\n        rowOrDoc = doc;\n      }\n\n      return rowOrDoc;\n    });\n\n    return docs;\n  }\n\n  async _extendDocs (docs, children, parents, role) {\n    let docMap = await this._getDocMap(docs, children, parents, role);\n\n    docs = Entity._mergeDocs(docs, docMap, children);\n\n    docMap = null;\n\n    return docs;\n  }\n\n  _removeChildren (entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      entities = entities.map(entity => entity._id);\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const updatedEntities = _.uniqBy(response.rows, row => row.doc._id).map((row) => {\n            row.doc.fields = _.mapValues(row.doc.fields, (field) => {\n              if (_.isArray(field.value)) {\n                field.value = _.remove(field.value, obj => obj.type === 'entity' && entities.indexOf(obj.id) !== -1);\n              }\n              return field;\n            });\n\n            return row.doc;\n          });\n\n          if (updatedEntities.length === 0) {\n            resolve([]);\n            return;\n          }\n\n          Helpers.chunkUpdate(this.config, updatedEntities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  _updateChildren (entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      const entityMap = {};\n\n      entities = entities.map((entity) => {\n        entityMap[entity._id] = entity;\n\n        return entity._id;\n      });\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const entities = response.rows.map((row) => {\n            const entity = row.doc;\n\n            _.forEach(entity.fields, (field, fieldSlug) => {\n              if (_.isArray(field.value)) {\n                entity.fields[fieldSlug].value = field.value.map((obj) => {\n                  if (obj.type === 'entity' && entityMap[obj.id]) {\n                    obj.slug = entityMap[obj.id].slug;\n                    obj.title = entityMap[obj.id].title;\n                    obj.schema = entityMap[obj.id].schema;\n                    obj.published = entityMap[obj.id].published;\n\n                    if (entityMap[obj.id].thumbnail) {\n                      obj.thumbnail = entityMap[obj.id].thumbnail;\n                    } else {\n                      obj.thumbnail = null;\n                    }\n                  }\n\n                  return obj;\n                });\n              }\n            });\n\n            return entity;\n          });\n\n          Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  async entityList (ids = [], children = null, parents = null, role = 'guest') {\n    const result = await this._entitiesById(ids, parents, role);\n\n    if ((!children && !parents) || result.total_rows === 0) {\n      return result.rows;\n    }\n\n    const rows = await this._extendDocs(result.rows, children, parents, role);\n\n    return rows;\n  }\n\n  _entitySearch (query, children = null, parents = null, role = 'guest') {\n    return new Promise((resolve, reject) => {\n      query.limit = Math.min(query.limit || 200, 200);\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      if (children) {\n        query.include_docs = true;\n      }\n\n      if (!query.include_fields) {\n        query.include_fields = [];\n      }\n\n      if (_.isArray(query.include_fields)) {\n        query.include_fields = JSON.stringify(query.include_fields);\n      }\n\n      if (!query.sort) {\n        delete query.sort;\n      }\n      if (!query.bookmark) {\n        delete query.bookmark;\n      }\n      if (!query.index) {\n        delete query.index;\n      }\n      if (!query.group_field) {\n        delete query.group_field;\n      }\n\n      Db.connect(this.config).search('entity', query.index || 'all', query)\n        .then((result) => {\n\n          if (result.groups) {\n            const promises = [];\n\n            result.groups = result.groups.map((group) => {\n              promises.push(new Promise((resolve, reject) => {\n                if ((!children && !parents) || group.total_rows === 0) {\n                  resolve();\n                  return;\n                }\n\n                this._extendDocs(group.hits, children, parents, role)\n                  .then((docs) => {\n                    group.hits = docs;\n\n                    resolve();\n                  }, reject);\n              }));\n              return group;\n            });\n\n            Promise.all(promises)\n              .then(() => {\n                resolve(result);\n              }, reject);\n\n            return;\n          }\n\n          if ((!children && !parents) || result.total_rows === 0) {\n            resolve(result);\n            return;\n          }\n\n          this._extendDocs(result.rows, children, parents, role)\n            .then((docs) => {\n              result.rows = docs;\n\n              resolve(result);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entitySearch (query, children = null, parents = null, role = 'guest') {\n    return new Promise((resolve, reject) => {\n      const limit = query.limit || 25;\n\n      if (limit <= 200) {\n        this._entitySearch(query, children, parents, role)\n          .then(resolve, reject);\n        return;\n      }\n\n      let rows = [];\n      let groups = [];\n\n      function __entitySearch (bookmark) {\n        const _query = _.clone(query);\n\n        if (bookmark) {\n          _query.bookmark = bookmark;\n        }\n\n        this._entitySearch(_query, children, parents, role)\n          .then((result) => {\n            if (result.rows) {\n              rows = rows.concat(result.rows);\n            }\n            if (result.groups) {\n              groups = groups.concat(result.groups);\n            }\n\n            if (rows.length < result.total_rows && rows.length < limit) {\n              __entitySearch.call(this, result.bookmark);\n              return;\n            }\n\n            result.rows = rows;\n            result.groups = groups;\n\n            resolve(result);\n          }, reject);\n      }\n\n      __entitySearch.call(this);\n    });\n  }\n\n  async entityFind (query, children = null, parents = null, role = 'guest') {\n    let result;\n\n    try {\n      result = await Db.connect(this.config).find(query);\n    } catch (error) {\n      if (error.error === 'no_usable_index') {\n        const cc = new ClientConfig(this.config);\n        const clientConfig = await cc.get();\n\n        const schema = new Schema(this.config);\n        await schema.updateEntityIndex(clientConfig.schemas);\n\n        result = await Db.connect(this.config).find(query);\n      }\n    }\n\n    if (children === false) {\n      return result;\n    }\n\n    if (query.fields && query.fields.indexOf('_id') === -1) {\n      throw new Error('_id field required for `children`');\n    }\n\n    result.docs = await this._extendDocs(result.docs, children, parents, role);\n\n    return result;\n  }\n\n  entityRevisions (entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId, {\n        revs_info: true,\n      })\n        .then((response) => {\n          const revisionIds = [];\n\n          response._revs_info.forEach((revision) => {\n            if (revision.status === 'available') {\n              revisionIds.push(revision.rev);\n            }\n          });\n\n          Db.connect(this.config).get(entityId, {\n            open_revs: JSON.stringify(revisionIds),\n          })\n            .then((response) => {\n              const revisions = [];\n              const childrenIds = [];\n\n              response.forEach((revision) => {\n                if (revision.ok) {\n                  revisions.push(revision.ok);\n\n                  _.forEach(revision.ok.fields, (field) => {\n                    if (/entity/.test(field.type)) {\n                      _.forEach(field.value, (obj) => {\n                        if (obj.id) {\n                          childrenIds.push(obj.id);\n                        }\n                      });\n                    }\n                  });\n                }\n              });\n\n              Db.connect(this.config).fetch({\n                keys: _.uniq(childrenIds),\n                include_docs: true,\n              })\n                .then((result) => {\n                  const childrenMap = {};\n\n                  result.rows.forEach((row) => {\n                    try {\n                      childrenMap[row.doc._id] = row.doc;\n                    } catch (error) {\n                      console.error('Error: child no longer exists');\n                    }\n                  });\n\n                  resolve(Entity._appendChildren(revisions, childrenMap));\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entityCreate (entity) {\n    return new Promise((resolve, reject) => {\n      entity.type = 'entity';\n\n      Db.connect(this.config).insert(entity)\n        .then((response) => {\n          entity._id = response.id;\n          entity._rev = response.rev;\n\n          resolve(entity);\n        }, reject);\n    });\n  }\n\n  entityRead (entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId)\n        .then(resolve, reject);\n    });\n  }\n\n  entityUpdate (entities, restore) {\n    return new Promise((resolve, reject) => {\n      entities = _.isArray(entities) ? entities : [entities];\n\n      const entityMap = {};\n\n      const entityIds = entities.map((entityOrEntityId) => {\n        let entityId;\n\n        if (_.isObject(entityOrEntityId)) {\n          entityId = entityOrEntityId._id;\n          entityMap[entityId] = entityOrEntityId;\n        }\n        if (_.isString(entityOrEntityId)) {\n          entityId = entityOrEntityId;\n        }\n\n        return entityId;\n      });\n\n      Db.connect(this.config).fetch({\n        keys: entityIds,\n        include_docs: true,\n      })\n        .then((response) => {\n          const children = [];\n\n          const entities = response.rows.map((row) => {\n            const oldEntity = row.doc;\n            const newEntity = entityMap[oldEntity._id];\n\n            let entity = oldEntity;\n\n            if (newEntity) {\n              delete newEntity._rev;\n\n              const diffs = diff(oldEntity, newEntity);\n\n              diffs.forEach((diff) => {\n                if (/slug|title|thumbnail/.test(diff.path[0])) {\n                  if (children.indexOf(newEntity) === -1 && entityIds.indexOf(newEntity._id) !== -1) {\n                    children.push(newEntity);\n                  }\n                }\n              });\n\n              entity = _.mergeWith({}, oldEntity, newEntity, (a, b) => {\n                if (_.isArray(a) && _.isArray(b)) {\n                  return b;\n                }\n                return undefined;\n              });\n            }\n\n            if (restore) {\n              entity.trashed = false;\n            }\n\n            return entity;\n          });\n\n          this._updateChildren(children)\n            .then(() => {\n              Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n                .then(resolve, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  async entityDelete (entityIds, forever = false) {\n    let entities;\n    let filesResult;\n\n    if (entityIds === 'trashed') {\n      forever = true;\n\n      entities = (await Db.connect(this.config).view('entity', 'trashed', {\n        include_docs: true,\n      })).rows;\n\n    } else {\n      entities = (await Db.connect(this.config).fetch({\n        keys: _.isArray(entityIds) ? entityIds : [entityIds],\n        include_docs: true,\n      })).rows;\n    }\n\n    entities = entities.filter(entity => !entity.value || !entity.value.deleted);\n\n    entities = entities.map(entity => entity.doc);\n\n    if (forever) {\n      await this._removeChildren(entities);\n\n      const fileNames = Entity._fileNames(entities);\n\n      if (fileNames.length) {\n        const assist = new Assist(this.config);\n        filesResult = await assist.deleteFiles(fileNames);\n      }\n\n      entities = entities.map(entity => ({\n        _id: entity._id,\n        _rev: entity._rev,\n        _deleted: true,\n      }));\n\n    } else {\n      entities = entities.map((entity) => {\n        entity.trashed = true;\n        return entity;\n      });\n    }\n\n    const entitiesResult = await Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE);\n\n    return {\n      entities: entitiesResult,\n      files: filesResult,\n    };\n  }\n\n}\n\nmodule.exports = Entity;\n","module.exports = require(\"fs\");","const path = require('path');\nconst fs = require('fs');\nconst _ = require('lodash');\nconst Promise = require('bluebird');\nconst nodemailer = require('nodemailer');\nconst Createsend = Promise.promisifyAll(require('createsend-node'));\nconst nodemailerMailgunTransport = require('nodemailer-mailgun-transport');\nconst EmailTemplate = require('email-templates');\nconst Inky = require('inky').Inky;\nconst mjml2html = require('mjml');\nconst registerComponent = require('mjml-core').registerComponent;\nconst registerDependencies = require('mjml-validator').registerDependencies;\nconst { McSection, McImage } = require('mjml-mailchimp');\nconst htmlToText = require('html-to-text');\nconst moment = require('moment');\nconst countries = require('i18n-iso-countries');\nconst sass = require('node-sass');\n\nconst ClientConfig = require('./client-config');\nconst Helpers = require('./helpers');\n\n\nclass Email {\n  constructor(config) {\n    this.config = config;\n\n    this.inky = new Inky();\n\n    registerComponent(McSection);\n    registerComponent(McImage);\n    registerDependencies({\n      'mc-section': ['mj-column', 'mj-group', 'mj-raw'],\n      'mj-column': ['mc-image'],\n      'mj-hero': ['mc-image'],\n    });\n  }\n\n  getTemplate(templateSlug, templateData = {}, templateOptions = {}) {\n    return new Promise((resolve, reject) => {\n      const options = _.merge({}, {\n        inlineStyles: true,\n        inky: false,\n        mjml: false,\n        skipValidation: false,\n      }, templateOptions);\n\n      let templatePath = path.resolve(this.config.email.templatesPath, templateSlug);\n\n      if (!fs.existsSync(templatePath)) {\n        templatePath = path.resolve(__dirname, '../email', templateSlug);\n      }\n\n      const templateFiles = fs.readdirSync(templatePath);\n\n      let htmlPath = 'html';\n      // Support mjml templates\n      if (_.find(templateFiles, fileName => /^html\\.mjml/.test(fileName))) {\n        htmlPath = 'html.mjml';\n        options.mjml = true;\n      }\n\n      // Support ejs templates (for backwards compatibility)\n      // TODO: convert ejs templates to pug and remove\n      let extension;\n      if (_.find(templateFiles, fileName => /\\.ejs$/.test(fileName))) {\n        extension = 'ejs';\n      }\n\n      let style = '';\n      if (_.find(templateFiles, fileName => /^style\\.scss$/.test(fileName))) {\n        style = sass.renderSync({\n          file: path.resolve(templatePath, 'style.scss'),\n          sourceMapContents: !options.inlineStyles,\n          sourceMapEmbed: !options.inlineStyles,\n        }).css.toString().replace(/\"/g, '\\'');\n      }\n\n      const emailTemplate = new EmailTemplate({\n        views: {\n          root: this.config.email.templatesPath,\n          options: {\n            extension,\n          },\n        },\n        juice: options.inlineStyles,\n        juiceResources: {\n          preserveMediaQueries: true,\n          preserveFontFaces: true,\n          removeStyleTags: false,\n          removeLinkTags: false,\n          preserveImportant: true,\n          webResources: {\n            links: false,\n            scripts: false,\n            images: false,\n            // relativeTo: '',\n          },\n        },\n        transport: {\n          jsonTransport: true,\n        },\n      });\n\n      const cc = new ClientConfig(this.config);\n      const helpers = new Helpers(this.config);\n\n      cc.get()\n        .then((clientConfig) => {\n          templateData = _.merge({}, templateData, {\n            config: _.merge({}, _.pick(this.config, ['cms']), _.pick(clientConfig, ['slug', 'client', 'assets'])),\n            helpers,\n            style,\n            moment,\n            countries,\n            templateSlug,\n          });\n\n          emailTemplate.render(`${templateSlug}/${htmlPath}`, templateData)\n            .then((html) => {\n\n              if (options.mjml) {\n                const convertMjmlResult = mjml2html(html, {\n                  level: options.skipValidation ? 'skip' : 'soft',\n                });\n\n                if (convertMjmlResult.errors && convertMjmlResult.errors.length) {\n                  reject(convertMjmlResult.errors);\n                  return;\n                }\n\n                html = convertMjmlResult.html;\n              }\n\n              if (options.inky) {\n                html = this.inky.releaseTheKraken(html);\n              }\n\n              resolve({\n                html,\n                text: htmlToText.fromString(html),\n              });\n            }, reject);\n        }, reject);\n    });\n  }\n\n  sendEmail(emailOptions, templateSlug, templateData = {}, templateOptions = {}) {\n    return new Promise((resolve, reject) => {\n      const nodemailerMailgun = nodemailer.createTransport(nodemailerMailgunTransport({\n        auth: {\n          api_key: this.config.mailgun.apiKey,\n          domain: this.config.mailgun.domain,\n        },\n      }));\n\n      this.getTemplate(templateSlug, _.merge({}, emailOptions, templateData), templateOptions)\n        .then((emailTemplate) => {\n          emailOptions.html = emailTemplate.html;\n          emailOptions.text = emailTemplate.text;\n\n          nodemailerMailgun.sendMail(emailOptions, (error, metadata) => {\n            if (error) {\n              reject(error);\n              return;\n            }\n\n            resolve({\n              metadata,\n              email: emailOptions,\n            });\n          });\n        }, reject);\n    });\n  }\n\n  subscribe(details, provider, listId) {\n    return new Promise((resolve, reject) => {\n      const cc = new ClientConfig(this.config);\n\n      cc.get()\n        .then((clientConfig) => {\n          if (provider === 'createsend') {\n            if (clientConfig.provider.createsend) {\n              const cs = new Createsend({\n                apiKey: clientConfig.provider.createsend.clientApiKey,\n              });\n\n              const subscribers = Promise.promisifyAll(cs.subscribers);\n\n              subscribers.addSubscriberAsync(listId, {\n                EmailAddress: details.email,\n                Name: details.name,\n                Resubscribe: true,\n                RestartSubscriptionBasedAutoresponders: true,\n              })\n                .then((result) => {\n                  resolve(`Email.subscribe(): ${result.emailAddress}`);\n                })\n                .catch((error) => {\n                  reject(error.Message);\n                });\n\n              return;\n            }\n            reject(new Error('Subscriber list not configured'));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Email;\n","module.exports = require(\"babel-runtime/core-js/object/freeze\");","const _ = require('lodash');\n\nconst roles = [\n  {\n    name: 'Admin',\n    slug: 'admin',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: true,\n      settings: true,\n      userSettings: true,\n      tools: true,\n      ecommerce: true,\n    },\n  },\n  {\n    name: 'Editor',\n    slug: 'editor',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: true,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n  {\n    name: 'Guest',\n    slug: 'guest',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: false,\n      entityRead: true,\n      entityUpdate: false,\n      entityDelete: false,\n\n      taxonomyCreate: false,\n      taxonomyRead: true,\n      taxonomyUpdate: false,\n      taxonomyDelete: false,\n\n      fileCreate: false,\n      fileRead: true,\n      fileUpdate: false,\n      fileDelete: false,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: false,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n];\n\nclass Roles {\n  roles() {\n    return roles.map(role => Object.freeze(role));\n  }\n  role(slug) {\n    return _.find(this.roles(), { slug });\n  }\n}\n\nmodule.exports = Roles;\n","module.exports = require(\"@cloudant/cloudant\");","module.exports = require(\"axios\");","const _ = require('lodash');\nconst axios = require('axios');\nconst passwordHash = require('password-hash');\nconst ClientConfig = require('./client-config');\n\nclass Assist {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async deleteFiles(fileNames) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetsSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n\n    if (fileNames.length === 0) {\n      return [];\n    }\n\n    const result = (await axios.post(`${this.config.assist.url}/${assetsSlug}/file/delete`, { fileNames }, {\n      auth: {\n        username: this.config.assist.username,\n        password: passwordHash.generate(this.config.assist.password),\n      },\n    })).data;\n\n    return result;\n  }\n\n}\n\nmodule.exports = Assist;\n","module.exports = require(\"path\");","module.exports = require(\"express\");","module.exports = ({\n  User,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.create(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.read(req.query.userId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.update(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.delete(req.body.userId || req.body.userIds || req.query.userId || req.query.userIds));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Tools,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/tools/export-db.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'tools'),\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        const db = await tools.getDb();\n\n        res.setHeader('Content-Disposition', `attachment; filename=${req.session.slug}.json`);\n        res.setHeader('Content-Type', 'application/json');\n        res.status(200);\n        res.send(db);\n\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/tools/changes.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await tools.getChanges());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Jwt,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  // handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /token:\n   *  get:\n   *    tags:\n   *      - token\n   *    summary: Get JWT\n   *    description: Get Json Web Token (JWT) for API access\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Slug for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: userId\n   *        description: User ID for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: role\n   *        description: Role for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: expiresIn\n   *        description: Duration of token in seconds\n   *        in: query\n   *        required: false\n   *        type: number\n   *    responses:\n   *      200:\n   *        description: Token\n   */\n\n  router.get(\n    '/token.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      const payload = {\n        role: req.session.role,\n        slug: req.session.slug,\n        userId: req.session.userId,\n      };\n\n      if (req.session.role === 'super' || config.environment === 'development') {\n        payload.role = req.query.role || req.session.role || config.dev.role;\n        payload.slug = req.query.slug || req.session.slug || config.dev.slug;\n        if (payload.role !== 'guest') {\n          payload.userId = req.query.userId || req.session.userId || config.dev.userId;\n        }\n      }\n\n      const _ = require('lodash');\n\n      let options = _.pickBy(req.query, (value, key) => /^(expiresIn|notBefore|audience|issuer|jwtid|subject|noTimestamp|header)$/.test(key));\n\n      options = _.mapValues(options, (value) => {\n        if (!_.isNaN(+value)) { // Check if value is a numeric string\n          return +value; // Convert numeric string to number\n        }\n        return value;\n      });\n\n      const jwt = Jwt(config);\n\n      const token = jwt.signToken(payload, options);\n\n      req.session.apiToken = token;\n\n      const response = {\n        token,\n        payload,\n        options,\n      };\n\n      handleResponse(req, res, response);\n    })\n  );\n\n};\n","module.exports = ({\n  Taxonomy,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * definitions:\n   *  Taxonomy:\n   *    type: object\n   *    properties:\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      terms:\n   *        type: array\n   *        items:\n   *          type: object\n   *          properties:\n   *            id:\n   *              type: string\n   *            title:\n   *              type: string\n   *            slug:\n   *              type: string\n   *            terms:\n   *              type: array\n   */\n\n  router.post(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.create(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /taxonomy:\n   *  get:\n   *    tags:\n   *      - taxonomy\n   *    summary: Get taxonomy\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Taxonomy slug\n   *        in: query\n   *        required: true\n   *        type: string\n   *    responses:\n   *      200:\n   *        description: Taxonomy\n   *        schema:\n   *          type: object\n   *          $ref: '#/definitions/Taxonomy'\n   */\n  router.get(\n    '/taxonomy.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.read(req.query.slug || req.query.taxonomySlug), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.update(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.delete(req.body.taxonomySlug || req.body.taxonomySlugs || req.query.taxonomySlug || req.query.taxonomySlugs));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.createTerm(req.body.slug || req.body.taxonomySlug, req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.updateTerm(req.query.term || req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.deleteTerm(req.query.term || req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Ecommerce,\n  Email,\n  Stripe,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.all(\n    '/stripe/checkout.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const token = req.body.token || JSON.parse(req.query.token);\n      const order = req.body.order || JSON.parse(req.query.order);\n\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.checkout(token, order));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/stripe/refund.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const order = req.body.order || JSON.parse(req.query.order);\n      const amount = Number(req.body.amount || req.query.amount || 0) * 100;\n\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.refund(order, amount));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/stripe/account.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.retrieveAccount());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/stripe/email.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig(req.session.slug);\n      const email = Email(config);\n      const stripe = Stripe(config);\n      const ecommerce = Ecommerce(config);\n\n      const settings = await stripe.getSettings();\n      const order = await ecommerce.getOrder(req.query.orderId);\n\n      const data = {\n        settings,\n        order,\n      };\n\n      const template = await email.getTemplate(`${req.session.slug}/${req.query.template}`, data);\n\n      try {\n        handleResponse(req, res, template.html);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = require(\"twitter\");","module.exports = ({\n  ClientConfig,\n  Instagram,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  const instagramAccessTokenMap = {};\n\n  router.get(\n    /\\/social\\/twitter\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      const Promise = require('bluebird');\n      const Twitter = require('twitter');\n\n      const twitter = Promise.promisifyAll(new Twitter({\n        consumer_key: config.twitter.consumerKey,\n        consumer_secret: config.twitter.consumerSecret,\n        access_token_key: config.twitter.accessTokenKey,\n        access_token_secret: config.twitter.accessTokenSecret,\n      }));\n\n      try {\n        handleResponse(req, res, await twitter[`${method}Async`](params.join('/'), req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    /\\/social\\/instagram\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      if (!instagramAccessTokenMap[req.session.slug]) {\n        const cc = ClientConfig(config);\n\n        try {\n          const clientConfig = await cc.get();\n          instagramAccessTokenMap[req.session.slug] = clientConfig.provider.instagram.access_token;\n        } catch (error) {\n          handleError(res, new Error('Instagram: access_token required'));\n          return;\n        }\n      }\n\n      req.query.access_token = instagramAccessTokenMap[req.session.slug];\n\n      const instagram = Instagram({\n        client_id: config.instagram.clientId,\n      });\n\n      try {\n        const result = await instagram[method](params.join('/'), req.query);\n        try {\n          delete result.pagination.next_url;\n        } catch (error) {\n          //\n        }\n        handleResponse(req, res, result, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Shippo,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.all(\n    '/shippo/quote.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const shippo = Shippo(await getConfig());\n\n      const address = req.body.address || JSON.parse(req.params.address);\n      const parcel = req.body.parcel || JSON.parse(req.params.parcel);\n\n      try {\n        handleResponse(req, res, await shippo.getQuote(address, parcel), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Settings,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/settings.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const settings = Settings(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await settings.update(req.body.settings));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Schema,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.create(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.read(req.query.schemaId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.update(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.delete(req.body.schemaSlug || req.body.schemaSlugs || req.query.schemaSlug || req.query.schemaSlugs));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schemas.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.updateAll(req.body.schemas));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","const _ = require('lodash');\n\nmodule.exports = ({\n  Pdf,\n  ClientConfig,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleError,\n}) => {\n\n  router.get(\n    '/pdf/view.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          pdf.getPdf(payload)\n            .then((pdf) => {\n              res.type('application/pdf');\n              res.status(200);\n              res.send(pdf);\n            }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/download.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          pdf.getPdf(payload)\n            .then((pdf) => {\n              res.attachment(payload.fileName || 'download.pdf');\n              res.status(200);\n              res.send(pdf);\n            }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/payload.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          res.status(200);\n          res.json(payload);\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/submit.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig(req.session.slug);\n\n      const cc = ClientConfig(config);\n      const clientConfig = await cc.get();\n\n      const assetSlug = _.get(clientConfig, 'assets.slug', req.session.slug);\n\n      const pdf = Pdf(config);\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          payload = JSON.stringify(payload).replace(/'/gi, '’');\n\n          res.status(200);\n          res.send(`\n          <body onload='form.submit()'>\n            <form id='form' method='POST' action='${config.assist.url}/${assetSlug}/pdf/download' target='_self'>\n              <input type='hidden' name='payload' value='${payload}' />\n            </form>\n          </body>\n        `);\n        }, handleError.bind(null, req, res));\n    })\n  );\n};\n","module.exports = ({\n  ClientConfig,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /metadata:\n   *  get:\n   *    tags:\n   *      - metadata\n   *    summary: Get metadata\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Metadata\n   *        schema:\n   *          type: object\n   *          properties:\n   *            description:\n   *              type: string\n   */\n  router.get(\n    '/metadata.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const cc = ClientConfig(await getConfig(req.session.slug));\n\n      const clientConfig = await cc.get();\n\n      try {\n        handleResponse(req, res, clientConfig.client.metadata, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","const isArray = require('lodash/isArray');\n\nmodule.exports = ({\n  Db,\n  Entity,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * definitions:\n   *  Entity:\n   *    type: object\n   *    required:\n   *      - _id\n   *      - _rev\n   *    properties:\n   *      _id:\n   *        type: string\n   *      _rev:\n   *        type: string\n   *      schema:\n   *        type: string\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      thumbnail:\n   *        type: object\n   *      fields:\n   *        type: object\n   *      published:\n   *        type: boolean\n   *      publishedAt:\n   *        type: string\n   */\n\n  /**\n   * @swagger\n   * /entities/index:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Show indexes\n   *    description: Show all indexes, use this to find fields available for search/query.\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Indexes\n   */\n  router.get(\n    '/entities/index.:ext?',\n    asyncMiddleware(async (req, res) => {\n      try {\n        handleResponse(req, res, await Db(await getConfig(req.session.slug)).indexAsync());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/search:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Search entities\n   *    description: This endpoint extends Cloudant's Lucene based search. Learn more from Cloudant's [documentation](https://docs.cloudant.com/search.html).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: Lucene search query\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: include_docs\n   *        description: Include docs in search results (ignored if `children` or `parents` is `true`)\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: sort\n   *        description: Field to sort results by. Prefixed with `-` to reverse order. Suffixed with &#60;`string|number`&#62;\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: limit\n   *        description: Limit results (max 200)\n   *        in: query\n   *        required: false\n   *        type: number\n   *      - name: bookmark\n   *        description: Bookmark for the next page of results\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: group_field\n   *        description: Field to group results by\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: index\n   *        description: Search index\n   *        in: query\n   *        required: false\n   *        type: string\n   *        default: all\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: trashed\n   *        description: Get trashed entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Search result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            total_rows:\n   *              type: number\n   *            rows:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/search?.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      const include_docs = input.include_docs !== undefined\n        ? JSON.parse(input.include_docs) : false;\n\n      const include_fields = input.include_fields !== undefined\n        ? typeof input.include_fields === 'object' ? input.include_fields : JSON.parse(input.include_fields)\n        : [];\n\n      let children = input.children !== undefined\n        ? typeof input.children === 'object' ? input.children : JSON.parse(input.children)\n        : false;\n      let parents = input.parents !== undefined\n        ? typeof input.parents === 'object' ? input.parents : JSON.parse(input.parents)\n        : false;\n\n      const trashed = input.trashed !== undefined\n        ? JSON.parse(input.trashed) : false;\n\n      const sort = input.sort !== undefined\n        ? input.sort : null;\n      const limit = input.limit !== undefined\n        ? parseInt(input.limit, 10) : null;\n\n      const bookmark = input.bookmark !== undefined\n        ? input.bookmark : null;\n\n      const group_field = input.group_field !== undefined\n        ? input.group_field : null;\n\n      const index = input.index !== undefined\n        ? input.index : null;\n\n      const q = input.query || input.q;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      let query = [];\n\n      query.push(trashed ? 'trashed:true' : '!trashed:true');\n\n      if (req.session.role === 'guest') {\n        query.push('published:true');\n      }\n\n      if (q) {\n        query.push(`(${q})`);\n      }\n\n      query = query.join(' AND ');\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entitySearch({\n          query,\n          include_docs,\n          include_fields,\n          sort,\n          limit,\n          bookmark,\n          group_field,\n          index,\n        }, children, parents, req.session.role), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/find:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Query entities\n   *    description: This endpoint extends CouchDB's Mango query. Learn more from Cloudant's [documentation](https://docs.cloudant.com/cloudant_query.html#finding-documents-using-an-index).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: JSON query object, refer to CouchDB/Cloudant docs.\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Query result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            docs:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/find.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      let children = (req.query.children || req.body.children) !== undefined\n        ? JSON.parse((req.query.children || req.body.children)) : false;\n      let parents = (req.query.parents || req.body.parents) !== undefined\n        ? JSON.parse(req.query.parents || req.body.parents) : false;\n      const trashed = (req.query.trashed || req.body.trashed) !== undefined\n        ? JSON.parse(req.query.trashed || req.body.trashed) : false;\n      const query = req.query.query || req.body.query\n        ? JSON.parse(req.query.query || req.body.query) : { selector: {} };\n\n      query.use_index = ['entityIndex', 'entity'];\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      if (!query.selector.$and) {\n        query.selector = {\n          $and: [\n            query.selector,\n          ],\n        };\n      }\n\n      if (trashed) {\n        query.selector.$and.push({ trashed: true });\n      } else {\n        query.selector.$and.push({\n          $or: [\n            {\n              trashed: {\n                $exists: false,\n              },\n            },\n            {\n              trashed: false,\n            },\n          ],\n        });\n      }\n\n      if (req.session.role === 'guest') {\n        query.selector.$and.push({ published: true });\n      }\n\n      if (req.query.limit) {\n        query.limit = parseInt(req.query.limit, 10);\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityFind(query, children, parents, req.session.role), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entities/field.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.fieldValues(req.query.slug || req.query.fieldSlug, req.query.searchTerm), true);\n      } catch (error) {\n        handleError(res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Get all entities\n   *    description: Get all entities, optionally from an array of IDs\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: id\n   *        description: Entity ID\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: ids\n   *        description: Entity IDs\n   *        in: query\n   *        required: false\n   *        type: array\n   *        items:\n   *          type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Entities\n   *        schema:\n   *          type: array\n   *          items:\n   *            $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      let children = (req.query.children || req.body.children) !== undefined\n        ? JSON.parse(req.query.children || req.body.children) : false;\n      let parents = (req.query.parents || req.body.parents) !== undefined\n        ? JSON.parse(req.query.parents || req.body.parents) : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      let ids = req.query.ids || req.query.id || req.body.ids || req.body.id;\n\n      if (ids) {\n        ids = isArray(ids) ? ids : [ids];\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityList(ids, children, parents, req.session.role), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity/revisions.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRevisions(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityCreate'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityCreate(req.body.entity));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRead(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityUpdate(req.body.entity || req.body.entities, req.body.restore || false));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityDelete(req.body.entity || req.body.entities, req.body.forever || false));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity/trashed.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityDelete('trashed'));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Embedly,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/embedly/oembed.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const embedly = Embedly(await getConfig());\n\n      try {\n        handleResponse(req, res, await embedly.oembed(req.query.url || req.query.urls));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Email,\n  Entity,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /email/preview:\n   *  get:\n   *    tags:\n   *      - email\n   *    summary: Preview email template\n   * #   description: Preview email template\n   *    produces:\n   *      - text/html\n   *    parameters:\n   *      - name: slug\n   *        description: Slug (optionally override slug in development mode)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: templateSlug\n   *        description: Template slug (folder name of the template)\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: payload\n   *        description: JSON payload from which to render the template\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: entityId\n   *        description: Entity `_id` from which to render the template\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: inlineStyles\n   *        description: Inline CSS (default: true)\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *    responses:\n   *      200:\n   *        description: Template\n   */\n  router.all(\n    '/email/preview.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query || {};\n\n      const templateOptions = {\n        data: input.data ? JSON.parse(input.data) : false,\n        inlineStyles: input.inlineStyles ? JSON.parse(input.inlineStyles) : true,\n        inky: input.inky ? JSON.parse(input.inky) : false,\n        mjml: input.mjml ? JSON.parse(input.mjml) : false,\n        skipValidation: input.skipValidation ? JSON.parse(input.skipValidation) : false,\n      };\n\n      const slug = input.slug || req.session.slug;\n\n      // if (!slug) {\n      //   throw new Error('Missing `slug` parameter');\n      // }\n\n      async function renderTemplate(data = {}) {\n        if (templateOptions.data) {\n          handleResponse(req, res, data);\n          return;\n        }\n\n        const email = Email(await getConfig(slug));\n\n        try {\n          const template = await email.getTemplate(input.templateSlug, data, templateOptions);\n\n          handleResponse(req, res, template.html);\n        } catch (error) {\n          handleError(req, res, error);\n        }\n      }\n\n      if (input.payload) {\n        renderTemplate(JSON.parse(input.payload));\n        return;\n      }\n\n      if (input.entityId) {\n        const entity = Entity(await getConfig(slug));\n\n        const entities = (await entity.entityList([input.entityId], 2)).map(row => row.doc);\n\n        renderTemplate(entity.flattenValues(entities)[0]);\n        return;\n      }\n\n      renderTemplate();\n    })\n  );\n\n  router.all(\n    '/email/send.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query || {};\n\n      const templateOptions = {\n        inlineStyles: input.inlineStyles ? JSON.parse(input.inlineStyles) : true,\n        inky: input.inky ? JSON.parse(input.inky) : false,\n        mjml: input.mjml ? JSON.parse(input.mjml) : false,\n        skipValidation: input.skipValidation ? JSON.parse(input.skipValidation) : true,\n      };\n\n      const emailOptions = {\n        fromName: input.fromName || '',\n        fromEmail: input.fromEmail,\n        toName: input.toName || '',\n        toEmail: input.toEmail,\n        from: `${input.fromName || ''} <${input.fromEmail}>`,\n        to: input.toEmail,\n        subject: input.subject,\n      };\n\n      const slug = input.slug || req.session.slug;\n\n      const email = Email(await getConfig(slug));\n\n      try {\n        const result = await email.sendEmail(emailOptions, input.templateSlug, input.payload, templateOptions);\n\n        handleResponse(req, res, result);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/email/subscribe.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const email = Email(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await email.subscribe({\n          email: req.body.email || req.query.email,\n          name: req.body.name || req.query.name || '',\n        }));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const isArray = require('lodash/isArray');\n\nmodule.exports = ({\n  Ecommerce,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/ecommerce/order/message/:message.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        const order = await ecommerce.getOrder(req.query.orderId);\n        handleResponse(req, res, order.messages[req.params.message].email.html);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (isArray(req.query.sort)) {\n        req.query.sort = JSON.stringify(req.query.sort).replace(/\\\\\"/g, '');\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.getType(req.params.type, req.query));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (!/^(discount|order)$/.test(req.params.type)) {\n        handleError(req, res, `Illegal type: ${req.params.type}`);\n        return;\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.setType(req.params.type, req.body.item));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (!/^(discount)$/.test(req.params.type)) {\n        handleError(req, res, `Illegal type: ${req.params.type}`);\n        return;\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.deleteType(req.body.item));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/ecommerce/discount/:code.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.verifyDiscount(req.params.code));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = require(\"express-useragent\");","module.exports = ({\n  router,\n}) => {\n\n  router.all('/debug/useragent.:ext?', (req, res) => {\n    const expressUseragent = require('express-useragent');\n    const useragent = expressUseragent.parse(req.headers['user-agent']);\n\n    res.status(200);\n    res.send(`\n      <html>\n        <head>\n          <title>${useragent.source}</title>\n          <meta name=\"description\" content=\"${useragent.source}\">\n        </head>\n        <body>${useragent.source}</body>\n      </html>\n    `);\n  });\n\n};\n","module.exports = ({\n  ClientConfig,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/config.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.get());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/config.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'config'),\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.set(req.body.config));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  router,\n  cache,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n}) => {\n\n  /**\n   * @swagger\n   * /cache/clear:\n   *  get:\n   *    tags:\n   *      - cache\n   *    summary: Clear cache\n   *    description: Clears the LRU cache of API responses\n   *    produces:\n   *      - text/plain\n   *    responses:\n   *      200:\n   *        description: Result\n   */\n  router.get(\n    '/cache/clear.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      if (!config.cache.enabled) {\n        handleResponse(req, res, 'Cache disabled');\n        return;\n      }\n\n      const items = [];\n\n      cache.forEach((value, key) => {\n        if (key.indexOf(req.session.slug) === 0) {\n          items.push(key);\n        }\n      });\n\n      items.forEach(key => cache.del(key));\n\n      handleResponse(req, res, `${items.length} items removed from cache`);\n    })\n  );\n\n};\n","module.exports = ({\n  Auth,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/auth/:provider/config',\n    authMiddleware,\n    permissionMiddleware.bind(null, ['settings', 'userSettings']),\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      if (!config[req.params.provider]) {\n        res.status(404);\n        res.send({});\n        return;\n      }\n\n      res.status(200);\n      res.send({ clientId: config[req.params.provider].clientId });\n    })\n  );\n\n  router.get(\n    '/auth/:provider',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    (req, res) => {\n      res.status(req.query.error ? 500 : 200);\n      res.send(`${req.params.provider}: ${(req.query.error_description ? req.query.error_description : 'successfully authenticated')}`);\n    }\n  );\n\n  router.post(\n    '/auth/:provider',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/auth/:provider/refresh',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, null, true));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/auth/:provider/:userId',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'userSettings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, req.params.userId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/auth/:provider/:userId/refresh',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, req.params.userId, true));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Analytics,\n  router,\n  authMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/analytics.:ext?',\n    authMiddleware,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const analytics = Analytics(await getConfig());\n\n      try {\n        handleResponse(req, res, await analytics.get(req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass User {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.users.push(user);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async update(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.users, { id: user.id });\n\n    if (index === -1) {\n      throw Error(`User not found: ${user.id}`);\n    }\n\n    clientConfig.users.splice(index, 1, user);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    userId = _.isArray(userId) ? userId : [userId];\n\n    clientConfig.users = clientConfig.users.filter(user => userId.indexOf(user.id) === -1);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = User;\n","const Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst Cloudant = require('@cloudant/cloudant');\nconst Db = require('./db');\n\nclass Tools {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getDb() {\n    const result = await Db.connect(this.config).fetch({\n      include_docs: true,\n    });\n\n    return result;\n  }\n\n  async getChanges() {\n    const result = await Db.connect(this.config).changes({\n      limit: 50,\n      include_docs: true,\n      filter: 'tools/changesEntity',\n    });\n\n    return result;\n  }\n\n  async importDb(dbBackupFile) {\n    const dbName = this.config.db.name;\n\n    const fileConents = await fs.readFileAsync(dbBackupFile.path);\n\n    const docs = JSON.parse(fileConents).rows.map((row) => {\n      const { doc } = row;\n      delete doc._rev;\n      return doc;\n    });\n\n    await fs.unlinkAsync(dbBackupFile.path);\n\n    const cloudant = new Cloudant({\n      url: this.config.db.url,\n      plugins: ['promises', 'retry'],\n    }).db;\n\n    try {\n      await cloudant.destroy(dbName);\n    } catch (error) {\n      //\n    }\n\n    await cloudant.create(dbName);\n\n    const result = await Db.connect(this.config, dbName).bulk({ docs });\n\n    return result;\n  }\n\n}\n\nmodule.exports = Tools;\n","const _ = require('lodash');\nconst Db = require('./db');\nconst ClientConfig = require('./client-config');\n\nclass Taxonomy {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async create(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.taxonomies.push(taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const taxonomy = _.find(clientConfig.taxonomies, { slug: taxonomySlug });\n\n    if (!taxonomy) {\n      throw Error(`Taxonomy not found: ${taxonomySlug}`);\n    }\n\n    return taxonomy;\n  }\n\n  async update(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.taxonomies, { slug: taxonomy.slug });\n\n    if (index === -1) {\n      throw Error(`Taxonomy not found: ${taxonomy.slug}`);\n    }\n\n    clientConfig.taxonomies.splice(index, 1, taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    taxonomySlug = _.isArray(taxonomySlug) ? taxonomySlug : [taxonomySlug];\n\n    clientConfig.taxonomies = clientConfig.taxonomies.filter(taxonomy => taxonomySlug.indexOf(taxonomy.slug) === -1);\n\n    return cc.set(clientConfig);\n  }\n\n  async entitiesByTerm(term) {\n    const db = Db.connect(this.config);\n\n    const entityGroups = (await db.view('entity', 'byTaxonomyTerm', { keys: [term.id], group: true })).rows.map(row => row.value)[0];\n\n    if (!entityGroups) {\n      return [];\n    }\n\n    let entityIds = [];\n\n    _.forEach(entityGroups, (entities) => {\n      entityIds = entityIds.concat(entities);\n    });\n\n    entityIds = _.uniq(entityIds);\n\n    return (await db.fetch({ keys: entityIds, include_docs: true })).rows.map(row => row.doc);\n  }\n\n  async createTerm(taxonomySlug, term) {\n    const taxonomy = await this.read(taxonomySlug);\n\n    taxonomy.terms.push(term);\n\n    return this.update(taxonomy);\n  }\n\n  async updateTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.map((_term) => {\n            if (_term.id === term.id) {\n              _term.title = term.title;\n              _term.slug = term.slug;\n            }\n\n            if (!_term.parents) {\n              _term.parents = [];\n            }\n\n            _term.parents = _term.parents.map((parent) => {\n              if (parent.id === term.id) {\n                parent.title = term.title;\n                parent.slug = term.slug;\n              }\n              return parent;\n            });\n\n            return _term;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n\n  async deleteTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.filter((_term) => {\n            if (_term.id === term.id) {\n              return false;\n            }\n\n            if ((_term.parents || []).filter(parent => parent.id === term.id).length) {\n              return false;\n            }\n\n            return true;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n}\n\nmodule.exports = Taxonomy;\n","module.exports = require(\"hashids\");","module.exports = require(\"stripe\");","const _ = require('lodash');\nconst Stripe = require('stripe');\nconst Promise = require('bluebird');\nconst Hashids = require('hashids');\n\nconst ClientConfig = require('./client-config');\nconst Email = require('./email');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass StripeClass {\n  constructor(config) {\n    this.config = config;\n\n    this.stripe = Stripe(this.config.stripe.apiKey);\n    this.email = new Email(this.config);\n\n    this.hashids = new Hashids(this.config.slug, 6, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n  }\n\n  async getSettings() {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    let settings;\n\n    try {\n      settings = clientConfig.module.ecommerce;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    try {\n      settings.clientStripeAccountId = clientConfig.provider.stripe.stripe_user_id;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    settings.client = clientConfig.client;\n    settings.assets = clientConfig.assets;\n\n    return settings;\n  }\n\n  checkout(token, order) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n\n          const listId = _.get(settings, 'createsend.checkoutSubscriberListId');\n\n          if (order.subscribe && listId) {\n            this.email.subscribe(order.customerDetails, 'createsend', listId)\n              .then((result) => {\n                console.log(result);\n              }, (error) => {\n                console.error(error);\n              });\n          }\n\n          // lookup customer by email, create if not found\n          this.findOrCreateCustomer(order.customerDetails.email, order)\n            .then((customer) => {\n\n              // store order data (customer, items, address)\n              this.createOrder(order, customer)\n                .then((order) => {\n\n                  this.updateOrCreateStripeCustomer(settings.clientStripeAccountId, customer, token, order)\n                    .then((stripeCustomer) => {\n\n                      // update customer, append order to customer, update metadata\n                      this.updateCustomer(customer, stripeCustomer, order)\n                        .then((customer) => {\n\n                          // create charge, take fee\n                          this.createCharge(settings, stripeCustomer, customer, order)\n                            .then((updatedOrder) => {\n\n                              this.sendReceipt(settings, customer, order)\n                                .then((orderReceipt) => {\n\n                                  updatedOrder.messages.orderReceipt = orderReceipt;\n\n                                  this.sendNotification(settings, customer, order)\n                                    .then((orderNotification) => {\n\n                                      updatedOrder.messages.orderNotification = orderNotification;\n\n                                      // update order charge status, charge id\n                                      this.updateOrder(updatedOrder)\n                                        .then((finalOrder) => {\n\n                                          resolve(finalOrder);\n\n                                        }, reject);\n                                    }, reject);\n                                }, reject);\n                            }, reject);\n                        }, reject);\n                    }, reject);\n                }, reject);\n            }, reject);\n        }, reject)\n        .catch(reject);\n    });\n  }\n\n  retrieveAccount() {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.accounts.retrieve(settings.clientStripeAccountId)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  refund(order, amount) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.refunds.create({\n            refund_application_fee: true,\n            charge: order.charge.id,\n            amount,\n          }, {\n            stripe_account: settings.clientStripeAccountId,\n          })\n            .then((refund) => {\n              this.stripe.charges.retrieve(order.charge.id, {\n                stripe_account: settings.clientStripeAccountId,\n              })\n                .then((charge) => {\n                  order.charge.status = charge.status;\n                  order.charge.amount = charge.amount;\n                  order.charge.amountRefunded = charge.amount_refunded;\n\n                  Helpers.createOrUpdate(this.config, order)\n                    .then(resolve, reject);\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  findOrCreateCustomer(email, order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'customerByEmail', {\n        keys: [email],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            resolve(body.rows[0].doc);\n\n          } else {\n            const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n            const newCustomer = {\n              type: 'customer',\n              createdAt: now,\n              modifiedAt: now,\n              email: order.customerDetails.email,\n              name: order.customerDetails.name,\n              phone: order.customerDetails.phone,\n              billingAddress: order.billingAddress,\n              shippingAddress: order.shippingAddress,\n              orders: [],\n            };\n\n            Db.connect(this.config).insert(newCustomer)\n              .then((body) => {\n                newCustomer._id = body.id;\n                newCustomer._rev = body.rev;\n\n                resolve(newCustomer);\n              }, reject);\n          }\n        }, reject);\n    });\n  }\n\n  updateOrCreateStripeCustomer(clientStripeAccountId, customer, token, order) {\n    return new Promise((resolve, reject) => {\n      const stripeCustomer = {\n        source: token,\n        email: order.customer.email,\n        description: order.customer.name,\n        metadata: {\n          customer_id: customer._id,\n        // billingAddress: JSON.stringify(order.billingAddress),\n        // shippingAddress: JSON.stringify(order.shippingAddress)\n        },\n      };\n\n      if (customer.stripe && customer.stripe.customer.id) {\n        this.stripe.customers.update(customer.stripe.customer.id, stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        })\n          .then(resolve, (error) => {\n            if (error.type === 'StripeInvalidRequestError' && error.param === 'id') {\n              this.stripe.customers.create(stripeCustomer, {\n                stripe_account: clientStripeAccountId,\n              }).then(resolve, reject);\n\n            } else {\n              reject(error);\n            }\n          });\n\n      } else {\n        this.stripe.customers.create(stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        }).then(resolve, reject);\n      }\n    });\n  }\n\n  createOrder(order, customer) {\n    return new Promise((resolve, reject) => {\n      const items = order.items.map(item => ({\n        id: item.id,\n        title: item.title.replace(/<br\\s?>/ig, ' ').replace(/<\\/?p>|<\\/?span>/ig, ''),\n        price: item.price,\n        quantity: item.quantity,\n        metadata: item.metadata || {},\n      }));\n\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      const newOrder = {\n        type: 'order',\n        orderId: this.hashids.encode(new Date().getTime()),\n        createdAt: now,\n        modifiedAt: now,\n        customer: {\n          id: customer._id,\n          email: customer.email,\n          name: customer.name,\n        },\n        items,\n        shippingMethod: {\n          name: order.shippingMethod.name,\n          amount: Number(order.shippingMethod.amount),\n        },\n        subtotal: Number(order.subtotal),\n        tax: {\n          rate: order.tax.rate || 0,\n          includedInPrice: order.tax.includedInPrice || false,\n          total: order.tax.total || 0,\n          show: order.tax.show || false,\n        },\n        discount: {\n          code: order.discount.code || '',\n          name: order.discount.name || '',\n          total: order.discount.total || 0,\n        },\n        total: Number(order.total),\n        billingAddress: order.billingAddress,\n        shippingAddress: order.shippingAddress,\n        messages: {},\n        status: 'pending',\n        test: true,\n      };\n\n      Db.connect(this.config).insert(newOrder)\n        .then((body) => {\n          newOrder._id = body.id;\n          newOrder._rev = body.rev;\n\n          resolve(newOrder);\n        }, reject);\n    });\n  }\n\n  updateOrder(order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).insert(order)\n        .then((body) => {\n          order._rev = body.rev;\n\n          resolve(order);\n        }, reject);\n    });\n  }\n\n  updateCustomer(customer, stripeCustomer, order) {\n    return new Promise((resolve, reject) => {\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      customer.modifiedAt = now;\n\n      if (!customer.orders) {\n        customer.orders = [];\n      }\n\n      customer.orders.push(order._id);\n\n      if (!customer.stripe) {\n        customer.stripe = {\n          customer: {\n            id: null,\n          },\n        };\n      }\n\n      customer.stripe.customer.id = stripeCustomer.id;\n\n      Db.connect(this.config).insert(customer)\n        .then((body) => {\n          customer._rev = body.rev;\n\n          resolve(customer);\n        }, reject);\n    });\n  }\n\n  createCharge(settings, stripeCustomer, customer, order) {\n    return new Promise((resolve, reject) => {\n      const amount = Number(order.total) * 100;\n\n      const charge = {\n        amount,\n        currency: settings.currency.iso.toLowerCase(),\n        customer: stripeCustomer.id,\n        capture: true,\n        description: order.orderId,\n        // shipping: order.shippingAddress, // fraud prevention, must follow expected schema\n        metadata: {\n          customer_id: customer._id,\n          order_id: order._id,\n        },\n        statement_descriptor: _.kebabCase(settings.storeName).toUpperCase(),\n        application_fee: Math.ceil(amount * 0.02),\n      };\n\n      this.stripe.charges.create(charge, {\n        stripe_account: settings.clientStripeAccountId,\n      })\n        .then((charge) => {\n\n          order.charge = {\n            paymentGateway: 'stripe',\n            id: charge.id,\n            status: charge.status,\n            currency: charge.currency.toUpperCase(),\n            amount: charge.amount,\n            amountRefunded: charge.amount_refunded,\n          };\n\n          order.test = !charge.livemode;\n\n          resolve(order);\n\n        }, reject);\n    });\n  }\n\n  sendReceipt(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: customer.email,\n        subject: `Your order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-receipt`, templateData).then(resolve, reject);\n    });\n  }\n\n  sendNotification(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: settings.emailSenderAddress,\n        subject: `New order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-notification`, templateData).then(resolve, reject);\n    });\n  }\n\n}\n\nmodule.exports = StripeClass;\n","module.exports = require(\"shippo\");","const Promise = require('bluebird');\nconst shippo = require('shippo');\n\nclass Shippo {\n  constructor(config) {\n    this.config = config;\n\n    this.shippo = shippo(config.shippo.token);\n  }\n\n  getQuote(address, parcel) {\n    return new Promise((resolve, reject) => {\n\n      const addressFrom = {\n        object_purpose: 'QUOTE',\n        zip: this.config.shippo.fromZip,\n        country: this.config.shippo.fromCountry,\n      };\n\n      const addressTo = {\n        object_purpose: 'QUOTE',\n        // 'name': address.name,\n        // 'company': '',\n        // 'street1': address.street1,\n        // 'street2': address.street2,\n        // 'city': address.city,\n        // 'state': '',\n        zip: address.zip,\n        country: address.country,\n        // 'phone': address.phone,\n        // 'email': address.email,\n        metadata: '',\n      };\n\n      parcel.distance_unit = 'cm';\n      parcel.mass_unit = 'kg';\n\n      this.shippo.shipment.create({\n        object_purpose: 'QUOTE',\n        address_from: addressFrom,\n        address_to: addressTo,\n        parcel,\n      })\n        .then((shipment) => {\n          const ratesReady = (shipment, attempts) => {\n            if ((shipment.object_status === 'QUEUED' || shipment.object_status === 'WAITING') && attempts < 10) {\n              this.shippo.shipment.retrieve(shipment.object_id).then((val) => {\n                ratesReady(val, attempts + 1);\n              });\n\n            } else {\n              this.shippo.shipment.rates(shipment.object_id)\n                .then((rates) => {\n                  resolve(rates);\n\n                }, (error) => {\n                  console.error('There was an error retrieving rates : %s', error);\n                  reject(error);\n                });\n            }\n          };\n\n          ratesReady(shipment, 0);\n\n        }, (error) => {\n          console.error('There was an error creating shipment: %s', error);\n          reject(error);\n        });\n\n    });\n  }\n\n}\n\nmodule.exports = Shippo;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass Settings {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async update(settings) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.client = _.merge({}, clientConfig.client, settings);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = Settings;\n","const _ = require('lodash');\nconst request = require('request-promise');\nconst Entity = require('./entity');\nconst ClientConfig = require('./client-config');\n\nclass Pdf {\n  constructor (config) {\n    this.config = config;\n    this.templates = this.config.pdf.templates;\n  }\n\n  async getPayload (templateId, entityId, role) {\n    if (!this.templates[templateId]) {\n      throw new Error('Template not found');\n    }\n\n    const entity = new Entity(this.config);\n\n    const entities = (await entity.entityList([entityId], 2, false, role)).map(row => row.doc);\n\n    if (entities.length === 0) {\n      throw new Error('Entity not found');\n    }\n\n    const payload = this.templates[templateId](Entity.flattenValues(entities)[0]);\n\n    return payload;\n  }\n\n  async getPdf (payload) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n    const assistPdfUrl = `${this.config.assist.url}/${assetSlug}/pdf/download`;\n\n    payload = typeof payload === 'object' ? JSON.stringify(payload).replace(/'/gi, '’') : payload;\n\n    const response = await request({\n      method: 'POST',\n      uri: assistPdfUrl,\n      encoding: null,\n      form: {\n        payload,\n      },\n    });\n\n    return response;\n  }\n\n}\n\nmodule.exports = Pdf;\n","module.exports = require(\"jsonwebtoken\");","const jwt = require('jsonwebtoken');\n\nclass Jwt {\n  constructor(config) {\n    this.config = config;\n  }\n\n  signToken(payload, options = {}) {\n    return jwt.sign(payload, this.config.auth.tokenSecret, options);\n  }\n\n  verifyToken(token) {\n    return jwt.verify(token, this.config.auth.tokenSecret);\n  }\n}\n\nmodule.exports = Jwt;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst request = require('request-promise');\n\nmodule.exports = function (options) {\n  const defaultOptions = {\n    client_id: null,\n    access_token: null,\n    version: 'v1',\n    host: 'https://api.instagram.com',\n  };\n\n  options = _.merge({}, defaultOptions, options || {});\n\n  const _request = (method, endpoint, query) => new Promise((resolve, reject) => {\n    const requestOptions = {\n      method,\n      url: [options.host, options.version, endpoint].join('/'),\n      qs: {\n        access_token: query.access_token || options.access_token,\n        client_id: query.client_id || options.client_id,\n      },\n    };\n\n    requestOptions.qs = _.extend({}, requestOptions.qs, query);\n\n    request(requestOptions)\n      .then((response) => {\n        resolve(JSON.parse(response));\n      }, reject);\n  });\n\n  this.get = (endpoint, query) => _request('GET', endpoint, query);\n};\n","module.exports = require(\"deep-diff\");","module.exports = require(\"json-query\");","module.exports = require(\"embedly\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst EmbedlyApi = require('embedly');\n\nclass Embedly {\n  constructor(config) {\n    this.config = config;\n  }\n\n  oembed(urls) {\n    return new Promise((resolve, reject) => {\n      const embedly = new EmbedlyApi({\n        key: this.config.embedly.apiKey,\n      });\n\n      const opts = {\n        urls: _.isArray(urls) ? urls : [urls],\n        format: 'json',\n      };\n\n      embedly.oembed(opts, (error, result) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(result);\n      });\n    });\n  }\n\n}\n\nmodule.exports = Embedly;\n","module.exports = require(\"node-sass\");","module.exports = require(\"i18n-iso-countries\");","module.exports = require(\"moment\");","module.exports = require(\"html-to-text\");","module.exports = require(\"mjml-mailchimp\");","module.exports = require(\"mjml-validator\");","module.exports = require(\"mjml-core\");","module.exports = require(\"mjml\");","module.exports = require(\"inky\");","module.exports = require(\"email-templates\");","module.exports = require(\"nodemailer-mailgun-transport\");","module.exports = require(\"createsend-node\");","module.exports = require(\"nodemailer\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass Ecommerce {\n  constructor(config) {\n    this.config = config;\n  }\n\n  getType(type, query) {\n    return new Promise((resolve, reject) => {\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      Db.connect(this.config).search('ecommerce', type, query)\n        .then(resolve, reject);\n    });\n  }\n\n  setType(type, item) {\n    return new Promise((resolve, reject) => {\n      item.type = type;\n\n      Helpers.createOrUpdate(this.config, item)\n        .then(resolve, reject);\n    });\n  }\n\n  deleteType(items) {\n    return new Promise((resolve, reject) => {\n      items = items.map(item => ({\n        _id: item._id,\n        _rev: item._rev,\n        _deleted: true,\n      }));\n\n      Helpers.chunkUpdate(this.config, items, 1000)\n        .then(resolve, reject);\n    });\n  }\n\n  getOrder(orderId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'orderByOrderId', {\n        key: orderId,\n        include_docs: true,\n      })\n        .then((body) => {\n          if (!body.rows.length) {\n            reject(new Error('Order not found'));\n            return;\n          }\n\n          resolve(body.rows[0].doc);\n        }, reject);\n    });\n  }\n\n  verifyDiscount(code) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'discountByCode', {\n        keys: [code],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            const discount = body.rows[0].doc;\n\n            const now = new Date().getTime();\n\n            const dateStart = new Date(Date.parse(discount.dateStart)).getTime();\n            const dateEnd = new Date(Date.parse(discount.dateEnd)).getTime();\n\n            if (dateStart > now) {\n              reject(new Error('Discount not valid (not begun)'));\n              return;\n\n            }\n\n            if (dateEnd < now) {\n              reject(new Error('Discount not valid (expired)'));\n              return;\n            }\n\n            resolve(discount);\n\n          } else {\n            reject(new Error({\n              statusCode: 404,\n              message: `Discount code not found (${code})`,\n            }));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Ecommerce;\n","module.exports = require(\"querystring\");","const _ = require('lodash');\nconst querystring = require('querystring');\nconst axios = require('axios');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\n\nconst providerTokenUri = {\n  google: 'https://www.googleapis.com/oauth2/v4/token',\n  instagram: 'https://api.instagram.com/oauth/access_token',\n  stripe: 'https://connect.stripe.com/oauth/token',\n  vimeo: 'https://api.vimeo.com/oauth/access_token',\n  spotify: 'https://accounts.spotify.com/api/token',\n};\n\nclass Auth {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async authoriseUser(slug, userId) {\n    const isSuperUser = this.config.auth.superUserId.split(',').map(superUser => superUser.trim()).indexOf(userId) > -1;\n\n    if (isSuperUser) {\n      return {\n        id: userId,\n        role: 'super',\n      };\n    }\n\n    const clientConfig = await Db.connect(this.config, slug).get('config');\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    if (!user.active) {\n      throw Error(`User not active: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async authProvider(provider, params, userId = null, refresh = false) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const providerConfig = _.merge({}, this.config[provider], params);\n\n    let providerClientConfig;\n\n    if (userId) {\n      providerClientConfig = _.get(clientConfig, ['userSettings', userId, 'provider', provider], {});\n    } else {\n      providerClientConfig = _.get(clientConfig, ['provider', provider], {});\n    }\n\n    const data = {\n      grant_type: refresh ? 'refresh_token' : 'authorization_code',\n      code: params.code,\n      client_id: providerConfig.clientId,\n      client_secret: providerConfig.clientSecret,\n      redirect_uri: providerConfig.redirectUri,\n      refresh_token: providerClientConfig.refresh_token,\n    };\n\n    const uri = providerTokenUri[provider];\n\n    let providerAuth;\n\n    try {\n      providerAuth = (await axios.post(uri, querystring.stringify(data))).data;\n    } catch (error) {\n      throw new Error(JSON.stringify(error.response.data));\n    }\n\n    providerClientConfig = _.merge({}, providerClientConfig, providerAuth);\n    providerClientConfig.begins = Math.floor(new Date().getTime() / 1000);\n\n    if (provider === 'google') {\n      try {\n        providerClientConfig.user = (await axios.get(`https://www.googleapis.com/plus/v1/people/me?access_token=${providerClientConfig.access_token}`)).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (provider === 'spotify') {\n      try {\n        providerClientConfig.user = (await axios.get(`https://api.spotify.com/v1/me?access_token=${providerClientConfig.access_token}`)).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (userId) {\n      _.set(clientConfig, ['userSettings', userId, 'provider', provider], providerClientConfig);\n    } else {\n      _.set(clientConfig, ['provider', provider], providerClientConfig);\n    }\n\n    return cc.set(clientConfig);\n  }\n\n}\n\nmodule.exports = Auth;\n","module.exports = require(\"password-hash\");","const path = require('path');\n\nconst config = {\n  environment: process.env.ENVIRONMENT || 'development',\n  debug: process.env.DEBUG || false,\n\n  slug: process.env.SLUG,\n  baseUrl: process.env.BASE_URL || '',\n\n  db: {\n    url: process.env.DB_URL,\n    host: process.env.DB_HOST,\n    name: process.env.DB_NAME,\n    requestPlugin: process.env.DB_REQUEST_PLUGIN,\n    meterType: process.env.DB_METER_TYPE,\n  },\n\n  auth: {\n    superUserId: process.env.AUTH_SUPER_USER_ID,\n    tokenSecret: process.env.AUTH_TOKEN_SECRET || 'change_this_secret',\n  },\n\n  dev: {\n    userId: process.env.DEV_USER_ID || 'dev',\n    role: process.env.DEV_ROLE || 'super',\n  },\n\n  cms: {\n    title: process.env.CMS_TITLE,\n    url: process.env.CMS_URL,\n  },\n\n  assist: {\n    url: process.env.ASSIST_URL,\n    username: process.env.ASSIST_USERNAME,\n    password: process.env.ASSIST_PASSWORD,\n  },\n\n  pdf: {\n    templates: {},\n  },\n\n  email: {\n    templatesPath: path.resolve(__dirname, 'email'),\n  },\n\n  instagram: {\n    clientId: process.env.INSTAGRAM_CLIENT_ID,\n    clientSecret: process.env.INSTAGRAM_CLIENT_SECRET,\n  },\n\n  twitter: {\n    consumerKey: process.env.TWITTER_CONSUMER_KEY,\n    consumerSecret: process.env.TWITTER_CONSUMER_SECRET,\n    accessTokenKey: process.env.TWITTER_ACCESS_TOKEN_KEY,\n    accessTokenSecret: process.env.TWITTER_ACCESS_TOKEN_SECRET,\n  },\n\n  google: {\n    clientId: process.env.GOOGLE_CLIENT_ID,\n    clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n  },\n\n  mailgun: {\n    apiKey: process.env.MAILGUN_API_KEY,\n    domain: process.env.MAILGUN_DOMAIN,\n  },\n\n  embedly: {\n    apiKey: process.env.EMBEDLY_API_KEY,\n  },\n\n  aws: {\n    iamAccessKeyId: process.env.AWS_IAM_ACCESS_KEY_ID,\n    iamAccessKeySecret: process.env.AWS_IAM_ACCESS_KEY_SECRET,\n\n    s3: {\n      bucket: process.env.AWS_S3_BUCKET,\n    },\n  },\n\n  shippo: {\n    token: process.env.SHIPPO_TOKEN,\n    fromZip: process.env.SHIPPO_FROM_ZIP,\n    fromCountry: process.env.SHIPPO_FROM_COUNTRY,\n  },\n\n  spotify: {\n    clientId: process.env.SPOTIFY_CLIENT_ID,\n    clientSecret: process.env.SPOTIFY_CLIENT_SECRET,\n  },\n\n  stripe: {\n    clientId: process.env.STRIPE_CLIENT_ID,\n    clientSecret: process.env.STRIPE_CLIENT_SECRET,\n    apiKey: process.env.STRIPE_API_KEY,\n  },\n\n  vimeo: {\n    clientId: process.env.VIMEO_CLIENT_ID,\n    clientSecret: process.env.VIMEO_CLIENT_SECRET,\n  },\n\n  zencoder: {\n    apiKey: process.env.ZENCODER_API_KEY,\n    s3: {\n      bucket: process.env.ZENCODER_S3_BUCKET,\n      credentials: process.env.ZENCODER_S3_CREDENTIALS,\n    },\n  },\n};\n\nmodule.exports = config;\n","function Api() { }\n\nApi.defaultConfig = require('./config.default');\n\nApi.Assist = (...args) => new (require('./lib/assist'))(...args);\nApi.Auth = (...args) => new (require('./lib/auth'))(...args);\nApi.ClientConfig = (...args) => new (require('./lib/client-config'))(...args);\nApi.Db = (...args) => new (require('./lib/db'))(...args);\nApi.Ecommerce = (...args) => new (require('./lib/ecommerce'))(...args);\nApi.Email = (...args) => new (require('./lib/email'))(...args);\nApi.Embedly = (...args) => new (require('./lib/embedly'))(...args);\nApi.Entity = (...args) => new (require('./lib/entity'))(...args);\nApi.Fields = (...args) => new (require('./lib/fields'))(...args);\nApi.Helpers = (...args) => new (require('./lib/helpers'))(...args);\nApi.Instagram = (...args) => new (require('./lib/instagram'))(...args);\nApi.Jwt = (...args) => new (require('./lib/jwt'))(...args);\nApi.Pdf = (...args) => new (require('./lib/pdf'))(...args);\nApi.Roles = (...args) => new (require('./lib/roles'))(...args);\nApi.Schema = (...args) => new (require('./lib/schema'))(...args);\nApi.Settings = (...args) => new (require('./lib/settings'))(...args);\nApi.Shippo = (...args) => new (require('./lib/shippo'))(...args);\nApi.Stripe = (...args) => new (require('./lib/stripe'))(...args);\nApi.Taxonomy = (...args) => new (require('./lib/taxonomy'))(...args);\nApi.Tools = (...args) => new (require('./lib/tools'))(...args);\nApi.User = (...args) => new (require('./lib/user'))(...args);\n\nmodule.exports = Api;\n","module.exports = require(\"xxhashjs\");","module.exports = require(\"deep-freeze\");","module.exports = require(\"object-sizeof\");","module.exports = require(\"circular-json-es6\");","module.exports = require(\"le_node\");","module.exports = require(\"zlib\");","module.exports = require(\"url-parse\");","module.exports = require(\"cache-manager-redis-store\");","module.exports = require(\"cache-manager\");","process.on('unhandledRejection', result => console.error(result));\n\nconst _ = require('lodash');\nconst express = require('express');\nconst cacheManager = require('cache-manager');\nconst redisStore = require('cache-manager-redis-store');\nconst Promise = require('bluebird');\nconst URL = require('url-parse');\nconst zlib = Promise.promisifyAll(require('zlib'));\nconst Logger = require('le_node');\nconst CircularJSON = require('circular-json-es6');\nconst sizeof = require('object-sizeof');\nconst deepFreeze = require('deep-freeze');\nconst XXH = require('xxhashjs');\n\nconst Api = require('../index');\n\nconst HASH_SEED = 0xABCD;\n\nconst defaultConfig = require('./config.default');\n\nfunction AceApiServer (app, customConfig = {}, customAuthMiddleware = null) {\n  const config = deepFreeze(_.merge({}, Api.defaultConfig, defaultConfig, customConfig));\n\n  // Async middleware\n\n  const asyncMiddleware = fn => (req, res, next) => {\n    Promise.resolve(fn(req, res, next))\n      .catch(next);\n  };\n\n  // Skip authorisation\n\n  const skipAuth = (req) => {\n    if (config.environment !== 'development') {\n      return false;\n    }\n    const allowedRoutes = [\n      '/token',\n      '/email',\n    ];\n    return _.find(allowedRoutes, route => new RegExp(`^${route}`).test(req.path));\n  };\n\n  // Default auth middleware\n\n  const defaultAuthMiddleware = (req, res, next) => {\n    if (skipAuth(req)) {\n      next();\n      return;\n    }\n\n    if (!req.session.userId) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  const authMiddleware = customAuthMiddleware || defaultAuthMiddleware;\n\n  // Permissions middleware\n\n  const permissionMiddleware = (permissions, req, res, next) => {\n    if (!req.session.role) {\n      res.status(401);\n      res.send({\n        permissions,\n        message: 'Error: role not defined in session.',\n      });\n      return;\n    }\n\n    if (req.session.role === 'super') {\n      next();\n      return;\n    }\n\n    const roles = Api.Roles();\n\n    if (_.isString(permissions)) {\n      permissions = permissions.split(',');\n    }\n\n    let authorised = false;\n\n    permissions.forEach((permission) => {\n      if (roles.role(req.session.role).permissions[permission.trim()]) {\n        authorised = true;\n      }\n    });\n\n    if (!roles.role(req.session.role) || !authorised) {\n      res.status(401);\n      res.send({\n        permissions,\n        message: 'Sorry, you\\'re not authorised to do this.',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  // Clone and extend config per request/session\n\n  const omitUndefined = (obj) => {\n    _.forIn(obj, (value, key, obj) => {\n      if (_.isPlainObject(value)) {\n        value = omitUndefined(value);\n\n        if (_.keys(value).length === 0) {\n          delete obj[key];\n        }\n      }\n\n      if (_.isUndefined(value)) {\n        delete obj[key];\n      }\n    });\n\n    return obj;\n  };\n\n  const cloneConfig = config => _.mergeWith({}, JSON.parse(JSON.stringify(config)), omitUndefined(_.cloneDeep(config)));\n\n  const getConfig = async (slug) => {\n    const configClone = cloneConfig(config);\n\n    configClone.slug = slug;\n    configClone.db.name = slug;\n\n    return configClone;\n  };\n\n  // Cache\n\n  let cache;\n\n  if (config.cache.enabled) {\n    if (config.redis.url || config.redis.host) {\n      const redisOptions = {\n        ttl: config.cache.ttl,\n      };\n\n      if (config.redis.url) {\n        redisOptions.url = config.redis.url;\n      } else {\n        redisOptions.host = config.redis.host;\n        redisOptions.port = config.redis.port;\n        redisOptions.password = config.redis.password;\n        redisOptions.db = config.redis.db;\n      }\n\n      cache = cacheManager.caching(_.merge({ store: redisStore }, redisOptions));\n\n      const redisClient = cache.store.getClient();\n      redisClient.on('error', (error) => {\n        console.error('redis: error:', error);\n      });\n\n    } else {\n      cache = cacheManager.caching({\n        store: 'memory',\n        ttl: config.cache.ttl,\n        max: config.cache.memory.max,\n        length: (item) => {\n          // const length = Buffer.byteLength(item, 'utf8')\n          const length = sizeof(item);\n          return length;\n        },\n      });\n    }\n  }\n\n  // Cache middleware\n\n  const hash = (req) => {\n    const obj = {\n      slug: req.session.slug,\n      path: req.path,\n      query: req.query,\n      body: req.body,\n    };\n    return XXH.h64(JSON.stringify(obj), HASH_SEED).toString(16);\n  };\n\n  const cacheMiddleware = asyncMiddleware(async (req, res, next) => {\n    const useCachedResponse = (\n      config.cache.enabled\n      && req.session.role === 'guest' // TODO: Replace 'guest' with constant\n      && (req.query.__cache && JSON.parse(req.query.__cache)) !== false\n    );\n\n    if (useCachedResponse) {\n      try {\n        const key = hash(req);\n\n        let response = await cache.get(key);\n\n        if (typeof response === 'string') {\n          if (config.cache.compress) {\n            response = (await zlib.gunzipAsync(Buffer.from(response, 'base64'))).toString();\n          }\n\n          try {\n            response = JSON.parse(response);\n          } catch (error) {\n            //\n          }\n\n          res.set('X-Cached-Response', true);\n          res.status(response ? 200 : 204);\n          res.send(response);\n\n          return;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    res.set('X-Cached-Response', false);\n    next();\n  });\n\n  // Response helpers\n\n  const handleError = (req, res, error) => {\n    if (_.isObject(error)) {\n      error = JSON.parse(CircularJSON.stringify(error));\n    }\n\n    const statusCode = error.statusCode || error.code || 500;\n    const errorMessage = error.stack || error.error || error.message || error.body || error.data || error;\n\n    console.error(errorMessage);\n\n    res.status(typeof statusCode === 'string' ? 500 : statusCode);\n    res.send({\n      code: statusCode,\n      message: errorMessage,\n    });\n  };\n\n  const handleResponse = async (req, res, response, cacheResponse = false) => {\n    if (response === undefined || response === null) {\n      response = '';\n      res.status(204);\n      res.send(response);\n\n    } else {\n      response = CircularJSON.stringify(response);\n      res.status(200);\n      res.send(JSON.parse(response));\n    }\n\n    if (cacheResponse && config.cache.enabled && req.session.role === 'guest') { // TODO: Replace 'guest' with constant\n      const key = hash(req);\n\n      if (config.cache.compress) {\n        response = (await zlib.gzipAsync(Buffer.from(response))).toString('base64');\n      }\n\n      cache.set(key, response);\n    }\n  };\n\n  // Header middleware\n\n  const headerMiddleware = (req, res, next) => {\n    const headers = {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,OPTIONS',\n      'Access-Control-Expose-Headers': 'X-Slug, X-Role, X-User-Id',\n      Vary: 'Accept-Encoding, X-Api-Token',\n    };\n\n    if (req.headers['access-control-request-headers']) {\n      headers['Access-Control-Allow-Headers'] = req.headers['access-control-request-headers'];\n    }\n\n    res.set(headers);\n\n    if (req.method === 'OPTIONS') {\n      res.sendStatus(200);\n      return;\n    }\n\n    next();\n  };\n\n  // Session middleware\n\n  const jwt = Api.Jwt(config);\n\n  const sessionMiddleware = (req, res, next) => {\n    if (skipAuth(req)) {\n      next();\n      return;\n    }\n\n    const referrer = req.headers.referrer || req.headers.referer;\n\n    if (referrer) {\n      const referrerHostname = new URL(referrer)\n        .hostname.split('.').slice(-2).join('.');\n\n      if (config.api.blacklistReferrer.indexOf(referrerHostname) > -1) {\n        res.status(401);\n        res.send({\n          code: 401,\n          message: 'Not authorised, referrer blacklisted',\n        });\n        return;\n      }\n    }\n\n    const token = req.headers['x-api-token'] || req.query.apiToken || req.session.apiToken;\n\n    if (!token) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing token',\n      });\n      return;\n    }\n\n    if (config.api.blacklistToken.indexOf(token) > -1) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, token blacklisted',\n      });\n      return;\n    }\n\n    try {\n      const payload = jwt.verifyToken(token);\n\n      req.session.userId = payload.userId;\n      req.session.slug = payload.slug;\n      req.session.role = payload.role || 'guest'; // TODO: Replace 'guest' with constant\n\n    } catch (error) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: `Not authorised, token verification failed (${error.message})`,\n        error,\n      });\n      return;\n    }\n\n    if (!req.session.slug) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing slug',\n      });\n      return;\n    }\n\n    if (!req.session.role) {\n      req.session.role = 'guest';\n    }\n\n    if (req.session.userId) {\n      res.set('X-User-Id', req.session.userId);\n    }\n\n    res.set('X-Environment', config.environment);\n    res.set('X-Slug', req.session.slug);\n    res.set('X-Role', req.session.role);\n\n    next();\n  };\n\n  // Router\n\n  const router = express.Router();\n\n  const forceHttps = (req, res, next) => {\n    if (\n      (req.headers['x-forwarded-proto'] && req.headers['x-forwarded-proto'] !== 'https') &&\n      (req.headers['cf-visitor'] && JSON.parse(req.headers['cf-visitor']).scheme !== 'https') // Fix for Cloudflare/Heroku flexible SSL\n    ) {\n      res.redirect(301, `https://${req.headers.host}${req.path}`);\n      return;\n    }\n    next();\n  };\n\n  if (config.environment === 'production' && config.forceHttps === true) {\n    if (app.enable) {\n      app.enable('trust proxy');\n    }\n    app.use(forceHttps);\n  }\n\n  app.use(`/${config.api.prefix}`, headerMiddleware, sessionMiddleware, router);\n\n  app.get(`/${config.api.prefix}`, (req, res) => {\n    res.send('<pre> ______\\n|A     |\\n|  /\\\\  |\\n| /  \\\\ |\\n|(    )|\\n|  )(  |\\n|______|</pre>');\n  });\n\n  // Context\n\n  const context = {\n    app,\n    router,\n    cache,\n    authMiddleware,\n    permissionMiddleware,\n    cacheMiddleware,\n    asyncMiddleware,\n    getConfig,\n    handleResponse,\n    handleError,\n  };\n\n  // Inject API into context\n\n  Object.keys(Api).forEach((key) => {\n    context[key] = Api[key];\n  });\n\n  if (config.logentriesToken) {\n    context.log = new Logger({\n      token: config.logentriesToken,\n    });\n  }\n\n  const afterResponse = (req, res) => {\n    res.removeListener('finish', afterResponse);\n    res.removeListener('close', afterResponse);\n  };\n\n  if (config.environment !== 'production') {\n    app.use((req, res, next) => {\n      res.on('finish', afterResponse.bind(null, req, res));\n      res.on('close', afterResponse.bind(null, req, res));\n      next();\n    });\n  }\n\n  // Bootstrap Routes\n\n  require('./routes/analytics')(context, config);\n  require('./routes/auth')(context, config);\n  require('./routes/cache')(context, config);\n  require('./routes/config')(context, config);\n  require('./routes/debug')(context, config);\n  require('./routes/ecommerce')(context, config);\n  require('./routes/email')(context, config);\n  require('./routes/embedly')(context, config);\n  require('./routes/entity')(context, config);\n  require('./routes/metadata')(context, config);\n  require('./routes/pdf')(context, config);\n  require('./routes/schema')(context, config);\n  require('./routes/settings')(context, config);\n  require('./routes/shippo')(context, config);\n  require('./routes/social')(context, config);\n  require('./routes/stripe')(context, config);\n  require('./routes/taxonomy')(context, config);\n  require('./routes/token')(context, config);\n  require('./routes/tools')(context, config);\n  require('./routes/user')(context, config);\n\n  return app;\n}\n\nmodule.exports = AceApiServer;\n","module.exports = require(\"connect-redis\");","module.exports = require(\"express-session\");","module.exports = require(\"method-override\");","module.exports = require(\"body-parser\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"helmet\");","module.exports = require(\"morgan\");","module.exports = require(\"http\");","const PORT = process.env.PORT || 5000;\nconst HOST = process.env.HOST || 'localhost';\n\nconst _ = require('lodash');\nconst express = require('express');\nconst http = require('http');\nconst logger = require('morgan');\nconst helmet = require('helmet');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst methodOverride = require('method-override');\nconst session = require('express-session');\nconst RedisStore = require('connect-redis')(session);\n\nconst AceApiServer = require('./index');\n\nconst defaultConfig = require('./config.default');\n\nfunction Serve (customConfig = {}, listen = true) {\n  const config = _.merge({}, defaultConfig, customConfig);\n\n  const app = express();\n\n  const sessionOptions = {\n    secret: config.session.secret,\n    resave: true,\n    saveUninitialized: true,\n  };\n\n  if (config.redis.url || config.redis.host) {\n    const redisOptions = {\n      ttl: config.session.ttl,\n    };\n\n    if (config.redis.url) {\n      redisOptions.url = config.redis.url;\n    } else {\n      redisOptions.host = config.redis.host;\n      redisOptions.port = config.redis.port;\n      redisOptions.password = config.redis.password;\n      redisOptions.db = config.redis.db;\n    }\n\n    sessionOptions.store = new RedisStore(redisOptions);\n  } else {\n    sessionOptions.cookie = {\n      maxAge: config.session.ttl,\n    };\n  }\n\n  app.use(helmet());\n  app.use(logger('tiny'));\n  app.use(cookieParser());\n  app.use(bodyParser.json({\n    limit: '50mb',\n  }));\n  app.use(bodyParser.urlencoded({\n    extended: true,\n    limit: '50mb',\n  }));\n  app.use(methodOverride());\n  app.use(session(sessionOptions));\n\n  AceApiServer(app, config);\n\n  if (listen) {\n    const server = http.createServer(app);\n    server.on('listening', () => {\n      console.log(`listening: http://${HOST}:${PORT}`);\n    });\n    server.listen(PORT);\n  }\n\n  return app;\n}\n\nmodule.exports = Serve;\n"],"sourceRoot":""}