{"version":3,"sources":["webpack://AceApiServer/webpack/universalModuleDefinition","webpack://AceApiServer/webpack/bootstrap","webpack://AceApiServer/external \"@babel/runtime/helpers/interopRequireDefault\"","webpack://AceApiServer/external \"@babel/runtime/regenerator\"","webpack://AceApiServer/external \"lodash\"","webpack://AceApiServer/./lib/client-config.js","webpack://AceApiServer/external \"bluebird\"","webpack://AceApiServer/./lib/db.js","webpack://AceApiServer/./lib/helpers.js","webpack://AceApiServer/external \"axios\"","webpack://AceApiServer/external \"path\"","webpack://AceApiServer/external \"fs\"","webpack://AceApiServer/external \"express\"","webpack://AceApiServer/./lib/assist.js","webpack://AceApiServer/external \"@cloudant/cloudant\"","webpack://AceApiServer/./lib/roles.js","webpack://AceApiServer/./lib/email.js","webpack://AceApiServer/./lib/entity.js","webpack://AceApiServer/./lib/schema.js","webpack://AceApiServer/./lib/fields.js","webpack://AceApiServer/external \"request-promise\"","webpack://AceApiServer/./server/config.default.js","webpack://AceApiServer/external \"lodash/pick\"","webpack://AceApiServer/external \"lodash/isArray\"","webpack://AceApiServer/./server/server.js","webpack://AceApiServer/external \"http\"","webpack://AceApiServer/external \"morgan\"","webpack://AceApiServer/external \"helmet\"","webpack://AceApiServer/external \"cookie-parser\"","webpack://AceApiServer/external \"body-parser\"","webpack://AceApiServer/external \"method-override\"","webpack://AceApiServer/external \"redis\"","webpack://AceApiServer/external \"express-session\"","webpack://AceApiServer/external \"connect-redis\"","webpack://AceApiServer/./server/index.js","webpack://AceApiServer/external \"cache-manager\"","webpack://AceApiServer/external \"cache-manager-redis-store\"","webpack://AceApiServer/external \"url-parse\"","webpack://AceApiServer/external \"zlib\"","webpack://AceApiServer/external \"circular-json-es6\"","webpack://AceApiServer/external \"object-sizeof\"","webpack://AceApiServer/external \"deep-freeze\"","webpack://AceApiServer/external \"xxhashjs\"","webpack://AceApiServer/./index.js","webpack://AceApiServer/./config.default.js","webpack://AceApiServer/external \"password-hash\"","webpack://AceApiServer/./lib/auth.js","webpack://AceApiServer/external \"querystring\"","webpack://AceApiServer/./lib/ecommerce.js","webpack://AceApiServer/external \"nodemailer\"","webpack://AceApiServer/external \"createsend-node\"","webpack://AceApiServer/external \"nodemailer-mailgun-transport\"","webpack://AceApiServer/external \"inky\"","webpack://AceApiServer/external \"mjml\"","webpack://AceApiServer/external \"mjml-core\"","webpack://AceApiServer/external \"mjml-validator\"","webpack://AceApiServer/external \"mjml-mailchimp\"","webpack://AceApiServer/external \"html-to-text\"","webpack://AceApiServer/external \"moment\"","webpack://AceApiServer/external \"i18n-iso-countries\"","webpack://AceApiServer/external \"node-sass\"","webpack://AceApiServer/external \"pug\"","webpack://AceApiServer/external \"ejs\"","webpack://AceApiServer/external \"juice\"","webpack://AceApiServer/./lib/embedly.js","webpack://AceApiServer/external \"embedly\"","webpack://AceApiServer/external \"json-query\"","webpack://AceApiServer/external \"deep-diff\"","webpack://AceApiServer/./lib/instagram.js","webpack://AceApiServer/./lib/jwt.js","webpack://AceApiServer/external \"jsonwebtoken\"","webpack://AceApiServer/./lib/pdf.js","webpack://AceApiServer/external \"eval\"","webpack://AceApiServer/external \"recursive-readdir\"","webpack://AceApiServer/./lib sync","webpack://AceApiServer/./lib/settings.js","webpack://AceApiServer/./lib/shippo.js","webpack://AceApiServer/external \"shippo\"","webpack://AceApiServer/./lib/shopify.js","webpack://AceApiServer/external \"he\"","webpack://AceApiServer/external \"handlebars\"","webpack://AceApiServer/external \"jsontoxml\"","webpack://AceApiServer/./lib/stripe.js","webpack://AceApiServer/external \"stripe\"","webpack://AceApiServer/external \"hashids\"","webpack://AceApiServer/./lib/taxonomy.js","webpack://AceApiServer/./lib/tools.js","webpack://AceApiServer/./lib/user.js","webpack://AceApiServer/./server/routes/analytics.js","webpack://AceApiServer/./server/routes/auth.js","webpack://AceApiServer/./server/routes/cache.js","webpack://AceApiServer/./server/routes/config.js","webpack://AceApiServer/./server/routes/debug.js","webpack://AceApiServer/external \"express-useragent\"","webpack://AceApiServer/./server/routes/ecommerce.js","webpack://AceApiServer/./server/routes/email.js","webpack://AceApiServer/./server/routes/embedly.js","webpack://AceApiServer/./server/routes/entity.js","webpack://AceApiServer/./server/routes/metadata.js","webpack://AceApiServer/./server/routes/pdf.js","webpack://AceApiServer/./server/routes/provider.js","webpack://AceApiServer/./server/routes/schema.js","webpack://AceApiServer/./server/routes/settings.js","webpack://AceApiServer/./server/routes/shippo.js","webpack://AceApiServer/./server/routes/shopify.js","webpack://AceApiServer/./server/routes/social.js","webpack://AceApiServer/external \"twitter\"","webpack://AceApiServer/./server/routes/stripe.js","webpack://AceApiServer/./server/routes/taxonomy.js","webpack://AceApiServer/./server/routes/token.js","webpack://AceApiServer/./server/routes/tools.js","webpack://AceApiServer/./server/routes/user.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","_","Db","Helpers","DEFAULT_CLIENT_CONFIG","_id","client","assets","schemas","taxonomies","users","roles","provider","constructor","config","this","clientConfig","connect","merge","slug","set","createOrUpdate","Cloudant","dbName","url","db","maxAttempt","plugins","retry","retryDelayMultiplier","retryInitialDelayMsecs","use","Promise","assistUrl","assist","doc","resolve","reject","insert","then","response","id","_rev","rev","error","statusCode","docs","chunkSize","chunks","chunk","promises","forEach","push","bulk","all","entities","groupSize","Infinity","grouped","group","entity","groupBefore","length","groupAfter","ratio","thumbnail","groupRatio","JSON","stringify","Date","replace","array","replacementObject","map","thumbnailSrc","settings","cropSlug","cropDefault","settingsArray","split","setting","crop","crops","x","y","x2","y2","g","join","settingsString","test","thumbnailType","ext","thumbnailUrl","axios","passwordHash","ClientConfig","deleteFiles","fileNames","cc","assetsSlug","post","auth","username","password","generate","result","data","permissions","entityGrid","entityCreate","entityRead","entityUpdate","entityDelete","taxonomyCreate","taxonomyRead","taxonomyUpdate","taxonomyDelete","fileCreate","fileRead","fileUpdate","fileDelete","schema","user","userSettings","tools","ecommerce","role","freeze","find","path","fs","promisifyAll","nodemailer","Createsend","nodemailerMailgunTransport","Inky","mjml2html","registerComponent","registerDependencies","McSection","McImage","htmlToText","moment","countries","sass","pug","ejs","juice","inky","getTemplate","templateSlug","templateData","templateOptions","options","inlineStyles","mjml","skipValidation","templatePath","email","templatesPath","statAsync","readdirAsync","templateFiles","htmlFileName","fileName","htmlFileExtension","style","renderAsync","file","sourceMapContents","sourceMapEmbed","css","toString","helpers","pick","html","readFileAsync","renderFile","convertMjmlResult","level","errors","Error","uniq","formattedMessage","releaseTheKraken","preserveMediaQueries","preserveFontFaces","removeStyleTags","removeLinkTags","preserveImportant","webResources","links","scripts","images","text","fromString","sendEmail","emailOptions","nodemailerMailgun","createTransport","api_key","mailgun","apiKey","domain","emailTemplate","sendMail","metadata","subscribe","details","listId","createsend","cs","clientApiKey","subscribers","addSubscriberAsync","EmailAddress","Name","Resubscribe","RestartSubscriptionBasedAutoresponders","emailAddress","catch","Message","jsonQuery","diff","Schema","Assist","CHUNK_UPDATE_SIZE","Entity","flattenValues","fields","size","mapValues","field","type","isArray","filter","obj","undefined","published","childrenMap","omitBy","startsWith","rows","parents","entityMap","row","_filterEntityFields","uniqBy","fieldValues","fieldSlug","searchTerm","viewWithList","startkey","endkey","query","isFieldQuery","queryParts","trim","selector","modifier","slice","locals","input","start","end","sample","sampleSize","paths","copy","pathParts","match","pathFrom","pathTo","allowRegexp","queryString","methodArgs","queries","emptyArgs","times","splice","_entitiesById","ids","include_docs","keys","view","_appendParents","children","limit","isNumber","_getDocMap","rowsOrDocs","docMap","_childDepth","childIds","rowOrDoc","isRow","_queriesFromString","concat","flatten","_query","childDocs","_childDepthLimit","fieldQueryMap","_mergeDocs","_extendRowsOrDocs","select","_removeChildren","updatedEntities","indexOf","chunkUpdate","_updateChildren","title","entityList","_entitySearch","Math","min","sort","isString","include_fields","bookmark","index","group_field","search","groups","total_rows","hits","entitySearch","__entitySearch","clone","entityFind","updateEntityIndex","entityRevisions","entityId","revs_info","revisionIds","_revs_info","revision","status","open_revs","revisions","childrenIds","ok","fetch","console","_appendChildren","restore","entityIds","entityOrEntityId","isObject","oldFileNames","oldEntity","newEntity","mergeWith","a","b","trashed","forever","deleted","_fileNames","filesResult","_deleted","entitiesResult","files","Fields","read","schemaSlug","update","findIndex","delete","schemaSlugs","updateAll","ddoc","default_field","enabled","analyzer","$and","fieldRef","dataType","environment","process","env","ENVIRONMENT","api","prefix","API_PREFIX","forceHttps","API_FORCE_HTTPS","parse","blacklistToken","API_BLACKLIST_TOKEN","blacklistReferrer","API_BLACKLIST_REFERRER","session","secret","SESSION_SECRET","ttl","parseInt","SESSION_TTL","cache","CACHE_ENABLED","CACHE_TTL","compress","CACHE_COMPRESS","memory","max","CACHE_MEMORY_MAX","redis","REDIS_URL","host","REDIS_HOST","port","REDIS_PORT","REDIS_PASSWORD","REDIS_DB","logentriesToken","LOGENTRIES_TOKEN","PORT","HOST","express","http","logger","helmet","cookieParser","bodyParser","methodOverride","RedisStore","AceApiServer","defaultConfig","customConfig","listen","app","sessionOptions","resave","saveUninitialized","redisOptions","redisClient","createClient","unref","on","log","store","cookie","maxAge","json","urlencoded","extended","server","createServer","cacheManager","redisStore","URL","zlib","CircularJSON","sizeof","deepFreeze","XXH","Api","HASH_SEED","customAuthMiddleware","asyncMiddleware","fn","req","res","next","skipAuth","route","RegExp","authMiddleware","userId","send","code","message","omitUndefined","forIn","isPlainObject","isUndefined","cloneConfig","cloneDeep","caching","getClient","item","hash","body","h64","cacheMiddleware","async","__cache","gunzipAsync","Buffer","from","jwt","Jwt","router","Router","headers","scheme","redirect","enable","Vary","method","sendStatus","referrer","referer","referrerHostname","hostname","token","apiToken","payload","verifyToken","context","permissionMiddleware","Roles","authorised","permission","getConfig","configClone","handleResponse","cacheResponse","gzipAsync","handleError","stack","statusText","afterResponse","removeListener","args","Auth","Ecommerce","Email","Embedly","Instagram","Pdf","Settings","Shippo","Shopify","Stripe","Taxonomy","Tools","User","debug","DEBUG","SLUG","baseUrl","BASE_URL","DB_URL","DB_HOST","DB_NAME","requestPlugin","DB_REQUEST_PLUGIN","meterType","DB_METER_TYPE","superUserId","AUTH_SUPER_USER_ID","tokenSecret","AUTH_TOKEN_SECRET","dev","DEV_USER_ID","DEV_ROLE","cms","CMS_TITLE","CMS_URL","ASSIST_URL","ASSIST_USERNAME","ASSIST_PASSWORD","MAILGUN_API_KEY","MAILGUN_DOMAIN","embedly","EMBEDLY_API_KEY","pdf","__dirname","google","clientId","GOOGLE_CLIENT_ID","clientSecret","GOOGLE_CLIENT_SECRET","instagram","INSTAGRAM_CLIENT_ID","INSTAGRAM_CLIENT_SECRET","spotify","SPOTIFY_CLIENT_ID","SPOTIFY_CLIENT_SECRET","stripe","STRIPE_CLIENT_ID","STRIPE_CLIENT_SECRET","STRIPE_API_KEY","twitter","consumerKey","TWITTER_CONSUMER_KEY","consumerSecret","TWITTER_CONSUMER_SECRET","accessTokenKey","TWITTER_ACCESS_TOKEN_KEY","accessTokenSecret","TWITTER_ACCESS_TOKEN_SECRET","vimeo","VIMEO_CLIENT_ID","VIMEO_CLIENT_SECRET","querystring","providerTokenUri","authUser","superUser","active","toLowerCase","authProvider","params","refresh","providerConfig","providerClientConfig","grant_type","client_id","client_secret","redirect_uri","redirectUri","refresh_token","uri","providerAuth","begins","floor","getTime","access_token","getType","setType","deleteType","items","getOrder","orderId","verifyDiscount","discount","now","dateStart","dateEnd","EmbedlyApi","oembed","urls","opts","format","request","version","_request","endpoint","requestOptions","qs","extend","signToken","sign","verify","_eval","readdir","getTemplates","templates","getPayload","templateId","template","readFileSync","getPdf","assetSlug","assistPdfUrl","encoding","form","webpackEmptyContext","e","shippo","getQuote","address","parcel","addressFrom","object_purpose","zip","fromZip","country","fromCountry","addressTo","distance_unit","mass_unit","shipment","address_from","address_to","ratesReady","attempts","object_status","retrieve","object_id","val","rates","he","Handlebars","jsontoxml","getCatalog","shopLink","productLinkTemplate","shopify","storefrontAccessToken","compile","products","shop","edges","edge","node","handle","encode","description","originalSrc","vendor","availableForSale","priceRange","minVariantPrice","amount","currencyCode","channel","product","Hashids","hashids","getSettings","clientStripeAccountId","stripe_user_id","checkout","order","customerDetails","findOrCreateCustomer","customer","createOrder","updateOrCreateStripeCustomer","stripeCustomer","updateCustomer","createCharge","updatedOrder","sendReceipt","orderReceipt","messages","sendNotification","orderNotification","updateOrder","finalOrder","retrieveAccount","accounts","refund","refunds","refund_application_fee","charge","stripe_account","charges","amountRefunded","amount_refunded","newCustomer","createdAt","modifiedAt","phone","billingAddress","shippingAddress","orders","source","customer_id","customers","param","price","quantity","newOrder","shippingMethod","Number","subtotal","tax","rate","includedInPrice","total","show","currency","iso","capture","order_id","statement_descriptor","kebabCase","storeName","toUpperCase","application_fee","ceil","paymentGateway","livemode","emailSenderName","emailSenderAddress","to","subject","taxonomy","taxonomySlug","entitiesByTerm","term","entityGroups","createTerm","terms","updateTerm","_term","parent","deleteTerm","getDb","getChanges","changes","importDb","dbBackupFile","fileConents","unlinkAsync","cloudant","destroy","Analytics","analytics","error_description","put","pattern","del","clientInfo","useragent","renderTemplate","fromName","fromEmail","toName","toEmail","indexAsync","q","use_index","$or","$exists","attachment","providerApiBaseUrl","providerApiHandler","expires_in","token_type","baseURL","Authorization","schemaId","setHeader","instagramAccessTokenMap","Twitter","consumer_key","consumer_secret","access_token_key","access_token_secret","accessToken","pagination","next_url","taxonomySlugs","pickBy","isNaN","userIds"],"mappings":"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","file":"server.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AceApiServer\"] = factory();\n\telse\n\t\troot[\"AceApiServer\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","module.exports = require(\"@babel/runtime/helpers/interopRequireDefault\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"lodash\");","const _ = require('lodash');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Roles = require('./roles');\n\nconst roles = new Roles();\n\nconst DEFAULT_CLIENT_CONFIG = {\n  _id: 'config',\n  client: {},\n  assets: {},\n  schemas: [],\n  taxonomies: [],\n  users: [],\n  roles: roles.roles(),\n  provider: {},\n  module: {},\n};\n\nclass ClientConfig {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async get() {\n    let clientConfig = DEFAULT_CLIENT_CONFIG;\n\n    try {\n      clientConfig = await Db.connect(this.config).get('config');\n\n      clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n    } catch (error) {\n      //\n    }\n\n    clientConfig.slug = this.config.slug;\n\n    return clientConfig;\n  }\n\n  async set(clientConfig) {\n    clientConfig._id = 'config';\n\n    delete clientConfig.roles;\n\n    clientConfig = await Helpers.createOrUpdate(this.config, clientConfig);\n\n    clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n\n    return clientConfig;\n  }\n}\n\nmodule.exports = ClientConfig;\n","module.exports = require(\"bluebird\");","const Cloudant = require('@cloudant/cloudant');\n\nclass Db {\n  constructor(config, dbName) {\n    this.config = config;\n\n    return Db.connect(config, dbName);\n  }\n\n  static connect(config, dbName) {\n    const cloudant = new Cloudant({\n      url: config.db.url,\n      maxAttempt: 5,\n      plugins: [\n        'promises',\n        {\n          retry: {\n            retryDelayMultiplier: 2,\n            retryInitialDelayMsecs: 500,\n          },\n        },\n      ],\n    });\n\n    return cloudant.db.use(dbName || config.db.name);\n  }\n}\n\nmodule.exports = Db;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\n\nclass Helpers {\n  constructor(config) {\n    this.config = config;\n    this.assistUrl = config.assist.url;\n    this.slug = config.slug;\n  }\n\n  static createOrUpdate(config, doc) {\n    return new Promise((resolve, reject) => {\n      Db.connect(config)\n        .insert(doc)\n        .then(\n          response => {\n            doc._id = response.id;\n            doc._rev = response.rev;\n            resolve(doc);\n          },\n          error => {\n            if (error.statusCode !== 409) {\n              reject(error);\n              return;\n            }\n\n            Db.connect(config)\n              .get(doc._id)\n              .then(response => {\n                doc._rev = response._rev;\n\n                Db.connect(config)\n                  .insert(doc)\n                  .then(response => {\n                    doc._rev = response.rev;\n                    resolve(doc);\n                  }, reject);\n              }, reject);\n          }\n        );\n    });\n  }\n\n  static chunkUpdate(config, docs, chunkSize = 1000) {\n    return new Promise((resolve, reject) => {\n      const chunks = _.chunk(docs, chunkSize);\n      const promises = [];\n\n      chunks.forEach(chunk => {\n        promises.push(\n          new Promise((resolve, reject) => {\n            Db.connect(config)\n              .bulk({\n                docs: chunk,\n              })\n              .then(resolve, reject);\n          })\n        );\n      });\n\n      Promise.all(promises).then(resolve, reject);\n    });\n  }\n\n  static groupEntities(entities, groupSize = Infinity) {\n    const grouped = [];\n\n    let group = {\n      entities: [],\n    };\n\n    entities.forEach(entity => {\n      if (!entity.groupBefore || group.entities.length >= groupSize) {\n        group = {\n          entities: [],\n        };\n      }\n\n      group.entities.push(entity);\n\n      if (!entity.groupAfter || group.entities.length >= groupSize) {\n        group.ratio = 0;\n\n        group.entities.forEach(entity => {\n          group.ratio += (entity.thumbnail || entity).ratio;\n        });\n\n        group.entities.forEach(entity => {\n          entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n        });\n\n        grouped.push(group);\n      }\n    });\n\n    return grouped;\n  }\n\n  static now() {\n    return JSON.stringify(new Date()).replace(/\"/g, '');\n  }\n\n  static replace(array, replacementObject, key) {\n    return array.map(object => {\n      if (object[key] === replacementObject[key]) {\n        return replacementObject;\n      }\n      return object;\n    });\n  }\n\n  thumbnailSrc(thumbnail, settings, cropSlug, cropDefault) {\n    if (!thumbnail) {\n      return '';\n    }\n\n    let settingsArray;\n\n    if (typeof settings === 'string') {\n      settingsArray = settings.split(/,|;/);\n\n      settings = {};\n\n      settingsArray.forEach(setting => {\n        setting = setting.split(/_|:/);\n\n        settings[setting[0]] = setting[1];\n      });\n    }\n\n    const crop = thumbnail.crops ? thumbnail.crops[cropSlug] : false;\n\n    if (crop) {\n      settings.x = crop[0];\n      settings.y = crop[1];\n      settings.x2 = crop[2];\n      settings.y2 = crop[3];\n    } else if (cropDefault) {\n      settings.g = cropDefault;\n    }\n\n    settingsArray = [];\n\n    _.forEach(settings, (value, key) => {\n      settingsArray.push([key, value].join(':'));\n    });\n\n    const settingsString = settingsArray.join(';');\n\n    if (/(image)/.test(thumbnail.thumbnailType)) {\n      if (thumbnail.ext === 'svg') {\n        return [this.assistUrl, this.slug, thumbnail.name + thumbnail.ext].join(\n          '/'\n        );\n      }\n\n      return [\n        this.assistUrl,\n        this.slug,\n        'transform',\n        settingsString,\n        thumbnail.name + thumbnail.ext,\n      ].join('/');\n    }\n\n    if (/(video)/.test(thumbnail.thumbnailType)) {\n      return [\n        this.assistUrl,\n        this.slug,\n        'transform',\n        settingsString,\n        thumbnail.name,\n        'thumb.jpg',\n      ].join('/');\n    }\n\n    if (/(oembed|proxy)/.test(thumbnail.thumbnailType)) {\n      const thumbnailUrl = thumbnail.thumbnailUrl.replace(/https?:\\/\\//, '');\n\n      return [\n        this.assistUrl,\n        this.slug,\n        'proxy',\n        'transform',\n        settingsString,\n        thumbnailUrl,\n      ].join('/');\n    }\n\n    return '';\n  }\n}\n\nmodule.exports = Helpers;\n","module.exports = require(\"axios\");","module.exports = require(\"path\");","module.exports = require(\"fs\");","module.exports = require(\"express\");","const _ = require('lodash');\nconst axios = require('axios');\nconst passwordHash = require('password-hash');\nconst ClientConfig = require('./client-config');\n\nclass Assist {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async deleteFiles(fileNames) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetsSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n\n    if (fileNames.length === 0) {\n      return [];\n    }\n\n    const result = (\n      await axios.post(\n        `${this.config.assist.url}/${assetsSlug}/file/delete`,\n        { fileNames },\n        {\n          auth: {\n            username: this.config.assist.username,\n            password: passwordHash.generate(this.config.assist.password),\n          },\n        }\n      )\n    ).data;\n\n    return result;\n  }\n}\n\nmodule.exports = Assist;\n","module.exports = require(\"@cloudant/cloudant\");","const _ = require('lodash');\n\nconst roles = [\n  {\n    name: 'Admin',\n    slug: 'admin',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: true,\n      settings: true,\n      userSettings: true,\n      tools: true,\n      ecommerce: true,\n    },\n  },\n  {\n    name: 'Editor',\n    slug: 'editor',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: true,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n  {\n    name: 'Guest',\n    slug: 'guest',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: false,\n      entityRead: true,\n      entityUpdate: false,\n      entityDelete: false,\n\n      taxonomyCreate: false,\n      taxonomyRead: true,\n      taxonomyUpdate: false,\n      taxonomyDelete: false,\n\n      fileCreate: false,\n      fileRead: true,\n      fileUpdate: false,\n      fileDelete: false,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: false,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n];\n\nclass Roles {\n  roles() {\n    return roles.map(role => Object.freeze(role));\n  }\n  role(slug) {\n    return _.find(this.roles(), { slug });\n  }\n}\n\nmodule.exports = Roles;\n","const path = require('path');\nconst Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst _ = require('lodash');\nconst nodemailer = require('nodemailer');\nconst Createsend = Promise.promisifyAll(require('createsend-node'));\nconst nodemailerMailgunTransport = require('nodemailer-mailgun-transport');\nconst Inky = require('inky').Inky;\nconst mjml2html = require('mjml');\n// eslint-disable-next-line\nconst registerComponent = require('mjml-core').registerComponent;\n// eslint-disable-next-line\nconst registerDependencies = require('mjml-validator').registerDependencies;\nconst { McSection, McImage } = require('mjml-mailchimp');\nconst htmlToText = require('html-to-text');\nconst moment = require('moment');\nconst countries = require('i18n-iso-countries');\nconst sass = Promise.promisifyAll(require('node-sass'));\nconst pug = require('pug');\nconst ejs = require('ejs');\nconst juice = require('juice');\n\nconst ClientConfig = require('./client-config');\nconst Helpers = require('./helpers');\n\nclass Email {\n  constructor(config) {\n    this.config = config;\n\n    this.inky = new Inky();\n\n    registerComponent(McSection);\n    registerComponent(McImage);\n    registerDependencies({\n      'mc-section': ['mj-column', 'mj-group', 'mj-raw'],\n      'mj-column': ['mc-image'],\n      'mj-hero': ['mc-image'],\n    });\n  }\n\n  async getTemplate(templateSlug, templateData = {}, templateOptions = {}) {\n    const options = _.merge(\n      {},\n      {\n        inlineStyles: true,\n        inky: false,\n        mjml: false,\n        skipValidation: false,\n      },\n      templateOptions\n    );\n\n    let templatePath = path.join(this.config.email.templatesPath, templateSlug);\n\n    try {\n      await fs.statAsync(templatePath);\n    } catch (error) {\n      templatePath = path.resolve('../email', templateSlug);\n    }\n\n    const templateFiles = await fs.readdirAsync(templatePath);\n\n    let htmlFileName = 'html';\n    // Support mjml templates\n    if (_.find(templateFiles, fileName => /^html\\.mjml/.test(fileName))) {\n      htmlFileName = 'html.mjml';\n      options.mjml = true;\n    }\n\n    let htmlFileExtension = 'html';\n    if (_.find(templateFiles, fileName => /\\.pug$/.test(fileName))) {\n      htmlFileExtension = 'pug';\n    }\n    if (_.find(templateFiles, fileName => /\\.ejs$/.test(fileName))) {\n      htmlFileExtension = 'ejs';\n    }\n\n    let style = '';\n    if (_.find(templateFiles, fileName => /^style\\.scss$/.test(fileName))) {\n      style = (\n        await sass.renderAsync({\n          file: path.join(templatePath, 'style.scss'),\n          sourceMapContents: !options.inlineStyles,\n          sourceMapEmbed: !options.inlineStyles,\n        })\n      ).css\n        .toString()\n        .replace(/\"/g, \"'\");\n    }\n\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n    const helpers = new Helpers(this.config);\n\n    templateData = _.merge({}, templateData, {\n      config: _.merge(\n        {},\n        _.pick(this.config, ['cms']),\n        _.pick(clientConfig, ['slug', 'client', 'assets'])\n      ),\n      helpers,\n      style,\n      moment,\n      countries,\n      templateSlug,\n    });\n\n    let html;\n    if (htmlFileExtension === 'html') {\n      html = fs.readFileAsync(\n        `${templatePath}/${htmlFileName}.${htmlFileExtension}`\n      );\n    }\n    if (htmlFileExtension === 'pug') {\n      html = pug.renderFile(\n        `${templatePath}/${htmlFileName}.${htmlFileExtension}`,\n        templateData\n      );\n    }\n    if (htmlFileExtension === 'ejs') {\n      html = await ejs.renderFile(\n        `${templatePath}/${htmlFileName}.${htmlFileExtension}`,\n        templateData\n      );\n    }\n\n    if (options.mjml) {\n      const convertMjmlResult = mjml2html(html, {\n        level: options.skipValidation ? 'skip' : 'soft',\n      });\n\n      if (convertMjmlResult.errors && convertMjmlResult.errors.length) {\n        throw new Error(\n          _.uniq(\n            convertMjmlResult.errors.map(error => error.formattedMessage)\n          ).join('\\n')\n        );\n      }\n\n      html = convertMjmlResult.html;\n    }\n\n    if (options.inky) {\n      html = this.inky.releaseTheKraken(html);\n    }\n\n    if (options.inlineStyles) {\n      html = juice(html, {\n        preserveMediaQueries: true,\n        preserveFontFaces: true,\n        removeStyleTags: false,\n        removeLinkTags: false,\n        preserveImportant: true,\n        webResources: {\n          links: false,\n          scripts: false,\n          images: false,\n          // relativeTo: '',\n        },\n      });\n    }\n\n    return {\n      html,\n      text: htmlToText.fromString(html),\n    };\n  }\n\n  sendEmail(\n    emailOptions,\n    templateSlug,\n    templateData = {},\n    templateOptions = {}\n  ) {\n    return new Promise((resolve, reject) => {\n      const nodemailerMailgun = nodemailer.createTransport(\n        nodemailerMailgunTransport({\n          auth: {\n            api_key: this.config.mailgun.apiKey,\n            domain: this.config.mailgun.domain,\n          },\n        })\n      );\n\n      this.getTemplate(\n        templateSlug,\n        _.merge({}, emailOptions, templateData),\n        templateOptions\n      ).then(emailTemplate => {\n        emailOptions.html = emailTemplate.html;\n        emailOptions.text = emailTemplate.text;\n\n        nodemailerMailgun.sendMail(emailOptions, (error, metadata) => {\n          if (error) {\n            reject(error);\n            return;\n          }\n\n          resolve({\n            metadata,\n            email: emailOptions,\n          });\n        });\n      }, reject);\n    });\n  }\n\n  subscribe(details, provider, listId) {\n    return new Promise((resolve, reject) => {\n      const cc = new ClientConfig(this.config);\n\n      cc.get().then(clientConfig => {\n        if (provider === 'createsend') {\n          if (clientConfig.provider.createsend) {\n            const cs = new Createsend({\n              apiKey: clientConfig.provider.createsend.clientApiKey,\n            });\n\n            const subscribers = Promise.promisifyAll(cs.subscribers);\n\n            subscribers\n              .addSubscriberAsync(listId, {\n                EmailAddress: details.email,\n                Name: details.name,\n                Resubscribe: true,\n                RestartSubscriptionBasedAutoresponders: true,\n              })\n              .then(result => {\n                resolve(`Email.subscribe(): ${result.emailAddress}`);\n              })\n              .catch(error => {\n                reject(error.Message);\n              });\n\n            return;\n          }\n          reject(new Error('Subscriber list not configured'));\n        }\n      }, reject);\n    });\n  }\n}\n\nmodule.exports = Email;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst jsonQuery = require('json-query');\nconst { diff } = require('deep-diff');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Schema = require('./schema');\nconst Assist = require('./assist');\n\nconst CHUNK_UPDATE_SIZE = 1000;\n\nclass Entity {\n  constructor(config) {\n    this.config = config;\n\n    // Expose helpers\n    this.flattenValues = Entity.flattenValues;\n  }\n\n  static flattenValues(docs) {\n    return docs.map(doc => {\n      if (!doc.fields || !_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, field => {\n        if (/entity/.test(field.type) && _.isArray(field.value)) {\n          // entity / entityTile / entityGrid\n          field.value = Entity.flattenValues(field.value);\n        }\n        return field.value;\n      });\n\n      return doc;\n    });\n  }\n\n  static _filterEntityFields(docs, role = 'guest') {\n    const isArray = _.isArray(docs);\n\n    docs = (isArray ? docs : [docs]).map(doc => {\n      if (_.size(doc.fields)) {\n        doc.fields = _.mapValues(doc.fields, field => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter(obj => {\n              if (!obj) {\n                return false;\n              }\n              if (obj.type && obj.type === 'entity' && role === 'guest') {\n                return obj.published !== undefined ? obj.published : true;\n              }\n              return true;\n            });\n          }\n          return field;\n        });\n      }\n      return doc;\n    });\n\n    return isArray ? docs : docs[0];\n  }\n\n  static _appendChildren(docs, childrenMap) {\n    return docs.map(doc => {\n      if (!_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, field => {\n        if (_.isArray(field.value)) {\n          field.value = field.value.filter(obj => {\n            if (!obj) {\n              return false;\n            }\n            if (obj.type === 'entity') {\n              return childrenMap[obj.id] !== undefined;\n            }\n            return true;\n          });\n\n          field.value = field.value.map(obj => {\n            if (obj.type === 'entity') {\n              obj = _.merge(obj, childrenMap[obj.id]);\n            }\n            obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n            return obj;\n          });\n        }\n\n        return field;\n      });\n\n      return doc;\n    });\n  }\n\n  static _appendParents(rows, parents = null, role = 'guest') {\n    let entityMap = {};\n\n    rows.forEach(row => {\n      if (row.doc && row.value.type === 'entity') {\n        entityMap[row.id] = { ...row.doc, parents: [] };\n      }\n    });\n\n    if (parents) {\n      rows.forEach(row => {\n        if (row.doc && row.value.type === 'parent') {\n          entityMap[row.key].parents.push(\n            Entity._filterEntityFields(row.doc, role)\n          );\n        }\n      });\n\n      entityMap = _.mapValues(entityMap, entity => {\n        entity.parents = _.uniqBy(entity.parents, entity => entity._id);\n        return entity;\n      });\n    }\n\n    rows = rows.map(row => {\n      row.doc = entityMap[row.id];\n      return row;\n    });\n\n    rows = rows.filter(row => row.value.type === 'entity');\n\n    return rows;\n  }\n\n  static _fileNames(entities) {\n    const fileNames = [];\n\n    entities.forEach(entity => {\n      _.forEach(entity.fields, field => {\n        if (field.value && field.value.file) {\n          fileNames.push(field.value.file.name);\n        }\n      });\n    });\n\n    return _.uniq(fileNames);\n  }\n\n  async fieldValues(fieldSlug, searchTerm) {\n    const result = await Db.connect(this.config).viewWithList(\n      'entity',\n      'byField',\n      'search',\n      {\n        startkey: [fieldSlug],\n        endkey: [fieldSlug, {}],\n        group: true,\n        searchTerm,\n      }\n    );\n    return result;\n  }\n\n  static _query(data, query, isFieldQuery = false) {\n    query = query.replace(/(\\s\\s|\\t|\\r|\\n)/g, '');\n\n    if (isFieldQuery) {\n      const queryParts = query.trim().split(/\\[|\\]/);\n      const selector = `fields.${queryParts[0]}.value[${queryParts[1] || '*'}]`;\n      const modifier = /\\]:/.test(query)\n        ? `:${query\n            .split(/\\]:/)\n            .slice(-1)[0]\n            .trim()}`\n        : '';\n      query = `${selector}${modifier}`;\n    }\n\n    const result = jsonQuery(query, {\n      data,\n      locals: {\n        slice: (input, start, end) => _.slice(input, start, end),\n        sample: (input, size = 1) => _.sampleSize(input, size),\n        group: (entities, groupSize = Infinity) => {\n          const grouped = [];\n\n          let group = [];\n\n          entities.forEach(entity => {\n            if (!entity.groupBefore || group.length >= groupSize) {\n              group = [];\n            }\n\n            group.push(entity);\n\n            if (!entity.groupAfter || group.length >= groupSize) {\n              group.ratio = 0;\n\n              group.forEach(entity => {\n                group.ratio += (entity.thumbnail || entity).ratio;\n              });\n\n              group.forEach(entity => {\n                entity.groupRatio =\n                  (entity.thumbnail || entity).ratio / group.ratio;\n              });\n\n              grouped.push(group);\n            }\n          });\n\n          return grouped;\n        },\n        pick: (input, ...paths) =>\n          _.map(input, obj => {\n            const copy = {\n              id: obj.id || undefined,\n            };\n            paths = paths.filter(path => path); // Remove empty paths (tolerate trailing comma in args)\n            paths.forEach(path => {\n              const pathParts = path.match(/([^\\s]+)/g);\n              const pathFrom = pathParts[0];\n              const pathTo = pathParts[pathParts.length - 1];\n              _.set(copy, pathTo, _.get(obj, pathFrom));\n            });\n            return copy;\n          }),\n      },\n      allowRegexp: true,\n    });\n\n    return result;\n  }\n\n  static _queriesFromString(queryString) {\n    // Remove white space\n    queryString = queryString.replace(/(\\s\\s|\\t|\\r|\\n)/gm, '');\n\n    // Match and store (...args) from query so we can split by comma\n    const methodArgs = queryString.match(/\\(([^)]+)\\)/g);\n\n    // Replace (...args) with empty ()\n    queryString = queryString.replace(/\\(.*?\\)/g, '()');\n\n    // Extract queries\n    let queries = queryString.split(/,(?![^([]*[\\])])/g);\n\n    queries = queries.map(query => {\n      // Replace () with original (...args)\n      const emptyArgs = query.match(/\\(\\)/g);\n      if (emptyArgs) {\n        _.times(emptyArgs.length, () => {\n          query = query.replace('()', methodArgs.splice(0, 1));\n        });\n      }\n      return query.trim();\n    });\n\n    return queries;\n  }\n\n  async _entitiesById(ids = [], options = {}) {\n    options = _.merge(\n      {\n        parents: false,\n        role: 'guest',\n      },\n      options\n    );\n\n    const query = {\n      include_docs: true,\n    };\n\n    if (ids.length) {\n      query.keys = ids;\n    }\n\n    const result = await Db.connect(this.config).view(\n      'entity',\n      options.parents ? 'byIdExtended' : 'byId',\n      query\n    );\n\n    result.rows = result.rows.map(row => {\n      row.doc = Entity._filterEntityFields(row.doc, options.role);\n      return row;\n    });\n\n    result.rows = Entity._appendParents(\n      result.rows,\n      options.parents,\n      options.role\n    );\n\n    return result;\n  }\n\n  static _childDepthLimit(children) {\n    let limit = 0;\n    if (_.isNumber(children)) {\n      limit = children - 1;\n    }\n    if (_.isArray(children)) {\n      limit = children.length - 1;\n    }\n    return limit;\n  }\n\n  async _getDocMap(rowsOrDocs, docMap = {}, options = {}) {\n    options._childDepth = options._childDepth || 0;\n\n    if (!options.parents && !options.children) {\n      return docMap;\n    }\n\n    let ids = [];\n    let childIds = [];\n\n    rowsOrDocs.forEach(rowOrDoc => {\n      const isRow = !!rowOrDoc.doc;\n\n      let doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      doc = Entity._filterEntityFields(doc, options.role);\n\n      if (options.children && doc.fields && _.size(doc.fields)) {\n        if (_.isArray(options.children)) {\n          Entity._queriesFromString(\n            options.children[options._childDepth]\n          ).forEach(query => {\n            childIds = childIds.concat(\n              _.flatten(Entity._query(doc, query, true).value).map(\n                obj => obj && obj.id\n              )\n            );\n          });\n        } else {\n          _.forEach(doc.fields, field => {\n            if (_.isArray(field.value)) {\n              field.value = field.value.filter(obj => obj);\n\n              field.value.forEach(obj => {\n                if (obj.id) {\n                  childIds.push(obj.id);\n                }\n              });\n            }\n          });\n        }\n      }\n\n      ids.push(isRow ? rowOrDoc.id : doc._id || doc.id);\n    });\n\n    ids = _.uniq(ids);\n    ids = ids.filter(id => !docMap[id]);\n\n    let docs = [];\n    if (ids.length > 0) {\n      docs = (await this._entitiesById(ids, options)).rows.map(row => row.doc);\n\n      docs.forEach(doc => {\n        docMap[doc._id] = doc;\n      });\n    }\n\n    childIds = _.uniq(childIds);\n    childIds = childIds.filter(id => !docMap[id]);\n\n    let childDocs = [];\n    if (childIds.length > 0) {\n      childDocs = (\n        await this._entitiesById(childIds, { ...options, parents: false })\n      ).rows.map(row => row.doc);\n\n      childDocs.forEach(doc => {\n        docMap[doc._id] = doc;\n      });\n    }\n\n    if (\n      !options.children ||\n      options._childDepth === Entity._childDepthLimit(options.children)\n    ) {\n      return docMap;\n    }\n\n    return await this._getDocMap(childDocs, docMap, {\n      ...options,\n      parents: false,\n      _childDepth: options._childDepth + 1,\n    });\n  }\n\n  static _mergeDocs(\n    docs,\n    docMap,\n    options = { children: false, parents: false }\n  ) {\n    options._childDepth = options._childDepth || 0;\n\n    if (\n      options.children &&\n      options._childDepth - 1 === Entity._childDepthLimit(options.children)\n    ) {\n      return docs;\n    }\n\n    docs = docs.map(rowOrDoc => {\n      const isRow = !!rowOrDoc.doc;\n\n      let doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (docMap[rowOrDoc.id || rowOrDoc._id]) {\n        doc = _.merge({}, doc, docMap[rowOrDoc.id || rowOrDoc._id]);\n      }\n\n      if (options.children && doc.fields && _.size(doc.fields)) {\n        let fieldQueryMap;\n\n        if (_.isArray(options.children)) {\n          fieldQueryMap = {};\n          Entity._queriesFromString(\n            options.children[options._childDepth]\n          ).forEach(query => {\n            const key = query.split(/\\[|\\]/)[0];\n            fieldQueryMap[key] = query;\n          });\n        }\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter(obj => obj);\n\n            if (!fieldQueryMap || (fieldQueryMap && fieldQueryMap[fieldSlug])) {\n              if (fieldQueryMap && fieldQueryMap[fieldSlug]) {\n                field.value = field.value.filter(\n                  obj => obj.id && docMap[obj.id]\n                );\n              }\n\n              field.value = field.value.map(obj => {\n                if (obj && obj.id && docMap[obj.id]) {\n                  obj = _.merge(obj, docMap[obj.id] || {});\n                  obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n                }\n                return obj;\n              });\n\n              field.value = Entity._mergeDocs(field.value, docMap, {\n                ...options,\n                _childDepth: options._childDepth + 1,\n              });\n            }\n          }\n          return field;\n        });\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            if (fieldQueryMap && fieldQueryMap[fieldSlug]) {\n              field.value = _.flatten(\n                Entity._query(doc, fieldQueryMap[fieldSlug], true).value\n              );\n            }\n          }\n          return field;\n        });\n      }\n\n      if (_.isArray(options.parents) && doc.parents) {\n        doc.parents = _.flatten(\n          Entity._query(doc.parents, options.parents[0]).value\n        );\n      }\n\n      if (isRow) {\n        rowOrDoc.doc = doc;\n      } else {\n        rowOrDoc = doc;\n      }\n\n      return rowOrDoc;\n    });\n\n    return docs;\n  }\n\n  async _extendRowsOrDocs(rowsOrDocs, options = {}) {\n    options = _.merge(\n      {\n        select: false,\n        children: false,\n        parents: false,\n        role: 'guest',\n      },\n      options\n    );\n\n    let docMap = await this._getDocMap(rowsOrDocs, {}, options);\n\n    rowsOrDocs = Entity._mergeDocs(rowsOrDocs, docMap, options);\n\n    if (options.select) {\n      rowsOrDocs = _.flatten(Entity._query(rowsOrDocs, options.select).value);\n    }\n\n    docMap = null;\n\n    return rowsOrDocs;\n  }\n\n  _removeChildren(entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      entities = entities.map(entity => entity._id);\n\n      Db.connect(this.config)\n        .view('entity', 'byChildren', {\n          keys: entities,\n          include_docs: true,\n        })\n        .then(response => {\n          const updatedEntities = _.uniqBy(\n            response.rows,\n            row => row.doc._id\n          ).map(row => {\n            row.doc.fields = _.mapValues(row.doc.fields, field => {\n              if (_.isArray(field.value)) {\n                field.value = _.filter(\n                  field.value,\n                  obj =>\n                    !(obj.type === 'entity' && entities.indexOf(obj.id) !== -1)\n                );\n              }\n              return field;\n            });\n\n            return row.doc;\n          });\n\n          if (updatedEntities.length === 0) {\n            resolve([]);\n            return;\n          }\n\n          Helpers.chunkUpdate(\n            this.config,\n            updatedEntities,\n            CHUNK_UPDATE_SIZE\n          ).then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  _updateChildren(entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      const entityMap = {};\n\n      entities = entities.map(entity => {\n        entityMap[entity._id] = entity;\n\n        return entity._id;\n      });\n\n      Db.connect(this.config)\n        .view('entity', 'byChildren', {\n          keys: entities,\n          include_docs: true,\n        })\n        .then(response => {\n          const entities = response.rows.map(row => {\n            const entity = row.doc;\n\n            _.forEach(entity.fields, (field, fieldSlug) => {\n              if (_.isArray(field.value)) {\n                entity.fields[fieldSlug].value = field.value\n                  .filter(obj => obj)\n                  .map(obj => {\n                    if (obj.type === 'entity' && entityMap[obj.id]) {\n                      obj.slug = entityMap[obj.id].slug;\n                      obj.title = entityMap[obj.id].title;\n                      obj.schema = entityMap[obj.id].schema;\n                      obj.published = entityMap[obj.id].published;\n\n                      if (entityMap[obj.id].thumbnail) {\n                        obj.thumbnail = entityMap[obj.id].thumbnail;\n                      } else {\n                        obj.thumbnail = null;\n                      }\n                    }\n\n                    return obj;\n                  });\n              }\n            });\n\n            return entity;\n          });\n\n          Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE).then(\n            resolve,\n            reject\n          );\n        }, reject);\n    });\n  }\n\n  async entityList(ids = [], options = {}) {\n    options = _.merge(\n      {\n        select: false,\n        children: false,\n        parents: false,\n        role: 'guest',\n      },\n      options\n    );\n\n    const result = await this._entitiesById(ids, options);\n\n    const rows = await this._extendRowsOrDocs(result.rows, options);\n\n    return rows;\n  }\n\n  _entitySearch(query, options = {}) {\n    return new Promise((resolve, reject) => {\n      query.limit = Math.min(query.limit || 200, 200);\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      if (options.children) {\n        query.include_docs = true;\n      }\n\n      if (!query.include_fields) {\n        query.include_fields = [];\n      }\n\n      if (!query.sort) {\n        delete query.sort;\n      }\n      if (!query.bookmark) {\n        delete query.bookmark;\n      }\n      if (!query.index) {\n        delete query.index;\n      }\n      if (!query.group_field) {\n        delete query.group_field;\n      }\n\n      Db.connect(this.config)\n        .search('entity', query.index || 'all', query)\n        .then(result => {\n          if (result.groups) {\n            const promises = [];\n\n            result.groups = result.groups.map(group => {\n              promises.push(\n                new Promise((resolve, reject) => {\n                  if (\n                    (!options.children && !options.parents) ||\n                    group.total_rows === 0\n                  ) {\n                    resolve();\n                    return;\n                  }\n\n                  this._extendRowsOrDocs(group.hits, options).then(docs => {\n                    group.hits = docs;\n\n                    resolve();\n                  }, reject);\n                })\n              );\n              return group;\n            });\n\n            Promise.all(promises).then(() => {\n              resolve(result);\n            }, reject);\n\n            return;\n          }\n\n          this._extendRowsOrDocs(result.rows, options).then(docs => {\n            result.rows = docs;\n\n            resolve(result);\n          }, reject);\n        }, reject);\n    });\n  }\n\n  entitySearch(query, options = {}) {\n    options = _.merge(\n      {\n        children: false,\n        parents: false,\n        role: 'guest',\n      },\n      options\n    );\n\n    return new Promise((resolve, reject) => {\n      const limit = query.limit || 25;\n\n      if (limit <= 200) {\n        this._entitySearch(query, options).then(resolve, reject);\n        return;\n      }\n\n      let rows = [];\n      let groups = [];\n\n      function __entitySearch(bookmark) {\n        const _query = _.clone(query);\n\n        if (bookmark) {\n          _query.bookmark = bookmark;\n        }\n\n        this._entitySearch(_query, options).then(result => {\n          if (result.rows) {\n            rows = rows.concat(result.rows);\n          }\n          if (result.groups) {\n            groups = groups.concat(result.groups);\n          }\n\n          if (rows.length < result.total_rows && rows.length < limit) {\n            __entitySearch.call(this, result.bookmark);\n            return;\n          }\n\n          result.rows = rows;\n          result.groups = groups;\n\n          resolve(result);\n        }, reject);\n      }\n\n      __entitySearch.call(this);\n    });\n  }\n\n  async entityFind(query, options = {}) {\n    options = _.merge(\n      {\n        children: false,\n        parents: false,\n        role: 'guest',\n      },\n      options\n    );\n\n    let result;\n\n    try {\n      result = await Db.connect(this.config).find(query);\n    } catch (error) {\n      if (error.error === 'no_usable_index') {\n        const cc = new ClientConfig(this.config);\n        const clientConfig = await cc.get();\n\n        const schema = new Schema(this.config);\n        await schema.updateEntityIndex(clientConfig.schemas);\n\n        result = await Db.connect(this.config).find(query);\n      }\n    }\n\n    if (options.children === false) {\n      return result;\n    }\n\n    if (query.fields && query.fields.indexOf('_id') === -1) {\n      throw new Error('_id field required for `children`');\n    }\n\n    result.docs = await this._extendRowsOrDocs(result.docs, options);\n\n    return result;\n  }\n\n  entityRevisions(entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config)\n        .get(entityId, {\n          revs_info: true,\n        })\n        .then(response => {\n          const revisionIds = [];\n\n          response._revs_info.forEach(revision => {\n            if (revision.status === 'available') {\n              revisionIds.push(revision.rev);\n            }\n          });\n\n          Db.connect(this.config)\n            .get(entityId, {\n              open_revs: JSON.stringify(revisionIds),\n            })\n            .then(response => {\n              const revisions = [];\n              const childrenIds = [];\n\n              response.forEach(revision => {\n                if (revision.ok) {\n                  revisions.push(revision.ok);\n\n                  _.forEach(revision.ok.fields, field => {\n                    if (/entity/.test(field.type)) {\n                      _.forEach(field.value, obj => {\n                        if (obj.id) {\n                          childrenIds.push(obj.id);\n                        }\n                      });\n                    }\n                  });\n                }\n              });\n\n              Db.connect(this.config)\n                .fetch({\n                  keys: _.uniq(childrenIds),\n                  include_docs: true,\n                })\n                .then(result => {\n                  const childrenMap = {};\n\n                  result.rows.forEach(row => {\n                    try {\n                      childrenMap[row.doc._id] = row.doc;\n                    } catch (error) {\n                      console.error('Error: child no longer exists');\n                    }\n                  });\n\n                  resolve(Entity._appendChildren(revisions, childrenMap));\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entityCreate(entity) {\n    return new Promise((resolve, reject) => {\n      entity.type = 'entity';\n\n      Db.connect(this.config)\n        .insert(entity)\n        .then(response => {\n          entity._id = response.id;\n          entity._rev = response.rev;\n\n          resolve(entity);\n        }, reject);\n    });\n  }\n\n  entityRead(entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config)\n        .get(entityId)\n        .then(resolve, reject);\n    });\n  }\n\n  async entityUpdate(entities, restore) {\n    entities = _.isArray(entities) ? entities : [entities];\n\n    const entityMap = {};\n\n    const entityIds = entities.map(entityOrEntityId => {\n      let entityId;\n\n      if (_.isObject(entityOrEntityId)) {\n        entityId = entityOrEntityId._id;\n        entityMap[entityId] = entityOrEntityId;\n      }\n      if (_.isString(entityOrEntityId)) {\n        entityId = entityOrEntityId;\n      }\n\n      return entityId;\n    });\n\n    const response = await Db.connect(this.config).fetch({\n      keys: entityIds,\n      include_docs: true,\n    });\n\n    const children = [];\n    const oldFileNames = [];\n\n    entities = response.rows.map(row => {\n      const oldEntity = row.doc;\n      const newEntity = entityMap[oldEntity._id];\n\n      let entity = oldEntity;\n\n      if (newEntity) {\n        delete newEntity._rev;\n\n        const diffs = diff(oldEntity, newEntity);\n\n        diffs.forEach(diff => {\n          // If any reference fields have changed, update all references\n          if (/published|slug|title|thumbnail/.test(diff.path[0])) {\n            if (\n              children.indexOf(newEntity) === -1 &&\n              entityIds.indexOf(newEntity._id) !== -1\n            ) {\n              children.push(newEntity);\n            }\n          }\n\n          // If any file fields have changed, remove the old file\n          if (diff.path[0] === 'fields' && diff.path[2] === 'value') {\n            const field = oldEntity.fields[diff.path[1]];\n            if (\n              /attachment|image|audio|video/.test(field.type) &&\n              field.value\n            ) {\n              oldFileNames.push(field.value.file.name);\n            }\n          }\n        });\n\n        entity = _.mergeWith({}, oldEntity, newEntity, (a, b) => {\n          if (_.isArray(a) && _.isArray(b)) {\n            return b;\n          }\n          return undefined;\n        });\n      }\n\n      if (restore) {\n        entity.trashed = false;\n      }\n\n      return entity;\n    });\n\n    if (oldFileNames.length) {\n      // TODO: fix delete orphaned files\n      // const assist = new Assist(this.config);\n      // await assist.deleteFiles(oldFileNames);\n    }\n\n    if (children.length) {\n      await this._updateChildren(children);\n    }\n\n    const result = await Helpers.chunkUpdate(\n      this.config,\n      entities,\n      CHUNK_UPDATE_SIZE\n    );\n\n    return result;\n  }\n\n  async entityDelete(entityIds, forever = false) {\n    let entities;\n    let filesResult;\n\n    if (entityIds === 'trashed') {\n      forever = true;\n\n      entities = (\n        await Db.connect(this.config).view('entity', 'trashed', {\n          include_docs: true,\n        })\n      ).rows;\n    } else {\n      entities = (\n        await Db.connect(this.config).fetch({\n          keys: _.isArray(entityIds) ? entityIds : [entityIds],\n          include_docs: true,\n        })\n      ).rows;\n    }\n\n    entities = entities.filter(\n      entity => !entity.value || !entity.value.deleted\n    );\n\n    entities = entities.map(entity => entity.doc);\n\n    await this._removeChildren(entities);\n\n    if (forever) {\n      const fileNames = Entity._fileNames(entities);\n\n      if (fileNames.length) {\n        const assist = new Assist(this.config);\n        filesResult = await assist.deleteFiles(fileNames);\n      }\n\n      entities = entities.map(entity => ({\n        _id: entity._id,\n        _rev: entity._rev,\n        _deleted: true,\n      }));\n    } else {\n      entities = entities.map(entity => {\n        entity.trashed = true;\n        return entity;\n      });\n    }\n\n    const entitiesResult = await Helpers.chunkUpdate(\n      this.config,\n      entities,\n      CHUNK_UPDATE_SIZE\n    );\n\n    return {\n      entities: entitiesResult,\n      files: filesResult,\n    };\n  }\n}\n\nmodule.exports = Entity;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Fields = require('./fields');\n\nclass Schema {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas.push(schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(schemaSlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const schema = _.find(clientConfig.schemas, { slug: schemaSlug });\n\n    if (!schema) {\n      throw Error(`Schema not found: ${schemaSlug}`);\n    }\n\n    return schema;\n  }\n\n  async update(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.schemas, { slug: schema.slug });\n\n    if (index === -1) {\n      throw Error(`Schema not found: ${schema.slug}`);\n    }\n\n    clientConfig.schemas.splice(index, 1, schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(schemaSlugs) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    schemaSlugs = _.isArray(schemaSlugs) ? schemaSlugs : [schemaSlugs];\n\n    clientConfig.schemas = clientConfig.schemas.filter(\n      schema => schemaSlugs.indexOf(schema.slug) === -1\n    );\n\n    clientConfig.schemas = clientConfig.schemas.map(schema => {\n      if (!schema.fields) {\n        return schema;\n      }\n      schema.fields = schema.fields.map(field => {\n        if (!field.settings) {\n          return field;\n        }\n        if (field.settings.schemas) {\n          field.settings.schemas = field.settings.schemas.filter(\n            schema => schemaSlugs.indexOf(schema) === -1\n          );\n        }\n        return field;\n      });\n      return schema;\n    });\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateAll(schemas) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas = schemas;\n\n    // await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateEntityIndex(schemas) {\n    let fields = [];\n\n    schemas.forEach(schema => {\n      fields = fields.concat(schema.fields);\n    });\n\n    fields = _.uniqBy(fields, 'slug');\n\n    const index = {\n      name: 'entity',\n      type: 'text',\n      ddoc: 'entityIndex',\n      index: {\n        default_field: {\n          enabled: true,\n          analyzer: 'standard',\n        },\n        selector: {\n          $and: [\n            {\n              type: 'entity',\n            },\n          ],\n        },\n        fields: [\n          {\n            name: 'published',\n            type: 'boolean',\n          },\n          {\n            name: 'trashed',\n            type: 'boolean',\n          },\n          {\n            name: 'title',\n            type: 'string',\n          },\n          {\n            name: 'slug',\n            type: 'string',\n          },\n          {\n            name: 'schema',\n            type: 'string',\n          },\n          {\n            name: 'modifiedAt',\n            type: 'string',\n          },\n          {\n            name: 'publishedAt',\n            type: 'string',\n          },\n        ],\n      },\n    };\n\n    fields.forEach(field => {\n      const fieldRef = Fields.field(field.type);\n\n      if (/number|string|boolean/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value`,\n          type: fieldRef.dataType,\n        });\n      }\n\n      if (/array/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.[].slug`,\n          type: 'string',\n        });\n      }\n\n      if (/taxonomy/.test(field.type)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.terms.[].slug`,\n          type: 'string',\n        });\n      }\n    });\n\n    const result = await Db.connect(this.config).index(index);\n\n    return result;\n  }\n}\n\nmodule.exports = Schema;\n","const _ = require('lodash');\n\nconst fields = [\n  {\n    type: 'attachment',\n    name: 'Attachment',\n    dataType: null,\n  },\n  {\n    type: 'audio',\n    name: 'Audio',\n    dataType: null,\n  },\n  {\n    type: 'checkbox',\n    name: 'Checkbox',\n    dataType: 'boolean',\n  },\n  {\n    type: 'color',\n    name: 'Color',\n    dataType: 'string',\n  },\n  {\n    type: 'date',\n    name: 'Date',\n    dataType: 'string',\n  },\n  {\n    type: 'embedly',\n    name: 'Embedly',\n    dataType: null,\n  },\n  {\n    type: 'entity',\n    name: 'Entity',\n    dataType: 'array',\n  },\n  {\n    type: 'entityGrid',\n    name: 'Entity Grid',\n    dataType: 'array',\n  },\n  {\n    type: 'entityTile',\n    name: 'Entity Tile',\n    dataType: 'array',\n  },\n  {\n    type: 'image',\n    name: 'Image',\n    dataType: null,\n  },\n  {\n    type: 'keyValue',\n    name: 'Key Value',\n    dataType: null,\n  },\n  {\n    type: 'number',\n    name: 'Number',\n    dataType: 'number',\n  },\n  {\n    type: 'richText',\n    name: 'Rich Text',\n    dataType: null,\n  },\n  {\n    type: 'select',\n    name: 'Select',\n    dataType: 'array',\n  },\n  {\n    type: 'taxonomy',\n    name: 'Taxonomy',\n    dataType: null,\n  },\n  {\n    type: 'text',\n    name: 'Text',\n    dataType: 'string',\n  },\n  {\n    type: 'textArea',\n    name: 'Text Area',\n    dataType: 'string',\n  },\n  {\n    type: 'user',\n    name: 'User',\n    dataType: 'array',\n  },\n  {\n    type: 'video',\n    name: 'Video',\n    dataType: null,\n  },\n  {\n    type: 'vimeo',\n    name: 'Vimeo',\n    dataType: null,\n  },\n];\n\nclass Fields {\n  static fields() {\n    return fields.map(field => Object.freeze(field));\n  }\n  static field(type) {\n    return _.find(Fields.fields(), { type });\n  }\n}\n\nmodule.exports = Fields;\n","module.exports = require(\"request-promise\");","const config = {\n  environment: process.env.ENVIRONMENT || 'development',\n\n  api: {\n    prefix: process.env.API_PREFIX || '',\n    forceHttps: process.env.API_FORCE_HTTPS\n      ? JSON.parse(process.env.API_FORCE_HTTPS)\n      : false,\n    blacklistToken: (process.env.API_BLACKLIST_TOKEN || '').split(','),\n    blacklistReferrer: (process.env.API_BLACKLIST_REFERRER || '').split(','),\n  },\n\n  session: {\n    secret: process.env.SESSION_SECRET || 'change_me',\n    ttl: parseInt(process.env.SESSION_TTL || 7200, 10),\n  },\n\n  cache: {\n    enabled: process.env.CACHE_ENABLED\n      ? JSON.parse(process.env.CACHE_ENABLED)\n      : false,\n    ttl: parseInt(process.env.CACHE_TTL || 30, 10) * 60, // 30mins\n    compress: process.env.CACHE_COMPRESS\n      ? JSON.parse(process.env.CACHE_COMPRESS)\n      : false,\n    memory: {\n      max: parseInt(process.env.CACHE_MEMORY_MAX || 128, 10) * 1000 * 1000, // ~128mb\n    },\n  },\n\n  redis: {\n    url: process.env.REDIS_URL,\n    host: process.env.REDIS_HOST,\n    port: process.env.REDIS_PORT,\n    password: process.env.REDIS_PASSWORD,\n    db: parseInt(process.env.REDIS_DB || 0, 10),\n  },\n\n  logentriesToken: process.env.LOGENTRIES_TOKEN,\n};\n\nmodule.exports = config;\n","module.exports = require(\"lodash/pick\");","module.exports = require(\"lodash/isArray\");","const PORT = process.env.PORT || 5001;\nconst HOST = process.env.HOST || 'localhost';\n\nconst _ = require('lodash');\nconst express = require('express');\nconst http = require('http');\nconst logger = require('morgan');\nconst helmet = require('helmet');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst methodOverride = require('method-override');\nconst redis = require('redis');\nconst session = require('express-session');\nconst RedisStore = require('connect-redis')(session);\n\nconst AceApiServer = require('./index');\n\nconst defaultConfig = require('./config.default');\n\nfunction Serve(customConfig = {}, listen = true) {\n  const config = _.merge({}, defaultConfig, customConfig);\n\n  const app = express();\n\n  const sessionOptions = {\n    secret: config.session.secret,\n    resave: true,\n    saveUninitialized: true,\n  };\n\n  if (config.redis.url || config.redis.host) {\n    const redisOptions = {\n      ttl: config.session.ttl,\n    };\n\n    if (config.redis.url) {\n      redisOptions.url = config.redis.url;\n    } else {\n      redisOptions.host = config.redis.host;\n      redisOptions.port = config.redis.port;\n      redisOptions.password = config.redis.password;\n      redisOptions.db = config.redis.db;\n    }\n\n    const redisClient = redis.createClient(redisOptions);\n    redisClient.unref();\n    redisClient.on('error', console.log);\n\n    sessionOptions.store = new RedisStore({ client: redisClient });\n  } else {\n    sessionOptions.cookie = {\n      maxAge: config.session.ttl,\n    };\n  }\n\n  app.use(helmet());\n  app.use(logger('tiny'));\n  app.use(cookieParser());\n  app.use(\n    bodyParser.json({\n      limit: '50mb',\n    })\n  );\n  app.use(\n    bodyParser.urlencoded({\n      extended: true,\n      limit: '50mb',\n    })\n  );\n  app.use(methodOverride());\n  app.use(session(sessionOptions));\n\n  AceApiServer(app, config);\n\n  if (listen) {\n    const server = http.createServer(app);\n    server.on('listening', () => {\n      console.log(`listening: http://${HOST}:${PORT}`);\n    });\n    server.listen(PORT);\n  }\n\n  return app;\n}\n\nmodule.exports = Serve;\n","module.exports = require(\"http\");","module.exports = require(\"morgan\");","module.exports = require(\"helmet\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"body-parser\");","module.exports = require(\"method-override\");","module.exports = require(\"redis\");","module.exports = require(\"express-session\");","module.exports = require(\"connect-redis\");","process.on('unhandledRejection', result => console.error(result));\n\nconst _ = require('lodash');\nconst express = require('express');\nconst cacheManager = require('cache-manager');\nconst redisStore = require('cache-manager-redis-store');\nconst Promise = require('bluebird');\nconst URL = require('url-parse');\nconst zlib = Promise.promisifyAll(require('zlib'));\nconst CircularJSON = require('circular-json-es6');\nconst sizeof = require('object-sizeof');\nconst deepFreeze = require('deep-freeze');\nconst XXH = require('xxhashjs');\n\nconst Api = require('../index');\n\nconst HASH_SEED = 0xabcd;\n\nconst defaultConfig = require('./config.default');\n\nfunction AceApiServer(app, customConfig = {}, customAuthMiddleware = null) {\n  const config = deepFreeze(\n    _.merge({}, Api.defaultConfig, defaultConfig, customConfig)\n  );\n\n  // Async middleware\n\n  const asyncMiddleware = fn => (req, res, next) => {\n    Promise.resolve(fn(req, res, next)).catch(next);\n  };\n\n  // Skip authorisation\n\n  const skipAuth = req => {\n    const prodAllowedRoutes = ['/auth/user', '/config/info'];\n\n    const devAllowedRoutes = ['/token', '/email'];\n\n    if (\n      _.find(prodAllowedRoutes, route => new RegExp(`^${route}`).test(req.path))\n    ) {\n      return true;\n    }\n\n    if (\n      config.environment === 'development' &&\n      _.find(devAllowedRoutes, route => new RegExp(`^${route}`).test(req.path))\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  // Default auth middleware\n\n  const defaultAuthMiddleware = (req, res, next) => {\n    if (skipAuth(req)) {\n      next();\n      return;\n    }\n\n    if (!req.session.userId) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  const authMiddleware = customAuthMiddleware || defaultAuthMiddleware;\n\n  // Permissions middleware\n\n  const permissionMiddleware = (permissions, req, res, next) => {\n    if (!req.session.role) {\n      res.status(401);\n      res.send({\n        permissions,\n        message: 'Error: undefined role',\n      });\n      return;\n    }\n\n    if (req.session.role === 'super') {\n      next();\n      return;\n    }\n\n    const roles = Api.Roles();\n\n    if (_.isString(permissions)) {\n      permissions = permissions.split(',');\n    }\n\n    let authorised = false;\n\n    permissions.forEach(permission => {\n      if (roles.role(req.session.role).permissions[permission.trim()]) {\n        authorised = true;\n      }\n    });\n\n    if (!roles.role(req.session.role) || !authorised) {\n      res.status(401);\n      res.send({\n        permissions,\n        message: 'Error: not authorised',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  // Clone and extend config per request/session\n\n  const omitUndefined = obj => {\n    _.forIn(obj, (value, key, obj) => {\n      if (_.isPlainObject(value)) {\n        value = omitUndefined(value);\n\n        if (_.keys(value).length === 0) {\n          delete obj[key];\n        }\n      }\n\n      if (_.isUndefined(value)) {\n        delete obj[key];\n      }\n    });\n\n    return obj;\n  };\n\n  const cloneConfig = config =>\n    _.mergeWith(\n      {},\n      JSON.parse(JSON.stringify(config)),\n      omitUndefined(_.cloneDeep(config))\n    );\n\n  const getConfig = async slug => {\n    const configClone = cloneConfig(config);\n\n    configClone.slug = slug;\n    configClone.db.name = slug;\n\n    return configClone;\n  };\n\n  // Cache\n\n  let cache;\n\n  if (config.cache.enabled) {\n    if (config.redis.url || config.redis.host) {\n      const redisOptions = {\n        ttl: config.cache.ttl,\n      };\n\n      if (config.redis.url) {\n        redisOptions.url = config.redis.url;\n      } else {\n        redisOptions.host = config.redis.host;\n        redisOptions.port = config.redis.port;\n        redisOptions.password = config.redis.password;\n        redisOptions.db = config.redis.db;\n      }\n\n      cache = cacheManager.caching(\n        _.merge({ store: redisStore }, redisOptions)\n      );\n\n      const redisClient = cache.store.getClient();\n      redisClient.on('ready', () => {\n        console.log('redis: ready');\n      });\n      redisClient.on('error', error => {\n        console.error('redis: error:', error);\n      });\n    } else {\n      cache = cacheManager.caching({\n        store: 'memory',\n        ttl: config.cache.ttl,\n        max: config.cache.memory.max,\n        length: item => {\n          // const length = Buffer.byteLength(item, 'utf8')\n          const length = sizeof(item);\n          return length;\n        },\n      });\n    }\n  }\n\n  // Cache middleware\n\n  const hash = req => {\n    const obj = {\n      path: req.path,\n      query: req.query,\n      body: req.body,\n    };\n    return `${req.session.slug}:${XXH.h64(\n      JSON.stringify(obj),\n      HASH_SEED\n    ).toString(16)}`;\n  };\n\n  const cacheMiddleware = asyncMiddleware(async (req, res, next) => {\n    const useCachedResponse =\n      config.cache.enabled &&\n      req.session.role === 'guest' && // TODO: Replace 'guest' with constant\n      (req.query.__cache && JSON.parse(req.query.__cache)) !== false;\n\n    if (useCachedResponse) {\n      try {\n        const key = hash(req);\n\n        let response = await cache.get(key);\n\n        if (typeof response === 'string') {\n          if (config.cache.compress) {\n            response = (\n              await zlib.gunzipAsync(Buffer.from(response, 'base64'))\n            ).toString();\n          }\n\n          try {\n            response = JSON.parse(response);\n          } catch (error) {\n            //\n          }\n\n          res.set('X-Cached-Response', true);\n          res.status(response ? 200 : 204);\n          res.send(response);\n\n          return;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    res.set('X-Cached-Response', false);\n    next();\n  });\n\n  // Response helpers\n\n  const handleError = (req, res, error) => {\n    if (Object.prototype.toString.call(error) === '[object Object]') {\n      error = CircularJSON.parse(CircularJSON.stringify(error));\n    }\n\n    error = error.response || error;\n\n    console.error(error);\n\n    const code = error.statusCode || error.status || error.code || 500;\n    const message =\n      error.stack ||\n      error.error ||\n      error.message ||\n      error.body ||\n      error.data ||\n      error.statusText ||\n      error;\n\n    res.status(typeof code === 'string' ? 500 : code);\n    res.send({\n      code,\n      message,\n    });\n  };\n\n  const handleResponse = async (req, res, response, cacheResponse = false) => {\n    if (response === undefined || response === null) {\n      response = '';\n      res.status(204);\n      res.send(response);\n    } else {\n      response = CircularJSON.stringify(response);\n      res.status(200);\n      res.send(JSON.parse(response));\n    }\n\n    if (cacheResponse && config.cache.enabled && req.session.role === 'guest') {\n      // TODO: Replace 'guest' with constant\n      const key = hash(req);\n\n      if (config.cache.compress) {\n        response = (await zlib.gzipAsync(Buffer.from(response))).toString(\n          'base64'\n        );\n      }\n\n      const ttl = req.query.__cache\n        ? parseInt(req.query.__cache, 10)\n        : config.cache.ttl;\n\n      cache.set(key, response, { ttl });\n    }\n  };\n\n  // Header middleware\n\n  const headerMiddleware = (req, res, next) => {\n    const headers = {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,OPTIONS',\n      'Access-Control-Expose-Headers': 'X-Slug, X-Role, X-User-Id',\n      Vary: 'Accept-Encoding, X-Api-Token',\n    };\n\n    if (req.headers['access-control-request-headers']) {\n      headers['Access-Control-Allow-Headers'] =\n        req.headers['access-control-request-headers'];\n    }\n\n    res.set(headers);\n\n    if (req.method === 'OPTIONS') {\n      res.sendStatus(200);\n      return;\n    }\n\n    next();\n  };\n\n  // Session middleware\n\n  const jwt = Api.Jwt(config);\n\n  const sessionMiddleware = (req, res, next) => {\n    if (skipAuth(req)) {\n      next();\n      return;\n    }\n\n    const referrer = req.headers.referrer || req.headers.referer;\n\n    if (referrer) {\n      const referrerHostname = new URL(referrer).hostname\n        .split('.')\n        .slice(-2)\n        .join('.');\n\n      if (config.api.blacklistReferrer.indexOf(referrerHostname) > -1) {\n        res.status(401);\n        res.send({\n          code: 401,\n          message: 'Not authorised, referrer blacklisted',\n        });\n        return;\n      }\n    }\n\n    const token =\n      req.headers['x-api-token'] || req.query.apiToken || req.session.apiToken;\n\n    if (!token) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing token',\n      });\n      return;\n    }\n\n    if (config.api.blacklistToken.indexOf(token) > -1) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, token blacklisted',\n      });\n      return;\n    }\n\n    try {\n      const payload = jwt.verifyToken(token);\n\n      req.session.userId = payload.userId;\n      req.session.slug = payload.slug;\n      req.session.role = payload.role || 'guest'; // TODO: Replace 'guest' with constant\n    } catch (error) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: `Not authorised, token verification failed (${error.message})`,\n        error,\n      });\n      return;\n    }\n\n    if (!req.session.slug) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing slug',\n      });\n      return;\n    }\n\n    if (!req.session.role) {\n      req.session.role = 'guest';\n    }\n\n    if (req.session.userId) {\n      res.set('X-User-Id', req.session.userId);\n    }\n\n    res.set('X-Environment', config.environment);\n    res.set('X-Slug', req.session.slug);\n    res.set('X-Role', req.session.role);\n\n    next();\n  };\n\n  // Router\n\n  const router = express.Router();\n\n  const forceHttps = (req, res, next) => {\n    if (\n      req.headers['x-forwarded-proto'] &&\n      req.headers['x-forwarded-proto'] !== 'https' &&\n      req.headers['cf-visitor'] &&\n      JSON.parse(req.headers['cf-visitor']).scheme !== 'https' // Fix for Cloudflare/Heroku flexible SSL\n    ) {\n      res.redirect(301, `https://${req.headers.host}${req.path}`);\n      return;\n    }\n    next();\n  };\n\n  if (config.environment === 'production' && config.api.forceHttps === true) {\n    if (app.enable) {\n      app.enable('trust proxy');\n    }\n    app.use(forceHttps);\n  }\n\n  app.use(`/${config.api.prefix}`, headerMiddleware, sessionMiddleware, router);\n\n  app.get(`/${config.api.prefix}`, (req, res) => {\n    res.send(\n      '<pre> ______\\n|A     |\\n|  /\\\\  |\\n| /  \\\\ |\\n|(    )|\\n|  )(  |\\n|______|</pre>'\n    );\n  });\n\n  // Context\n\n  const context = {\n    app,\n    router,\n    cache,\n    authMiddleware,\n    permissionMiddleware,\n    cacheMiddleware,\n    asyncMiddleware,\n    getConfig,\n    handleResponse,\n    handleError,\n  };\n\n  // Inject API into context\n\n  Object.keys(Api).forEach(key => {\n    context[key] = Api[key];\n  });\n\n  const afterResponse = (req, res) => {\n    res.removeListener('finish', afterResponse);\n    res.removeListener('close', afterResponse);\n  };\n\n  if (config.environment !== 'production') {\n    app.use((req, res, next) => {\n      res.on('finish', afterResponse.bind(null, req, res));\n      res.on('close', afterResponse.bind(null, req, res));\n      next();\n    });\n  }\n\n  // Bootstrap Routes\n\n  require('./routes/analytics')(context, config);\n  require('./routes/auth')(context, config);\n  require('./routes/cache')(context, config);\n  require('./routes/config')(context, config);\n  require('./routes/debug')(context, config);\n  require('./routes/ecommerce')(context, config);\n  require('./routes/email')(context, config);\n  require('./routes/embedly')(context, config);\n  require('./routes/entity')(context, config);\n  require('./routes/metadata')(context, config);\n  require('./routes/pdf')(context, config);\n  require('./routes/provider')(context, config);\n  require('./routes/schema')(context, config);\n  require('./routes/settings')(context, config);\n  require('./routes/shippo')(context, config);\n  require('./routes/shopify')(context, config);\n  require('./routes/social')(context, config);\n  require('./routes/stripe')(context, config);\n  require('./routes/taxonomy')(context, config);\n  require('./routes/token')(context, config);\n  require('./routes/tools')(context, config);\n  require('./routes/user')(context, config);\n\n  return app;\n}\n\nmodule.exports = AceApiServer;\n","module.exports = require(\"cache-manager\");","module.exports = require(\"cache-manager-redis-store\");","module.exports = require(\"url-parse\");","module.exports = require(\"zlib\");","module.exports = require(\"circular-json-es6\");","module.exports = require(\"object-sizeof\");","module.exports = require(\"deep-freeze\");","module.exports = require(\"xxhashjs\");","function Api() {}\n\nApi.defaultConfig = require('./config.default');\n\nApi.Assist = (...args) => new (require('./lib/assist'))(...args);\nApi.Auth = (...args) => new (require('./lib/auth'))(...args);\nApi.ClientConfig = (...args) => new (require('./lib/client-config'))(...args);\nApi.Db = (...args) => new (require('./lib/db'))(...args);\nApi.Ecommerce = (...args) => new (require('./lib/ecommerce'))(...args);\nApi.Email = (...args) => new (require('./lib/email'))(...args);\nApi.Embedly = (...args) => new (require('./lib/embedly'))(...args);\nApi.Entity = (...args) => new (require('./lib/entity'))(...args);\nApi.Fields = (...args) => new (require('./lib/fields'))(...args);\nApi.Helpers = (...args) => new (require('./lib/helpers'))(...args);\nApi.Instagram = (...args) => new (require('./lib/instagram'))(...args);\nApi.Jwt = (...args) => new (require('./lib/jwt'))(...args);\nApi.Pdf = (...args) => new (require('./lib/pdf'))(...args);\nApi.Roles = (...args) => new (require('./lib/roles'))(...args);\nApi.Schema = (...args) => new (require('./lib/schema'))(...args);\nApi.Settings = (...args) => new (require('./lib/settings'))(...args);\nApi.Shippo = (...args) => new (require('./lib/shippo'))(...args);\nApi.Shopify = (...args) => new (require('./lib/shopify'))(...args);\nApi.Stripe = (...args) => new (require('./lib/stripe'))(...args);\nApi.Taxonomy = (...args) => new (require('./lib/taxonomy'))(...args);\nApi.Tools = (...args) => new (require('./lib/tools'))(...args);\nApi.User = (...args) => new (require('./lib/user'))(...args);\n\nmodule.exports = Api;\n","const path = require('path');\n\nconst config = {\n  environment: process.env.ENVIRONMENT || 'development',\n  debug: process.env.DEBUG || false,\n\n  slug: process.env.SLUG,\n  baseUrl: process.env.BASE_URL || '',\n\n  db: {\n    url: process.env.DB_URL,\n    host: process.env.DB_HOST,\n    name: process.env.DB_NAME,\n    requestPlugin: process.env.DB_REQUEST_PLUGIN,\n    meterType: process.env.DB_METER_TYPE,\n  },\n\n  auth: {\n    superUserId: process.env.AUTH_SUPER_USER_ID,\n    tokenSecret: process.env.AUTH_TOKEN_SECRET || 'change_this_secret',\n  },\n\n  dev: {\n    userId: process.env.DEV_USER_ID || 'dev',\n    role: process.env.DEV_ROLE || 'super',\n  },\n\n  cms: {\n    title: process.env.CMS_TITLE,\n    url: process.env.CMS_URL,\n  },\n\n  assist: {\n    url: process.env.ASSIST_URL,\n    username: process.env.ASSIST_USERNAME,\n    password: process.env.ASSIST_PASSWORD,\n  },\n\n  mailgun: {\n    apiKey: process.env.MAILGUN_API_KEY,\n    domain: process.env.MAILGUN_DOMAIN,\n  },\n\n  embedly: {\n    apiKey: process.env.EMBEDLY_API_KEY,\n  },\n\n  pdf: {\n    templatesPath: path.resolve(__dirname, 'pdf'),\n  },\n\n  email: {\n    templatesPath: path.resolve(__dirname, 'email'),\n  },\n\n  provider: {\n    google: {\n      clientId: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    },\n\n    instagram: {\n      clientId: process.env.INSTAGRAM_CLIENT_ID,\n      clientSecret: process.env.INSTAGRAM_CLIENT_SECRET,\n    },\n\n    spotify: {\n      clientId: process.env.SPOTIFY_CLIENT_ID,\n      clientSecret: process.env.SPOTIFY_CLIENT_SECRET,\n    },\n\n    stripe: {\n      clientId: process.env.STRIPE_CLIENT_ID,\n      clientSecret: process.env.STRIPE_CLIENT_SECRET,\n      apiKey: process.env.STRIPE_API_KEY,\n    },\n\n    twitter: {\n      consumerKey: process.env.TWITTER_CONSUMER_KEY,\n      consumerSecret: process.env.TWITTER_CONSUMER_SECRET,\n      accessTokenKey: process.env.TWITTER_ACCESS_TOKEN_KEY,\n      accessTokenSecret: process.env.TWITTER_ACCESS_TOKEN_SECRET,\n    },\n\n    vimeo: {\n      clientId: process.env.VIMEO_CLIENT_ID,\n      clientSecret: process.env.VIMEO_CLIENT_SECRET,\n    },\n  },\n};\n\nmodule.exports = config;\n","module.exports = require(\"password-hash\");","const _ = require('lodash');\nconst querystring = require('querystring');\nconst axios = require('axios');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\n\nconst providerTokenUri = {\n  google: 'https://www.googleapis.com/oauth2/v4/token',\n  instagram: 'https://api.instagram.com/oauth/access_token',\n  stripe: 'https://connect.stripe.com/oauth/token',\n  vimeo: 'https://api.vimeo.com/oauth/access_token',\n  spotify: 'https://accounts.spotify.com/api/token',\n};\n\nclass Auth {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async authUser(slug, userId) {\n    const isSuperUser =\n      _.get(this.config, 'auth.superUserId', '')\n        .split(',')\n        .map(superUser => superUser.trim())\n        .indexOf(userId) > -1;\n\n    if (isSuperUser) {\n      return {\n        id: userId,\n        active: true,\n        role: 'super',\n      };\n    }\n\n    const clientConfig = await Db.connect(this.config, slug).get('config');\n\n    const user = _.find(\n      clientConfig.users,\n      user => user.email.toLowerCase() === userId.toLowerCase()\n    );\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    if (!user.active) {\n      throw Error(`User not active: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async authProvider(provider, params = {}, userId = null, refresh = false) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const providerConfig = _.merge(\n      {},\n      this.config.provider[provider],\n      params || {}\n    );\n\n    let providerClientConfig;\n\n    if (userId) {\n      providerClientConfig = _.get(clientConfig, [\n        'userSettings',\n        userId,\n        'provider',\n        provider,\n      ]);\n    } else {\n      providerClientConfig = _.get(clientConfig, ['provider', provider]);\n    }\n\n    if (!providerClientConfig) {\n      providerClientConfig = {};\n    }\n\n    const data = {\n      grant_type: refresh ? 'refresh_token' : 'authorization_code',\n      code: params && params.code ? params.code : undefined,\n      client_id: providerConfig.clientId,\n      client_secret: providerConfig.clientSecret,\n      redirect_uri: providerConfig.redirectUri,\n      refresh_token: refresh ? providerClientConfig.refresh_token : undefined,\n    };\n\n    const uri = providerTokenUri[provider];\n\n    let providerAuth;\n\n    try {\n      providerAuth = (await axios.post(uri, querystring.stringify(data))).data;\n    } catch (error) {\n      throw new Error(JSON.stringify(error.response.data));\n    }\n\n    providerClientConfig = _.merge({}, providerClientConfig, providerAuth);\n    providerClientConfig.begins = Math.floor(new Date().getTime() / 1000);\n\n    if (provider === 'google') {\n      try {\n        providerClientConfig.user = (\n          await axios.get(\n            `https://www.googleapis.com/plus/v1/people/me?access_token=${providerClientConfig.access_token}`\n          )\n        ).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (provider === 'spotify') {\n      try {\n        providerClientConfig.user = (\n          await axios.get(\n            `https://api.spotify.com/v1/me?access_token=${providerClientConfig.access_token}`\n          )\n        ).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (userId) {\n      _.set(\n        clientConfig,\n        ['userSettings', userId, 'provider', provider],\n        providerClientConfig\n      );\n    } else {\n      _.set(clientConfig, ['provider', provider], providerClientConfig);\n    }\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = Auth;\n","module.exports = require(\"querystring\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass Ecommerce {\n  constructor(config) {\n    this.config = config;\n  }\n\n  getType(type, query) {\n    return new Promise((resolve, reject) => {\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      Db.connect(this.config)\n        .search('ecommerce', type, query)\n        .then(resolve, reject);\n    });\n  }\n\n  setType(type, item) {\n    return new Promise((resolve, reject) => {\n      item.type = type;\n\n      Helpers.createOrUpdate(this.config, item).then(resolve, reject);\n    });\n  }\n\n  deleteType(items) {\n    return new Promise((resolve, reject) => {\n      items = items.map(item => ({\n        _id: item._id,\n        _rev: item._rev,\n        _deleted: true,\n      }));\n\n      Helpers.chunkUpdate(this.config, items, 1000).then(resolve, reject);\n    });\n  }\n\n  getOrder(orderId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config)\n        .view('ecommerce', 'orderByOrderId', {\n          key: orderId,\n          include_docs: true,\n        })\n        .then(body => {\n          if (!body.rows.length) {\n            reject(new Error('Order not found'));\n            return;\n          }\n\n          resolve(body.rows[0].doc);\n        }, reject);\n    });\n  }\n\n  verifyDiscount(code) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config)\n        .view('ecommerce', 'discountByCode', {\n          keys: [code],\n          include_docs: true,\n        })\n        .then(body => {\n          if (body.rows.length) {\n            const discount = body.rows[0].doc;\n\n            const now = new Date().getTime();\n\n            const dateStart = new Date(\n              Date.parse(discount.dateStart)\n            ).getTime();\n            const dateEnd = new Date(Date.parse(discount.dateEnd)).getTime();\n\n            if (dateStart > now) {\n              reject(new Error('Discount not valid (not begun)'));\n              return;\n            }\n\n            if (dateEnd < now) {\n              reject(new Error('Discount not valid (expired)'));\n              return;\n            }\n\n            resolve(discount);\n          } else {\n            reject(\n              new Error({\n                statusCode: 404,\n                message: `Discount code not found (${code})`,\n              })\n            );\n          }\n        }, reject);\n    });\n  }\n}\n\nmodule.exports = Ecommerce;\n","module.exports = require(\"nodemailer\");","module.exports = require(\"createsend-node\");","module.exports = require(\"nodemailer-mailgun-transport\");","module.exports = require(\"inky\");","module.exports = require(\"mjml\");","module.exports = require(\"mjml-core\");","module.exports = require(\"mjml-validator\");","module.exports = require(\"mjml-mailchimp\");","module.exports = require(\"html-to-text\");","module.exports = require(\"moment\");","module.exports = require(\"i18n-iso-countries\");","module.exports = require(\"node-sass\");","module.exports = require(\"pug\");","module.exports = require(\"ejs\");","module.exports = require(\"juice\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst EmbedlyApi = require('embedly');\n\nclass Embedly {\n  constructor(config) {\n    this.config = config;\n  }\n\n  oembed(urls) {\n    return new Promise((resolve, reject) => {\n      const embedly = new EmbedlyApi({\n        key: this.config.embedly.apiKey,\n      });\n\n      const opts = {\n        urls: _.isArray(urls) ? urls : [urls],\n        format: 'json',\n      };\n\n      embedly.oembed(opts, (error, result) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(result);\n      });\n    });\n  }\n}\n\nmodule.exports = Embedly;\n","module.exports = require(\"embedly\");","module.exports = require(\"json-query\");","module.exports = require(\"deep-diff\");","const _ = require('lodash');\nconst request = require('request-promise');\n\nclass Instagram {\n  constructor(options) {\n    const defaultOptions = {\n      client_id: null,\n      access_token: null,\n      version: 'v1',\n      host: 'https://api.instagram.com',\n    };\n\n    this.options = _.merge({}, defaultOptions, options || {});\n  }\n\n  async _request(method, endpoint, query) {\n    const requestOptions = {\n      method,\n      url: [this.options.host, this.options.version, endpoint].join('/'),\n      qs: {\n        access_token: query.access_token || this.options.access_token,\n        client_id: query.client_id || this.options.client_id,\n      },\n    };\n\n    requestOptions.qs = _.extend({}, requestOptions.qs, query);\n\n    const response = await request(requestOptions);\n\n    return JSON.parse(response);\n  }\n\n  get(endpoint, query) {\n    return this._request('GET', endpoint, query);\n  }\n}\n\nmodule.exports = Instagram;\n","const jwt = require('jsonwebtoken');\n\nclass Jwt {\n  constructor(config) {\n    this.config = config;\n  }\n\n  signToken(payload, options = {}) {\n    return jwt.sign(payload, this.config.auth.tokenSecret, options);\n  }\n\n  verifyToken(token) {\n    return jwt.verify(token, this.config.auth.tokenSecret);\n  }\n}\n\nmodule.exports = Jwt;\n","module.exports = require(\"jsonwebtoken\");","const fs = require('fs');\nconst path = require('path');\nconst _ = require('lodash');\nconst _eval = require('eval');\nconst request = require('request-promise');\nconst readdir = require('recursive-readdir');\nconst Entity = require('./entity');\nconst ClientConfig = require('./client-config');\n\nclass Pdf {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getTemplates() {\n    const templates = {};\n\n    const files = await readdir(this.config.pdf.templatesPath);\n\n    files.forEach(file => {\n      if (!/\\.js$/.test(file)) {\n        return;\n      }\n\n      const id = file\n        .replace(`${this.config.pdf.templatesPath}/`, '')\n        .replace('.js', '');\n\n      // eslint-disable-next-line\n      templates[id] = require(file);\n    });\n\n    return templates;\n  }\n\n  async getPayload(templateId, entityId, role) {\n    // if (!this.templates) {\n    //   this.templates = await this.getTemplates();\n    // }\n\n    // if (!this.templates[templateId]) {\n    //   throw new Error('Template not found');\n    // }\n\n    const template = _eval(\n      fs.readFileSync(\n        path.join(this.config.pdf.templatesPath, `${templateId}.js`),\n        'utf-8'\n      ),\n      `${templateId}.js`,\n      {},\n      true\n    );\n\n    const entity = new Entity(this.config);\n\n    const entities = (\n      await entity.entityList([entityId], { children: 2, role })\n    ).map(row => row.doc);\n\n    if (entities.length === 0) {\n      throw new Error('Entity not found');\n    }\n\n    const payload = template(Entity.flattenValues(entities)[0]);\n\n    return payload;\n  }\n\n  async getPdf(payload) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n    const assistPdfUrl = `${this.config.assist.url}/${assetSlug}/pdf/download`;\n\n    payload =\n      typeof payload === 'object'\n        ? JSON.stringify(payload).replace(/'/gi, '’')\n        : payload;\n\n    const response = await request({\n      method: 'POST',\n      uri: assistPdfUrl,\n      encoding: null,\n      form: {\n        payload,\n      },\n    });\n\n    return response;\n  }\n}\n\nmodule.exports = Pdf;\n","module.exports = require(\"eval\");","module.exports = require(\"recursive-readdir\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 72;","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass Settings {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async update(settings) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.client = _.merge({}, clientConfig.client, settings);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = Settings;\n","const Promise = require('bluebird');\nconst shippo = require('shippo');\n\nclass Shippo {\n  constructor(config) {\n    this.config = config;\n\n    this.shippo = shippo(config.shippo.token);\n  }\n\n  getQuote(address, parcel) {\n    return new Promise((resolve, reject) => {\n      const addressFrom = {\n        object_purpose: 'QUOTE',\n        zip: this.config.shippo.fromZip,\n        country: this.config.shippo.fromCountry,\n      };\n\n      const addressTo = {\n        object_purpose: 'QUOTE',\n        // 'name': address.name,\n        // 'company': '',\n        // 'street1': address.street1,\n        // 'street2': address.street2,\n        // 'city': address.city,\n        // 'state': '',\n        zip: address.zip,\n        country: address.country,\n        // 'phone': address.phone,\n        // 'email': address.email,\n        metadata: '',\n      };\n\n      parcel.distance_unit = 'cm';\n      parcel.mass_unit = 'kg';\n\n      this.shippo.shipment\n        .create({\n          object_purpose: 'QUOTE',\n          address_from: addressFrom,\n          address_to: addressTo,\n          parcel,\n        })\n        .then(\n          shipment => {\n            const ratesReady = (shipment, attempts) => {\n              if (\n                (shipment.object_status === 'QUEUED' ||\n                  shipment.object_status === 'WAITING') &&\n                attempts < 10\n              ) {\n                this.shippo.shipment.retrieve(shipment.object_id).then(val => {\n                  ratesReady(val, attempts + 1);\n                });\n              } else {\n                this.shippo.shipment.rates(shipment.object_id).then(\n                  rates => {\n                    resolve(rates);\n                  },\n                  error => {\n                    console.error(\n                      'There was an error retrieving rates : %s',\n                      error\n                    );\n                    reject(error);\n                  }\n                );\n              }\n            };\n\n            ratesReady(shipment, 0);\n          },\n          error => {\n            console.error('There was an error creating shipment: %s', error);\n            reject(error);\n          }\n        );\n    });\n  }\n}\n\nmodule.exports = Shippo;\n","module.exports = require(\"shippo\");","const axios = require('axios');\nconst he = require('he');\nconst Handlebars = require('handlebars');\nconst jsontoxml = require('jsontoxml');\n\nconst ClientConfig = require('./client-config');\n\nclass Shopify {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getCatalog({ shopLink, productLinkTemplate }) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const result = (\n      await axios({\n        url: `https://${clientConfig.provider.shopify.domain}.myshopify.com/api/graphql`,\n        method: 'post',\n        headers: {\n          'X-Shopify-Storefront-Access-Token':\n            clientConfig.provider.shopify.storefrontAccessToken,\n        },\n        data: {\n          query: `\n          query {\n            shop {\n              name\n              primaryDomain {\n                url\n              }\n              description\n              products(first: 250) {\n                edges {\n                  node {\n                    id\n                    handle\n                    title\n                    description\n                    onlineStoreUrl\n                    images(first: 1) {\n                      edges {\n                        node {\n                          originalSrc\n                          transformedSrc\n                        }\n                      }\n                    }\n                    productType\n                    vendor\n                    availableForSale\n                    priceRange {\n                      minVariantPrice {\n                        amount\n                        currencyCode\n                      }\n                      maxVariantPrice {\n                        amount\n                        currencyCode\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `,\n        },\n      })\n    ).data.data;\n\n    const template = Handlebars.compile(productLinkTemplate);\n\n    const products = result.shop.products.edges.map(edge => ({\n      'g:id': edge.node.handle,\n      'g:title': he.encode(edge.node.title),\n      'g:description': he.encode(edge.node.description),\n      // 'g:link': edge.node.onlineStoreUrl,\n      'g:link': template({ handle: edge.node.handle }),\n      'g:image_link': edge.node.images.edges[0].node.originalSrc,\n      'g:brand': edge.node.vendor,\n      'g:condition': 'new',\n      'g:availability': edge.node.availableForSale\n        ? 'in stock'\n        : 'out of stock',\n      'g:price': `${edge.node.priceRange.minVariantPrice.amount} ${edge.node.priceRange.minVariantPrice.currencyCode}`,\n      // 'g:google_product_category': he.encode(edge.node.productType),\n    }));\n\n    const channel = [\n      { name: 'title', text: result.shop.name },\n      // { name: 'link', text: result.shop.primaryDomain.url },\n      { name: 'link', text: shopLink },\n      { name: 'description', text: result.shop.description },\n    ];\n\n    products.forEach(product => {\n      channel.push({\n        name: 'item',\n        children: product,\n      });\n    });\n\n    return `<?xml version=\"1.0\"?>\n    <rss xmlns:g=\"http://base.google.com/ns/1.0\" version=\"2.0\">\n      ${jsontoxml({ channel })}\n    </rss>`;\n  }\n}\n\nmodule.exports = Shopify;\n","module.exports = require(\"he\");","module.exports = require(\"handlebars\");","module.exports = require(\"jsontoxml\");","const _ = require('lodash');\nconst Stripe = require('stripe');\nconst Promise = require('bluebird');\nconst Hashids = require('hashids');\n\nconst ClientConfig = require('./client-config');\nconst Email = require('./email');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass StripeClass {\n  constructor(config) {\n    this.config = config;\n\n    this.stripe = Stripe(this.config.stripe.apiKey);\n    this.email = new Email(this.config);\n\n    this.hashids = new Hashids(\n      this.config.slug,\n      6,\n      '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    );\n  }\n\n  async getSettings() {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    let settings;\n\n    try {\n      settings = clientConfig.module.ecommerce;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    try {\n      settings.clientStripeAccountId =\n        clientConfig.provider.stripe.stripe_user_id;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    settings.client = clientConfig.client;\n    settings.assets = clientConfig.assets;\n\n    return settings;\n  }\n\n  checkout(token, order) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then(settings => {\n          const listId = _.get(settings, 'createsend.checkoutSubscriberListId');\n\n          if (order.subscribe && listId) {\n            this.email\n              .subscribe(order.customerDetails, 'createsend', listId)\n              .then(\n                result => {\n                  console.log(result);\n                },\n                error => {\n                  console.error(error);\n                }\n              );\n          }\n\n          // lookup customer by email, create if not found\n          this.findOrCreateCustomer(order.customerDetails.email, order).then(\n            customer => {\n              // store order data (customer, items, address)\n              this.createOrder(order, customer).then(order => {\n                this.updateOrCreateStripeCustomer(\n                  settings.clientStripeAccountId,\n                  customer,\n                  token,\n                  order\n                ).then(stripeCustomer => {\n                  // update customer, append order to customer, update metadata\n                  this.updateCustomer(customer, stripeCustomer, order).then(\n                    customer => {\n                      // create charge, take fee\n                      this.createCharge(\n                        settings,\n                        stripeCustomer,\n                        customer,\n                        order\n                      ).then(updatedOrder => {\n                        this.sendReceipt(settings, customer, order).then(\n                          orderReceipt => {\n                            updatedOrder.messages.orderReceipt = orderReceipt;\n\n                            this.sendNotification(\n                              settings,\n                              customer,\n                              order\n                            ).then(orderNotification => {\n                              updatedOrder.messages.orderNotification = orderNotification;\n\n                              // update order charge status, charge id\n                              this.updateOrder(updatedOrder).then(\n                                finalOrder => {\n                                  resolve(finalOrder);\n                                },\n                                reject\n                              );\n                            }, reject);\n                          },\n                          reject\n                        );\n                      }, reject);\n                    },\n                    reject\n                  );\n                }, reject);\n              }, reject);\n            },\n            reject\n          );\n        }, reject)\n        .catch(reject);\n    });\n  }\n\n  retrieveAccount() {\n    return new Promise((resolve, reject) => {\n      this.getSettings().then(settings => {\n        this.stripe.accounts\n          .retrieve(settings.clientStripeAccountId)\n          .then(resolve, reject);\n      }, reject);\n    });\n  }\n\n  refund(order, amount) {\n    return new Promise((resolve, reject) => {\n      this.getSettings().then(settings => {\n        this.stripe.refunds\n          .create(\n            {\n              refund_application_fee: true,\n              charge: order.charge.id,\n              amount,\n            },\n            {\n              stripe_account: settings.clientStripeAccountId,\n            }\n          )\n          .then(() => {\n            this.stripe.charges\n              .retrieve(order.charge.id, {\n                stripe_account: settings.clientStripeAccountId,\n              })\n              .then(charge => {\n                order.charge.status = charge.status;\n                order.charge.amount = charge.amount;\n                order.charge.amountRefunded = charge.amount_refunded;\n\n                Helpers.createOrUpdate(this.config, order).then(\n                  resolve,\n                  reject\n                );\n              }, reject);\n          }, reject);\n      }, reject);\n    });\n  }\n\n  findOrCreateCustomer(email, order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config)\n        .view('ecommerce', 'customerByEmail', {\n          keys: [email],\n          include_docs: true,\n        })\n        .then(body => {\n          if (body.rows.length) {\n            resolve(body.rows[0].doc);\n          } else {\n            const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n            const newCustomer = {\n              type: 'customer',\n              createdAt: now,\n              modifiedAt: now,\n              email: order.customerDetails.email,\n              name: order.customerDetails.name,\n              phone: order.customerDetails.phone,\n              billingAddress: order.billingAddress,\n              shippingAddress: order.shippingAddress,\n              orders: [],\n            };\n\n            Db.connect(this.config)\n              .insert(newCustomer)\n              .then(body => {\n                newCustomer._id = body.id;\n                newCustomer._rev = body.rev;\n\n                resolve(newCustomer);\n              }, reject);\n          }\n        }, reject);\n    });\n  }\n\n  updateOrCreateStripeCustomer(clientStripeAccountId, customer, token, order) {\n    return new Promise((resolve, reject) => {\n      const stripeCustomer = {\n        source: token,\n        email: order.customer.email,\n        description: order.customer.name,\n        metadata: {\n          customer_id: customer._id,\n          // billingAddress: JSON.stringify(order.billingAddress),\n          // shippingAddress: JSON.stringify(order.shippingAddress)\n        },\n      };\n\n      if (customer.stripe && customer.stripe.customer.id) {\n        this.stripe.customers\n          .update(customer.stripe.customer.id, stripeCustomer, {\n            stripe_account: clientStripeAccountId,\n          })\n          .then(resolve, error => {\n            if (\n              error.type === 'StripeInvalidRequestError' &&\n              error.param === 'id'\n            ) {\n              this.stripe.customers\n                .create(stripeCustomer, {\n                  stripe_account: clientStripeAccountId,\n                })\n                .then(resolve, reject);\n            } else {\n              reject(error);\n            }\n          });\n      } else {\n        this.stripe.customers\n          .create(stripeCustomer, {\n            stripe_account: clientStripeAccountId,\n          })\n          .then(resolve, reject);\n      }\n    });\n  }\n\n  createOrder(order, customer) {\n    return new Promise((resolve, reject) => {\n      const items = order.items.map(item => ({\n        id: item.id,\n        title: item.title\n          .replace(/<br\\s?>/gi, ' ')\n          .replace(/<\\/?p>|<\\/?span>/gi, ''),\n        price: item.price,\n        quantity: item.quantity,\n        metadata: item.metadata || {},\n      }));\n\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      const newOrder = {\n        type: 'order',\n        orderId: this.hashids.encode(new Date().getTime()),\n        createdAt: now,\n        modifiedAt: now,\n        customer: {\n          id: customer._id,\n          email: customer.email,\n          name: customer.name,\n        },\n        items,\n        shippingMethod: {\n          name: order.shippingMethod.name,\n          amount: Number(order.shippingMethod.amount),\n        },\n        subtotal: Number(order.subtotal),\n        tax: {\n          rate: order.tax.rate || 0,\n          includedInPrice: order.tax.includedInPrice || false,\n          total: order.tax.total || 0,\n          show: order.tax.show || false,\n        },\n        discount: {\n          code: order.discount.code || '',\n          name: order.discount.name || '',\n          total: order.discount.total || 0,\n        },\n        total: Number(order.total),\n        billingAddress: order.billingAddress,\n        shippingAddress: order.shippingAddress,\n        messages: {},\n        status: 'pending',\n        test: true,\n      };\n\n      Db.connect(this.config)\n        .insert(newOrder)\n        .then(body => {\n          newOrder._id = body.id;\n          newOrder._rev = body.rev;\n\n          resolve(newOrder);\n        }, reject);\n    });\n  }\n\n  updateOrder(order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config)\n        .insert(order)\n        .then(body => {\n          order._rev = body.rev;\n\n          resolve(order);\n        }, reject);\n    });\n  }\n\n  updateCustomer(customer, stripeCustomer, order) {\n    return new Promise((resolve, reject) => {\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      customer.modifiedAt = now;\n\n      if (!customer.orders) {\n        customer.orders = [];\n      }\n\n      customer.orders.push(order._id);\n\n      if (!customer.stripe) {\n        customer.stripe = {\n          customer: {\n            id: null,\n          },\n        };\n      }\n\n      customer.stripe.customer.id = stripeCustomer.id;\n\n      Db.connect(this.config)\n        .insert(customer)\n        .then(body => {\n          customer._rev = body.rev;\n\n          resolve(customer);\n        }, reject);\n    });\n  }\n\n  createCharge(settings, stripeCustomer, customer, order) {\n    return new Promise((resolve, reject) => {\n      const amount = Number(order.total) * 100;\n\n      const charge = {\n        amount,\n        currency: settings.currency.iso.toLowerCase(),\n        customer: stripeCustomer.id,\n        capture: true,\n        description: order.orderId,\n        // shipping: order.shippingAddress, // fraud prevention, must follow expected schema\n        metadata: {\n          customer_id: customer._id,\n          order_id: order._id,\n        },\n        statement_descriptor: _.kebabCase(settings.storeName).toUpperCase(),\n        application_fee: Math.ceil(amount * 0.02),\n      };\n\n      this.stripe.charges\n        .create(charge, {\n          stripe_account: settings.clientStripeAccountId,\n        })\n        .then(charge => {\n          order.charge = {\n            paymentGateway: 'stripe',\n            id: charge.id,\n            status: charge.status,\n            currency: charge.currency.toUpperCase(),\n            amount: charge.amount,\n            amountRefunded: charge.amount_refunded,\n          };\n\n          order.test = !charge.livemode;\n\n          resolve(order);\n        }, reject);\n    });\n  }\n\n  sendReceipt(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: customer.email,\n        subject: `Your order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email\n        .sendEmail(emailOptions, `${assetSlug}/order-receipt`, templateData)\n        .then(resolve, reject);\n    });\n  }\n\n  sendNotification(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: settings.emailSenderAddress,\n        subject: `New order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email\n        .sendEmail(\n          emailOptions,\n          `${assetSlug}/order-notification`,\n          templateData\n        )\n        .then(resolve, reject);\n    });\n  }\n}\n\nmodule.exports = StripeClass;\n","module.exports = require(\"stripe\");","module.exports = require(\"hashids\");","const _ = require('lodash');\nconst Db = require('./db');\nconst ClientConfig = require('./client-config');\n\nclass Taxonomy {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async create(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.taxonomies.push(taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const taxonomy = _.find(clientConfig.taxonomies, { slug: taxonomySlug });\n\n    if (!taxonomy) {\n      throw Error(`Taxonomy not found: ${taxonomySlug}`);\n    }\n\n    return taxonomy;\n  }\n\n  async update(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.taxonomies, { slug: taxonomy.slug });\n\n    if (index === -1) {\n      throw Error(`Taxonomy not found: ${taxonomy.slug}`);\n    }\n\n    clientConfig.taxonomies.splice(index, 1, taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    taxonomySlug = _.isArray(taxonomySlug) ? taxonomySlug : [taxonomySlug];\n\n    clientConfig.taxonomies = clientConfig.taxonomies.filter(\n      taxonomy => taxonomySlug.indexOf(taxonomy.slug) === -1\n    );\n\n    return cc.set(clientConfig);\n  }\n\n  async entitiesByTerm(term) {\n    const db = Db.connect(this.config);\n\n    const entityGroups = (\n      await db.view('entity', 'byTaxonomyTerm', {\n        keys: [term.id],\n        group: true,\n      })\n    ).rows.map(row => row.value)[0];\n\n    if (!entityGroups) {\n      return [];\n    }\n\n    let entityIds = [];\n\n    _.forEach(entityGroups, entities => {\n      entityIds = entityIds.concat(entities);\n    });\n\n    entityIds = _.uniq(entityIds);\n\n    const entities = (\n      await db.fetch({ keys: entityIds, include_docs: true })\n    ).rows\n      .filter(row => row.doc)\n      .map(row => row.doc);\n\n    return entities;\n  }\n\n  async createTerm(taxonomySlug, term) {\n    const taxonomy = await this.read(taxonomySlug);\n\n    taxonomy.terms.push(term);\n\n    return this.update(taxonomy);\n  }\n\n  async updateTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map(entity => {\n      entity.fields = _.mapValues(entity.fields, field => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.map(_term => {\n            if (_term.id === term.id) {\n              _term.title = term.title;\n              _term.slug = term.slug;\n            }\n\n            if (!_term.parents) {\n              _term.parents = [];\n            }\n\n            _term.parents = _term.parents.map(parent => {\n              if (parent.id === term.id) {\n                parent.title = term.title;\n                parent.slug = term.slug;\n              }\n              return parent;\n            });\n\n            return _term;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n\n  async deleteTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map(entity => {\n      entity.fields = _.mapValues(entity.fields, field => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.filter(_term => {\n            if (_term.id === term.id) {\n              return false;\n            }\n\n            if (\n              (_term.parents || []).filter(parent => parent.id === term.id)\n                .length\n            ) {\n              return false;\n            }\n\n            return true;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n}\n\nmodule.exports = Taxonomy;\n","const Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst Cloudant = require('@cloudant/cloudant');\nconst Db = require('./db');\n\nclass Tools {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getDb() {\n    const result = await Db.connect(this.config).fetch({\n      include_docs: true,\n    });\n\n    return result;\n  }\n\n  async getChanges() {\n    const result = await Db.connect(this.config).changes({\n      limit: 50,\n      include_docs: true,\n      filter: 'tools/changesEntity',\n    });\n\n    return result;\n  }\n\n  async importDb(dbBackupFile) {\n    const dbName = this.config.db.name;\n\n    const fileConents = await fs.readFileAsync(dbBackupFile.path);\n\n    const docs = JSON.parse(fileConents).rows.map(row => {\n      const { doc } = row;\n      delete doc._rev;\n      return doc;\n    });\n\n    await fs.unlinkAsync(dbBackupFile.path);\n\n    const cloudant = new Cloudant({\n      url: this.config.db.url,\n      plugins: ['promises', 'retry'],\n    }).db;\n\n    try {\n      await cloudant.destroy(dbName);\n    } catch (error) {\n      //\n    }\n\n    await cloudant.create(dbName);\n\n    const result = await Db.connect(this.config, dbName).bulk({ docs });\n\n    return result;\n  }\n}\n\nmodule.exports = Tools;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass User {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    user.id = user.id.toLowerCase();\n    user.email = user.email.toLowerCase();\n\n    clientConfig.users.push(user);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async update(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.users, { id: user.id });\n\n    if (index === -1) {\n      throw Error(`User not found: ${user.id}`);\n    }\n\n    user.email = user.email.toLowerCase();\n\n    clientConfig.users.splice(index, 1, user);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    userId = _.isArray(userId) ? userId : [userId];\n\n    clientConfig.users = clientConfig.users.filter(\n      user => userId.indexOf(user.id) === -1\n    );\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = User;\n","module.exports = ({\n  Analytics,\n  router,\n  authMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  router.get(\n    '/analytics.:ext?',\n    authMiddleware,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const analytics = Analytics(await getConfig());\n\n      try {\n        handleResponse(req, res, await analytics.get(req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const pick = require('lodash/pick');\n\nmodule.exports = ({\n  Auth,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  router.get(\n    '/auth/user.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.query.slug));\n\n      const user = pick(await auth.authUser(req.query.slug, req.query.userId), [\n        'active',\n        'role',\n      ]);\n\n      try {\n        handleResponse(req, res, user);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/auth/provider/:provider/config',\n    authMiddleware,\n    permissionMiddleware.bind(null, ['settings', 'userSettings']),\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      if (!config.provider[req.params.provider]) {\n        res.status(404);\n        res.send({});\n        return;\n      }\n\n      res.status(200);\n      res.send({ clientId: config.provider[req.params.provider].clientId });\n    })\n  );\n\n  router.get(\n    '/auth/provider/:provider',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    (req, res) => {\n      res.status(req.query.error ? 500 : 200);\n      res.send(\n        `${req.params.provider}: ${\n          req.query.error_description\n            ? req.query.error_description\n            : 'successfully authenticated'\n        }`\n      );\n    }\n  );\n\n  router.post(\n    '/auth/provider/:provider',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await auth.authProvider(req.params.provider, req.body)\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/auth/provider/:provider/refresh',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await auth.authProvider(req.params.provider, req.body, null, true)\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/auth/provider/:provider/:userId',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'userSettings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await auth.authProvider(\n            req.params.provider,\n            req.body,\n            req.params.userId\n          )\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/auth/provider/:provider/:userId/refresh',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await auth.authProvider(\n            req.params.provider,\n            req.body,\n            req.params.userId,\n            true\n          )\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  router,\n  cache,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n}) => {\n  /**\n   * @swagger\n   * /cache/clear:\n   *  get:\n   *    tags:\n   *      - cache\n   *    summary: Clear cache\n   *    description: Clears the LRU cache of API responses\n   *    produces:\n   *      - text/plain\n   *    responses:\n   *      200:\n   *        description: Result\n   */\n  router.get(\n    '/cache/clear.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      if (!config.cache.enabled) {\n        handleResponse(req, res, 'Cache disabled');\n        return;\n      }\n\n      const pattern = cache.store.name === 'redis' ? '*' : undefined;\n\n      cache.keys(pattern).then(keys => {\n        const items = keys.filter(key => key.indexOf(req.session.slug) === 0);\n\n        items.forEach(key => cache.del(key));\n\n        handleResponse(req, res, `${items.length} items removed from cache`);\n      });\n    })\n  );\n};\n","const pick = require('lodash/pick');\n\nmodule.exports = ({\n  ClientConfig,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  router.get(\n    '/config/info.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(\n        await getConfig(req.query.slug || req.session.slug)\n      );\n\n      const clientInfo = pick(await clientConfig.get(), ['client.name']);\n\n      if (Object.keys(clientInfo).length === 0) {\n        handleError(req, res, new Error('Account ID not found'));\n        return;\n      }\n\n      try {\n        handleResponse(req, res, clientInfo);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/config.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.get());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/config.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'config'),\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.set(req.body.config));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({ router }) => {\n  router.all('/debug/useragent.:ext?', (req, res) => {\n    const expressUseragent = require('express-useragent');\n    const useragent = expressUseragent.parse(req.headers['user-agent']);\n\n    res.status(200);\n    res.send(`\n      <html>\n        <head>\n          <title>${useragent.source}</title>\n          <meta name=\"description\" content=\"${useragent.source}\">\n        </head>\n        <body>${useragent.source}</body>\n      </html>\n    `);\n  });\n};\n","module.exports = require(\"express-useragent\");","const isArray = require('lodash/isArray');\n\nmodule.exports = ({\n  Ecommerce,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  router.get(\n    '/ecommerce/order/message/:message.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        const order = await ecommerce.getOrder(req.query.orderId);\n        handleResponse(req, res, order.messages[req.params.message].email.html);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (isArray(req.query.sort)) {\n        req.query.sort = JSON.stringify(req.query.sort).replace(/\\\\\"/g, '');\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await ecommerce.getType(req.params.type, req.query)\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (!/^(discount|order)$/.test(req.params.type)) {\n        handleError(req, res, `Illegal type: ${req.params.type}`);\n        return;\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await ecommerce.setType(req.params.type, req.body.item)\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (!/^(discount)$/.test(req.params.type)) {\n        handleError(req, res, `Illegal type: ${req.params.type}`);\n        return;\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.deleteType(req.body.item));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/ecommerce/discount/:code.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await ecommerce.verifyDiscount(req.params.code)\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Email,\n  Entity,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  /**\n   * @swagger\n   * /email/preview:\n   *  get:\n   *    tags:\n   *      - email\n   *    summary: Preview email template\n   * #   description: Preview email template\n   *    produces:\n   *      - text/html\n   *    parameters:\n   *      - name: slug\n   *        description: Slug (optionally override slug in development mode)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: templateSlug\n   *        description: Template slug (folder name of the template)\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: payload\n   *        description: JSON payload from which to render the template\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: entityId\n   *        description: Entity `_id` from which to render the template\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: inlineStyles\n   *        description: Inline CSS\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: true\n   *    responses:\n   *      200:\n   *        description: Template\n   */\n  router.all(\n    '/email/preview.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query || {};\n\n      const templateOptions = {\n        data: input.data ? JSON.parse(input.data) : false,\n        inlineStyles: input.inlineStyles\n          ? JSON.parse(input.inlineStyles)\n          : true,\n        inky: input.inky ? JSON.parse(input.inky) : false,\n        mjml: input.mjml ? JSON.parse(input.mjml) : false,\n        skipValidation: input.skipValidation\n          ? JSON.parse(input.skipValidation)\n          : false,\n      };\n\n      const slug = input.slug || req.session.slug;\n\n      // if (!slug) {\n      //   throw new Error('Missing `slug` parameter');\n      // }\n\n      async function renderTemplate(data = {}) {\n        if (templateOptions.data) {\n          handleResponse(req, res, data);\n          return;\n        }\n\n        const email = Email(await getConfig(slug));\n\n        try {\n          const template = await email.getTemplate(\n            input.templateSlug,\n            data,\n            templateOptions\n          );\n\n          handleResponse(req, res, template.html);\n        } catch (error) {\n          handleError(req, res, error);\n        }\n      }\n\n      if (input.payload) {\n        renderTemplate(JSON.parse(input.payload));\n        return;\n      }\n\n      if (input.entityId) {\n        const entity = Entity(await getConfig(slug));\n\n        const entities = (\n          await entity.entityList([input.entityId], { children: 2 })\n        ).map(row => row.doc);\n\n        renderTemplate(entity.flattenValues(entities)[0]);\n        return;\n      }\n\n      renderTemplate();\n    })\n  );\n\n  router.all(\n    '/email/send.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query || {};\n\n      const templateOptions = {\n        inlineStyles: input.inlineStyles\n          ? JSON.parse(input.inlineStyles)\n          : true,\n        inky: input.inky ? JSON.parse(input.inky) : false,\n        mjml: input.mjml ? JSON.parse(input.mjml) : false,\n        skipValidation: input.skipValidation\n          ? JSON.parse(input.skipValidation)\n          : true,\n      };\n\n      const emailOptions = {\n        fromName: input.fromName || '',\n        fromEmail: input.fromEmail,\n        toName: input.toName || '',\n        toEmail: input.toEmail,\n        from: `${input.fromName || ''} <${input.fromEmail}>`,\n        to: input.toEmail,\n        subject: input.subject,\n      };\n\n      const slug = input.slug || req.session.slug;\n\n      const email = Email(await getConfig(slug));\n\n      try {\n        const result = await email.sendEmail(\n          emailOptions,\n          input.templateSlug,\n          input.payload,\n          templateOptions\n        );\n\n        handleResponse(req, res, result);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/email/subscribe.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const email = Email(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await email.subscribe({\n            email: req.body.email || req.query.email,\n            name: req.body.name || req.query.name || '',\n          })\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Embedly,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  router.get(\n    '/embedly/oembed.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const embedly = Embedly(await getConfig());\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await embedly.oembed(req.query.url || req.query.urls)\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const isArray = require('lodash/isArray');\n\nmodule.exports = ({\n  Db,\n  Entity,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  /**\n   * @swagger\n   * definitions:\n   *  Entity:\n   *    type: object\n   *    required:\n   *      - _id\n   *      - _rev\n   *    properties:\n   *      _id:\n   *        type: string\n   *      _rev:\n   *        type: string\n   *      schema:\n   *        type: string\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      thumbnail:\n   *        type: object\n   *      fields:\n   *        type: object\n   *      published:\n   *        type: boolean\n   *      publishedAt:\n   *        type: string\n   */\n\n  /**\n   * @swagger\n   * /entities/index:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Show indexes\n   *    description: Show all indexes, use this to find fields available for search/query.\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Indexes\n   */\n  router.get(\n    '/entities/index.:ext?',\n    asyncMiddleware(async (req, res) => {\n      try {\n        handleResponse(\n          req,\n          res,\n          await Db(await getConfig(req.session.slug)).indexAsync()\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/search:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Search entities\n   *    description: This endpoint extends Cloudant's Lucene based search. Learn more from Cloudant's [documentation](https://docs.cloudant.com/search.html).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: Lucene search query\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: include_docs\n   *        description: Include docs in search results (ignored if `children` or `parents` is `true`)\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: sort\n   *        description: Field to sort results by. Prefixed with `-` to reverse order. Suffixed with &#60;`string|number`&#62;\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: limit\n   *        description: Limit results (max 200)\n   *        in: query\n   *        required: false\n   *        type: number\n   *      - name: bookmark\n   *        description: Bookmark for the next page of results\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: group_field\n   *        description: Field to group results by\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: index\n   *        description: Search index\n   *        in: query\n   *        required: false\n   *        type: string\n   *        default: all\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: trashed\n   *        description: Get trashed entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Search result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            total_rows:\n   *              type: number\n   *            rows:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/search?.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      // eslint-disable-next-line\n      const include_docs =\n        input.include_docs !== undefined\n          ? JSON.parse(input.include_docs)\n          : false;\n\n      // eslint-disable-next-line\n      const include_fields =\n        input.include_fields !== undefined\n          ? typeof input.include_fields === 'object'\n            ? input.include_fields\n            : JSON.parse(input.include_fields)\n          : [];\n\n      const select = input.select !== undefined ? input.select : false;\n\n      let children =\n        input.children !== undefined\n          ? typeof input.children === 'object'\n            ? input.children\n            : JSON.parse(input.children)\n          : false;\n      let parents =\n        input.parents !== undefined\n          ? typeof input.parents === 'object'\n            ? input.parents\n            : JSON.parse(input.parents)\n          : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      const trashed =\n        input.trashed !== undefined ? JSON.parse(input.trashed) : false;\n\n      const sort = input.sort !== undefined ? input.sort : null;\n      const limit =\n        input.limit !== undefined ? parseInt(input.limit, 10) : null;\n\n      const bookmark = input.bookmark !== undefined ? input.bookmark : null;\n\n      // eslint-disable-next-line\n      const group_field =\n        input.group_field !== undefined ? input.group_field : null;\n\n      const index = input.index !== undefined ? input.index : null;\n\n      const q = input.query || input.q;\n\n      let query = [];\n\n      query.push(trashed ? 'trashed:true' : '!trashed:true');\n\n      if (req.session.role === 'guest') {\n        query.push('published:true');\n      }\n\n      if (q) {\n        query.push(`(${q})`);\n      }\n\n      query = query.join(' AND ');\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await entity.entitySearch(\n            {\n              query,\n              include_docs,\n              include_fields,\n              sort,\n              limit,\n              bookmark,\n              group_field,\n              index,\n            },\n            {\n              select,\n              children,\n              parents,\n              role: req.session.role,\n            }\n          ),\n          true\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/find:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Query entities\n   *    description: This endpoint extends CouchDB's Mango query. Learn more from Cloudant's [documentation](https://docs.cloudant.com/cloudant_query.html#finding-documents-using-an-index).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: JSON query object, refer to CouchDB/Cloudant docs.\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Query result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            docs:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/find.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      let children =\n        input.children !== undefined\n          ? typeof input.children === 'object'\n            ? input.children\n            : JSON.parse(input.children)\n          : false;\n      let parents =\n        input.parents !== undefined\n          ? typeof input.parents === 'object'\n            ? input.parents\n            : JSON.parse(input.parents)\n          : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      const trashed =\n        input.trashed !== undefined ? JSON.parse(input.trashed) : false;\n\n      const query = input.query ? JSON.parse(input.query) : { selector: {} };\n\n      query.use_index = ['entityIndex', 'entity'];\n\n      if (!query.selector.$and) {\n        query.selector = {\n          $and: [query.selector],\n        };\n      }\n\n      if (trashed) {\n        query.selector.$and.push({ trashed: true });\n      } else {\n        query.selector.$and.push({\n          $or: [\n            {\n              trashed: {\n                $exists: false,\n              },\n            },\n            {\n              trashed: false,\n            },\n          ],\n        });\n      }\n\n      if (req.session.role === 'guest') {\n        query.selector.$and.push({ published: true });\n      }\n\n      if (req.query.limit) {\n        query.limit = parseInt(req.query.limit, 10);\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await entity.entityFind(query, {\n            children,\n            parents,\n            role: req.session.role,\n          }),\n          true\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entities/field.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await entity.fieldValues(\n            req.query.slug || req.query.fieldSlug,\n            req.query.searchTerm\n          ),\n          true\n        );\n      } catch (error) {\n        handleError(res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Get all entities\n   *    description: Get all entities, optionally from an array of IDs\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: id\n   *        description: Entity ID\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: ids\n   *        description: Entity IDs\n   *        in: query\n   *        required: false\n   *        type: array\n   *        items:\n   *          type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Entities\n   *        schema:\n   *          type: array\n   *          items:\n   *            $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      const select = input.select !== undefined ? input.select : false;\n\n      let children =\n        input.children !== undefined\n          ? typeof input.children === 'object'\n            ? input.children\n            : JSON.parse(input.children)\n          : false;\n      let parents =\n        input.parents !== undefined\n          ? typeof input.parents === 'object'\n            ? input.parents\n            : JSON.parse(input.parents)\n          : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      let ids = input.ids || input.id;\n\n      if (ids) {\n        ids = isArray(ids) ? ids : [ids];\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await entity.entityList(ids, {\n            select,\n            children,\n            parents,\n            role: req.session.role,\n          }),\n          true\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity/revisions.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRevisions(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityCreate'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityCreate(req.body.entity));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRead(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await entity.entityUpdate(\n            req.body.entity || req.body.entities,\n            req.body.restore || false\n          )\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await entity.entityDelete(\n            req.body.entity || req.body.entities,\n            req.body.forever || false\n          )\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity/trashed.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityDelete('trashed'));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  ClientConfig,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  /**\n   * @swagger\n   * /metadata:\n   *  get:\n   *    tags:\n   *      - metadata\n   *    summary: Get metadata\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Metadata\n   *        schema:\n   *          type: object\n   *          properties:\n   *            description:\n   *              type: string\n   */\n  router.get(\n    '/metadata.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const cc = ClientConfig(await getConfig(req.session.slug));\n\n      const clientConfig = await cc.get();\n\n      try {\n        handleResponse(req, res, clientConfig.client.metadata, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const _ = require('lodash');\n\nmodule.exports = ({\n  Pdf,\n  ClientConfig,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleError,\n}) => {\n  router.get(\n    '/pdf/view.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf\n        .getPayload(req.query.template, req.query.id, req.session.role)\n        .then(payload => {\n          pdf.getPdf(payload).then(pdf => {\n            res.type('application/pdf');\n            res.status(200);\n            res.send(pdf);\n          }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/download.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf\n        .getPayload(req.query.template, req.query.id, req.session.role)\n        .then(payload => {\n          pdf.getPdf(payload).then(pdf => {\n            res.attachment(payload.fileName || 'download.pdf');\n            res.status(200);\n            res.send(pdf);\n          }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/payload.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf\n        .getPayload(req.query.template, req.query.id, req.session.role)\n        .then(payload => {\n          res.status(200);\n          res.json(payload);\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/submit.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig(req.session.slug);\n\n      const cc = ClientConfig(config);\n      const clientConfig = await cc.get();\n\n      const assetSlug = _.get(clientConfig, 'assets.slug', req.session.slug);\n\n      const pdf = Pdf(config);\n\n      pdf\n        .getPayload(req.query.template, req.query.id, req.session.role)\n        .then(payload => {\n          payload = JSON.stringify(payload).replace(/'/gi, '’');\n\n          res.status(200);\n          res.send(`\n          <body onload='form.submit()'>\n            <form id='form' method='POST' action='${config.assist.url}/${assetSlug}/pdf/download' target='_self'>\n              <input type='hidden' name='payload' value='${payload}' />\n            </form>\n          </body>\n        `);\n        }, handleError.bind(null, req, res));\n    })\n  );\n};\n","const _ = require('lodash');\nconst axios = require('axios');\n\nmodule.exports = ({\n  Auth,\n  ClientConfig,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  const providerApiBaseUrl = {\n    google: 'https://www.googleapis.com',\n    instagram: 'https://api.instagram.com',\n    spotify: 'https://api.spotify.com',\n    vimeo: 'https://api.vimeo.com',\n  };\n\n  const providerApiHandler = asyncMiddleware(async (req, res) => {\n    const method = req.method;\n    const provider = req.params[0];\n    const userId = req.params[2] ? req.params[1] : null;\n    const endpoint = (req.params[2] || req.params[1])\n      .split('/')\n      .filter(param => param !== '')\n      .join('/');\n\n    const config = await getConfig(req.session.slug);\n\n    const cc = ClientConfig(config);\n\n    let clientConfig = await cc.get();\n    let providerConfig;\n\n    if (userId) {\n      if (!clientConfig.userSettings[userId]) {\n        throw Error(`User settings not found: ${userId}`);\n      }\n      providerConfig = clientConfig.userSettings[userId].provider[provider];\n    } else {\n      providerConfig = clientConfig.provider[provider];\n    }\n\n    if (\n      Math.floor(new Date().getTime() / 1000) - (providerConfig.begins || 0) >\n      providerConfig.expires_in\n    ) {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      if (userId) {\n        clientConfig = await auth.authProvider(provider, {}, userId, true);\n        providerConfig = clientConfig.userSettings[userId].provider[provider];\n      } else {\n        clientConfig = await auth.authProvider(provider, {}, null, true);\n        providerConfig = clientConfig.provider[provider];\n      }\n    }\n\n    let params = _.merge({}, req.query);\n    params = _.omitBy(params, (value, key) => /^(__)/.test(key));\n\n    if (!/bearer/i.test(providerConfig.token_type)) {\n      params.access_token = providerConfig.access_token;\n    }\n\n    try {\n      const result = await axios.request({\n        url: endpoint,\n        baseURL: providerApiBaseUrl[provider],\n        method,\n        headers: {\n          Authorization: `Bearer ${providerConfig.access_token}`,\n        },\n        params,\n      });\n\n      handleResponse(req, res, result.data, true);\n    } catch (error) {\n      handleError(req, res, error);\n    }\n  });\n\n  router.all(\n    /\\/provider\\/([^/]+)\\/([^/]+)\\/api\\/?(.+)?/,\n    cacheMiddleware,\n    providerApiHandler\n  );\n\n  router.all(\n    /\\/provider\\/([^/]+)\\/api\\/?(.+)?/,\n    cacheMiddleware,\n    providerApiHandler\n  );\n};\n","module.exports = ({\n  Schema,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  router.post(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.create(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.read(req.query.schemaId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.update(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await schema.delete(\n            req.body.schemaSlug ||\n              req.body.schemaSlugs ||\n              req.query.schemaSlug ||\n              req.query.schemaSlugs\n          )\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schemas.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.updateAll(req.body.schemas));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Settings,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  router.post(\n    '/settings.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const settings = Settings(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await settings.update(req.body.settings));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Shippo,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  router.all(\n    '/shippo/quote.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const shippo = Shippo(await getConfig());\n\n      const address = req.body.address || JSON.parse(req.params.address);\n      const parcel = req.body.parcel || JSON.parse(req.params.parcel);\n\n      try {\n        handleResponse(req, res, await shippo.getQuote(address, parcel), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Shopify,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  /**\n   * @swagger\n   * /shopify/catalog:\n   *  get:\n   *    tags:\n   *      - shopify\n   *    summary: Get Facebook product feed xml\n   * #   description: Get Facebook product feed xml\n   *    produces:\n   *      - application/rss+xml\n   *    parameters:\n   *      - name: shopLink\n   *        description: Shop URL\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: productLinkTemplate\n   *        description: Product URL Handlebars template, containing {{handle}}\n   *        in: query\n   *        required: true\n   *        type: string\n   *    responses:\n   *      200:\n   *        description: XML Product Feed\n   */\n  router.get(\n    '/shopify/catalog.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const shopify = Shopify(await getConfig(req.session.slug));\n\n      try {\n        res.setHeader('Content-Type', 'application/rss+xml');\n        handleResponse(req, res, await shopify.getCatalog(req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  ClientConfig,\n  Instagram,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  const instagramAccessTokenMap = {};\n\n  router.get(\n    /\\/social\\/twitter\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      const Promise = require('bluebird');\n      const Twitter = require('twitter');\n\n      const twitter = Promise.promisifyAll(\n        new Twitter({\n          consumer_key: config.provider.twitter.consumerKey,\n          consumer_secret: config.provider.twitter.consumerSecret,\n          access_token_key: config.provider.twitter.accessTokenKey,\n          access_token_secret: config.provider.twitter.accessTokenSecret,\n        })\n      );\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await twitter[`${method}Async`](params.join('/'), req.query),\n          true\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    /\\/social\\/instagram\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      let accessToken = instagramAccessTokenMap[req.session.slug];\n\n      if (!accessToken) {\n        const cc = ClientConfig(config);\n\n        try {\n          const clientConfig = await cc.get();\n          accessToken = clientConfig.provider.instagram.access_token;\n        } catch (error) {\n          handleError(res, new Error('Instagram: access_token required'));\n          return;\n        }\n      }\n\n      // eslint-disable-next-line\n      instagramAccessTokenMap[req.session.slug] = accessToken;\n\n      const instagram = Instagram({\n        client_id: config.provider.instagram.clientId,\n      });\n\n      try {\n        const result = await instagram[method](params.join('/'), {\n          ...req.query,\n          access_token: accessToken,\n        });\n        try {\n          delete result.pagination.next_url;\n        } catch (error) {\n          //\n        }\n        handleResponse(req, res, result, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = require(\"twitter\");","module.exports = ({\n  Ecommerce,\n  Email,\n  Stripe,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  router.all(\n    '/stripe/checkout.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const token = req.body.token || JSON.parse(req.query.token);\n      const order = req.body.order || JSON.parse(req.query.order);\n\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.checkout(token, order));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/stripe/refund.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const order = req.body.order || JSON.parse(req.query.order);\n      const amount = Number(req.body.amount || req.query.amount || 0) * 100;\n\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.refund(order, amount));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/stripe/account.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.retrieveAccount());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/stripe/email.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig(req.session.slug);\n      const email = Email(config);\n      const stripe = Stripe(config);\n      const ecommerce = Ecommerce(config);\n\n      const settings = await stripe.getSettings();\n      const order = await ecommerce.getOrder(req.query.orderId);\n\n      const data = {\n        settings,\n        order,\n      };\n\n      const template = await email.getTemplate(\n        `${req.session.slug}/${req.query.template}`,\n        data\n      );\n\n      try {\n        handleResponse(req, res, template.html);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Taxonomy,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  /**\n   * @swagger\n   * definitions:\n   *  TaxonomyTerm:\n   *    type: object\n   *    properties:\n   *      id:\n   *        type: string\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      terms:\n   *        type: array\n   *        items:\n   *          type: object\n   *          $ref: '#/definitions/TaxonomyTerm'\n   */\n\n  /**\n   * @swagger\n   * definitions:\n   *  Taxonomy:\n   *    type: object\n   *    properties:\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      terms:\n   *        type: array\n   *        items:\n   *          type: object\n   *          $ref: '#/definitions/TaxonomyTerm'\n   */\n\n  router.post(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.create(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /taxonomy:\n   *  get:\n   *    tags:\n   *      - taxonomy\n   *    summary: Get taxonomy\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Taxonomy slug\n   *        in: query\n   *        required: true\n   *        type: string\n   *    responses:\n   *      200:\n   *        description: Taxonomy\n   *        schema:\n   *          type: object\n   *          $ref: '#/definitions/Taxonomy'\n   */\n  router.get(\n    '/taxonomy.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await taxonomy.read(req.query.slug || req.query.taxonomySlug),\n          true\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.update(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await taxonomy.delete(\n            req.body.taxonomySlug ||\n              req.body.taxonomySlugs ||\n              req.query.taxonomySlug ||\n              req.query.taxonomySlugs\n          )\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await taxonomy.createTerm(\n            req.body.slug || req.body.taxonomySlug,\n            req.body.term\n          )\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await taxonomy.updateTerm(req.query.term || req.body.term)\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await taxonomy.deleteTerm(req.query.term || req.body.term)\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Jwt,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  // handleError,\n}) => {\n  /**\n   * @swagger\n   * /token:\n   *  get:\n   *    tags:\n   *      - token\n   *    summary: Get JWT\n   *    description: Get Json Web Token (JWT) for API access\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Slug for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: userId\n   *        description: User ID for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: role\n   *        description: Role for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: expiresIn\n   *        description: Duration of token in seconds\n   *        in: query\n   *        required: false\n   *        type: number\n   *    responses:\n   *      200:\n   *        description: Token\n   */\n\n  router.get(\n    '/token.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      const payload = {\n        role: req.session.role,\n        slug: req.session.slug,\n        userId: req.session.userId,\n      };\n\n      if (\n        req.session.role === 'super' ||\n        config.environment === 'development'\n      ) {\n        payload.role = req.query.role || req.session.role || config.dev.role;\n        payload.slug = req.query.slug || req.session.slug || config.dev.slug;\n        if (payload.role !== 'guest') {\n          payload.userId =\n            req.query.userId || req.session.userId || config.dev.userId;\n        }\n      }\n\n      const _ = require('lodash');\n\n      let options = _.pickBy(req.query, (value, key) =>\n        /^(expiresIn|notBefore|audience|issuer|jwtid|subject|noTimestamp|header)$/.test(\n          key\n        )\n      );\n\n      options = _.mapValues(options, value => {\n        if (!_.isNaN(+value)) {\n          // Check if value is a numeric string\n          return +value; // Convert numeric string to number\n        }\n        return value;\n      });\n\n      const jwt = Jwt(config);\n\n      const token = jwt.signToken(payload, options);\n\n      req.session.apiToken = token;\n\n      const response = {\n        token,\n        payload,\n        options,\n      };\n\n      handleResponse(req, res, response);\n    })\n  );\n};\n","module.exports = ({\n  Tools,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  router.get(\n    '/tools/export-db.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'tools'),\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        const db = await tools.getDb();\n\n        res.setHeader(\n          'Content-Disposition',\n          `attachment; filename=${req.session.slug}.json`\n        );\n        res.setHeader('Content-Type', 'application/json');\n        res.status(200);\n        res.send(db);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/tools/changes.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await tools.getChanges());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  User,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  router.post(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.create(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.read(req.query.userId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.update(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(\n          req,\n          res,\n          await user.delete(\n            req.body.userId ||\n              req.body.userIds ||\n              req.query.userId ||\n              req.query.userIds\n          )\n        );\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n"],"sourceRoot":""}