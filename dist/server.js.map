{"version":3,"sources":["webpack://AceApiServer/webpack/universalModuleDefinition","webpack://AceApiServer/webpack/bootstrap","webpack://AceApiServer/external \"babel-runtime/helpers/asyncToGenerator\"","webpack://AceApiServer/external \"babel-runtime/regenerator\"","webpack://AceApiServer/external \"lodash\"","webpack://AceApiServer/external \"babel-runtime/helpers/createClass\"","webpack://AceApiServer/external \"babel-runtime/helpers/classCallCheck\"","webpack://AceApiServer/./lib/client-config.js","webpack://AceApiServer/external \"bluebird\"","webpack://AceApiServer/./lib/db.js","webpack://AceApiServer/external \"babel-runtime/core-js/json/stringify\"","webpack://AceApiServer/./lib/helpers.js","webpack://AceApiServer/external \"babel-runtime/core-js/object/keys\"","webpack://AceApiServer/external \"lodash/isArray\"","webpack://AceApiServer/./server/config.default.js","webpack://AceApiServer/external \"babel-runtime/helpers/typeof\"","webpack://AceApiServer/external \"request-promise\"","webpack://AceApiServer/./lib/fields.js","webpack://AceApiServer/./lib/schema.js","webpack://AceApiServer/./lib/entity.js","webpack://AceApiServer/external \"fs\"","webpack://AceApiServer/./lib/email.js","webpack://AceApiServer/external \"babel-runtime/core-js/object/freeze\"","webpack://AceApiServer/./lib/roles.js","webpack://AceApiServer/external \"@cloudant/cloudant\"","webpack://AceApiServer/external \"axios\"","webpack://AceApiServer/./lib/assist.js","webpack://AceApiServer/external \"path\"","webpack://AceApiServer/external \"express\"","webpack://AceApiServer/./server/routes/user.js","webpack://AceApiServer/./server/routes/tools.js","webpack://AceApiServer/./server/routes/token.js","webpack://AceApiServer/./server/routes/taxonomy.js","webpack://AceApiServer/./server/routes/stripe.js","webpack://AceApiServer/external \"twitter\"","webpack://AceApiServer/./server/routes/social.js","webpack://AceApiServer/./server/routes/shippo.js","webpack://AceApiServer/./server/routes/settings.js","webpack://AceApiServer/./server/routes/schema.js","webpack://AceApiServer/./server/routes/pdf.js","webpack://AceApiServer/./server/routes/metadata.js","webpack://AceApiServer/./server/routes/entity.js","webpack://AceApiServer/./server/routes/embedly.js","webpack://AceApiServer/./server/routes/email.js","webpack://AceApiServer/./server/routes/ecommerce.js","webpack://AceApiServer/external \"express-useragent\"","webpack://AceApiServer/./server/routes/debug.js","webpack://AceApiServer/./server/routes/config.js","webpack://AceApiServer/./server/routes/cache.js","webpack://AceApiServer/./server/routes/auth.js","webpack://AceApiServer/./server/routes/analytics.js","webpack://AceApiServer/./lib/user.js","webpack://AceApiServer/./lib/tools.js","webpack://AceApiServer/./lib/taxonomy.js","webpack://AceApiServer/external \"hashids\"","webpack://AceApiServer/external \"stripe\"","webpack://AceApiServer/./lib/stripe.js","webpack://AceApiServer/external \"shippo\"","webpack://AceApiServer/./lib/shippo.js","webpack://AceApiServer/./lib/settings.js","webpack://AceApiServer/./lib/pdf.js","webpack://AceApiServer/external \"jsonwebtoken\"","webpack://AceApiServer/./lib/jwt.js","webpack://AceApiServer/./lib/instagram.js","webpack://AceApiServer/external \"deep-diff\"","webpack://AceApiServer/external \"json-query\"","webpack://AceApiServer/external \"embedly\"","webpack://AceApiServer/./lib/embedly.js","webpack://AceApiServer/external \"node-sass\"","webpack://AceApiServer/external \"i18n-iso-countries\"","webpack://AceApiServer/external \"moment\"","webpack://AceApiServer/external \"html-to-text\"","webpack://AceApiServer/external \"mjml-mailchimp\"","webpack://AceApiServer/external \"mjml-validator\"","webpack://AceApiServer/external \"mjml-core\"","webpack://AceApiServer/external \"mjml\"","webpack://AceApiServer/external \"inky\"","webpack://AceApiServer/external \"email-templates\"","webpack://AceApiServer/external \"nodemailer-mailgun-transport\"","webpack://AceApiServer/external \"createsend-node\"","webpack://AceApiServer/external \"nodemailer\"","webpack://AceApiServer/./lib/ecommerce.js","webpack://AceApiServer/external \"querystring\"","webpack://AceApiServer/./lib/auth.js","webpack://AceApiServer/external \"password-hash\"","webpack://AceApiServer/./config.default.js","webpack://AceApiServer/./index.js","webpack://AceApiServer/external \"xxhashjs\"","webpack://AceApiServer/external \"deep-freeze\"","webpack://AceApiServer/external \"object-sizeof\"","webpack://AceApiServer/external \"circular-json-es6\"","webpack://AceApiServer/external \"le_node\"","webpack://AceApiServer/external \"zlib\"","webpack://AceApiServer/external \"url-parse\"","webpack://AceApiServer/external \"cache-manager-redis-store\"","webpack://AceApiServer/external \"cache-manager\"","webpack://AceApiServer/./server/index.js","webpack://AceApiServer/external \"connect-redis\"","webpack://AceApiServer/external \"express-session\"","webpack://AceApiServer/external \"method-override\"","webpack://AceApiServer/external \"body-parser\"","webpack://AceApiServer/external \"cookie-parser\"","webpack://AceApiServer/external \"helmet\"","webpack://AceApiServer/external \"morgan\"","webpack://AceApiServer/external \"http\"","webpack://AceApiServer/./server/serve.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","w","s","require","_","Db","Helpers","DEFAULT_CLIENT_CONFIG","_id","client","schemas","taxonomies","users","roles","ClientConfig","config","_classCallCheck3","default","this","clientConfig","connect","merge","slug","createOrUpdate","Cloudant","dbName","url","db","maxAttempt","plugins","retry","retryDelayMultiplier","retryInitialDelayMsecs","use","Promise","assistUrl","assist","thumbnail","settings","cropSlug","cropDefault","settingsArray","split","forEach","setting","crop","crops","x","y","x2","y2","g","key","push","join","settingsString","test","thumbnailType","ext","thumbnailUrl","replace","doc","resolve","reject","insert","then","response","id","_rev","rev","error","statusCode","docs","chunkSize","arguments","length","undefined","promises","chunk","bulk","all","entities","groupSize","Infinity","grouped","group","entity","groupBefore","groupAfter","ratio","groupRatio","_stringify2","Date","array","replacementObject","map","environment","process","env","ENVIRONMENT","api","prefix","API_PREFIX","blacklistToken","API_BLACKLIST_TOKEN","blacklistReferrer","API_BLACKLIST_REFERRER","forceHttps","FORCE_HTTPS","JSON","parse","session","secret","SESSION_SECRET","ttl","parseInt","SESSION_TTL","cache","enabled","CACHE_ENABLED","CACHE_TTL","compress","CACHE_COMPRESS","memory","max","CACHE_MEMORY_MAX","redis","REDIS_URL","host","REDIS_HOST","port","REDIS_PORT","password","REDIS_PASSWORD","REDIS_DB","logentriesToken","LOGENTRIES_TOKEN","fields","type","dataType","Fields","field","_freeze2","find","Schema","schema","cc","updateEntityIndex","set","schemaSlug","Error","index","findIndex","splice","schemaSlugs","isArray","filter","indexOf","concat","uniqBy","ddoc","default_field","analyzer","selector","$and","fieldRef","result","jsonQuery","diff","Assist","Entity","flattenValues","fieldSlug","searchTerm","viewWithList","startkey","endkey","ids","parents","role","query","include_docs","keys","view","_appendParents","children","docMap","childDepth","rowOrDoc","isRow","size","flatten","_query","obj","uniq","_entitiesById","row","_docs","rows","_childDepthLimit","_getDocMap","_mergeDocs","_this","updatedEntities","mapValues","remove","chunkUpdate","_this2","entityMap","title","published","total_rows","_extendDocs","_this3","limit","Math","min","sort","isString","include_fields","bookmark","group_field","search","groups","hits","_this4","_entitySearch","__entitySearch","_this5","clone","_context6","t0","entityId","_this6","revs_info","revisionIds","_revs_info","revision","status","open_revs","revisions","childrenIds","ok","fetch","childrenMap","console","_appendChildren","_this7","_this8","restore","_this9","entityIds","entityOrEntityId","isObject","oldEntity","newEntity","path","mergeWith","a","b","trashed","_updateChildren","forever","filesResult","deleted","_removeChildren","fileNames","_fileNames","deleteFiles","_deleted","entitiesResult","files","omitBy","startsWith","filterEntityFields","file","forceId","queryParts","trim","modifier","slice","data","locals","input","start","end","sample","sampleSize","pick","_len","paths","Array","_key","copy","allowRegexp","merging","isNumber","queries","queryField","fs","nodemailer","Createsend","promisifyAll","nodemailerMailgunTransport","EmailTemplate","Inky","mjml2html","registerComponent","registerDependencies","McSection","McImage","htmlToText","moment","countries","sass","Email","inky","mc-section","mj-column","mj-hero","templateSlug","templateData","options","preview","mjml","skipValidation","templatePath","email","templatesPath","extension","existsSync","style","renderSync","sourceMapContents","sourceMapEmbed","css","toString","emailTemplate","views","juice","juiceResources","preserveMediaQueries","preserveFontFaces","removeStyleTags","removeLinkTags","preserveImportant","webResources","links","scripts","images","transport","jsonTransport","helpers","template","render","html","convertMjmlResult","level","errors","releaseTheKraken","text","fromString","nodemailerMailgun","createTransport","auth","api_key","mailgun","apiKey","domain","getTemplate","sendMail","metadata","details","provider","listId","createsend","cs","clientApiKey","subscribers","addSubscriberAsync","EmailAddress","Name","Resubscribe","RestartSubscriptionBasedAutoresponders","emailAddress","catch","Message","permissions","entityGrid","entityCreate","entityRead","entityUpdate","entityDelete","taxonomyCreate","taxonomyRead","taxonomyUpdate","taxonomyDelete","fileCreate","fileRead","fileUpdate","fileDelete","user","tools","ecommerce","Roles","axios","passwordHash","assetsSlug","post","username","generate","_ref","_ref2","_ref3","_ref4","_ref5","User","router","authMiddleware","permissionMiddleware","asyncMiddleware","getConfig","handleResponse","handleError","bind","_asyncToGenerator3","_regenerator2","mark","_callee","req","res","wrap","_context","prev","next","t1","sent","t2","t3","t4","create","body","t5","t6","stop","_x","_x2","apply","_callee2","_context2","read","userId","_x3","_x4","put","_callee3","_context3","update","_x5","_x6","delete","_callee4","_context4","userIds","_x7","_x8","Tools","getDb","setHeader","send","getChanges","Jwt","payload","jwt","token","dev","pickBy","isNaN","signToken","apiToken","_ref6","_ref7","_ref8","Taxonomy","cacheMiddleware","taxonomy","taxonomySlug","taxonomySlugs","_callee5","_context5","createTerm","term","_x9","_x10","_callee6","updateTerm","_x11","_x12","_callee7","_context7","deleteTerm","_x13","_x14","Ecommerce","Stripe","order","stripe","checkout","amount","Number","refund","retrieveAccount","getSettings","getOrder","orderId","Instagram","instagramAccessTokenMap","method","params","Twitter","twitter","param","consumer_key","consumerKey","consumer_secret","consumerSecret","access_token_key","accessTokenKey","access_token_secret","accessTokenSecret","instagram","access_token","abrupt","client_id","clientId","pagination","next_url","Shippo","shippo","address","parcel","getQuote","Settings","schemaId","updateAll","Pdf","pdf","getPayload","getPdf","attachment","fileName","json","assetSlug","_ref9","_ref10","_ref11","_ref12","indexAsync","q","_keys2","_typeof3","entitySearch","use_index","$or","$exists","entityFind","fieldValues","entityList","entityRevisions","_callee8","_context8","_x15","_x16","_callee9","_context9","_x17","_x18","_callee10","_context10","_x19","_x20","_callee11","_context11","_x21","_x22","Embedly","embedly","oembed","urls","renderTemplate","subscribe","messages","message","getType","setType","item","deleteType","verifyDiscount","code","useragent","headers","source","items","del","Auth","error_description","authenticateWithProvider","Analytics","analytics","changes","dbBackupFile","readFileAsync","fileConents","unlinkAsync","cloudant","destroy","entityGroups","terms","entitiesByTerm","_term","parent","Hashids","StripeClass","hashids","clientStripeAccountId","stripe_user_id","assets","customerDetails","log","findOrCreateCustomer","customer","createOrder","updateOrCreateStripeCustomer","stripeCustomer","updateCustomer","createCharge","updatedOrder","sendReceipt","orderReceipt","sendNotification","orderNotification","updateOrder","finalOrder","accounts","retrieve","refunds","refund_application_fee","charge","stripe_account","charges","amountRefunded","amount_refunded","now","newCustomer","createdAt","modifiedAt","phone","billingAddress","shippingAddress","orders","description","customer_id","customers","price","quantity","newOrder","encode","getTime","shippingMethod","subtotal","tax","rate","includedInPrice","total","show","discount","currency","iso","toLowerCase","capture","order_id","statement_descriptor","kebabCase","storeName","toUpperCase","application_fee","ceil","paymentGateway","livemode","_this10","emailOptions","from","emailSenderName","emailSenderAddress","to","subject","sendEmail","_this11","addressFrom","object_purpose","zip","fromZip","country","fromCountry","addressTo","distance_unit","mass_unit","shipment","address_from","address_to","ratesReady","attempts","object_status","object_id","val","rates","request","templates","templateId","assistPdfUrl","uri","encoding","form","sign","tokenSecret","verify","version","endpoint","requestOptions","qs","extend","_request","EmbedlyApi","opts","format","dateStart","dateEnd","querystring","providerTokenUri","google","vimeo","superUserId","superUser","active","refresh","providerConfig","grant_type","client_secret","clientSecret","redirect_uri","redirectUri","refresh_token","stringify","providerClientConfig","expires","expires_in","floor","debug","DEBUG","SLUG","baseUrl","BASE_URL","DB_URL","DB_HOST","DB_NAME","requestPlugin","DB_REQUEST_PLUGIN","meterType","DB_METER_TYPE","AUTH_SUPER_USER_ID","AUTH_TOKEN_SECRET","DEV_USER_ID","DEV_ROLE","ASSIST_URL","ASSIST_USERNAME","ASSIST_PASSWORD","INSTAGRAM_CLIENT_ID","INSTAGRAM_CLIENT_SECRET","TWITTER_CONSUMER_KEY","TWITTER_CONSUMER_SECRET","TWITTER_ACCESS_TOKEN_KEY","TWITTER_ACCESS_TOKEN_SECRET","GOOGLE_CLIENT_ID","GOOGLE_CLIENT_SECRET","MAILGUN_API_KEY","MAILGUN_DOMAIN","EMBEDLY_API_KEY","aws","iamAccessKeyId","AWS_IAM_ACCESS_KEY_ID","iamAccessKeySecret","AWS_IAM_ACCESS_KEY_SECRET","s3","bucket","AWS_S3_BUCKET","SHIPPO_TOKEN","SHIPPO_FROM_ZIP","SHIPPO_FROM_COUNTRY","STRIPE_CLIENT_ID","STRIPE_CLIENT_SECRET","STRIPE_API_KEY","VIMEO_CLIENT_ID","VIMEO_CLIENT_SECRET","zencoder","ZENCODER_API_KEY","ZENCODER_S3_BUCKET","credentials","ZENCODER_S3_CREDENTIALS","__dirname","Api","defaultConfig","args","Function","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","_len6","_key6","_len7","_key7","_len8","_key8","_len9","_key9","_len10","_key10","_len11","_key11","_len12","_key12","_len13","_key13","_len14","_key14","_len15","_key15","_len16","_key16","_len17","_key17","_len18","_key18","_len19","_key19","_len20","_key20","_len21","_key21","on","express","cacheManager","redisStore","URL","zlib","Logger","CircularJSON","sizeof","deepFreeze","XXH","HASH_SEED","app","customConfig","customAuthMiddleware","fn","skipAuth","cloneConfig","omitUndefined","forIn","isPlainObject","isUndefined","cloneDeep","configClone","redisOptions","caching","store","getClient","hash","h64","__cache","gunzipAsync","Buffer","cacheResponse","gzipAsync","Router","enable","scheme","redirect","Access-Control-Allow-Origin","Access-Control-Allow-Methods","Access-Control-Expose-Headers","Vary","sendStatus","referrer","referer","referrerHostname","hostname","verifyToken","context","permission","errorMessage","stack","afterResponse","removeListener","PORT","HOST","http","logger","helmet","cookieParser","bodyParser","methodOverride","RedisStore","AceApiServer","listen","sessionOptions","resave","saveUninitialized","cookie","maxAge","urlencoded","extended","server","createServer"],"mappings":"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","file":"server.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AceApiServer\"] = factory();\n\telse\n\t\troot[\"AceApiServer\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 103);\n","module.exports = require(\"babel-runtime/helpers/asyncToGenerator\");","module.exports = require(\"babel-runtime/regenerator\");","module.exports = require(\"lodash\");","module.exports = require(\"babel-runtime/helpers/createClass\");","module.exports = require(\"babel-runtime/helpers/classCallCheck\");","const _ = require('lodash');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Roles = require('./roles');\n\nconst roles = new Roles();\n\nconst DEFAULT_CLIENT_CONFIG = {\n  _id: 'config',\n  client: {},\n  schemas: [],\n  taxonomies: [],\n  users: [],\n  roles: roles.roles(),\n};\n\nclass ClientConfig {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async get() {\n    let clientConfig = DEFAULT_CLIENT_CONFIG;\n\n    try {\n      clientConfig = await Db.connect(this.config).get('config');\n\n      clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n    } catch (error) {\n      //\n    }\n\n    clientConfig.slug = this.config.slug;\n\n    return clientConfig;\n  }\n\n  async set(clientConfig) {\n    clientConfig._id = 'config';\n\n    delete clientConfig.roles;\n\n    clientConfig = await Helpers.createOrUpdate(this.config, clientConfig);\n\n    clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n\n    return clientConfig;\n  }\n}\n\n\nmodule.exports = ClientConfig;\n","module.exports = require(\"bluebird\");","const Cloudant = require('@cloudant/cloudant');\n\nclass Db {\n  constructor (config, dbName) {\n    this.config = config;\n\n    return Db.connect(config, dbName);\n  }\n\n  static connect (config, dbName) {\n    const cloudant = new Cloudant({\n      url: config.db.url,\n      maxAttempt: 5,\n      plugins: [\n        'promises',\n        {\n          retry: {\n            retryDelayMultiplier: 2,\n            retryInitialDelayMsecs: 500,\n          },\n        },\n      ],\n    });\n\n    return cloudant.db.use(dbName || config.db.name);\n  }\n}\n\nmodule.exports = Db;\n","module.exports = require(\"babel-runtime/core-js/json/stringify\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\n\nclass Helpers {\n  constructor(config) {\n    this.config = config;\n    this.assistUrl = config.assist.url;\n    this.slug = config.slug;\n  }\n\n  static createOrUpdate (config, doc) {\n    return new Promise((resolve, reject) => {\n      Db.connect(config).insert(doc)\n        .then((response) => {\n          doc._id = response.id;\n          doc._rev = response.rev;\n          resolve(doc);\n        }, (error) => {\n          if (error.statusCode !== 409) {\n            reject(error);\n            return;\n          }\n\n          Db.connect(config).get(doc._id)\n            .then((response) => {\n              doc._rev = response._rev;\n\n              Db.connect(config).insert(doc)\n                .then((response) => {\n                  doc._rev = response.rev;\n                  resolve(doc);\n                }, reject);\n            }, reject);\n        });\n    });\n  }\n\n  static chunkUpdate (config, docs, chunkSize = 1000) {\n    return new Promise((resolve, reject) => {\n      const chunks = _.chunk(docs, chunkSize);\n      const promises = [];\n\n      chunks.forEach((chunk) => {\n        promises.push(new Promise((resolve, reject) => {\n          Db.connect(config).bulk({\n            docs: chunk,\n          }).then(resolve, reject);\n        }));\n      });\n\n      Promise.all(promises).then(resolve, reject);\n    });\n  }\n\n  static groupEntities (entities, groupSize = Infinity) {\n    const grouped = [];\n\n    let group = {\n      entities: [],\n    };\n\n    entities.forEach((entity) => {\n      if (!entity.groupBefore || group.entities.length >= groupSize) {\n        group = {\n          entities: [],\n        };\n      }\n\n      group.entities.push(entity);\n\n      if (!entity.groupAfter || group.entities.length >= groupSize) {\n        group.ratio = 0;\n\n        group.entities.forEach((entity) => {\n          group.ratio += (entity.thumbnail || entity).ratio;\n        });\n\n        group.entities.forEach((entity) => {\n          entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n        });\n\n        grouped.push(group);\n      }\n    });\n\n    return grouped;\n  }\n\n  static now () {\n    return JSON.stringify(new Date()).replace(/\"/g, '');\n  }\n\n  static replace (array, replacementObject, key) {\n    return array.map((object) => {\n      if (object[key] === replacementObject[key]) {\n        return replacementObject;\n      }\n      return object;\n    });\n  }\n\n  thumbnailSrc (thumbnail, settings, cropSlug, cropDefault) {\n    if (!thumbnail) {\n      return '';\n    }\n\n    let settingsArray;\n\n    if (typeof settings === 'string') {\n      settingsArray = settings.split(/,|;/);\n\n      settings = {};\n\n      settingsArray.forEach((setting) => {\n        setting = setting.split(/_|:/);\n\n        settings[setting[0]] = setting[1];\n      });\n    }\n\n    const crop = thumbnail.crops ? thumbnail.crops[cropSlug] : false;\n\n    if (crop) {\n      settings.x = crop[0];\n      settings.y = crop[1];\n      settings.x2 = crop[2];\n      settings.y2 = crop[3];\n    } else if (cropDefault) {\n      settings.g = cropDefault;\n    }\n\n    settingsArray = [];\n\n    _.forEach(settings, (value, key) => {\n      settingsArray.push([key, value].join(':'));\n    });\n\n    const settingsString = settingsArray.join(';');\n\n    if (/(image)/.test(thumbnail.thumbnailType)) {\n      if (thumbnail.ext === 'svg') {\n        return [this.assistUrl, this.slug, thumbnail.name + thumbnail.ext].join('/');\n      }\n\n      return [this.assistUrl, this.slug, 'transform', settingsString, thumbnail.name + thumbnail.ext].join('/');\n    }\n\n    if (/(video)/.test(thumbnail.thumbnailType)) {\n      return [this.assistUrl, this.slug, 'transform', settingsString, thumbnail.name, 'thumb.jpg'].join('/');\n    }\n\n    if (/(oembed|proxy)/.test(thumbnail.thumbnailType)) {\n      const thumbnailUrl = thumbnail.thumbnailUrl.replace(/https?:\\/\\//, '');\n\n      return [this.assistUrl, this.slug, 'proxy', 'transform', settingsString, thumbnailUrl].join('/');\n    }\n\n    return '';\n  }\n\n}\n\nmodule.exports = Helpers;\n","module.exports = require(\"babel-runtime/core-js/object/keys\");","module.exports = require(\"lodash/isArray\");","const config = {\n  environment: process.env.ENVIRONMENT || 'development',\n\n  api: {\n    prefix: process.env.API_PREFIX || '',\n    blacklistToken: (process.env.API_BLACKLIST_TOKEN || '').split(','),\n    blacklistReferrer: (process.env.API_BLACKLIST_REFERRER || '').split(','),\n  },\n\n  forceHttps: process.env.FORCE_HTTPS ? JSON.parse(process.env.FORCE_HTTPS) : false,\n\n  session: {\n    secret: process.env.SESSION_SECRET || 'change_me',\n    ttl: parseInt(process.env.SESSION_TTL || 7200, 10),\n  },\n\n  cache: {\n    enabled: process.env.CACHE_ENABLED ? JSON.parse(process.env.CACHE_ENABLED) : false,\n    ttl: parseInt(process.env.CACHE_TTL || 30, 10) * 60, // 30mins\n    compress: process.env.CACHE_COMPRESS ? JSON.parse(process.env.CACHE_COMPRESS) : false,\n    memory: {\n      max: parseInt(process.env.CACHE_MEMORY_MAX || 128, 10) * 1000 * 1000, // ~128mb\n    },\n  },\n\n  redis: {\n    url: process.env.REDIS_URL,\n    host: process.env.REDIS_HOST,\n    port: process.env.REDIS_PORT,\n    password: process.env.REDIS_PASSWORD,\n    db: parseInt(process.env.REDIS_DB || 0, 10),\n  },\n\n  logentriesToken: process.env.LOGENTRIES_TOKEN,\n};\n\nmodule.exports = config;\n","module.exports = require(\"babel-runtime/helpers/typeof\");","module.exports = require(\"request-promise\");","const _ = require('lodash');\n\nconst fields = [\n  {\n    type: 'attachment',\n    name: 'Attachment',\n    dataType: null,\n  },\n  {\n    type: 'audio',\n    name: 'Audio',\n    dataType: null,\n  },\n  {\n    type: 'checkbox',\n    name: 'Checkbox',\n    dataType: 'boolean',\n  },\n  {\n    type: 'color',\n    name: 'Color',\n    dataType: 'string',\n  },\n  {\n    type: 'date',\n    name: 'Date',\n    dataType: 'string',\n  },\n  {\n    type: 'embedly',\n    name: 'Embedly',\n    dataType: null,\n  },\n  {\n    type: 'entity',\n    name: 'Entity',\n    dataType: 'array',\n  },\n  {\n    type: 'entityGrid',\n    name: 'Entity Grid',\n    dataType: 'array',\n  },\n  {\n    type: 'entityTile',\n    name: 'Entity Tile',\n    dataType: 'array',\n  },\n  {\n    type: 'image',\n    name: 'Image',\n    dataType: null,\n  },\n  {\n    type: 'keyValue',\n    name: 'Key Value',\n    dataType: null,\n  },\n  {\n    type: 'number',\n    name: 'Number',\n    dataType: 'number',\n  },\n  {\n    type: 'richText',\n    name: 'Rich Text',\n    dataType: null,\n  },\n  {\n    type: 'select',\n    name: 'Select',\n    dataType: 'array',\n  },\n  {\n    type: 'taxonomy',\n    name: 'Taxonomy',\n    dataType: null,\n  },\n  {\n    type: 'text',\n    name: 'Text',\n    dataType: 'string',\n  },\n  {\n    type: 'textArea',\n    name: 'Text Area',\n    dataType: 'string',\n  },\n  {\n    type: 'video',\n    name: 'Video',\n    dataType: null,\n  },\n  {\n    type: 'vimeo',\n    name: 'Vimeo',\n    dataType: null,\n  },\n];\n\nclass Fields {\n  static fields() {\n    return fields.map(field => Object.freeze(field));\n  }\n  static field(type) {\n    return _.find(Fields.fields(), { type });\n  }\n}\n\nmodule.exports = Fields;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Fields = require('./fields');\n\nclass Schema {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas.push(schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(schemaSlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const schema = _.find(clientConfig.schemas, { slug: schemaSlug });\n\n    if (!schema) {\n      throw Error(`Schema not found: ${schemaSlug}`);\n    }\n\n    return schema;\n  }\n\n  async update(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.schemas, { slug: schema.slug });\n\n    if (index === -1) {\n      throw Error(`Schema not found: ${schema.slug}`);\n    }\n\n    clientConfig.schemas.splice(index, 1, schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(schemaSlugs) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    schemaSlugs = _.isArray(schemaSlugs) ? schemaSlugs : [schemaSlugs];\n\n    clientConfig.schemas = clientConfig.schemas.filter(schema => schemaSlugs.indexOf(schema.slug) === -1);\n\n    clientConfig.schemas = clientConfig.schemas.map((schema) => {\n      if (!schema.fields) {\n        return schema;\n      }\n      schema.fields = schema.fields.map((field) => {\n        if (!field.settings) {\n          return field;\n        }\n        if (field.settings.schemas) {\n          field.settings.schemas = field.settings.schemas.filter(schema => schemaSlugs.indexOf(schema) === -1);\n        }\n        return field;\n      });\n      return schema;\n    });\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateAll(schemas) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas = schemas;\n\n    // await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateEntityIndex(schemas) {\n    let fields = [];\n\n    schemas.forEach((schema) => {\n      fields = fields.concat(schema.fields);\n    });\n\n    fields = _.uniqBy(fields, 'slug');\n\n    const index = {\n      name: 'entity',\n      type: 'text',\n      ddoc: 'entityIndex',\n      index: {\n        default_field: {\n          enabled: true,\n          analyzer: 'standard',\n        },\n        selector: {\n          $and: [\n            {\n              type: 'entity',\n            },\n          ],\n        },\n        fields: [\n          {\n            name: 'published',\n            type: 'boolean',\n          },\n          {\n            name: 'trashed',\n            type: 'boolean',\n          },\n          {\n            name: 'title',\n            type: 'string',\n          },\n          {\n            name: 'slug',\n            type: 'string',\n          },\n          {\n            name: 'schema',\n            type: 'string',\n          },\n          {\n            name: 'modifiedAt',\n            type: 'string',\n          },\n          {\n            name: 'publishedAt',\n            type: 'string',\n          },\n        ],\n      },\n    };\n\n    fields.forEach((field) => {\n      const fieldRef = Fields.field(field.type);\n\n      if (/number|string|boolean/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value`,\n          type: fieldRef.dataType,\n        });\n      }\n\n      if (/array/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.[].slug`,\n          type: 'string',\n        });\n      }\n\n      if (/taxonomy/.test(field.type)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.terms.[].slug`,\n          type: 'string',\n        });\n      }\n    });\n\n    const result = await Db.connect(this.config).index(index);\n\n    return result;\n  }\n\n}\n\nmodule.exports = Schema;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst jsonQuery = require('json-query');\nconst diff = require('deep-diff').diff;\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Schema = require('./schema');\nconst Assist = require('./assist');\n\nconst CHUNK_UPDATE_SIZE = 1000;\n\nclass Entity {\n  constructor (config) {\n    this.config = config;\n\n    // Expose helpers\n    this.flattenValues = Entity.flattenValues;\n  }\n\n  static flattenValues (docs) {\n    return docs.map((doc) => {\n      if (!doc.fields || !_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (/entity/.test(field.type) && _.isArray(field.value)) { // entity / entityTile / entityGrid\n          field.value = Entity.flattenValues(field.value);\n        }\n        return field.value;\n      });\n\n      return doc;\n    });\n  }\n\n  static filterEntityFields (docs, role = 'guest') {\n    const isArray = _.isArray(docs);\n\n    docs = (isArray ? docs : [docs]).map((doc) => {\n      if (_.size(doc.fields)) {\n        doc.fields = _.mapValues(doc.fields, (field) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter((obj) => {\n              if (!obj) {\n                return false;\n              }\n              if (obj.type && obj.type === 'entity' && role === 'guest') {\n                return obj.published !== undefined ? obj.published : true;\n              }\n              return true;\n            });\n          }\n          return field;\n        });\n      }\n      return doc;\n    });\n\n    return isArray ? docs : docs[0];\n  }\n\n  static _appendChildren (docs, childrenMap) {\n    return docs.map((doc) => {\n      if (!_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (_.isArray(field.value)) {\n          field.value = field.value.filter((obj) => {\n            if (!obj) {\n              return false;\n            }\n            if (obj.type === 'entity') {\n              return childrenMap[obj.id] !== undefined;\n            }\n            return true;\n          });\n\n          field.value = field.value.map((obj) => {\n            if (obj.type === 'entity') {\n              obj = _.merge(obj, childrenMap[obj.id]);\n            }\n            obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n            return obj;\n          });\n        }\n\n        return field;\n      });\n\n      return doc;\n    });\n  }\n\n  static _appendParents (result, parents = null, role = 'guest') {\n    let entityMap = {};\n\n    result.rows.forEach((row) => {\n      if (!row.doc) {\n        return;\n      }\n\n      if (row.value.type === 'entity') {\n        if (parents) {\n          row.doc.parents = [];\n        }\n        entityMap[row.id] = row.doc;\n      }\n    });\n\n    if (parents) {\n      result.rows.forEach((row) => {\n        if (row.doc && row.value.type === 'parent') {\n          entityMap[row.key].parents.push(Entity.filterEntityFields(row.doc, role));\n        }\n      });\n\n      entityMap = _.mapValues(entityMap, (entity) => {\n        entity.parents = _.uniqBy(entity.parents, entity => entity._id);\n        return entity;\n      });\n    }\n\n    entityMap = null;\n\n    return result;\n  }\n\n  static _fileNames (entities) {\n    const fileNames = [];\n\n    entities.forEach((entity) => {\n      _.forEach(entity.fields, (field) => {\n        if (field.value && field.value.file) {\n          fileNames.push(field.value.file.name);\n        }\n      });\n    });\n\n    return _.uniq(fileNames);\n  }\n\n  async fieldValues (fieldSlug, searchTerm) {\n    const result = await Db.connect(this.config).viewWithList('entity', 'byField', 'search', {\n      startkey: [fieldSlug],\n      endkey: [fieldSlug, {}],\n      group: true,\n      searchTerm,\n    });\n    return result;\n  }\n\n  static _query(doc, query, forceId = false) {\n    const queryParts = query.trim().split(/\\[|\\]/);\n    const selector = `fields.${queryParts[0]}.value[${queryParts[1] || '*'}]`;\n    const modifier = /\\]:/.test(query) ? `:${query.split(/\\]:/).slice(-1)[0].trim()}` : '';\n\n    const result = jsonQuery(`${selector}${modifier}`, {\n      data: doc,\n      locals: {\n        slice: (input, start, end) => _.slice(input, start, end),\n        sample: (input, size = 1) => _.sampleSize(input, size),\n        group: (entities, groupSize = Infinity) => {\n          const grouped = [];\n\n          let group = [];\n\n          entities.forEach((entity) => {\n            if (!entity.groupBefore || group.length >= groupSize) {\n              group = [];\n            }\n\n            group.push(entity);\n\n            if (!entity.groupAfter || group.length >= groupSize) {\n              group.ratio = 0;\n\n              group.forEach((entity) => {\n                group.ratio += (entity.thumbnail || entity).ratio;\n              });\n\n              group.forEach((entity) => {\n                entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n              });\n\n              grouped.push(group);\n            }\n          });\n\n          return grouped;\n        },\n        pick: (input, ...paths) => _.map(input, (obj) => {\n          const copy = {};\n          if (forceId && obj.id) {\n            copy.id = obj.id;\n          }\n          paths.forEach((path) => {\n            _.set(copy, path, _.get(obj, path));\n          });\n          return copy;\n        }),\n      },\n      allowRegexp: true,\n    });\n\n    return result;\n  }\n\n  async _entitiesById (ids = [], parents = null, role = 'guest') {\n    const query = {\n      include_docs: true,\n    };\n\n    if (ids.length) {\n      query.keys = ids;\n    }\n\n    let result = await Db.connect(this.config)\n      .view('entity', parents ? 'byIdExtended' : 'byId', query);\n\n    result = Entity._appendParents(result, parents, role);\n\n    return result;\n  }\n\n  static _childDepthLimit (children, merging = false) {\n    if (_.isNumber(children)) {\n      return children;\n    }\n    if (_.isArray(children)) {\n      if (merging) {\n        return children.length + 1;\n      }\n      return children.length;\n    }\n    return 1;\n  }\n\n  async _getDocMap (docs, children, parents, role, docMap = {}, childDepth = 0) {\n    if (!parents && !children) {\n      return docMap;\n    }\n\n    let ids = [];\n\n    docs.forEach((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      const doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (children && doc.fields && _.size(doc.fields)) {\n        if (_.isArray(children)) {\n          const queries = children[childDepth].split(/,(?![^([]*[\\])])/g);\n\n          queries.forEach((query) => {\n            ids = ids.concat(_.flatten(Entity._query(doc, query, true).value).map(obj => obj && obj.id));\n          });\n\n        } else {\n          _.forEach(doc.fields, (field) => {\n            if (_.isArray(field.value)) {\n              field.value = field.value.filter(obj => obj);\n\n              field.value.forEach((obj) => {\n                if (obj.id) {\n                  ids.push(obj.id);\n                }\n              });\n            }\n          });\n        }\n      }\n\n      const id = isRow ? rowOrDoc.id : doc._id || doc.id;\n      if (!docMap[id]) {\n        ids.push(id);\n      }\n    });\n\n    ids = _.uniq(ids);\n\n    ids = ids.filter(id => !docMap[id]);\n\n    if (ids.length === 0) {\n      return docMap;\n    }\n\n    let _docs = (await this._entitiesById(ids, parents, role)).rows.map(row => row.doc);\n\n    _docs.forEach((doc) => {\n      docMap[doc._id] = doc;\n    });\n\n    childDepth += 1;\n\n    if (!children || (childDepth >= Entity._childDepthLimit(children))) {\n      return docMap;\n    }\n\n    docMap = await this._getDocMap(_docs, children, parents, role, docMap, childDepth);\n\n    _docs = null;\n\n    return docMap;\n  }\n\n  static _mergeDocs(docs, docMap, children, childDepth = 0) {\n    if (children && (childDepth + 1 >= Entity._childDepthLimit(children, true))) {\n      return docs;\n    }\n\n    docs = docs.map((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      let doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (!doc.fields && docMap[rowOrDoc.id || rowOrDoc._id]) {\n        doc = docMap[rowOrDoc.id || rowOrDoc._id];\n      }\n\n      if (children && doc.fields && _.size(doc.fields)) {\n\n        let queries;\n\n        if (_.isArray(children)) {\n          queries = {};\n          children[childDepth].split(/,(?![^([]*[\\])])/g).forEach((query) => {\n            query = query.trim();\n            const queryField = query.split(/\\[|\\]/)[0];\n            queries[queryField] = query;\n          });\n        }\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter(obj => obj);\n\n            if (!queries || (queries && queries[fieldSlug])) {\n              if (queries && queries[fieldSlug]) {\n                field.value = field.value.filter(obj => obj.id && docMap[obj.id]);\n              }\n\n              field.value = field.value.map((obj) => {\n                if (obj && obj.id && docMap[obj.id]) {\n                  obj = _.merge(obj, docMap[obj.id] || {});\n                  obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n                }\n                return obj;\n              });\n\n              field.value = Entity._mergeDocs(field.value, docMap, children, childDepth + 1);\n            }\n          }\n          return field;\n        });\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            if (queries && queries[fieldSlug]) {\n              field.value = _.flatten(Entity._query(doc, queries[fieldSlug]).value);\n            }\n          }\n          return field;\n        });\n\n      }\n\n      if (isRow) {\n        rowOrDoc.doc = doc;\n      } else {\n        rowOrDoc = doc;\n      }\n\n      return rowOrDoc;\n    });\n\n    return docs;\n  }\n\n  async _extendDocs (docs, children, parents, role) {\n    let docMap = await this._getDocMap(docs, children, parents, role);\n\n    docs = Entity._mergeDocs(docs, docMap, children);\n\n    docMap = null;\n\n    return docs;\n  }\n\n  _removeChildren (entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      entities = entities.map(entity => entity._id);\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const updatedEntities = _.uniqBy(response.rows, row => row.doc._id).map((row) => {\n            row.doc.fields = _.mapValues(row.doc.fields, (field) => {\n              if (_.isArray(field.value)) {\n                field.value = _.remove(field.value, obj => obj.type === 'entity' && entities.indexOf(obj.id) !== -1);\n              }\n              return field;\n            });\n\n            return row.doc;\n          });\n\n          if (updatedEntities.length === 0) {\n            resolve([]);\n            return;\n          }\n\n          Helpers.chunkUpdate(this.config, updatedEntities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  _updateChildren (entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      const entityMap = {};\n\n      entities = entities.map((entity) => {\n        entityMap[entity._id] = entity;\n\n        return entity._id;\n      });\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const entities = response.rows.map((row) => {\n            const entity = row.doc;\n\n            _.forEach(entity.fields, (field, fieldSlug) => {\n              if (_.isArray(field.value)) {\n                entity.fields[fieldSlug].value = field.value.map((obj) => {\n                  if (obj.type === 'entity' && entityMap[obj.id]) {\n                    obj.slug = entityMap[obj.id].slug;\n                    obj.title = entityMap[obj.id].title;\n                    obj.schema = entityMap[obj.id].schema;\n                    obj.published = entityMap[obj.id].published;\n\n                    if (entityMap[obj.id].thumbnail) {\n                      obj.thumbnail = entityMap[obj.id].thumbnail;\n                    } else {\n                      obj.thumbnail = null;\n                    }\n                  }\n\n                  return obj;\n                });\n              }\n            });\n\n            return entity;\n          });\n\n          Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  async entityList (ids = [], children = null, parents = null, role = 'guest') {\n    const result = await this._entitiesById(ids, parents, role);\n\n    if ((!children && !parents) || result.total_rows === 0) {\n      return result.rows;\n    }\n\n    const rows = await this._extendDocs(result.rows, children, parents, role);\n\n    return rows;\n  }\n\n  _entitySearch (query, children = null, parents = null, role = 'guest') {\n    return new Promise((resolve, reject) => {\n      query.limit = Math.min(query.limit || 200, 200);\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      if (children) {\n        query.include_docs = true;\n      }\n\n      if (!query.include_fields) {\n        query.include_fields = [];\n      }\n\n      if (_.isArray(query.include_fields)) {\n        query.include_fields = JSON.stringify(query.include_fields);\n      }\n\n      if (!query.sort) {\n        delete query.sort;\n      }\n      if (!query.bookmark) {\n        delete query.bookmark;\n      }\n      if (!query.index) {\n        delete query.index;\n      }\n      if (!query.group_field) {\n        delete query.group_field;\n      }\n\n      Db.connect(this.config).search('entity', query.index || 'all', query)\n        .then((result) => {\n\n          if (result.groups) {\n            const promises = [];\n\n            result.groups = result.groups.map((group) => {\n              promises.push(new Promise((resolve, reject) => {\n                if ((!children && !parents) || group.total_rows === 0) {\n                  resolve();\n                  return;\n                }\n\n                this._extendDocs(group.hits, children, parents, role)\n                  .then((docs) => {\n                    group.hits = docs;\n\n                    resolve();\n                  }, reject);\n              }));\n              return group;\n            });\n\n            Promise.all(promises)\n              .then(() => {\n                resolve(result);\n              }, reject);\n\n            return;\n          }\n\n          if ((!children && !parents) || result.total_rows === 0) {\n            resolve(result);\n            return;\n          }\n\n          this._extendDocs(result.rows, children, parents, role)\n            .then((docs) => {\n              result.rows = docs;\n\n              resolve(result);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entitySearch (query, children = null, parents = null, role = 'guest') {\n    return new Promise((resolve, reject) => {\n      const limit = query.limit || 25;\n\n      if (limit <= 200) {\n        this._entitySearch(query, children, parents, role)\n          .then(resolve, reject);\n        return;\n      }\n\n      let rows = [];\n      let groups = [];\n\n      function __entitySearch (bookmark) {\n        const _query = _.clone(query);\n\n        if (bookmark) {\n          _query.bookmark = bookmark;\n        }\n\n        this._entitySearch(_query, children, parents, role)\n          .then((result) => {\n            if (result.rows) {\n              rows = rows.concat(result.rows);\n            }\n            if (result.groups) {\n              groups = groups.concat(result.groups);\n            }\n\n            if (rows.length < result.total_rows && rows.length < limit) {\n              __entitySearch.call(this, result.bookmark);\n              return;\n            }\n\n            result.rows = rows;\n            result.groups = groups;\n\n            resolve(result);\n          }, reject);\n      }\n\n      __entitySearch.call(this);\n    });\n  }\n\n  async entityFind (query, children = null, parents = null, role = 'guest') {\n    let result;\n\n    try {\n      result = await Db.connect(this.config).find(query);\n    } catch (error) {\n      if (error.error === 'no_usable_index') {\n        const cc = new ClientConfig(this.config);\n        const clientConfig = await cc.get();\n\n        const schema = new Schema(this.config);\n        await schema.updateEntityIndex(clientConfig.schemas);\n\n        result = await Db.connect(this.config).find(query);\n      }\n    }\n\n    if (children === false) {\n      return result;\n    }\n\n    if (query.fields && query.fields.indexOf('_id') === -1) {\n      throw new Error('_id field required for `children`');\n    }\n\n    result.docs = await this._extendDocs(result.docs, children, parents, role);\n\n    return result;\n  }\n\n  entityRevisions (entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId, {\n        revs_info: true,\n      })\n        .then((response) => {\n          const revisionIds = [];\n\n          response._revs_info.forEach((revision) => {\n            if (revision.status === 'available') {\n              revisionIds.push(revision.rev);\n            }\n          });\n\n          Db.connect(this.config).get(entityId, {\n            open_revs: JSON.stringify(revisionIds),\n          })\n            .then((response) => {\n              const revisions = [];\n              const childrenIds = [];\n\n              response.forEach((revision) => {\n                if (revision.ok) {\n                  revisions.push(revision.ok);\n\n                  _.forEach(revision.ok.fields, (field) => {\n                    if (/entity/.test(field.type)) {\n                      _.forEach(field.value, (obj) => {\n                        if (obj.id) {\n                          childrenIds.push(obj.id);\n                        }\n                      });\n                    }\n                  });\n                }\n              });\n\n              Db.connect(this.config).fetch({\n                keys: _.uniq(childrenIds),\n                include_docs: true,\n              })\n                .then((result) => {\n                  const childrenMap = {};\n\n                  result.rows.forEach((row) => {\n                    try {\n                      childrenMap[row.doc._id] = row.doc;\n                    } catch (error) {\n                      console.error('Error: child no longer exists');\n                    }\n                  });\n\n                  resolve(Entity._appendChildren(revisions, childrenMap));\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entityCreate (entity) {\n    return new Promise((resolve, reject) => {\n      entity.type = 'entity';\n\n      Db.connect(this.config).insert(entity)\n        .then((response) => {\n          entity._id = response.id;\n          entity._rev = response.rev;\n\n          resolve(entity);\n        }, reject);\n    });\n  }\n\n  entityRead (entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId)\n        .then(resolve, reject);\n    });\n  }\n\n  entityUpdate (entities, restore) {\n    return new Promise((resolve, reject) => {\n      entities = _.isArray(entities) ? entities : [entities];\n\n      const entityMap = {};\n\n      const entityIds = entities.map((entityOrEntityId) => {\n        let entityId;\n\n        if (_.isObject(entityOrEntityId)) {\n          entityId = entityOrEntityId._id;\n          entityMap[entityId] = entityOrEntityId;\n        }\n        if (_.isString(entityOrEntityId)) {\n          entityId = entityOrEntityId;\n        }\n\n        return entityId;\n      });\n\n      Db.connect(this.config).fetch({\n        keys: entityIds,\n        include_docs: true,\n      })\n        .then((response) => {\n          const children = [];\n\n          const entities = response.rows.map((row) => {\n            const oldEntity = row.doc;\n            const newEntity = entityMap[oldEntity._id];\n\n            let entity = oldEntity;\n\n            if (newEntity) {\n              delete newEntity._rev;\n\n              const diffs = diff(oldEntity, newEntity);\n\n              diffs.forEach((diff) => {\n                if (/slug|title|thumbnail/.test(diff.path[0])) {\n                  if (children.indexOf(newEntity) === -1 && entityIds.indexOf(newEntity._id) !== -1) {\n                    children.push(newEntity);\n                  }\n                }\n              });\n\n              entity = _.mergeWith({}, oldEntity, newEntity, (a, b) => {\n                if (_.isArray(a) && _.isArray(b)) {\n                  return b;\n                }\n                return undefined;\n              });\n            }\n\n            if (restore) {\n              entity.trashed = false;\n            }\n\n            return entity;\n          });\n\n          this._updateChildren(children)\n            .then(() => {\n              Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n                .then(resolve, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  async entityDelete (entityIds, forever = false) {\n    let entities;\n    let filesResult;\n\n    if (entityIds === 'trashed') {\n      forever = true;\n\n      entities = (await Db.connect(this.config).view('entity', 'trashed', {\n        include_docs: true,\n      })).rows;\n\n    } else {\n      entities = (await Db.connect(this.config).fetch({\n        keys: _.isArray(entityIds) ? entityIds : [entityIds],\n        include_docs: true,\n      })).rows;\n    }\n\n    entities = entities.filter(entity => !entity.value || !entity.value.deleted);\n\n    entities = entities.map(entity => entity.doc);\n\n    if (forever) {\n      await this._removeChildren(entities);\n\n      const fileNames = Entity._fileNames(entities);\n\n      if (fileNames.length) {\n        const assist = new Assist(this.config);\n        filesResult = await assist.deleteFiles(fileNames);\n      }\n\n      entities = entities.map(entity => ({\n        _id: entity._id,\n        _rev: entity._rev,\n        _deleted: true,\n      }));\n\n    } else {\n      entities = entities.map((entity) => {\n        entity.trashed = true;\n        return entity;\n      });\n    }\n\n    const entitiesResult = await Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE);\n\n    return {\n      entities: entitiesResult,\n      files: filesResult,\n    };\n  }\n\n}\n\nmodule.exports = Entity;\n","module.exports = require(\"fs\");","const path = require('path');\nconst fs = require('fs');\nconst _ = require('lodash');\nconst Promise = require('bluebird');\nconst nodemailer = require('nodemailer');\nconst Createsend = Promise.promisifyAll(require('createsend-node'));\nconst nodemailerMailgunTransport = require('nodemailer-mailgun-transport');\nconst EmailTemplate = require('email-templates');\nconst Inky = require('inky').Inky;\nconst mjml2html = require('mjml');\nconst registerComponent = require('mjml-core').registerComponent;\nconst registerDependencies = require('mjml-validator').registerDependencies;\nconst { McSection, McImage } = require('mjml-mailchimp');\nconst htmlToText = require('html-to-text');\nconst moment = require('moment');\nconst countries = require('i18n-iso-countries');\nconst sass = require('node-sass');\n\nconst ClientConfig = require('./client-config');\nconst Helpers = require('./helpers');\n\n\nclass Email {\n  constructor(config) {\n    this.config = config;\n\n    this.inky = new Inky();\n\n    registerComponent(McSection);\n    registerComponent(McImage);\n    registerDependencies({\n      'mc-section': ['mj-column', 'mj-group', 'mj-raw'],\n      'mj-column': ['mc-image'],\n      'mj-hero': ['mc-image'],\n    });\n  }\n\n  getTemplate(templateSlug, templateData, options = {}) {\n    return new Promise((resolve, reject) => {\n      options = _.merge({}, {\n        preview: false,\n        inky: false,\n        mjml: false,\n        skipValidation: false,\n      }, options);\n\n      const templatePath = path.resolve(this.config.email.templatesPath, templateSlug);\n\n      // Support ejs for backwards compatibility\n      // TODO: convert ejs templates to pug and remove\n      let extension = 'pug';\n      if (fs.existsSync(`${templatePath}/html.ejs`)) {\n        extension = 'ejs';\n      }\n\n      const style = sass.renderSync({\n        file: path.resolve(templatePath, 'style.scss'),\n        sourceMapContents: options.preview,\n        sourceMapEmbed: options.preview,\n      }).css.toString().replace(/\"/g, '\\'');\n\n      const emailTemplate = new EmailTemplate({\n        views: {\n          root: this.config.email.templatesPath,\n          options: {\n            extension,\n          },\n        },\n        juice: !options.preview,\n        juiceResources: {\n          preserveMediaQueries: true,\n          preserveFontFaces: true,\n          removeStyleTags: false,\n          removeLinkTags: false,\n          preserveImportant: true,\n          webResources: {\n            links: false,\n            scripts: false,\n            images: false,\n            // relativeTo: '',\n          },\n        },\n        transport: {\n          jsonTransport: true,\n        },\n      });\n\n      const cc = new ClientConfig(this.config);\n      const helpers = new Helpers(this.config);\n\n      cc.get()\n        .then((clientConfig) => {\n          templateData = _.merge({}, templateData, {\n            config: _.pick(clientConfig, ['client', 'assets']),\n            helpers,\n            style,\n            moment,\n            countries,\n            template: templateSlug,\n            preview: options.preview,\n          });\n\n          emailTemplate.render(`${templateSlug}/html`, templateData)\n            .then((html) => {\n\n              if (options.mjml) {\n                const convertMjmlResult = mjml2html(html, {\n                  level: options.skipValidation ? 'skip' : 'soft',\n                });\n\n                if (convertMjmlResult.errors && convertMjmlResult.errors.length) {\n                  reject(convertMjmlResult.errors);\n                  return;\n                }\n\n                html = convertMjmlResult.html;\n              }\n\n              if (options.inky) {\n                html = this.inky.releaseTheKraken(html);\n              }\n\n              resolve({\n                html,\n                text: htmlToText.fromString(html),\n              });\n            }, reject);\n        }, reject);\n    });\n  }\n\n  sendEmail(email, template, templateData, options) {\n    return new Promise((resolve, reject) => {\n      const nodemailerMailgun = nodemailer.createTransport(nodemailerMailgunTransport({\n        auth: {\n          api_key: this.config.mailgun.apiKey,\n          domain: this.config.mailgun.domain,\n        },\n      }));\n\n      this.getTemplate(template, templateData, options)\n        .then((emailTemplate) => {\n          email.html = emailTemplate.html;\n          email.text = emailTemplate.text;\n\n          nodemailerMailgun.sendMail(email, (error, metadata) => {\n            if (error) {\n              reject(error);\n              return;\n            }\n\n            resolve({\n              metadata,\n              email,\n            });\n          });\n        }, reject);\n    });\n  }\n\n  subscribe(details, provider, listId) {\n    return new Promise((resolve, reject) => {\n      const cc = new ClientConfig(this.config);\n\n      cc.get()\n        .then((clientConfig) => {\n          if (provider === 'createsend') {\n            if (clientConfig.provider.createsend) {\n              const cs = new Createsend({\n                apiKey: clientConfig.provider.createsend.clientApiKey,\n              });\n\n              const subscribers = Promise.promisifyAll(cs.subscribers);\n\n              subscribers.addSubscriberAsync(listId, {\n                EmailAddress: details.email,\n                Name: details.name,\n                Resubscribe: true,\n                RestartSubscriptionBasedAutoresponders: true,\n              })\n                .then((result) => {\n                  resolve(`Email.subscribe(): ${result.emailAddress}`);\n                })\n                .catch((error) => {\n                  reject(error.Message);\n                });\n\n              return;\n            }\n            reject(new Error('Subscriber list not configured'));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Email;\n","module.exports = require(\"babel-runtime/core-js/object/freeze\");","const _ = require('lodash');\n\nconst roles = [\n  {\n    name: 'Admin',\n    slug: 'admin',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: true,\n      settings: true,\n      tools: true,\n      ecommerce: true,\n    },\n  },\n  {\n    name: 'Editor',\n    slug: 'editor',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n  {\n    name: 'Guest',\n    slug: 'guest',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: false,\n      entityRead: true,\n      entityUpdate: false,\n      entityDelete: false,\n\n      taxonomyCreate: false,\n      taxonomyRead: true,\n      taxonomyUpdate: false,\n      taxonomyDelete: false,\n\n      fileCreate: false,\n      fileRead: true,\n      fileUpdate: false,\n      fileDelete: false,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n];\n\nclass Roles {\n  roles() {\n    return roles.map(role => Object.freeze(role));\n  }\n  role(slug) {\n    return _.find(this.roles(), { slug });\n  }\n}\n\nmodule.exports = Roles;\n","module.exports = require(\"@cloudant/cloudant\");","module.exports = require(\"axios\");","const _ = require('lodash');\nconst axios = require('axios');\nconst passwordHash = require('password-hash');\nconst ClientConfig = require('./client-config');\n\nclass Assist {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async deleteFiles(fileNames) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetsSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n\n    if (fileNames.length === 0) {\n      return [];\n    }\n\n    const result = (await axios.post(`${this.config.assist.url}/${assetsSlug}/file/delete`, { fileNames }, {\n      auth: {\n        username: this.config.assist.username,\n        password: passwordHash.generate(this.config.assist.password),\n      },\n    })).data;\n\n    return result;\n  }\n\n}\n\nmodule.exports = Assist;\n","module.exports = require(\"path\");","module.exports = require(\"express\");","module.exports = ({\n  User,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.create(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.read(req.query.userId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.update(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.delete(req.body.userId || req.body.userIds || req.query.userId || req.query.userIds));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Tools,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/tools/export-db.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'tools'),\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        const db = await tools.getDb();\n\n        res.setHeader('Content-Disposition', `attachment; filename=${req.session.slug}.json`);\n        res.setHeader('Content-Type', 'application/json');\n        res.status(200);\n        res.send(db);\n\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/tools/changes.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await tools.getChanges());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Jwt,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  // handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /token:\n   *  get:\n   *    tags:\n   *      - token\n   *    summary: Get JWT\n   *    description: Get Json Web Token (JWT) for API access\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Slug for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: userId\n   *        description: User ID for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: role\n   *        description: Role for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: expiresIn\n   *        description: Duration of token in seconds\n   *        in: query\n   *        required: false\n   *        type: number\n   *    responses:\n   *      200:\n   *        description: Token\n   */\n\n  router.get(\n    '/token.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      const payload = {\n        role: req.session.role,\n        slug: req.session.slug,\n        userId: req.session.userId,\n      };\n\n      if (req.session.role === 'super' || config.environment === 'development') {\n        payload.role = req.query.role || req.session.role || config.dev.role;\n        payload.slug = req.query.slug || req.session.slug || config.dev.slug;\n        if (payload.role !== 'guest') {\n          payload.userId = req.query.userId || req.session.userId || config.dev.userId;\n        }\n      }\n\n      const _ = require('lodash');\n\n      let options = _.pickBy(req.query, (value, key) => /^(expiresIn|notBefore|audience|issuer|jwtid|subject|noTimestamp|header)$/.test(key));\n\n      options = _.mapValues(options, (value) => {\n        if (!_.isNaN(+value)) { // Check if value is a numeric string\n          return +value; // Convert numeric string to number\n        }\n        return value;\n      });\n\n      const jwt = Jwt(config);\n\n      const token = jwt.signToken(payload, options);\n\n      req.session.apiToken = token;\n\n      const response = {\n        token,\n        payload,\n        options,\n      };\n\n      handleResponse(req, res, response);\n    })\n  );\n\n};\n","module.exports = ({\n  Taxonomy,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * definitions:\n   *  Taxonomy:\n   *    type: object\n   *    properties:\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      terms:\n   *        type: array\n   *        items:\n   *          type: object\n   *          properties:\n   *            id:\n   *              type: string\n   *            title:\n   *              type: string\n   *            slug:\n   *              type: string\n   *            terms:\n   *              type: array\n   */\n\n  router.post(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.create(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /taxonomy:\n   *  get:\n   *    tags:\n   *      - taxonomy\n   *    summary: Get taxonomy\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Taxonomy slug\n   *        in: query\n   *        required: true\n   *        type: string\n   *    responses:\n   *      200:\n   *        description: Taxonomy\n   *        schema:\n   *          type: object\n   *          $ref: '#/definitions/Taxonomy'\n   */\n  router.get(\n    '/taxonomy.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.read(req.query.slug || req.query.taxonomySlug), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.update(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.delete(req.body.taxonomySlug || req.body.taxonomySlugs || req.query.taxonomySlug || req.query.taxonomySlugs));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.createTerm(req.body.slug || req.body.taxonomySlug, req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.updateTerm(req.query.term || req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.deleteTerm(req.query.term || req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Ecommerce,\n  Email,\n  Stripe,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.all(\n    '/stripe/checkout.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const token = req.body.token || JSON.parse(req.query.token);\n      const order = req.body.order || JSON.parse(req.query.order);\n\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.checkout(token, order));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/stripe/refund.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const order = req.body.order || JSON.parse(req.query.order);\n      const amount = Number(req.body.amount || req.query.amount || 0) * 100;\n\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.refund(order, amount));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/stripe/account.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.retrieveAccount());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/stripe/email.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig(req.session.slug);\n      const email = Email(config);\n      const stripe = Stripe(config);\n      const ecommerce = Ecommerce(config);\n\n      const settings = await stripe.getSettings();\n      const order = await ecommerce.getOrder(req.query.orderId);\n\n      const data = {\n        settings,\n        order,\n      };\n\n      const template = await email.getTemplate(`${req.session.slug}/${req.query.template}`, data);\n\n      try {\n        handleResponse(req, res, template.html);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = require(\"twitter\");","module.exports = ({\n  ClientConfig,\n  Instagram,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  const instagramAccessTokenMap = {};\n\n  router.get(\n    /\\/social\\/twitter\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      const Promise = require('bluebird');\n      const Twitter = require('twitter');\n\n      const twitter = Promise.promisifyAll(new Twitter({\n        consumer_key: config.twitter.consumerKey,\n        consumer_secret: config.twitter.consumerSecret,\n        access_token_key: config.twitter.accessTokenKey,\n        access_token_secret: config.twitter.accessTokenSecret,\n      }));\n\n      try {\n        handleResponse(req, res, await twitter[`${method}Async`](params.join('/'), req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    /\\/social\\/instagram\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      if (!instagramAccessTokenMap[req.session.slug]) {\n        const cc = ClientConfig(config);\n\n        try {\n          const clientConfig = await cc.get();\n          instagramAccessTokenMap[req.session.slug] = clientConfig.provider.instagram.access_token;\n        } catch (error) {\n          handleError(res, new Error('Instagram: access_token required'));\n          return;\n        }\n      }\n\n      req.query.access_token = instagramAccessTokenMap[req.session.slug];\n\n      const instagram = Instagram({\n        client_id: config.instagram.clientId,\n      });\n\n      try {\n        const result = await instagram[method](params.join('/'), req.query);\n        try {\n          delete result.pagination.next_url;\n        } catch (error) {\n          //\n        }\n        handleResponse(req, res, result, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Shippo,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.all(\n    '/shippo/quote.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const shippo = Shippo(await getConfig());\n\n      const address = req.body.address || JSON.parse(req.params.address);\n      const parcel = req.body.parcel || JSON.parse(req.params.parcel);\n\n      try {\n        handleResponse(req, res, await shippo.getQuote(address, parcel), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Settings,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/settings.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const settings = Settings(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await settings.update(req.body.settings));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Schema,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.create(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.read(req.query.schemaId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.update(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.delete(req.body.schemaSlug || req.body.schemaSlugs || req.query.schemaSlug || req.query.schemaSlugs));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schemas.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.updateAll(req.body.schemas));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","const _ = require('lodash');\n\nmodule.exports = ({\n  Pdf,\n  ClientConfig,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleError,\n}) => {\n\n  router.get(\n    '/pdf/view.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          pdf.getPdf(payload)\n            .then((pdf) => {\n              res.type('application/pdf');\n              res.status(200);\n              res.send(pdf);\n            }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/download.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          pdf.getPdf(payload)\n            .then((pdf) => {\n              res.attachment(payload.fileName || 'download.pdf');\n              res.status(200);\n              res.send(pdf);\n            }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/payload.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          res.status(200);\n          res.json(payload);\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/submit.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig(req.session.slug);\n\n      const cc = ClientConfig(config);\n      const clientConfig = await cc.get();\n\n      const assetSlug = _.get(clientConfig, 'assets.slug', req.session.slug);\n\n      const pdf = Pdf(config);\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          payload = JSON.stringify(payload).replace(/'/gi, '’');\n\n          res.status(200);\n          res.send(`\n          <body onload='form.submit()'>\n            <form id='form' method='POST' action='${config.assist.url}/${assetSlug}/pdf/download' target='_self'>\n              <input type='hidden' name='payload' value='${payload}' />\n            </form>\n          </body>\n        `);\n        }, handleError.bind(null, req, res));\n    })\n  );\n};\n","module.exports = ({\n  ClientConfig,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /metadata:\n   *  get:\n   *    tags:\n   *      - metadata\n   *    summary: Get metadata\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Metadata\n   *        schema:\n   *          type: object\n   *          properties:\n   *            description:\n   *              type: string\n   */\n  router.get(\n    '/metadata.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const cc = ClientConfig(await getConfig(req.session.slug));\n\n      const clientConfig = await cc.get();\n\n      try {\n        handleResponse(req, res, clientConfig.client.metadata, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","const isArray = require('lodash/isArray');\n\nmodule.exports = ({\n  Db,\n  Entity,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * definitions:\n   *  Entity:\n   *    type: object\n   *    required:\n   *      - _id\n   *      - _rev\n   *    properties:\n   *      _id:\n   *        type: string\n   *      _rev:\n   *        type: string\n   *      schema:\n   *        type: string\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      thumbnail:\n   *        type: object\n   *      fields:\n   *        type: object\n   *      published:\n   *        type: boolean\n   *      publishedAt:\n   *        type: string\n   */\n\n  /**\n   * @swagger\n   * /entities/index:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Show indexes\n   *    description: Show all indexes, use this to find fields available for search/query.\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Indexes\n   */\n  router.get(\n    '/entities/index.:ext?',\n    asyncMiddleware(async (req, res) => {\n      try {\n        handleResponse(req, res, await Db(await getConfig(req.session.slug)).indexAsync());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/search:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Search entities\n   *    description: This endpoint extends Cloudant's Lucene based search. Learn more from Cloudant's [documentation](https://docs.cloudant.com/search.html).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: Lucene search query\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: include_docs\n   *        description: Include docs in search results (ignored if `children` or `parents` is `true`)\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: sort\n   *        description: Field to sort results by. Prefixed with `-` to reverse order. Suffixed with &#60;`string|number`&#62;\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: limit\n   *        description: Limit results (max 200)\n   *        in: query\n   *        required: false\n   *        type: number\n   *      - name: bookmark\n   *        description: Bookmark for the next page of results\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: group_field\n   *        description: Field to group results by\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: index\n   *        description: Search index\n   *        in: query\n   *        required: false\n   *        type: string\n   *        default: all\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: trashed\n   *        description: Get trashed entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Search result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            total_rows:\n   *              type: number\n   *            rows:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/search?.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      const include_docs = input.include_docs !== undefined\n        ? JSON.parse(input.include_docs) : false;\n\n      const include_fields = input.include_fields !== undefined\n        ? typeof input.include_fields === 'object' ? input.include_fields : JSON.parse(input.include_fields)\n        : [];\n\n      let children = input.children !== undefined\n        ? typeof input.children === 'object' ? input.children : JSON.parse(input.children)\n        : false;\n      let parents = input.parents !== undefined\n        ? typeof input.parents === 'object' ? input.parents : JSON.parse(input.parents)\n        : false;\n\n      const trashed = input.trashed !== undefined\n        ? JSON.parse(input.trashed) : false;\n\n      const sort = input.sort !== undefined\n        ? input.sort : null;\n      const limit = input.limit !== undefined\n        ? parseInt(input.limit, 10) : null;\n\n      const bookmark = input.bookmark !== undefined\n        ? input.bookmark : null;\n\n      const group_field = input.group_field !== undefined\n        ? input.group_field : null;\n\n      const index = input.index !== undefined\n        ? input.index : null;\n\n      const q = input.query || input.q;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      let query = [];\n\n      query.push(trashed ? 'trashed:true' : '!trashed:true');\n\n      if (req.session.role === 'guest') {\n        query.push('published:true');\n      }\n\n      if (q) {\n        query.push(`(${q})`);\n      }\n\n      query = query.join(' AND ');\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entitySearch({\n          query,\n          include_docs,\n          include_fields,\n          sort,\n          limit,\n          bookmark,\n          group_field,\n          index,\n        }, children, parents, req.session.role), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/find:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Query entities\n   *    description: This endpoint extends CouchDB's Mango query. Learn more from Cloudant's [documentation](https://docs.cloudant.com/cloudant_query.html#finding-documents-using-an-index).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: JSON query object, refer to CouchDB/Cloudant docs.\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Query result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            docs:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/find.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      let children = (req.query.children || req.body.children) !== undefined\n        ? JSON.parse((req.query.children || req.body.children)) : false;\n      let parents = (req.query.parents || req.body.parents) !== undefined\n        ? JSON.parse(req.query.parents || req.body.parents) : false;\n      const trashed = (req.query.trashed || req.body.trashed) !== undefined\n        ? JSON.parse(req.query.trashed || req.body.trashed) : false;\n      const query = req.query.query || req.body.query\n        ? JSON.parse(req.query.query || req.body.query) : { selector: {} };\n\n      query.use_index = ['entityIndex', 'entity'];\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      if (!query.selector.$and) {\n        query.selector = {\n          $and: [\n            query.selector,\n          ],\n        };\n      }\n\n      if (trashed) {\n        query.selector.$and.push({ trashed: true });\n      } else {\n        query.selector.$and.push({\n          $or: [\n            {\n              trashed: {\n                $exists: false,\n              },\n            },\n            {\n              trashed: false,\n            },\n          ],\n        });\n      }\n\n      if (req.session.role === 'guest') {\n        query.selector.$and.push({ published: true });\n      }\n\n      if (req.query.limit) {\n        query.limit = parseInt(req.query.limit, 10);\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityFind(query, children, parents, req.session.role), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entities/field.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.fieldValues(req.query.slug || req.query.fieldSlug, req.query.searchTerm), true);\n      } catch (error) {\n        handleError(res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Get all entities\n   *    description: Get all entities, optionally from an array of IDs\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: id\n   *        description: Entity ID\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: ids\n   *        description: Entity IDs\n   *        in: query\n   *        required: false\n   *        type: array\n   *        items:\n   *          type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Entities\n   *        schema:\n   *          type: array\n   *          items:\n   *            $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      let children = (req.query.children || req.body.children) !== undefined\n        ? JSON.parse(req.query.children || req.body.children) : false;\n      let parents = (req.query.parents || req.body.parents) !== undefined\n        ? JSON.parse(req.query.parents || req.body.parents) : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      let ids = req.query.ids || req.query.id || req.body.ids || req.body.id;\n\n      if (ids) {\n        ids = isArray(ids) ? ids : [ids];\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityList(ids, children, parents, req.session.role), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity/revisions.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRevisions(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityCreate'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityCreate(req.body.entity));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRead(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityUpdate(req.body.entity || req.body.entities, req.body.restore || false));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityDelete(req.body.entity || req.body.entities, req.body.forever || false));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity/trashed.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityDelete('trashed'));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Embedly,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/embedly/oembed.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const embedly = Embedly(await getConfig());\n\n      try {\n        handleResponse(req, res, await embedly.oembed(req.query.url || req.query.urls));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Email,\n  Entity,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /email/template:\n   *  get:\n   *    tags:\n   *      - email\n   *    summary: Render email template\n   * #   description: Render email template\n   *    produces:\n   *      - text/html\n   *    parameters:\n   *      - name: slug\n   *        description: Slug (parent folder name of the template)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: templateSlug\n   *        description: Template slug (folder name of the template)\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: entityId\n   *        description: Entity `id` from which to render the template\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: preview\n   *        description: Preview mode (disable inlining of styles etc)\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *    responses:\n   *      200:\n   *        description: Template\n   */\n  router.all(\n    '/email/template.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query || {};\n\n      const options = {\n        data: input.data ? JSON.parse(input.data) : false,\n        preview: input.preview ? JSON.parse(input.preview) : false,\n        inky: input.inky ? JSON.parse(input.inky) : false,\n        mjml: input.mjml ? JSON.parse(input.mjml) : false,\n        skipValidation: input.skipValidation ? JSON.parse(input.skipValidation) : false,\n      };\n\n      const slug = req.session.slug || input.slug;\n\n      if (!slug) {\n        throw new Error('missing slug param');\n      }\n\n      async function renderTemplate(data = {}) {\n        if (options.data) {\n          handleResponse(req, res, data);\n          return;\n        }\n\n        const email = Email(await getConfig(slug));\n\n        const template = await email.getTemplate(`${slug}/${input.templateSlug}`, data, options);\n\n        try {\n          handleResponse(req, res, template.html);\n        } catch (error) {\n          handleError(req, res, error);\n        }\n      }\n\n      if (input.payload) {\n        renderTemplate(JSON.parse(input.payload));\n        return;\n      }\n\n      if (input.entityId) {\n        const entity = Entity(await getConfig(slug));\n\n        const entities = (await entity.entityList([input.entityId], 2)).map(row => row.doc);\n\n        renderTemplate(entity.flattenValues(entities)[0]);\n        return;\n      }\n\n      renderTemplate();\n    })\n  );\n\n  router.post(\n    '/email/subscribe.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const email = Email(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await email.subscribe({\n          email: req.body.email || req.query.email,\n          name: req.body.name || req.query.name || '',\n        }));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const isArray = require('lodash/isArray');\n\nmodule.exports = ({\n  Ecommerce,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/ecommerce/order/message/:message.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        const order = await ecommerce.getOrder(req.query.orderId);\n        handleResponse(req, res, order.messages[req.params.message].email.html);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (isArray(req.query.sort)) {\n        req.query.sort = JSON.stringify(req.query.sort).replace(/\\\\\"/g, '');\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.getType(req.params.type, req.query));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (!/^(discount|order)$/.test(req.params.type)) {\n        handleError(req, res, `Illegal type: ${req.params.type}`);\n        return;\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.setType(req.params.type, req.body.item));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (!/^(discount)$/.test(req.params.type)) {\n        handleError(req, res, `Illegal type: ${req.params.type}`);\n        return;\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.deleteType(req.body.item));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/ecommerce/discount/:code.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.verifyDiscount(req.params.code));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = require(\"express-useragent\");","module.exports = ({\n  router,\n}) => {\n\n  router.all('/debug/useragent.:ext?', (req, res) => {\n    const expressUseragent = require('express-useragent');\n    const useragent = expressUseragent.parse(req.headers['user-agent']);\n\n    res.status(200);\n    res.send(`\n      <html>\n        <head>\n          <title>${useragent.source}</title>\n          <meta name=\"description\" content=\"${useragent.source}\">\n        </head>\n        <body>${useragent.source}</body>\n      </html>\n    `);\n  });\n\n};\n","module.exports = ({\n  ClientConfig,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/config.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.get());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/config.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'config'),\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.set(req.body.config));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  router,\n  cache,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n}) => {\n\n  /**\n   * @swagger\n   * /cache/clear:\n   *  get:\n   *    tags:\n   *      - cache\n   *    summary: Clear cache\n   *    description: Clears the LRU cache of API responses\n   *    produces:\n   *      - text/plain\n   *    responses:\n   *      200:\n   *        description: Result\n   */\n  router.get(\n    '/cache/clear.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      if (!config.cache.enabled) {\n        handleResponse(req, res, 'Cache disabled');\n        return;\n      }\n\n      const items = [];\n\n      cache.forEach((value, key) => {\n        if (key.indexOf(req.session.slug) === 0) {\n          items.push(key);\n        }\n      });\n\n      items.forEach(key => cache.del(key));\n\n      handleResponse(req, res, `${items.length} items removed from cache`);\n    })\n  );\n\n};\n","module.exports = ({\n  Auth,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/auth/:provider/config.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      if (!config[req.params.provider]) {\n        res.status(404);\n        res.send({});\n        return;\n      }\n\n      res.status(200);\n      res.send({ clientId: config[req.params.provider].clientId });\n    })\n  );\n\n  router.get(\n    '/auth/:provider.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    (req, res) => {\n      res.status(req.query.error ? 500 : 200);\n      res.send(`${req.params.provider}: ${(req.query.error_description ? req.query.error_description : 'successfully authenticated')}`);\n    }\n  );\n\n  router.post(\n    '/auth/:provider.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authenticateWithProvider(req.params.provider, req.body));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/auth/:provider.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authenticateWithProvider(req.params.provider, req.body, true));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Analytics,\n  router,\n  authMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/analytics.:ext?',\n    authMiddleware,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const analytics = Analytics(await getConfig());\n\n      try {\n        handleResponse(req, res, await analytics.get(req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass User {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.users.push(user);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async update(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.users, { id: user.id });\n\n    if (index === -1) {\n      throw Error(`User not found: ${user.id}`);\n    }\n\n    clientConfig.users.splice(index, 1, user);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    userId = _.isArray(userId) ? userId : [userId];\n\n    clientConfig.users = clientConfig.users.filter(user => userId.indexOf(user.id) === -1);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = User;\n","const Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst Cloudant = require('@cloudant/cloudant');\nconst Db = require('./db');\n\nclass Tools {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getDb() {\n    const result = await Db.connect(this.config).fetch({\n      include_docs: true,\n    });\n\n    return result;\n  }\n\n  async getChanges() {\n    const result = await Db.connect(this.config).changes({\n      limit: 50,\n      include_docs: true,\n      filter: 'tools/changesEntity',\n    });\n\n    return result;\n  }\n\n  async importDb(dbBackupFile) {\n    const dbName = this.config.db.name;\n\n    const fileConents = await fs.readFileAsync(dbBackupFile.path);\n\n    const docs = JSON.parse(fileConents).rows.map((row) => {\n      const { doc } = row;\n      delete doc._rev;\n      return doc;\n    });\n\n    await fs.unlinkAsync(dbBackupFile.path);\n\n    const cloudant = new Cloudant({\n      url: this.config.db.url,\n      plugins: ['promises', 'retry'],\n    }).db;\n\n    try {\n      await cloudant.destroy(dbName);\n    } catch (error) {\n      //\n    }\n\n    await cloudant.create(dbName);\n\n    const result = await Db.connect(this.config, dbName).bulk({ docs });\n\n    return result;\n  }\n\n}\n\nmodule.exports = Tools;\n","const _ = require('lodash');\nconst Db = require('./db');\nconst ClientConfig = require('./client-config');\n\nclass Taxonomy {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async create(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.taxonomies.push(taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const taxonomy = _.find(clientConfig.taxonomies, { slug: taxonomySlug });\n\n    if (!taxonomy) {\n      throw Error(`Taxonomy not found: ${taxonomySlug}`);\n    }\n\n    return taxonomy;\n  }\n\n  async update(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.taxonomies, { slug: taxonomy.slug });\n\n    if (index === -1) {\n      throw Error(`Taxonomy not found: ${taxonomy.slug}`);\n    }\n\n    clientConfig.taxonomies.splice(index, 1, taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    taxonomySlug = _.isArray(taxonomySlug) ? taxonomySlug : [taxonomySlug];\n\n    clientConfig.taxonomies = clientConfig.taxonomies.filter(taxonomy => taxonomySlug.indexOf(taxonomy.slug) === -1);\n\n    return cc.set(clientConfig);\n  }\n\n  async entitiesByTerm(term) {\n    const db = Db.connect(this.config);\n\n    const entityGroups = (await db.view('entity', 'byTaxonomyTerm', { keys: [term.id], group: true })).rows.map(row => row.value)[0];\n\n    if (!entityGroups) {\n      return [];\n    }\n\n    let entityIds = [];\n\n    _.forEach(entityGroups, (entities) => {\n      entityIds = entityIds.concat(entities);\n    });\n\n    entityIds = _.uniq(entityIds);\n\n    return (await db.fetch({ keys: entityIds, include_docs: true })).rows.map(row => row.doc);\n  }\n\n  async createTerm(taxonomySlug, term) {\n    const taxonomy = await this.read(taxonomySlug);\n\n    taxonomy.terms.push(term);\n\n    return this.update(taxonomy);\n  }\n\n  async updateTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.map((_term) => {\n            if (_term.id === term.id) {\n              _term.title = term.title;\n              _term.slug = term.slug;\n            }\n\n            if (!_term.parents) {\n              _term.parents = [];\n            }\n\n            _term.parents = _term.parents.map((parent) => {\n              if (parent.id === term.id) {\n                parent.title = term.title;\n                parent.slug = term.slug;\n              }\n              return parent;\n            });\n\n            return _term;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n\n  async deleteTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.filter((_term) => {\n            if (_term.id === term.id) {\n              return false;\n            }\n\n            if ((_term.parents || []).filter(parent => parent.id === term.id).length) {\n              return false;\n            }\n\n            return true;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n}\n\nmodule.exports = Taxonomy;\n","module.exports = require(\"hashids\");","module.exports = require(\"stripe\");","const _ = require('lodash');\nconst Stripe = require('stripe');\nconst Promise = require('bluebird');\nconst Hashids = require('hashids');\n\nconst ClientConfig = require('./client-config');\nconst Email = require('./email');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass StripeClass {\n  constructor(config) {\n    this.config = config;\n\n    this.stripe = Stripe(this.config.stripe.apiKey);\n    this.email = new Email(this.config);\n\n    this.hashids = new Hashids(this.config.slug, 6, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n  }\n\n  async getSettings() {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    let settings;\n\n    try {\n      settings = clientConfig.module.ecommerce;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    try {\n      settings.clientStripeAccountId = clientConfig.provider.stripe.stripe_user_id;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    settings.client = clientConfig.client;\n    settings.assets = clientConfig.assets;\n\n    return settings;\n  }\n\n  checkout(token, order) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n\n          const listId = _.get(settings, 'createsend.checkoutSubscriberListId');\n\n          if (order.subscribe && listId) {\n            this.email.subscribe(order.customerDetails, 'createsend', listId)\n              .then((result) => {\n                console.log(result);\n              }, (error) => {\n                console.error(error);\n              });\n          }\n\n          // lookup customer by email, create if not found\n          this.findOrCreateCustomer(order.customerDetails.email, order)\n            .then((customer) => {\n\n              // store order data (customer, items, address)\n              this.createOrder(order, customer)\n                .then((order) => {\n\n                  this.updateOrCreateStripeCustomer(settings.clientStripeAccountId, customer, token, order)\n                    .then((stripeCustomer) => {\n\n                      // update customer, append order to customer, update metadata\n                      this.updateCustomer(customer, stripeCustomer, order)\n                        .then((customer) => {\n\n                          // create charge, take fee\n                          this.createCharge(settings, stripeCustomer, customer, order)\n                            .then((updatedOrder) => {\n\n                              this.sendReceipt(settings, customer, order)\n                                .then((orderReceipt) => {\n\n                                  updatedOrder.messages.orderReceipt = orderReceipt;\n\n                                  this.sendNotification(settings, customer, order)\n                                    .then((orderNotification) => {\n\n                                      updatedOrder.messages.orderNotification = orderNotification;\n\n                                      // update order charge status, charge id\n                                      this.updateOrder(updatedOrder)\n                                        .then((finalOrder) => {\n\n                                          resolve(finalOrder);\n\n                                        }, reject);\n                                    }, reject);\n                                }, reject);\n                            }, reject);\n                        }, reject);\n                    }, reject);\n                }, reject);\n            }, reject);\n        }, reject)\n        .catch(reject);\n    });\n  }\n\n  retrieveAccount() {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.accounts.retrieve(settings.clientStripeAccountId)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  refund(order, amount) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.refunds.create({\n            refund_application_fee: true,\n            charge: order.charge.id,\n            amount,\n          }, {\n            stripe_account: settings.clientStripeAccountId,\n          })\n            .then((refund) => {\n              this.stripe.charges.retrieve(order.charge.id, {\n                stripe_account: settings.clientStripeAccountId,\n              })\n                .then((charge) => {\n                  order.charge.status = charge.status;\n                  order.charge.amount = charge.amount;\n                  order.charge.amountRefunded = charge.amount_refunded;\n\n                  Helpers.createOrUpdate(this.config, order)\n                    .then(resolve, reject);\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  findOrCreateCustomer(email, order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'customerByEmail', {\n        keys: [email],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            resolve(body.rows[0].doc);\n\n          } else {\n            const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n            const newCustomer = {\n              type: 'customer',\n              createdAt: now,\n              modifiedAt: now,\n              email: order.customerDetails.email,\n              name: order.customerDetails.name,\n              phone: order.customerDetails.phone,\n              billingAddress: order.billingAddress,\n              shippingAddress: order.shippingAddress,\n              orders: [],\n            };\n\n            Db.connect(this.config).insert(newCustomer)\n              .then((body) => {\n                newCustomer._id = body.id;\n                newCustomer._rev = body.rev;\n\n                resolve(newCustomer);\n              }, reject);\n          }\n        }, reject);\n    });\n  }\n\n  updateOrCreateStripeCustomer(clientStripeAccountId, customer, token, order) {\n    return new Promise((resolve, reject) => {\n      const stripeCustomer = {\n        source: token,\n        email: order.customer.email,\n        description: order.customer.name,\n        metadata: {\n          customer_id: customer._id,\n        // billingAddress: JSON.stringify(order.billingAddress),\n        // shippingAddress: JSON.stringify(order.shippingAddress)\n        },\n      };\n\n      if (customer.stripe && customer.stripe.customer.id) {\n        this.stripe.customers.update(customer.stripe.customer.id, stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        })\n          .then(resolve, (error) => {\n            if (error.type === 'StripeInvalidRequestError' && error.param === 'id') {\n              this.stripe.customers.create(stripeCustomer, {\n                stripe_account: clientStripeAccountId,\n              }).then(resolve, reject);\n\n            } else {\n              reject(error);\n            }\n          });\n\n      } else {\n        this.stripe.customers.create(stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        }).then(resolve, reject);\n      }\n    });\n  }\n\n  createOrder(order, customer) {\n    return new Promise((resolve, reject) => {\n      const items = order.items.map(item => ({\n        id: item.id,\n        title: item.title.replace(/<br\\s?>/ig, ' ').replace(/<\\/?p>|<\\/?span>/ig, ''),\n        price: item.price,\n        quantity: item.quantity,\n        metadata: item.metadata || {},\n      }));\n\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      const newOrder = {\n        type: 'order',\n        orderId: this.hashids.encode(new Date().getTime()),\n        createdAt: now,\n        modifiedAt: now,\n        customer: {\n          id: customer._id,\n          email: customer.email,\n          name: customer.name,\n        },\n        items,\n        shippingMethod: {\n          name: order.shippingMethod.name,\n          amount: Number(order.shippingMethod.amount),\n        },\n        subtotal: Number(order.subtotal),\n        tax: {\n          rate: order.tax.rate || 0,\n          includedInPrice: order.tax.includedInPrice || false,\n          total: order.tax.total || 0,\n          show: order.tax.show || false,\n        },\n        discount: {\n          code: order.discount.code || '',\n          name: order.discount.name || '',\n          total: order.discount.total || 0,\n        },\n        total: Number(order.total),\n        billingAddress: order.billingAddress,\n        shippingAddress: order.shippingAddress,\n        messages: {},\n        status: 'pending',\n        test: true,\n      };\n\n      Db.connect(this.config).insert(newOrder)\n        .then((body) => {\n          newOrder._id = body.id;\n          newOrder._rev = body.rev;\n\n          resolve(newOrder);\n        }, reject);\n    });\n  }\n\n  updateOrder(order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).insert(order)\n        .then((body) => {\n          order._rev = body.rev;\n\n          resolve(order);\n        }, reject);\n    });\n  }\n\n  updateCustomer(customer, stripeCustomer, order) {\n    return new Promise((resolve, reject) => {\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      customer.modifiedAt = now;\n\n      if (!customer.orders) {\n        customer.orders = [];\n      }\n\n      customer.orders.push(order._id);\n\n      if (!customer.stripe) {\n        customer.stripe = {\n          customer: {\n            id: null,\n          },\n        };\n      }\n\n      customer.stripe.customer.id = stripeCustomer.id;\n\n      Db.connect(this.config).insert(customer)\n        .then((body) => {\n          customer._rev = body.rev;\n\n          resolve(customer);\n        }, reject);\n    });\n  }\n\n  createCharge(settings, stripeCustomer, customer, order) {\n    return new Promise((resolve, reject) => {\n      const amount = Number(order.total) * 100;\n\n      const charge = {\n        amount,\n        currency: settings.currency.iso.toLowerCase(),\n        customer: stripeCustomer.id,\n        capture: true,\n        description: order.orderId,\n        // shipping: order.shippingAddress, // fraud prevention, must follow expected schema\n        metadata: {\n          customer_id: customer._id,\n          order_id: order._id,\n        },\n        statement_descriptor: _.kebabCase(settings.storeName).toUpperCase(),\n        application_fee: Math.ceil(amount * 0.02),\n      };\n\n      this.stripe.charges.create(charge, {\n        stripe_account: settings.clientStripeAccountId,\n      })\n        .then((charge) => {\n\n          order.charge = {\n            paymentGateway: 'stripe',\n            id: charge.id,\n            status: charge.status,\n            currency: charge.currency.toUpperCase(),\n            amount: charge.amount,\n            amountRefunded: charge.amount_refunded,\n          };\n\n          order.test = !charge.livemode;\n\n          resolve(order);\n\n        }, reject);\n    });\n  }\n\n  sendReceipt(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: customer.email,\n        subject: `Your order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-receipt`, templateData).then(resolve, reject);\n    });\n  }\n\n  sendNotification(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: settings.emailSenderAddress,\n        subject: `New order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-notification`, templateData).then(resolve, reject);\n    });\n  }\n\n}\n\nmodule.exports = StripeClass;\n","module.exports = require(\"shippo\");","const Promise = require('bluebird');\nconst shippo = require('shippo');\n\nclass Shippo {\n  constructor(config) {\n    this.config = config;\n\n    this.shippo = shippo(config.shippo.token);\n  }\n\n  getQuote(address, parcel) {\n    return new Promise((resolve, reject) => {\n\n      const addressFrom = {\n        object_purpose: 'QUOTE',\n        zip: this.config.shippo.fromZip,\n        country: this.config.shippo.fromCountry,\n      };\n\n      const addressTo = {\n        object_purpose: 'QUOTE',\n        // 'name': address.name,\n        // 'company': '',\n        // 'street1': address.street1,\n        // 'street2': address.street2,\n        // 'city': address.city,\n        // 'state': '',\n        zip: address.zip,\n        country: address.country,\n        // 'phone': address.phone,\n        // 'email': address.email,\n        metadata: '',\n      };\n\n      parcel.distance_unit = 'cm';\n      parcel.mass_unit = 'kg';\n\n      this.shippo.shipment.create({\n        object_purpose: 'QUOTE',\n        address_from: addressFrom,\n        address_to: addressTo,\n        parcel,\n      })\n        .then((shipment) => {\n          const ratesReady = (shipment, attempts) => {\n            if ((shipment.object_status === 'QUEUED' || shipment.object_status === 'WAITING') && attempts < 10) {\n              this.shippo.shipment.retrieve(shipment.object_id).then((val) => {\n                ratesReady(val, attempts + 1);\n              });\n\n            } else {\n              this.shippo.shipment.rates(shipment.object_id)\n                .then((rates) => {\n                  resolve(rates);\n\n                }, (error) => {\n                  console.error('There was an error retrieving rates : %s', error);\n                  reject(error);\n                });\n            }\n          };\n\n          ratesReady(shipment, 0);\n\n        }, (error) => {\n          console.error('There was an error creating shipment: %s', error);\n          reject(error);\n        });\n\n    });\n  }\n\n}\n\nmodule.exports = Shippo;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass Settings {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async update(settings) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.client = _.merge({}, clientConfig.client, settings);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = Settings;\n","const _ = require('lodash');\nconst request = require('request-promise');\nconst Entity = require('./entity');\nconst ClientConfig = require('./client-config');\n\nclass Pdf {\n  constructor (config) {\n    this.config = config;\n    this.templates = this.config.pdf.templates;\n  }\n\n  async getPayload (templateId, entityId, role) {\n    if (!this.templates[templateId]) {\n      throw new Error('Template not found');\n    }\n\n    const entity = new Entity(this.config);\n\n    const entities = (await entity.entityList([entityId], 2, false, role)).map(row => row.doc);\n\n    if (entities.length === 0) {\n      throw new Error('Entity not found');\n    }\n\n    const payload = this.templates[templateId](Entity.flattenValues(entities)[0]);\n\n    return payload;\n  }\n\n  async getPdf (payload) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n    const assistPdfUrl = `${this.config.assist.url}/${assetSlug}/pdf/download`;\n\n    payload = typeof payload === 'object' ? JSON.stringify(payload).replace(/'/gi, '’') : payload;\n\n    const response = await request({\n      method: 'POST',\n      uri: assistPdfUrl,\n      encoding: null,\n      form: {\n        payload,\n      },\n    });\n\n    return response;\n  }\n\n}\n\nmodule.exports = Pdf;\n","module.exports = require(\"jsonwebtoken\");","const jwt = require('jsonwebtoken');\n\nclass Jwt {\n  constructor(config) {\n    this.config = config;\n  }\n\n  signToken(payload, options = {}) {\n    return jwt.sign(payload, this.config.auth.tokenSecret, options);\n  }\n\n  verifyToken(token) {\n    return jwt.verify(token, this.config.auth.tokenSecret);\n  }\n}\n\nmodule.exports = Jwt;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst request = require('request-promise');\n\nmodule.exports = function (options) {\n  const defaultOptions = {\n    client_id: null,\n    access_token: null,\n    version: 'v1',\n    host: 'https://api.instagram.com',\n  };\n\n  options = _.merge({}, defaultOptions, options || {});\n\n  const _request = (method, endpoint, query) => new Promise((resolve, reject) => {\n    const requestOptions = {\n      method,\n      url: [options.host, options.version, endpoint].join('/'),\n      qs: {\n        access_token: query.access_token || options.access_token,\n        client_id: query.client_id || options.client_id,\n      },\n    };\n\n    requestOptions.qs = _.extend({}, requestOptions.qs, query);\n\n    request(requestOptions)\n      .then((response) => {\n        resolve(JSON.parse(response));\n      }, reject);\n  });\n\n  this.get = (endpoint, query) => _request('GET', endpoint, query);\n};\n","module.exports = require(\"deep-diff\");","module.exports = require(\"json-query\");","module.exports = require(\"embedly\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst EmbedlyApi = require('embedly');\n\nclass Embedly {\n  constructor(config) {\n    this.config = config;\n  }\n\n  oembed(urls) {\n    return new Promise((resolve, reject) => {\n      const embedly = new EmbedlyApi({\n        key: this.config.embedly.apiKey,\n      });\n\n      const opts = {\n        urls: _.isArray(urls) ? urls : [urls],\n        format: 'json',\n      };\n\n      embedly.oembed(opts, (error, result) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(result);\n      });\n    });\n  }\n\n}\n\nmodule.exports = Embedly;\n","module.exports = require(\"node-sass\");","module.exports = require(\"i18n-iso-countries\");","module.exports = require(\"moment\");","module.exports = require(\"html-to-text\");","module.exports = require(\"mjml-mailchimp\");","module.exports = require(\"mjml-validator\");","module.exports = require(\"mjml-core\");","module.exports = require(\"mjml\");","module.exports = require(\"inky\");","module.exports = require(\"email-templates\");","module.exports = require(\"nodemailer-mailgun-transport\");","module.exports = require(\"createsend-node\");","module.exports = require(\"nodemailer\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass Ecommerce {\n  constructor(config) {\n    this.config = config;\n  }\n\n  getType(type, query) {\n    return new Promise((resolve, reject) => {\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      Db.connect(this.config).search('ecommerce', type, query)\n        .then(resolve, reject);\n    });\n  }\n\n  setType(type, item) {\n    return new Promise((resolve, reject) => {\n      item.type = type;\n\n      Helpers.createOrUpdate(this.config, item)\n        .then(resolve, reject);\n    });\n  }\n\n  deleteType(items) {\n    return new Promise((resolve, reject) => {\n      items = items.map(item => ({\n        _id: item._id,\n        _rev: item._rev,\n        _deleted: true,\n      }));\n\n      Helpers.chunkUpdate(this.config, items, 1000)\n        .then(resolve, reject);\n    });\n  }\n\n  getOrder(orderId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'orderByOrderId', {\n        key: orderId,\n        include_docs: true,\n      })\n        .then((body) => {\n          if (!body.rows.length) {\n            reject(new Error('Order not found'));\n            return;\n          }\n\n          resolve(body.rows[0].doc);\n        }, reject);\n    });\n  }\n\n  verifyDiscount(code) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'discountByCode', {\n        keys: [code],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            const discount = body.rows[0].doc;\n\n            const now = new Date().getTime();\n\n            const dateStart = new Date(Date.parse(discount.dateStart)).getTime();\n            const dateEnd = new Date(Date.parse(discount.dateEnd)).getTime();\n\n            if (dateStart > now) {\n              reject(new Error('Discount not valid (not begun)'));\n              return;\n\n            }\n\n            if (dateEnd < now) {\n              reject(new Error('Discount not valid (expired)'));\n              return;\n            }\n\n            resolve(discount);\n\n          } else {\n            reject(new Error({\n              statusCode: 404,\n              message: `Discount code not found (${code})`,\n            }));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Ecommerce;\n","module.exports = require(\"querystring\");","const _ = require('lodash');\nconst querystring = require('querystring');\nconst axios = require('axios');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\n\nconst providerTokenUri = {\n  google: 'https://www.googleapis.com/oauth2/v4/token',\n  instagram: 'https://api.instagram.com/oauth/access_token',\n  stripe: 'https://connect.stripe.com/oauth/token',\n  vimeo: 'https://api.vimeo.com/oauth/access_token',\n};\n\nclass Auth {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async authoriseUser(slug, userId) {\n    const isSuperUser = this.config.auth.superUserId.split(',').map(superUser => superUser.trim()).indexOf(userId) > -1;\n\n    if (isSuperUser) {\n      return {\n        id: userId,\n        role: 'super',\n      };\n    }\n\n    const clientConfig = await Db.connect(this.config, slug).get('config');\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    if (!user.active) {\n      throw Error(`User not active: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async authenticateWithProvider(provider, params, refresh = false) {\n    const providerConfig = _.merge({}, this.config[provider], params);\n\n    const data = {\n      grant_type: refresh ? 'refresh_token' : 'authorization_code',\n      client_id: providerConfig.clientId,\n      client_secret: providerConfig.clientSecret,\n      redirect_uri: providerConfig.redirectUri,\n      code: params.code,\n      refresh_token: params.refresh_token,\n    };\n\n    const uri = providerTokenUri[provider];\n\n    let response;\n    try {\n      response = await axios.post(uri, querystring.stringify(data));\n    } catch (error) {\n      throw new Error(error.response.data.error_description);\n    }\n\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    if (!clientConfig.provider) {\n      clientConfig.provider = {};\n    }\n\n    const providerClientConfig = _.merge({}, clientConfig.provider[provider] || {}, response.data);\n\n    if (provider === 'google') {\n      providerClientConfig.expires = providerClientConfig.expires_in + Math.floor(+new Date() / 1000);\n      try {\n        providerClientConfig.user = (await axios.get(`https://www.googleapis.com/plus/v1/people/me?access_token=${providerClientConfig.access_token}`)).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    clientConfig.provider[provider] = providerClientConfig;\n\n    return cc.set(clientConfig);\n  }\n\n}\n\nmodule.exports = Auth;\n","module.exports = require(\"password-hash\");","const path = require('path');\n\nconst config = {\n  environment: process.env.ENVIRONMENT || 'development',\n  debug: process.env.DEBUG || false,\n\n  slug: process.env.SLUG,\n  baseUrl: process.env.BASE_URL || '',\n\n  db: {\n    url: process.env.DB_URL,\n    host: process.env.DB_HOST,\n    name: process.env.DB_NAME,\n    requestPlugin: process.env.DB_REQUEST_PLUGIN,\n    meterType: process.env.DB_METER_TYPE,\n  },\n\n  auth: {\n    superUserId: process.env.AUTH_SUPER_USER_ID,\n    tokenSecret: process.env.AUTH_TOKEN_SECRET || 'change_this_secret',\n  },\n\n  dev: {\n    userId: process.env.DEV_USER_ID || 'dev',\n    role: process.env.DEV_ROLE || 'super',\n  },\n\n  assist: {\n    url: process.env.ASSIST_URL,\n    username: process.env.ASSIST_USERNAME,\n    password: process.env.ASSIST_PASSWORD,\n  },\n\n  instagram: {\n    clientId: process.env.INSTAGRAM_CLIENT_ID,\n    clientSecret: process.env.INSTAGRAM_CLIENT_SECRET,\n  },\n\n  twitter: {\n    consumerKey: process.env.TWITTER_CONSUMER_KEY,\n    consumerSecret: process.env.TWITTER_CONSUMER_SECRET,\n    accessTokenKey: process.env.TWITTER_ACCESS_TOKEN_KEY,\n    accessTokenSecret: process.env.TWITTER_ACCESS_TOKEN_SECRET,\n  },\n\n  google: {\n    clientId: process.env.GOOGLE_CLIENT_ID,\n    clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n  },\n\n  mailgun: {\n    apiKey: process.env.MAILGUN_API_KEY,\n    domain: process.env.MAILGUN_DOMAIN,\n  },\n\n  embedly: {\n    apiKey: process.env.EMBEDLY_API_KEY,\n  },\n\n  aws: {\n    iamAccessKeyId: process.env.AWS_IAM_ACCESS_KEY_ID,\n    iamAccessKeySecret: process.env.AWS_IAM_ACCESS_KEY_SECRET,\n\n    s3: {\n      bucket: process.env.AWS_S3_BUCKET,\n    },\n\n    // tcode: {\n    //   region: process.env.AWS_TCODE_REGION,\n    //   pipelineId: process.env.AWS_TCODE_PIPELINE_ID,\n    //   bucketIn: process.env.AWS_TCODE_BUCKET_IN,\n    //   bucketOut: process.env.AWS_TCODE_BUCKET_OUT,\n    // },\n  },\n\n  shippo: {\n    token: process.env.SHIPPO_TOKEN,\n    fromZip: process.env.SHIPPO_FROM_ZIP,\n    fromCountry: process.env.SHIPPO_FROM_COUNTRY,\n  },\n\n  stripe: {\n    clientId: process.env.STRIPE_CLIENT_ID,\n    clientSecret: process.env.STRIPE_CLIENT_SECRET,\n    apiKey: process.env.STRIPE_API_KEY,\n  },\n\n  vimeo: {\n    clientId: process.env.VIMEO_CLIENT_ID,\n    clientSecret: process.env.VIMEO_CLIENT_SECRET,\n  },\n\n  zencoder: {\n    apiKey: process.env.ZENCODER_API_KEY,\n    s3: {\n      bucket: process.env.ZENCODER_S3_BUCKET,\n      credentials: process.env.ZENCODER_S3_CREDENTIALS,\n    },\n  },\n\n  pdf: {\n    templates: {},\n  },\n\n  email: {\n    templatesPath: path.resolve(__dirname, 'email'),\n  },\n};\n\nmodule.exports = config;\n","function Api() { }\n\nApi.defaultConfig = require('./config.default');\n\nApi.Assist = (...args) => new (require('./lib/assist'))(...args);\nApi.Auth = (...args) => new (require('./lib/auth'))(...args);\nApi.ClientConfig = (...args) => new (require('./lib/client-config'))(...args);\nApi.Db = (...args) => new (require('./lib/db'))(...args);\nApi.Ecommerce = (...args) => new (require('./lib/ecommerce'))(...args);\nApi.Email = (...args) => new (require('./lib/email'))(...args);\nApi.Embedly = (...args) => new (require('./lib/embedly'))(...args);\nApi.Entity = (...args) => new (require('./lib/entity'))(...args);\nApi.Fields = (...args) => new (require('./lib/fields'))(...args);\nApi.Helpers = (...args) => new (require('./lib/helpers'))(...args);\nApi.Instagram = (...args) => new (require('./lib/instagram'))(...args);\nApi.Jwt = (...args) => new (require('./lib/jwt'))(...args);\nApi.Pdf = (...args) => new (require('./lib/pdf'))(...args);\nApi.Roles = (...args) => new (require('./lib/roles'))(...args);\nApi.Schema = (...args) => new (require('./lib/schema'))(...args);\nApi.Settings = (...args) => new (require('./lib/settings'))(...args);\nApi.Shippo = (...args) => new (require('./lib/shippo'))(...args);\nApi.Stripe = (...args) => new (require('./lib/stripe'))(...args);\nApi.Taxonomy = (...args) => new (require('./lib/taxonomy'))(...args);\nApi.Tools = (...args) => new (require('./lib/tools'))(...args);\nApi.User = (...args) => new (require('./lib/user'))(...args);\n\nmodule.exports = Api;\n","module.exports = require(\"xxhashjs\");","module.exports = require(\"deep-freeze\");","module.exports = require(\"object-sizeof\");","module.exports = require(\"circular-json-es6\");","module.exports = require(\"le_node\");","module.exports = require(\"zlib\");","module.exports = require(\"url-parse\");","module.exports = require(\"cache-manager-redis-store\");","module.exports = require(\"cache-manager\");","process.on('unhandledRejection', result => console.error(result));\n\nconst _ = require('lodash');\nconst express = require('express');\nconst cacheManager = require('cache-manager');\nconst redisStore = require('cache-manager-redis-store');\nconst Promise = require('bluebird');\nconst URL = require('url-parse');\nconst zlib = Promise.promisifyAll(require('zlib'));\nconst Logger = require('le_node');\nconst CircularJSON = require('circular-json-es6');\nconst sizeof = require('object-sizeof');\nconst deepFreeze = require('deep-freeze');\nconst XXH = require('xxhashjs');\n\nconst Api = require('../index');\n\nconst HASH_SEED = 0xABCD;\n\nconst defaultConfig = require('./config.default');\n\nfunction AceApiServer (app, customConfig = {}, customAuthMiddleware = null) {\n  const config = deepFreeze(_.merge({}, Api.defaultConfig, defaultConfig, customConfig));\n\n  // Async middleware\n\n  const asyncMiddleware = fn => (req, res, next) => {\n    Promise.resolve(fn(req, res, next))\n      .catch(next);\n  };\n\n  // Skip authorisation\n\n  const skipAuth = (req) => {\n    if (config.environment !== 'development') {\n      return false;\n    }\n    const allowedRoutes = [\n      '/token',\n      '/email/template',\n    ];\n    return allowedRoutes.indexOf(req.path) > -1;\n  };\n\n  // Default auth middleware\n\n  const defaultAuthMiddleware = (req, res, next) => {\n    if (skipAuth(req)) {\n      next();\n      return;\n    }\n\n    if (!req.session.userId) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  const authMiddleware = customAuthMiddleware || defaultAuthMiddleware;\n\n  // Permissions middleware\n\n  const permissionMiddleware = (permission, req, res, next) => {\n    if (!req.session.role) {\n      res.status(401);\n      res.send({\n        permission,\n        message: 'Error: role not defined in session.',\n      });\n      return;\n    }\n\n    if (req.session.role === 'super') {\n      next();\n      return;\n    }\n\n    const roles = Api.Roles();\n\n    if (!roles.role(req.session.role) || roles.role(req.session.role).permissions[permission] !== true) {\n      res.status(401);\n      res.send({\n        permission,\n        message: 'Sorry, you\\'re not authorised to do this.',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  // Clone and extend config per request/session\n\n  const omitUndefined = (obj) => {\n    _.forIn(obj, (value, key, obj) => {\n      if (_.isPlainObject(value)) {\n        value = omitUndefined(value);\n\n        if (_.keys(value).length === 0) {\n          delete obj[key];\n        }\n      }\n\n      if (_.isUndefined(value)) {\n        delete obj[key];\n      }\n    });\n\n    return obj;\n  };\n\n  const cloneConfig = config => _.mergeWith({}, JSON.parse(JSON.stringify(config)), omitUndefined(_.cloneDeep(config)));\n\n  const getConfig = async (slug) => {\n    const configClone = cloneConfig(config);\n\n    configClone.slug = slug;\n    configClone.db.name = slug;\n\n    return configClone;\n  };\n\n  // Cache\n\n  let cache;\n\n  if (config.cache.enabled) {\n    if (config.redis.url || config.redis.host) {\n      const redisOptions = {\n        ttl: config.cache.ttl,\n      };\n\n      if (config.redis.url) {\n        redisOptions.url = config.redis.url;\n      } else {\n        redisOptions.host = config.redis.host;\n        redisOptions.port = config.redis.port;\n        redisOptions.password = config.redis.password;\n        redisOptions.db = config.redis.db;\n      }\n\n      cache = cacheManager.caching(_.merge({ store: redisStore }, redisOptions));\n\n      const redisClient = cache.store.getClient();\n      redisClient.on('error', (error) => {\n        console.error('redis: error:', error);\n      });\n\n    } else {\n      cache = cacheManager.caching({\n        store: 'memory',\n        ttl: config.cache.ttl,\n        max: config.cache.memory.max,\n        length: (item) => {\n          // const length = Buffer.byteLength(item, 'utf8')\n          const length = sizeof(item);\n          return length;\n        },\n      });\n    }\n  }\n\n  // Cache middleware\n\n  const hash = (req) => {\n    const obj = {\n      slug: req.session.slug,\n      path: req.path,\n      query: req.query,\n      body: req.body,\n    };\n    return XXH.h64(JSON.stringify(obj), HASH_SEED).toString(16);\n  };\n\n  const cacheMiddleware = asyncMiddleware(async (req, res, next) => {\n    const useCachedResponse = (\n      config.cache.enabled\n      && req.session.role === 'guest' // TODO: Replace 'guest' with constant\n      && (req.query.__cache && JSON.parse(req.query.__cache)) !== false\n    );\n\n    if (useCachedResponse) {\n      try {\n        const key = hash(req);\n\n        let response = await cache.get(key);\n\n        if (typeof response === 'string') {\n          if (config.cache.compress) {\n            response = (await zlib.gunzipAsync(Buffer.from(response, 'base64'))).toString();\n          }\n\n          try {\n            response = JSON.parse(response);\n          } catch (error) {\n            //\n          }\n\n          res.set('X-Cached-Response', true);\n          res.status(response ? 200 : 204);\n          res.send(response);\n\n          return;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    res.set('X-Cached-Response', false);\n    next();\n  });\n\n  // Response helpers\n\n  const handleError = (req, res, error) => {\n    if (_.isObject(error)) {\n      error = JSON.parse(CircularJSON.stringify(error));\n    }\n\n    const statusCode = error.statusCode || error.code || 500;\n    const errorMessage = error.stack || error.error || error.message || error.body || error.data || error;\n\n    console.error(errorMessage);\n\n    res.status(typeof statusCode === 'string' ? 500 : statusCode);\n    res.send({\n      code: statusCode,\n      message: errorMessage,\n    });\n  };\n\n  const handleResponse = async (req, res, response, cacheResponse = false) => {\n    if (response === undefined || response === null) {\n      response = '';\n      res.status(204);\n      res.send(response);\n\n    } else {\n      response = CircularJSON.stringify(response);\n      res.status(200);\n      res.send(JSON.parse(response));\n    }\n\n    if (cacheResponse && config.cache.enabled && req.session.role === 'guest') { // TODO: Replace 'guest' with constant\n      const key = hash(req);\n\n      if (config.cache.compress) {\n        response = (await zlib.gzipAsync(Buffer.from(response))).toString('base64');\n      }\n\n      cache.set(key, response);\n    }\n  };\n\n  // Header middleware\n\n  const headerMiddleware = (req, res, next) => {\n    const headers = {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,OPTIONS',\n      'Access-Control-Expose-Headers': 'X-Slug, X-Role, X-User-Id',\n      Vary: 'Accept-Encoding, X-Api-Token',\n    };\n\n    if (req.headers['access-control-request-headers']) {\n      headers['Access-Control-Allow-Headers'] = req.headers['access-control-request-headers'];\n    }\n\n    res.set(headers);\n\n    if (req.method === 'OPTIONS') {\n      res.sendStatus(200);\n      return;\n    }\n\n    next();\n  };\n\n  // Session middleware\n\n  const jwt = Api.Jwt(config);\n\n  const sessionMiddleware = (req, res, next) => {\n    if (skipAuth(req)) {\n      next();\n      return;\n    }\n\n    const referrer = req.headers.referrer || req.headers.referer;\n\n    if (referrer) {\n      const referrerHostname = new URL(referrer)\n        .hostname.split('.').slice(-2).join('.');\n\n      if (config.api.blacklistReferrer.indexOf(referrerHostname) > -1) {\n        res.status(401);\n        res.send({\n          code: 401,\n          message: 'Not authorised, referrer blacklisted',\n        });\n        return;\n      }\n    }\n\n    const token = req.headers['x-api-token'] || req.query.apiToken || req.session.apiToken;\n\n    if (!token) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing token',\n      });\n      return;\n    }\n\n    if (config.api.blacklistToken.indexOf(token) > -1) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, token blacklisted',\n      });\n      return;\n    }\n\n    try {\n      const payload = jwt.verifyToken(token);\n\n      req.session.userId = payload.userId;\n      req.session.slug = payload.slug;\n      req.session.role = payload.role || 'guest'; // TODO: Replace 'guest' with constant\n\n    } catch (error) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: `Not authorised, token verification failed (${error.message})`,\n        error,\n      });\n      return;\n    }\n\n    if (!req.session.slug) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing slug',\n      });\n      return;\n    }\n\n    if (!req.session.role) {\n      req.session.role = 'guest';\n    }\n\n    if (req.session.userId) {\n      res.set('X-User-Id', req.session.userId);\n    }\n\n    res.set('X-Environment', config.environment);\n    res.set('X-Slug', req.session.slug);\n    res.set('X-Role', req.session.role);\n\n    next();\n  };\n\n  // Router\n\n  const router = express.Router();\n\n  const forceHttps = (req, res, next) => {\n    if (\n      (req.headers['x-forwarded-proto'] && req.headers['x-forwarded-proto'] !== 'https') &&\n      (req.headers['cf-visitor'] && JSON.parse(req.headers['cf-visitor']).scheme !== 'https') // Fix for Cloudflare/Heroku flexible SSL\n    ) {\n      res.redirect(301, `https://${req.headers.host}${req.path}`);\n      return;\n    }\n    next();\n  };\n\n  if (config.environment === 'production' && config.forceHttps === true) {\n    if (app.enable) {\n      app.enable('trust proxy');\n    }\n    app.use(forceHttps);\n  }\n\n  app.use(`/${config.api.prefix}`, headerMiddleware, sessionMiddleware, router);\n\n  app.get(`/${config.api.prefix}`, (req, res) => {\n    res.send('<pre> ______\\n|A     |\\n|  /\\\\  |\\n| /  \\\\ |\\n|(    )|\\n|  )(  |\\n|______|</pre>');\n  });\n\n  // Context\n\n  const context = {\n    app,\n    router,\n    cache,\n    authMiddleware,\n    permissionMiddleware,\n    cacheMiddleware,\n    asyncMiddleware,\n    getConfig,\n    handleResponse,\n    handleError,\n  };\n\n  // Inject API into context\n\n  Object.keys(Api).forEach((key) => {\n    context[key] = Api[key];\n  });\n\n  if (config.logentriesToken) {\n    context.log = new Logger({\n      token: config.logentriesToken,\n    });\n  }\n\n  const afterResponse = (req, res) => {\n    res.removeListener('finish', afterResponse);\n    res.removeListener('close', afterResponse);\n  };\n\n  if (config.environment !== 'production') {\n    app.use((req, res, next) => {\n      res.on('finish', afterResponse.bind(null, req, res));\n      res.on('close', afterResponse.bind(null, req, res));\n      next();\n    });\n  }\n\n  // Bootstrap Routes\n\n  require('./routes/analytics')(context, config);\n  require('./routes/auth')(context, config);\n  require('./routes/cache')(context, config);\n  require('./routes/config')(context, config);\n  require('./routes/debug')(context, config);\n  require('./routes/ecommerce')(context, config);\n  require('./routes/email')(context, config);\n  require('./routes/embedly')(context, config);\n  require('./routes/entity')(context, config);\n  require('./routes/metadata')(context, config);\n  require('./routes/pdf')(context, config);\n  require('./routes/schema')(context, config);\n  require('./routes/settings')(context, config);\n  require('./routes/shippo')(context, config);\n  require('./routes/social')(context, config);\n  require('./routes/stripe')(context, config);\n  require('./routes/taxonomy')(context, config);\n  require('./routes/token')(context, config);\n  require('./routes/tools')(context, config);\n  require('./routes/user')(context, config);\n\n  return app;\n}\n\nmodule.exports = AceApiServer;\n","module.exports = require(\"connect-redis\");","module.exports = require(\"express-session\");","module.exports = require(\"method-override\");","module.exports = require(\"body-parser\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"helmet\");","module.exports = require(\"morgan\");","module.exports = require(\"http\");","const PORT = process.env.PORT || 5000;\nconst HOST = process.env.HOST || 'localhost';\n\nconst _ = require('lodash');\nconst express = require('express');\nconst http = require('http');\nconst logger = require('morgan');\nconst helmet = require('helmet');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst methodOverride = require('method-override');\nconst session = require('express-session');\nconst RedisStore = require('connect-redis')(session);\n\nconst AceApiServer = require('./index');\n\nconst defaultConfig = require('./config.default');\n\nfunction Serve (customConfig = {}, listen = true) {\n  const config = _.merge({}, defaultConfig, customConfig);\n\n  const app = express();\n\n  const sessionOptions = {\n    secret: config.session.secret,\n    resave: true,\n    saveUninitialized: true,\n  };\n\n  if (config.redis.url || config.redis.host) {\n    const redisOptions = {\n      ttl: config.session.ttl,\n    };\n\n    if (config.redis.url) {\n      redisOptions.url = config.redis.url;\n    } else {\n      redisOptions.host = config.redis.host;\n      redisOptions.port = config.redis.port;\n      redisOptions.password = config.redis.password;\n      redisOptions.db = config.redis.db;\n    }\n\n    sessionOptions.store = new RedisStore(redisOptions);\n  } else {\n    sessionOptions.cookie = {\n      maxAge: config.session.ttl,\n    };\n  }\n\n  app.use(helmet());\n  app.use(logger('tiny'));\n  app.use(cookieParser());\n  app.use(bodyParser.json({\n    limit: '50mb',\n  }));\n  app.use(bodyParser.urlencoded({\n    extended: true,\n    limit: '50mb',\n  }));\n  app.use(methodOverride());\n  app.use(session(sessionOptions));\n\n  AceApiServer(app, config);\n\n  if (listen) {\n    const server = http.createServer(app);\n    server.on('listening', () => {\n      console.log(`listening: http://${HOST}:${PORT}`);\n    });\n    server.listen(PORT);\n  }\n\n  return app;\n}\n\nmodule.exports = Serve;\n"],"sourceRoot":""}