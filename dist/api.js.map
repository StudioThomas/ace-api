{"version":3,"sources":["webpack://AceApi/webpack/universalModuleDefinition","webpack://AceApi/webpack/bootstrap","webpack://AceApi/external \"lodash\"","webpack://AceApi/external \"@babel/runtime/helpers/interopRequireDefault\"","webpack://AceApi/external \"@babel/runtime/regenerator\"","webpack://AceApi/./api/lib/client-config.js","webpack://AceApi/./api/lib/db.js","webpack://AceApi/external \"bluebird\"","webpack://AceApi/./api/lib/helpers.js","webpack://AceApi/external \"path\"","webpack://AceApi/external \"axios\"","webpack://AceApi/external \"fs\"","webpack://AceApi/./api/lib/assist.js","webpack://AceApi/external \"@cloudant/cloudant\"","webpack://AceApi/./api/lib/roles.js","webpack://AceApi/./api/lib/jwt.js","webpack://AceApi/./api/lib/entity.js","webpack://AceApi/./api/lib/schema.js","webpack://AceApi/./api/lib/fields.js","webpack://AceApi/external \"request-promise\"","webpack://AceApi/./api/api.js","webpack://AceApi/./api/api.config.js","webpack://AceApi/external \"password-hash\"","webpack://AceApi/./api/lib/auth.js","webpack://AceApi/external \"querystring\"","webpack://AceApi/external \"express-jwt\"","webpack://AceApi/external \"jwks-rsa\"","webpack://AceApi/external \"auth0\"","webpack://AceApi/external \"jsonwebtoken\"","webpack://AceApi/./api/lib/error-code.js","webpack://AceApi/./api/lib/email.js","webpack://AceApi/external \"nodemailer\"","webpack://AceApi/external \"createsend-node\"","webpack://AceApi/external \"nodemailer-mailgun-transport\"","webpack://AceApi/external \"inky\"","webpack://AceApi/external \"mjml\"","webpack://AceApi/external \"mjml-core\"","webpack://AceApi/external \"mjml-validator\"","webpack://AceApi/external \"mjml-mailchimp\"","webpack://AceApi/external \"html-to-text\"","webpack://AceApi/external \"moment\"","webpack://AceApi/external \"i18n-iso-countries\"","webpack://AceApi/external \"node-sass\"","webpack://AceApi/external \"pug\"","webpack://AceApi/external \"juice\"","webpack://AceApi/./api/lib/embedly.js","webpack://AceApi/external \"embedly\"","webpack://AceApi/external \"json-query\"","webpack://AceApi/external \"deep-diff\"","webpack://AceApi/./api/lib/instagram.js","webpack://AceApi/./api/lib/pdf.js","webpack://AceApi/external \"eval\"","webpack://AceApi/external \"recursive-readdir\"","webpack://AceApi/./api/lib sync","webpack://AceApi/./api/lib/settings.js","webpack://AceApi/./api/lib/shopify.js","webpack://AceApi/external \"he\"","webpack://AceApi/external \"handlebars\"","webpack://AceApi/external \"jsontoxml\"","webpack://AceApi/./api/lib/taxonomy.js","webpack://AceApi/./api/lib/tools.js","webpack://AceApi/./api/lib/user.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","_","Db","Helpers","DEFAULT_CLIENT_CONFIG","_id","client","assets","schemas","taxonomies","users","roles","provider","constructor","config","this","clientConfig","connect","merge","slug","set","createOrUpdate","Cloudant","dbName","url","db","maxAttempt","plugins","retry","retryDelayMultiplier","retryInitialDelayMsecs","use","Promise","assistUrl","assist","doc","resolve","reject","insert","then","response","id","_rev","rev","error","statusCode","docs","chunkSize","chunks","chunk","promises","forEach","push","bulk","all","entities","groupSize","Infinity","grouped","group","entity","groupBefore","length","groupAfter","ratio","thumbnail","groupRatio","JSON","stringify","Date","replace","array","replacementObject","map","thumbnailSrc","settings","cropSlug","cropDefault","settingsArray","split","setting","crop","crops","x","y","x2","y2","g","join","settingsString","test","thumbnailType","ext","thumbnailUrl","axios","passwordHash","ClientConfig","deleteFiles","fileNames","cc","assetsSlug","post","auth","username","password","generate","result","data","permissions","entityGrid","entityCreate","entityRead","entityUpdate","entityDelete","taxonomyCreate","taxonomyRead","taxonomyUpdate","taxonomyDelete","fileCreate","fileRead","fileUpdate","fileDelete","schema","user","userSettings","tools","role","freeze","find","jwt","signToken","payload","options","sign","tokenSecret","verifyToken","token","verify","jsonQuery","diff","Schema","Assist","Entity","flattenValues","fields","size","mapValues","field","type","isArray","filter","obj","undefined","published","childrenMap","omitBy","startsWith","rows","parents","entityMap","row","_filterEntityFields","uniqBy","file","uniq","fieldValues","fieldSlug","searchTerm","viewWithList","startkey","endkey","query","isFieldQuery","queryParts","trim","selector","modifier","slice","locals","input","start","end","sample","sampleSize","pick","paths","copy","path","pathParts","match","pathFrom","pathTo","allowRegexp","queryString","methodArgs","queries","emptyArgs","times","splice","_entitiesById","ids","include_docs","keys","view","_appendParents","children","limit","isNumber","_getDocMap","rowsOrDocs","docMap","_childDepth","childIds","rowOrDoc","isRow","_queriesFromString","concat","flatten","_query","childDocs","_childDepthLimit","fieldQueryMap","_mergeDocs","_extendRowsOrDocs","select","_removeChildren","updatedEntities","indexOf","chunkUpdate","_updateChildren","title","entityList","_entitySearch","Math","min","include_fields","sort","bookmark","index","group_field","search","groups","total_rows","hits","entitySearch","__entitySearch","clone","entityFind","updateEntityIndex","Error","entityRevisions","entityId","revs_info","revisionIds","_revs_info","revision","status","open_revs","revisions","childrenIds","ok","fetch","console","_appendChildren","restore","entityIds","entityOrEntityId","isObject","isString","oldFileNames","oldEntity","newEntity","mergeWith","a","b","trashed","forever","deleted","_fileNames","filesResult","_deleted","entitiesResult","files","Fields","read","schemaSlug","update","findIndex","delete","schemaSlugs","updateAll","ddoc","default_field","enabled","analyzer","$and","fieldRef","dataType","toText","Api","defaultConfig","args","Auth","Email","Embedly","Instagram","Jwt","Pdf","Roles","Settings","Shopify","Taxonomy","Tools","User","environment","process","env","ENVIRONMENT","debug","DEBUG","SLUG","baseUrl","BASE_URL","DB_URL","host","DB_HOST","DB_NAME","requestPlugin","DB_REQUEST_PLUGIN","meterType","DB_METER_TYPE","superUserId","AUTH_SUPER_USER_ID","AUTH_TOKEN_SECRET","auth0","domain","AUTH0_DOMAIN","audience","AUTH0_AUDIENCE","dev","userId","DEV_USER_ID","DEV_ROLE","cms","CMS_TITLE","CMS_URL","ASSIST_URL","ASSIST_USERNAME","ASSIST_PASSWORD","mailgun","apiKey","MAILGUN_API_KEY","MAILGUN_DOMAIN","embedly","EMBEDLY_API_KEY","pdf","templatesPath","__dirname","email","google","clientId","GOOGLE_CLIENT_ID","clientSecret","GOOGLE_CLIENT_SECRET","instagram","INSTAGRAM_CLIENT_ID","INSTAGRAM_CLIENT_SECRET","spotify","SPOTIFY_CLIENT_ID","SPOTIFY_CLIENT_SECRET","twitter","consumerKey","TWITTER_CONSUMER_KEY","consumerSecret","TWITTER_CONSUMER_SECRET","accessTokenKey","TWITTER_ACCESS_TOKEN_KEY","accessTokenSecret","TWITTER_ACCESS_TOKEN_SECRET","vimeo","VIMEO_CLIENT_ID","VIMEO_CLIENT_SECRET","querystring","expressJwt","jwks","AuthenticationClient","ErrorCode","providerTokenUri","jwtCheck","secret","expressJwtSecret","cache","rateLimit","jwksRequestsPerMinute","jwksUri","issuer","algorithms","authUser","accessToken","getProfile","auth0Profile","superUser","active","toLowerCase","apiToken","authProvider","params","refresh","providerConfig","providerClientConfig","grant_type","code","client_id","client_secret","redirect_uri","redirectUri","refresh_token","uri","providerAuth","begins","floor","getTime","access_token","message","fs","promisifyAll","nodemailer","Createsend","nodemailerMailgunTransport","Inky","mjml2html","registerComponent","registerDependencies","McSection","McImage","htmlToText","moment","countries","sass","pug","juice","inky","getTemplate","templateSlug","templateData","templateOptions","inlineStyles","mjml","skipValidation","templatePath","statAsync","readdirAsync","templateFiles","htmlFileName","fileName","htmlFileExtension","style","renderAsync","sourceMapContents","sourceMapEmbed","css","toString","helpers","html","readFileAsync","renderFile","convertMjmlResult","level","errors","formattedMessage","releaseTheKraken","preserveMediaQueries","preserveFontFaces","removeStyleTags","removeLinkTags","preserveImportant","webResources","links","scripts","images","text","fromString","sendEmail","emailOptions","nodemailerMailgun","createTransport","api_key","emailTemplate","sendMail","metadata","subscribe","details","listId","createsend","cs","clientApiKey","subscribers","addSubscriberAsync","EmailAddress","Name","Resubscribe","RestartSubscriptionBasedAutoresponders","emailAddress","catch","Message","EmbedlyApi","oembed","urls","opts","format","request","version","_request","method","endpoint","requestOptions","qs","extend","parse","_eval","readdir","getTemplates","templates","getPayload","templateId","template","readFileSync","getPdf","assetSlug","assistPdfUrl","encoding","form","webpackEmptyContext","req","e","he","Handlebars","jsontoxml","getCatalog","shopLink","productLinkTemplate","shopify","headers","storefrontAccessToken","compile","products","shop","edges","edge","node","handle","encode","description","originalSrc","vendor","availableForSale","priceRange","minVariantPrice","amount","currencyCode","channel","product","taxonomy","taxonomySlug","entitiesByTerm","term","entityGroups","createTerm","terms","updateTerm","_term","parent","deleteTerm","getDb","getChanges","changes","importDb","dbBackupFile","fileConents","unlinkAsync","cloudant","destroy"],"mappings":"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","file":"api.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AceApi\"] = factory();\n\telse\n\t\troot[\"AceApi\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","module.exports = require(\"lodash\");","module.exports = require(\"@babel/runtime/helpers/interopRequireDefault\");","module.exports = require(\"@babel/runtime/regenerator\");","const _ = require('lodash');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Roles = require('./roles');\n\nconst roles = new Roles();\n\nconst DEFAULT_CLIENT_CONFIG = {\n  _id: 'config',\n  client: {},\n  assets: {},\n  schemas: [],\n  taxonomies: [],\n  users: [],\n  roles: roles.roles(),\n  provider: {},\n  module: {},\n};\n\nclass ClientConfig {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async get() {\n    let clientConfig = DEFAULT_CLIENT_CONFIG;\n\n    try {\n      clientConfig = await Db.connect(this.config).get('config');\n\n      clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n    } catch (error) {\n      //\n    }\n\n    clientConfig.slug = this.config.slug;\n\n    return clientConfig;\n  }\n\n  async set(clientConfig) {\n    clientConfig._id = 'config';\n\n    delete clientConfig.roles;\n\n    clientConfig = await Helpers.createOrUpdate(this.config, clientConfig);\n\n    clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n\n    return clientConfig;\n  }\n}\n\nmodule.exports = ClientConfig;\n","const Cloudant = require('@cloudant/cloudant');\n\nclass Db {\n  constructor(config, dbName) {\n    this.config = config;\n\n    return Db.connect(config, dbName);\n  }\n\n  static connect(config, dbName) {\n    const cloudant = new Cloudant({\n      url: config.db.url,\n      maxAttempt: 5,\n      plugins: [\n        'promises',\n        {\n          retry: {\n            retryDelayMultiplier: 2,\n            retryInitialDelayMsecs: 500,\n          },\n        },\n      ],\n    });\n\n    return cloudant.db.use(dbName || config.db.name);\n  }\n}\n\nmodule.exports = Db;\n","module.exports = require(\"bluebird\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\n\nclass Helpers {\n  constructor(config) {\n    this.config = config;\n    this.assistUrl = config.assist.url;\n    this.slug = config.slug;\n  }\n\n  static createOrUpdate(config, doc) {\n    return new Promise((resolve, reject) => {\n      Db.connect(config)\n        .insert(doc)\n        .then(\n          response => {\n            doc._id = response.id;\n            doc._rev = response.rev;\n            resolve(doc);\n          },\n          error => {\n            if (error.statusCode !== 409) {\n              reject(error);\n              return;\n            }\n\n            Db.connect(config)\n              .get(doc._id)\n              .then(response => {\n                doc._rev = response._rev;\n\n                Db.connect(config)\n                  .insert(doc)\n                  .then(response => {\n                    doc._rev = response.rev;\n                    resolve(doc);\n                  }, reject);\n              }, reject);\n          }\n        );\n    });\n  }\n\n  static chunkUpdate(config, docs, chunkSize = 1000) {\n    return new Promise((resolve, reject) => {\n      const chunks = _.chunk(docs, chunkSize);\n      const promises = [];\n\n      chunks.forEach(chunk => {\n        promises.push(\n          new Promise((resolve, reject) => {\n            Db.connect(config)\n              .bulk({\n                docs: chunk,\n              })\n              .then(resolve, reject);\n          })\n        );\n      });\n\n      Promise.all(promises).then(resolve, reject);\n    });\n  }\n\n  static groupEntities(entities, groupSize = Infinity) {\n    const grouped = [];\n\n    let group = {\n      entities: [],\n    };\n\n    entities.forEach(entity => {\n      if (!entity.groupBefore || group.entities.length >= groupSize) {\n        group = {\n          entities: [],\n        };\n      }\n\n      group.entities.push(entity);\n\n      if (!entity.groupAfter || group.entities.length >= groupSize) {\n        group.ratio = 0;\n\n        group.entities.forEach(entity => {\n          group.ratio += (entity.thumbnail || entity).ratio;\n        });\n\n        group.entities.forEach(entity => {\n          entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n        });\n\n        grouped.push(group);\n      }\n    });\n\n    return grouped;\n  }\n\n  static now() {\n    return JSON.stringify(new Date()).replace(/\"/g, '');\n  }\n\n  static replace(array, replacementObject, key) {\n    return array.map(object => {\n      if (object[key] === replacementObject[key]) {\n        return replacementObject;\n      }\n      return object;\n    });\n  }\n\n  thumbnailSrc(thumbnail, settings, cropSlug, cropDefault) {\n    if (!thumbnail) {\n      return '';\n    }\n\n    let settingsArray;\n\n    if (typeof settings === 'string') {\n      settingsArray = settings.split(/,|;/);\n\n      settings = {};\n\n      settingsArray.forEach(setting => {\n        setting = setting.split(/_|:/);\n\n        settings[setting[0]] = setting[1];\n      });\n    }\n\n    const crop = thumbnail.crops ? thumbnail.crops[cropSlug] : false;\n\n    if (crop) {\n      settings.x = crop[0];\n      settings.y = crop[1];\n      settings.x2 = crop[2];\n      settings.y2 = crop[3];\n    } else if (cropDefault) {\n      settings.g = cropDefault;\n    }\n\n    settingsArray = [];\n\n    _.forEach(settings, (value, key) => {\n      settingsArray.push([key, value].join(':'));\n    });\n\n    const settingsString = settingsArray.join(';');\n\n    if (/(image)/.test(thumbnail.thumbnailType)) {\n      if (thumbnail.ext === 'svg') {\n        return [this.assistUrl, this.slug, thumbnail.name + thumbnail.ext].join(\n          '/'\n        );\n      }\n\n      return [\n        this.assistUrl,\n        this.slug,\n        'transform',\n        settingsString,\n        thumbnail.name + thumbnail.ext,\n      ].join('/');\n    }\n\n    if (/(video)/.test(thumbnail.thumbnailType)) {\n      return [\n        this.assistUrl,\n        this.slug,\n        'transform',\n        settingsString,\n        thumbnail.name,\n        'thumb.jpg',\n      ].join('/');\n    }\n\n    if (/(oembed|proxy)/.test(thumbnail.thumbnailType)) {\n      const thumbnailUrl = thumbnail.thumbnailUrl.replace(/https?:\\/\\//, '');\n\n      return [\n        this.assistUrl,\n        this.slug,\n        'proxy',\n        'transform',\n        settingsString,\n        thumbnailUrl,\n      ].join('/');\n    }\n\n    return '';\n  }\n}\n\nmodule.exports = Helpers;\n","module.exports = require(\"path\");","module.exports = require(\"axios\");","module.exports = require(\"fs\");","const _ = require('lodash');\nconst axios = require('axios');\nconst passwordHash = require('password-hash');\nconst ClientConfig = require('./client-config');\n\nclass Assist {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async deleteFiles(fileNames) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetsSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n\n    if (fileNames.length === 0) {\n      return [];\n    }\n\n    const result = (\n      await axios.post(\n        `${this.config.assist.url}/${assetsSlug}/file/delete`,\n        { fileNames },\n        {\n          auth: {\n            username: this.config.assist.username,\n            password: passwordHash.generate(this.config.assist.password),\n          },\n        }\n      )\n    ).data;\n\n    return result;\n  }\n}\n\nmodule.exports = Assist;\n","module.exports = require(\"@cloudant/cloudant\");","const _ = require('lodash');\n\nconst roles = [\n  {\n    name: 'Admin',\n    slug: 'admin',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: true,\n      settings: true,\n      userSettings: true,\n      tools: true,\n    },\n  },\n  {\n    name: 'Editor',\n    slug: 'editor',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: true,\n      tools: false,\n    },\n  },\n  {\n    name: 'Guest',\n    slug: 'guest',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: false,\n      entityRead: true,\n      entityUpdate: false,\n      entityDelete: false,\n\n      taxonomyCreate: false,\n      taxonomyRead: true,\n      taxonomyUpdate: false,\n      taxonomyDelete: false,\n\n      fileCreate: false,\n      fileRead: true,\n      fileUpdate: false,\n      fileDelete: false,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: false,\n      tools: false,\n    },\n  },\n];\n\nclass Roles {\n  roles() {\n    return roles.map(role => Object.freeze(role));\n  }\n  role(slug) {\n    return _.find(this.roles(), { slug });\n  }\n}\n\nmodule.exports = Roles;\n","const jwt = require('jsonwebtoken');\n\nclass Jwt {\n  constructor(config) {\n    this.config = config;\n  }\n\n  signToken(payload, options = {}) {\n    return jwt.sign(payload, this.config.auth.tokenSecret, options);\n  }\n\n  verifyToken(token) {\n    return jwt.verify(token, this.config.auth.tokenSecret);\n  }\n}\n\nmodule.exports = Jwt;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst jsonQuery = require('json-query');\nconst { diff } = require('deep-diff');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Schema = require('./schema');\nconst Assist = require('./assist');\n\nconst CHUNK_UPDATE_SIZE = 1000;\n\nclass Entity {\n  constructor(config) {\n    this.config = config;\n\n    // Expose helpers\n    this.flattenValues = Entity.flattenValues;\n  }\n\n  static flattenValues(docs) {\n    return docs.map(doc => {\n      if (!doc.fields || !_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, field => {\n        if (/entity/.test(field.type) && _.isArray(field.value)) {\n          // entity / entityTile / entityGrid\n          field.value = Entity.flattenValues(field.value);\n        }\n        return field.value;\n      });\n\n      return doc;\n    });\n  }\n\n  static _filterEntityFields(docs, role = 'guest') {\n    const isArray = _.isArray(docs);\n\n    docs = (isArray ? docs : [docs]).map(doc => {\n      if (_.size(doc.fields)) {\n        doc.fields = _.mapValues(doc.fields, field => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter(obj => {\n              if (!obj) {\n                return false;\n              }\n              if (obj.type && obj.type === 'entity' && role === 'guest') {\n                return obj.published !== undefined ? obj.published : true;\n              }\n              return true;\n            });\n          }\n          return field;\n        });\n      }\n      return doc;\n    });\n\n    return isArray ? docs : docs[0];\n  }\n\n  static _appendChildren(docs, childrenMap) {\n    return docs.map(doc => {\n      if (!_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, field => {\n        if (_.isArray(field.value)) {\n          field.value = field.value.filter(obj => {\n            if (!obj) {\n              return false;\n            }\n            if (obj.type === 'entity') {\n              return childrenMap[obj.id] !== undefined;\n            }\n            return true;\n          });\n\n          field.value = field.value.map(obj => {\n            if (obj.type === 'entity') {\n              obj = _.merge(obj, childrenMap[obj.id]);\n            }\n            obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n            return obj;\n          });\n        }\n\n        return field;\n      });\n\n      return doc;\n    });\n  }\n\n  static _appendParents(rows, parents = null, role = 'guest') {\n    let entityMap = {};\n\n    rows.forEach(row => {\n      if (row.doc && row.value.type === 'entity') {\n        entityMap[row.id] = { ...row.doc, parents: [] };\n      }\n    });\n\n    if (parents) {\n      rows.forEach(row => {\n        if (row.doc && row.value.type === 'parent') {\n          entityMap[row.key].parents.push(\n            Entity._filterEntityFields(row.doc, role)\n          );\n        }\n      });\n\n      entityMap = _.mapValues(entityMap, entity => {\n        entity.parents = _.uniqBy(entity.parents, entity => entity._id);\n        return entity;\n      });\n    }\n\n    rows = rows.map(row => {\n      row.doc = entityMap[row.id];\n      return row;\n    });\n\n    rows = rows.filter(row => row.value.type === 'entity');\n\n    return rows;\n  }\n\n  static _fileNames(entities) {\n    const fileNames = [];\n\n    entities.forEach(entity => {\n      _.forEach(entity.fields, field => {\n        if (field.value && field.value.file) {\n          fileNames.push(field.value.file.name);\n        }\n      });\n    });\n\n    return _.uniq(fileNames);\n  }\n\n  async fieldValues(fieldSlug, searchTerm) {\n    const result = await Db.connect(this.config).viewWithList(\n      'entity',\n      'byField',\n      'search',\n      {\n        startkey: [fieldSlug],\n        endkey: [fieldSlug, {}],\n        group: true,\n        searchTerm,\n      }\n    );\n    return result;\n  }\n\n  static _query(data, query, isFieldQuery = false) {\n    query = query.replace(/(\\s\\s|\\t|\\r|\\n)/g, '');\n\n    if (isFieldQuery) {\n      const queryParts = query.trim().split(/\\[|\\]/);\n      const selector = `fields.${queryParts[0]}.value[${queryParts[1] || '*'}]`;\n      const modifier = /\\]:/.test(query)\n        ? `:${query\n            .split(/\\]:/)\n            .slice(-1)[0]\n            .trim()}`\n        : '';\n      query = `${selector}${modifier}`;\n    }\n\n    const result = jsonQuery(query, {\n      data,\n      locals: {\n        slice: (input, start, end) => _.slice(input, start, end),\n        sample: (input, size = 1) => _.sampleSize(input, size),\n        group: (entities, groupSize = Infinity) => {\n          const grouped = [];\n\n          let group = [];\n\n          entities.forEach(entity => {\n            if (!entity.groupBefore || group.length >= groupSize) {\n              group = [];\n            }\n\n            group.push(entity);\n\n            if (!entity.groupAfter || group.length >= groupSize) {\n              group.ratio = 0;\n\n              group.forEach(entity => {\n                group.ratio += (entity.thumbnail || entity).ratio;\n              });\n\n              group.forEach(entity => {\n                entity.groupRatio =\n                  (entity.thumbnail || entity).ratio / group.ratio;\n              });\n\n              grouped.push(group);\n            }\n          });\n\n          return grouped;\n        },\n        pick: (input, ...paths) =>\n          _.map(input, obj => {\n            const copy = {\n              id: obj.id || undefined,\n            };\n            paths = paths.filter(path => path); // Remove empty paths (tolerate trailing comma in args)\n            paths.forEach(path => {\n              const pathParts = path.match(/([^\\s]+)/g);\n              const pathFrom = pathParts[0];\n              const pathTo = pathParts[pathParts.length - 1];\n              _.set(copy, pathTo, _.get(obj, pathFrom));\n            });\n            return copy;\n          }),\n      },\n      allowRegexp: true,\n    });\n\n    return result;\n  }\n\n  static _queriesFromString(queryString) {\n    // Remove white space\n    queryString = queryString.replace(/(\\s\\s|\\t|\\r|\\n)/gm, '');\n\n    // Match and store (...args) from query so we can split by comma\n    const methodArgs = queryString.match(/\\(([^)]+)\\)/g);\n\n    // Replace (...args) with empty ()\n    queryString = queryString.replace(/\\(.*?\\)/g, '()');\n\n    // Extract queries\n    let queries = queryString.split(/,(?![^([]*[\\])])/g);\n\n    queries = queries.map(query => {\n      // Replace () with original (...args)\n      const emptyArgs = query.match(/\\(\\)/g);\n      if (emptyArgs) {\n        _.times(emptyArgs.length, () => {\n          query = query.replace('()', methodArgs.splice(0, 1));\n        });\n      }\n      return query.trim();\n    });\n\n    return queries;\n  }\n\n  async _entitiesById(ids = [], options = {}) {\n    options = _.merge(\n      {\n        parents: false,\n        role: 'guest',\n      },\n      options\n    );\n\n    const query = {\n      include_docs: true,\n    };\n\n    if (ids.length) {\n      query.keys = ids;\n    }\n\n    const result = await Db.connect(this.config).view(\n      'entity',\n      options.parents ? 'byIdExtended' : 'byId',\n      query\n    );\n\n    result.rows = result.rows.map(row => {\n      row.doc = Entity._filterEntityFields(row.doc, options.role);\n      return row;\n    });\n\n    result.rows = Entity._appendParents(\n      result.rows,\n      options.parents,\n      options.role\n    );\n\n    return result;\n  }\n\n  static _childDepthLimit(children) {\n    let limit = 0;\n    if (_.isNumber(children)) {\n      limit = children - 1;\n    }\n    if (_.isArray(children)) {\n      limit = children.length - 1;\n    }\n    return limit;\n  }\n\n  async _getDocMap(rowsOrDocs, docMap = {}, options = {}) {\n    options._childDepth = options._childDepth || 0;\n\n    if (!options.parents && !options.children) {\n      return docMap;\n    }\n\n    let ids = [];\n    let childIds = [];\n\n    rowsOrDocs.forEach(rowOrDoc => {\n      const isRow = !!rowOrDoc.doc;\n\n      let doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      doc = Entity._filterEntityFields(doc, options.role);\n\n      if (options.children && doc.fields && _.size(doc.fields)) {\n        if (_.isArray(options.children)) {\n          Entity._queriesFromString(\n            options.children[options._childDepth]\n          ).forEach(query => {\n            childIds = childIds.concat(\n              _.flatten(Entity._query(doc, query, true).value).map(\n                obj => obj && obj.id\n              )\n            );\n          });\n        } else {\n          _.forEach(doc.fields, field => {\n            if (_.isArray(field.value)) {\n              field.value = field.value.filter(obj => obj);\n\n              field.value.forEach(obj => {\n                if (obj.id) {\n                  childIds.push(obj.id);\n                }\n              });\n            }\n          });\n        }\n      }\n\n      ids.push(isRow ? rowOrDoc.id : doc._id || doc.id);\n    });\n\n    ids = _.uniq(ids);\n    ids = ids.filter(id => !docMap[id]);\n\n    let docs = [];\n    if (ids.length > 0) {\n      docs = (await this._entitiesById(ids, options)).rows.map(row => row.doc);\n\n      docs.forEach(doc => {\n        docMap[doc._id] = doc;\n      });\n    }\n\n    childIds = _.uniq(childIds);\n    childIds = childIds.filter(id => !docMap[id]);\n\n    let childDocs = [];\n    if (childIds.length > 0) {\n      childDocs = (\n        await this._entitiesById(childIds, { ...options, parents: false })\n      ).rows.map(row => row.doc);\n\n      childDocs.forEach(doc => {\n        docMap[doc._id] = doc;\n      });\n    }\n\n    if (\n      !options.children ||\n      options._childDepth === Entity._childDepthLimit(options.children)\n    ) {\n      return docMap;\n    }\n\n    return await this._getDocMap(childDocs, docMap, {\n      ...options,\n      parents: false,\n      _childDepth: options._childDepth + 1,\n    });\n  }\n\n  static _mergeDocs(\n    docs,\n    docMap,\n    options = { children: false, parents: false }\n  ) {\n    options._childDepth = options._childDepth || 0;\n\n    if (\n      options.children &&\n      options._childDepth - 1 === Entity._childDepthLimit(options.children)\n    ) {\n      return docs;\n    }\n\n    docs = docs.map(rowOrDoc => {\n      const isRow = !!rowOrDoc.doc;\n\n      let doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (docMap[rowOrDoc.id || rowOrDoc._id]) {\n        doc = _.merge({}, doc, docMap[rowOrDoc.id || rowOrDoc._id]);\n      }\n\n      if (options.children && doc.fields && _.size(doc.fields)) {\n        let fieldQueryMap;\n\n        if (_.isArray(options.children)) {\n          fieldQueryMap = {};\n          Entity._queriesFromString(\n            options.children[options._childDepth]\n          ).forEach(query => {\n            const key = query.split(/\\[|\\]/)[0];\n            fieldQueryMap[key] = query;\n          });\n        }\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter(obj => obj);\n\n            if (!fieldQueryMap || (fieldQueryMap && fieldQueryMap[fieldSlug])) {\n              if (fieldQueryMap && fieldQueryMap[fieldSlug]) {\n                field.value = field.value.filter(\n                  obj => obj.id && docMap[obj.id]\n                );\n              }\n\n              field.value = field.value.map(obj => {\n                if (obj && obj.id && docMap[obj.id]) {\n                  obj = _.merge(obj, docMap[obj.id] || {});\n                  obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n                }\n                return obj;\n              });\n\n              field.value = Entity._mergeDocs(field.value, docMap, {\n                ...options,\n                _childDepth: options._childDepth + 1,\n              });\n            }\n          }\n          return field;\n        });\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            if (fieldQueryMap && fieldQueryMap[fieldSlug]) {\n              field.value = _.flatten(\n                Entity._query(doc, fieldQueryMap[fieldSlug], true).value\n              );\n            }\n          }\n          return field;\n        });\n      }\n\n      if (_.isArray(options.parents) && doc.parents) {\n        doc.parents = _.flatten(\n          Entity._query(doc.parents, options.parents[0]).value\n        );\n      }\n\n      if (isRow) {\n        rowOrDoc.doc = doc;\n      } else {\n        rowOrDoc = doc;\n      }\n\n      return rowOrDoc;\n    });\n\n    return docs;\n  }\n\n  async _extendRowsOrDocs(rowsOrDocs, options = {}) {\n    options = _.merge(\n      {\n        select: false,\n        children: false,\n        parents: false,\n        role: 'guest',\n      },\n      options\n    );\n\n    let docMap = await this._getDocMap(rowsOrDocs, {}, options);\n\n    rowsOrDocs = Entity._mergeDocs(rowsOrDocs, docMap, options);\n\n    if (options.select) {\n      rowsOrDocs = _.flatten(Entity._query(rowsOrDocs, options.select).value);\n    }\n\n    docMap = null;\n\n    return rowsOrDocs;\n  }\n\n  _removeChildren(entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      entities = entities.map(entity => entity._id);\n\n      Db.connect(this.config)\n        .view('entity', 'byChildren', {\n          keys: entities,\n          include_docs: true,\n        })\n        .then(response => {\n          const updatedEntities = _.uniqBy(\n            response.rows,\n            row => row.doc._id\n          ).map(row => {\n            row.doc.fields = _.mapValues(row.doc.fields, field => {\n              if (_.isArray(field.value)) {\n                field.value = _.filter(\n                  field.value,\n                  obj =>\n                    !(obj.type === 'entity' && entities.indexOf(obj.id) !== -1)\n                );\n              }\n              return field;\n            });\n\n            return row.doc;\n          });\n\n          if (updatedEntities.length === 0) {\n            resolve([]);\n            return;\n          }\n\n          Helpers.chunkUpdate(\n            this.config,\n            updatedEntities,\n            CHUNK_UPDATE_SIZE\n          ).then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  _updateChildren(entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      const entityMap = {};\n\n      entities = entities.map(entity => {\n        entityMap[entity._id] = entity;\n\n        return entity._id;\n      });\n\n      Db.connect(this.config)\n        .view('entity', 'byChildren', {\n          keys: entities,\n          include_docs: true,\n        })\n        .then(response => {\n          const entities = response.rows.map(row => {\n            const entity = row.doc;\n\n            _.forEach(entity.fields, (field, fieldSlug) => {\n              if (_.isArray(field.value)) {\n                entity.fields[fieldSlug].value = field.value\n                  .filter(obj => obj)\n                  .map(obj => {\n                    if (obj.type === 'entity' && entityMap[obj.id]) {\n                      obj.slug = entityMap[obj.id].slug;\n                      obj.title = entityMap[obj.id].title;\n                      obj.schema = entityMap[obj.id].schema;\n                      obj.published = entityMap[obj.id].published;\n\n                      if (entityMap[obj.id].thumbnail) {\n                        obj.thumbnail = entityMap[obj.id].thumbnail;\n                      } else {\n                        obj.thumbnail = null;\n                      }\n                    }\n\n                    return obj;\n                  });\n              }\n            });\n\n            return entity;\n          });\n\n          Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE).then(\n            resolve,\n            reject\n          );\n        }, reject);\n    });\n  }\n\n  async entityList(ids = [], options = {}) {\n    options = _.merge(\n      {\n        select: false,\n        children: false,\n        parents: false,\n        role: 'guest',\n      },\n      options\n    );\n\n    const result = await this._entitiesById(ids, options);\n\n    const rows = await this._extendRowsOrDocs(result.rows, options);\n\n    return rows;\n  }\n\n  _entitySearch(query, options = {}) {\n    return new Promise((resolve, reject) => {\n      query.limit = Math.min(query.limit || 200, 200);\n\n      if (options.children) {\n        query.include_docs = true;\n      }\n\n      if (!query.include_fields) {\n        query.include_fields = [];\n      }\n\n      if (!query.sort) {\n        delete query.sort;\n      }\n      if (!query.bookmark) {\n        delete query.bookmark;\n      }\n      if (!query.index) {\n        delete query.index;\n      }\n      if (!query.group_field) {\n        delete query.group_field;\n      }\n\n      Db.connect(this.config)\n        .search('entity', query.index || 'all', query)\n        .then(result => {\n          if (result.groups) {\n            const promises = [];\n\n            result.groups = result.groups.map(group => {\n              promises.push(\n                new Promise((resolve, reject) => {\n                  if (\n                    (!options.children && !options.parents) ||\n                    group.total_rows === 0\n                  ) {\n                    resolve();\n                    return;\n                  }\n\n                  this._extendRowsOrDocs(group.hits, options).then(docs => {\n                    group.hits = docs;\n\n                    resolve();\n                  }, reject);\n                })\n              );\n              return group;\n            });\n\n            Promise.all(promises).then(() => {\n              resolve(result);\n            }, reject);\n\n            return;\n          }\n\n          this._extendRowsOrDocs(result.rows, options).then(docs => {\n            result.rows = docs;\n\n            resolve(result);\n          }, reject);\n        }, reject);\n    });\n  }\n\n  entitySearch(query, options = {}) {\n    options = _.merge(\n      {\n        children: false,\n        parents: false,\n        role: 'guest',\n      },\n      options\n    );\n\n    return new Promise((resolve, reject) => {\n      const limit = query.limit || 25;\n\n      if (limit <= 200) {\n        this._entitySearch(query, options).then(resolve, reject);\n        return;\n      }\n\n      let rows = [];\n      let groups = [];\n\n      function __entitySearch(bookmark) {\n        const _query = _.clone(query);\n\n        if (bookmark) {\n          _query.bookmark = bookmark;\n        }\n\n        this._entitySearch(_query, options).then(result => {\n          if (result.rows) {\n            rows = rows.concat(result.rows);\n          }\n          if (result.groups) {\n            groups = groups.concat(result.groups);\n          }\n\n          if (rows.length < result.total_rows && rows.length < limit) {\n            __entitySearch.call(this, result.bookmark);\n            return;\n          }\n\n          result.rows = rows;\n          result.groups = groups;\n\n          resolve(result);\n        }, reject);\n      }\n\n      __entitySearch.call(this);\n    });\n  }\n\n  async entityFind(query, options = {}) {\n    options = _.merge(\n      {\n        children: false,\n        parents: false,\n        role: 'guest',\n      },\n      options\n    );\n\n    let result;\n\n    try {\n      result = await Db.connect(this.config).find(query);\n    } catch (error) {\n      if (error.error === 'no_usable_index') {\n        const cc = new ClientConfig(this.config);\n        const clientConfig = await cc.get();\n\n        const schema = new Schema(this.config);\n        await schema.updateEntityIndex(clientConfig.schemas);\n\n        result = await Db.connect(this.config).find(query);\n      }\n    }\n\n    if (options.children === false) {\n      return result;\n    }\n\n    if (query.fields && query.fields.indexOf('_id') === -1) {\n      throw Error('_id field required for `children`');\n    }\n\n    result.docs = await this._extendRowsOrDocs(result.docs, options);\n\n    return result;\n  }\n\n  entityRevisions(entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config)\n        .get(entityId, {\n          revs_info: true,\n        })\n        .then(response => {\n          const revisionIds = [];\n\n          response._revs_info.forEach(revision => {\n            if (revision.status === 'available') {\n              revisionIds.push(revision.rev);\n            }\n          });\n\n          Db.connect(this.config)\n            .get(entityId, {\n              open_revs: JSON.stringify(revisionIds),\n            })\n            .then(response => {\n              const revisions = [];\n              const childrenIds = [];\n\n              response.forEach(revision => {\n                if (revision.ok) {\n                  revisions.push(revision.ok);\n\n                  _.forEach(revision.ok.fields, field => {\n                    if (/entity/.test(field.type)) {\n                      _.forEach(field.value, obj => {\n                        if (obj.id) {\n                          childrenIds.push(obj.id);\n                        }\n                      });\n                    }\n                  });\n                }\n              });\n\n              Db.connect(this.config)\n                .fetch({\n                  keys: _.uniq(childrenIds),\n                  include_docs: true,\n                })\n                .then(result => {\n                  const childrenMap = {};\n\n                  result.rows.forEach(row => {\n                    try {\n                      childrenMap[row.doc._id] = row.doc;\n                    } catch (error) {\n                      console.error('Error: child no longer exists');\n                    }\n                  });\n\n                  resolve(Entity._appendChildren(revisions, childrenMap));\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entityCreate(entity) {\n    return new Promise((resolve, reject) => {\n      entity.type = 'entity';\n\n      Db.connect(this.config)\n        .insert(entity)\n        .then(response => {\n          entity._id = response.id;\n          entity._rev = response.rev;\n\n          resolve(entity);\n        }, reject);\n    });\n  }\n\n  entityRead(entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config)\n        .get(entityId)\n        .then(resolve, reject);\n    });\n  }\n\n  async entityUpdate(entities, restore) {\n    entities = _.isArray(entities) ? entities : [entities];\n\n    const entityMap = {};\n\n    const entityIds = entities.map(entityOrEntityId => {\n      let entityId;\n\n      if (_.isObject(entityOrEntityId)) {\n        entityId = entityOrEntityId._id;\n        entityMap[entityId] = entityOrEntityId;\n      }\n      if (_.isString(entityOrEntityId)) {\n        entityId = entityOrEntityId;\n      }\n\n      return entityId;\n    });\n\n    const response = await Db.connect(this.config).fetch({\n      keys: entityIds,\n      include_docs: true,\n    });\n\n    const children = [];\n    const oldFileNames = [];\n\n    entities = response.rows.map(row => {\n      const oldEntity = row.doc;\n      const newEntity = entityMap[oldEntity._id];\n\n      let entity = oldEntity;\n\n      if (newEntity) {\n        delete newEntity._rev;\n\n        const diffs = diff(oldEntity, newEntity);\n\n        diffs.forEach(diff => {\n          // If any reference fields have changed, update all references\n          if (/published|slug|title|thumbnail/.test(diff.path[0])) {\n            if (\n              children.indexOf(newEntity) === -1 &&\n              entityIds.indexOf(newEntity._id) !== -1\n            ) {\n              children.push(newEntity);\n            }\n          }\n\n          // If any file fields have changed, remove the old file\n          if (diff.path[0] === 'fields' && diff.path[2] === 'value') {\n            const field = oldEntity.fields[diff.path[1]];\n            if (\n              /attachment|image|audio|video/.test(field.type) &&\n              field.value\n            ) {\n              oldFileNames.push(field.value.file.name);\n            }\n          }\n        });\n\n        entity = _.mergeWith({}, oldEntity, newEntity, (a, b) => {\n          if (_.isArray(a) && _.isArray(b)) {\n            return b;\n          }\n          return undefined;\n        });\n      }\n\n      if (restore) {\n        entity.trashed = false;\n      }\n\n      return entity;\n    });\n\n    if (oldFileNames.length) {\n      // TODO: fix delete orphaned files\n      // const assist = new Assist(this.config);\n      // await assist.deleteFiles(oldFileNames);\n    }\n\n    if (children.length) {\n      await this._updateChildren(children);\n    }\n\n    const result = await Helpers.chunkUpdate(\n      this.config,\n      entities,\n      CHUNK_UPDATE_SIZE\n    );\n\n    return result;\n  }\n\n  async entityDelete(entityIds, forever = false) {\n    let entities;\n    let filesResult;\n\n    if (entityIds === 'trashed') {\n      forever = true;\n\n      entities = (\n        await Db.connect(this.config).view('entity', 'trashed', {\n          include_docs: true,\n        })\n      ).rows;\n    } else {\n      entities = (\n        await Db.connect(this.config).fetch({\n          keys: _.isArray(entityIds) ? entityIds : [entityIds],\n          include_docs: true,\n        })\n      ).rows;\n    }\n\n    entities = entities.filter(\n      entity => !entity.value || !entity.value.deleted\n    );\n\n    entities = entities.map(entity => entity.doc);\n\n    await this._removeChildren(entities);\n\n    if (forever) {\n      const fileNames = Entity._fileNames(entities);\n\n      if (fileNames.length) {\n        const assist = new Assist(this.config);\n        filesResult = await assist.deleteFiles(fileNames);\n      }\n\n      entities = entities.map(entity => ({\n        _id: entity._id,\n        _rev: entity._rev,\n        _deleted: true,\n      }));\n    } else {\n      entities = entities.map(entity => {\n        entity.trashed = true;\n        return entity;\n      });\n    }\n\n    const entitiesResult = await Helpers.chunkUpdate(\n      this.config,\n      entities,\n      CHUNK_UPDATE_SIZE\n    );\n\n    return {\n      entities: entitiesResult,\n      files: filesResult,\n    };\n  }\n}\n\nmodule.exports = Entity;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Fields = require('./fields');\n\nclass Schema {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas.push(schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(schemaSlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const schema = _.find(clientConfig.schemas, { slug: schemaSlug });\n\n    if (!schema) {\n      throw Error(`Schema not found: ${schemaSlug}`);\n    }\n\n    return schema;\n  }\n\n  async update(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.schemas, { slug: schema.slug });\n\n    if (index === -1) {\n      throw Error(`Schema not found: ${schema.slug}`);\n    }\n\n    clientConfig.schemas.splice(index, 1, schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(schemaSlugs) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    schemaSlugs = _.isArray(schemaSlugs) ? schemaSlugs : [schemaSlugs];\n\n    clientConfig.schemas = clientConfig.schemas.filter(\n      schema => schemaSlugs.indexOf(schema.slug) === -1\n    );\n\n    clientConfig.schemas = clientConfig.schemas.map(schema => {\n      if (!schema.fields) {\n        return schema;\n      }\n      schema.fields = schema.fields.map(field => {\n        if (!field.settings) {\n          return field;\n        }\n        if (field.settings.schemas) {\n          field.settings.schemas = field.settings.schemas.filter(\n            schema => schemaSlugs.indexOf(schema) === -1\n          );\n        }\n        return field;\n      });\n      return schema;\n    });\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateAll(schemas) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas = schemas;\n\n    // await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateEntityIndex(schemas) {\n    let fields = [];\n\n    schemas.forEach(schema => {\n      fields = fields.concat(schema.fields);\n    });\n\n    fields = _.uniqBy(fields, 'slug');\n\n    const index = {\n      name: 'entity',\n      type: 'text',\n      ddoc: 'entityIndex',\n      index: {\n        default_field: {\n          enabled: true,\n          analyzer: 'standard',\n        },\n        selector: {\n          $and: [\n            {\n              type: 'entity',\n            },\n          ],\n        },\n        fields: [\n          {\n            name: 'published',\n            type: 'boolean',\n          },\n          {\n            name: 'trashed',\n            type: 'boolean',\n          },\n          {\n            name: 'title',\n            type: 'string',\n          },\n          {\n            name: 'slug',\n            type: 'string',\n          },\n          {\n            name: 'schema',\n            type: 'string',\n          },\n          {\n            name: 'modifiedAt',\n            type: 'string',\n          },\n          {\n            name: 'publishedAt',\n            type: 'string',\n          },\n        ],\n      },\n    };\n\n    fields.forEach(field => {\n      const fieldRef = Fields.field(field.type);\n\n      if (/number|string|boolean/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value`,\n          type: fieldRef.dataType,\n        });\n      }\n\n      if (/array/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.[].slug`,\n          type: 'string',\n        });\n      }\n\n      if (/taxonomy/.test(field.type)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.terms.[].slug`,\n          type: 'string',\n        });\n      }\n    });\n\n    const result = await Db.connect(this.config).index(index);\n\n    return result;\n  }\n}\n\nmodule.exports = Schema;\n","const _ = require('lodash');\n\nconst fields = [\n  {\n    type: 'attachment',\n    name: 'Attachment',\n    dataType: 'object',\n  },\n  {\n    type: 'audio',\n    name: 'Audio',\n    dataType: 'object',\n  },\n  {\n    type: 'checkbox',\n    name: 'Checkbox',\n    dataType: 'boolean',\n  },\n  {\n    type: 'color',\n    name: 'Color',\n    dataType: 'string',\n  },\n  {\n    type: 'date',\n    name: 'Date',\n    dataType: 'number',\n  },\n  {\n    type: 'embedly',\n    name: 'Embedly',\n    dataType: 'object',\n  },\n  {\n    type: 'entity',\n    name: 'Entity',\n    dataType: 'array',\n  },\n  {\n    type: 'entityGrid',\n    name: 'Entity Grid',\n    dataType: 'array',\n  },\n  {\n    type: 'entityTile',\n    name: 'Entity Tile',\n    dataType: 'array',\n  },\n  {\n    type: 'image',\n    name: 'Image',\n    dataType: 'object',\n  },\n  {\n    type: 'keyValue',\n    name: 'Key Value',\n    dataType: 'object',\n    toText(value) {\n      if (_.isArray(value)) {\n        return value.map(obj => `${obj.key}: ${obj.value}`).join(', ');\n      }\n    },\n  },\n  {\n    type: 'number',\n    name: 'Number',\n    dataType: 'number',\n  },\n  {\n    type: 'richText',\n    name: 'Rich Text',\n    dataType: 'object',\n  },\n  {\n    type: 'select',\n    name: 'Select',\n    dataType: 'array',\n  },\n  {\n    type: 'taxonomy',\n    name: 'Taxonomy',\n    dataType: 'object',\n  },\n  {\n    type: 'text',\n    name: 'Text',\n    dataType: 'string',\n  },\n  {\n    type: 'textArea',\n    name: 'Text Area',\n    dataType: 'string',\n  },\n  {\n    type: 'user',\n    name: 'User',\n    dataType: 'array',\n  },\n  {\n    type: 'video',\n    name: 'Video',\n    dataType: 'object',\n  },\n  {\n    type: 'vimeo',\n    name: 'Vimeo',\n    dataType: 'object',\n  },\n];\n\nclass Fields {\n  static fields() {\n    return fields.map(field => Object.freeze(field));\n  }\n  static field(type) {\n    return _.find(Fields.fields(), { type });\n  }\n}\n\nmodule.exports = Fields;\n","module.exports = require(\"request-promise\");","function Api() {}\n\nApi.defaultConfig = require('./api.config');\n\nApi.Assist = (...args) => new (require('./lib/assist'))(...args);\nApi.Auth = (...args) => new (require('./lib/auth'))(...args);\nApi.ClientConfig = (...args) => new (require('./lib/client-config'))(...args);\nApi.Db = (...args) => new (require('./lib/db'))(...args);\nApi.Email = (...args) => new (require('./lib/email'))(...args);\nApi.Embedly = (...args) => new (require('./lib/embedly'))(...args);\nApi.Entity = (...args) => new (require('./lib/entity'))(...args);\nApi.Fields = (...args) => new (require('./lib/fields'))(...args);\nApi.Helpers = (...args) => new (require('./lib/helpers'))(...args);\nApi.Instagram = (...args) => new (require('./lib/instagram'))(...args);\nApi.Jwt = (...args) => new (require('./lib/jwt'))(...args);\nApi.Pdf = (...args) => new (require('./lib/pdf'))(...args);\nApi.Roles = (...args) => new (require('./lib/roles'))(...args);\nApi.Schema = (...args) => new (require('./lib/schema'))(...args);\nApi.Settings = (...args) => new (require('./lib/settings'))(...args);\nApi.Shopify = (...args) => new (require('./lib/shopify'))(...args);\nApi.Taxonomy = (...args) => new (require('./lib/taxonomy'))(...args);\nApi.Tools = (...args) => new (require('./lib/tools'))(...args);\nApi.User = (...args) => new (require('./lib/user'))(...args);\n\nmodule.exports = Api;\n","const path = require('path');\n\nconst config = {\n  environment: process.env.ENVIRONMENT || 'development',\n  debug: process.env.DEBUG || false,\n\n  slug: process.env.SLUG,\n  baseUrl: process.env.BASE_URL || '',\n\n  db: {\n    url: process.env.DB_URL,\n    host: process.env.DB_HOST,\n    name: process.env.DB_NAME,\n    requestPlugin: process.env.DB_REQUEST_PLUGIN,\n    meterType: process.env.DB_METER_TYPE,\n  },\n\n  auth: {\n    superUserId: process.env.AUTH_SUPER_USER_ID,\n    tokenSecret: process.env.AUTH_TOKEN_SECRET || 'change_this_secret',\n  },\n\n  auth0: {\n    domain: process.env.AUTH0_DOMAIN,\n    audience: process.env.AUTH0_AUDIENCE,\n  },\n\n  dev: {\n    userId: process.env.DEV_USER_ID || 'dev',\n    role: process.env.DEV_ROLE || 'super',\n  },\n\n  cms: {\n    title: process.env.CMS_TITLE,\n    url: process.env.CMS_URL,\n  },\n\n  assist: {\n    url: process.env.ASSIST_URL,\n    username: process.env.ASSIST_USERNAME,\n    password: process.env.ASSIST_PASSWORD,\n  },\n\n  mailgun: {\n    apiKey: process.env.MAILGUN_API_KEY,\n    domain: process.env.MAILGUN_DOMAIN,\n  },\n\n  embedly: {\n    apiKey: process.env.EMBEDLY_API_KEY,\n  },\n\n  pdf: {\n    templatesPath: path.resolve(__dirname, 'pdf'),\n  },\n\n  email: {\n    templatesPath: path.resolve(__dirname, 'email'),\n  },\n\n  provider: {\n    google: {\n      clientId: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    },\n\n    instagram: {\n      clientId: process.env.INSTAGRAM_CLIENT_ID,\n      clientSecret: process.env.INSTAGRAM_CLIENT_SECRET,\n    },\n\n    spotify: {\n      clientId: process.env.SPOTIFY_CLIENT_ID,\n      clientSecret: process.env.SPOTIFY_CLIENT_SECRET,\n    },\n\n    twitter: {\n      consumerKey: process.env.TWITTER_CONSUMER_KEY,\n      consumerSecret: process.env.TWITTER_CONSUMER_SECRET,\n      accessTokenKey: process.env.TWITTER_ACCESS_TOKEN_KEY,\n      accessTokenSecret: process.env.TWITTER_ACCESS_TOKEN_SECRET,\n    },\n\n    vimeo: {\n      clientId: process.env.VIMEO_CLIENT_ID,\n      clientSecret: process.env.VIMEO_CLIENT_SECRET,\n    },\n  },\n};\n\nmodule.exports = config;\n","module.exports = require(\"password-hash\");","const _ = require('lodash');\nconst querystring = require('querystring');\nconst axios = require('axios');\nconst expressJwt = require('express-jwt');\nconst jwks = require('jwks-rsa');\nconst AuthenticationClient = require('auth0').AuthenticationClient;\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Jwt = require('./jwt');\nconst ErrorCode = require('./error-code');\n\nconst providerTokenUri = {\n  google: 'https://www.googleapis.com/oauth2/v4/token',\n  instagram: 'https://api.instagram.com/oauth/access_token',\n  vimeo: 'https://api.vimeo.com/oauth/access_token',\n  spotify: 'https://accounts.spotify.com/api/token',\n};\n\nclass Auth {\n  constructor(config) {\n    this.config = config;\n\n    this.jwtCheck = expressJwt({\n      secret: jwks.expressJwtSecret({\n        cache: true,\n        rateLimit: true,\n        jwksRequestsPerMinute: 5,\n        jwksUri:\n          'https://' + this.config.auth0.domain + '/.well-known/jwks.json',\n      }),\n      audience: this.config.auth0.audience,\n      issuer: 'https://' + this.config.auth0.domain + '/',\n      algorithms: ['RS256'],\n    });\n  }\n\n  async authUser(slug, accessToken) {\n    const auth0 = new AuthenticationClient({\n      domain: this.config.auth0.domain,\n    });\n\n    const auth0Profile = await auth0.getProfile(accessToken);\n\n    const userId = auth0Profile.email;\n\n    const isSuperUser =\n      _.get(this.config, 'auth.superUserId', '')\n        .split(',')\n        .map(superUser => superUser.trim())\n        .indexOf(userId) > -1;\n\n    let user;\n\n    if (isSuperUser) {\n      user = {\n        active: true,\n        role: 'super',\n      };\n    } else {\n      try {\n        const clientConfig = await Db.connect(this.config, slug).get('config');\n\n        user = _.find(\n          clientConfig.users,\n          user => user.email.toLowerCase() === userId.toLowerCase()\n        );\n      } catch (error) {\n        throw new ErrorCode(404, `Database not found: ${slug}`);\n      }\n    }\n\n    if (!user) {\n      throw new ErrorCode(401, `User not found: ${userId}`);\n    }\n\n    if (!user.active) {\n      throw new ErrorCode(401, `User not active: ${userId}`);\n    }\n\n    const payload = {\n      slug,\n      userId,\n      active: user.active,\n      role: user.role,\n    };\n\n    const jwt = new Jwt(this.config);\n\n    const apiToken = jwt.signToken(payload, {\n      // expiresIn: 7200,\n    });\n\n    return { ...payload, apiToken };\n  }\n\n  async authProvider(provider, params = {}, userId = null, refresh = false) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const providerConfig = _.merge(\n      {},\n      this.config.provider[provider],\n      params || {}\n    );\n\n    let providerClientConfig;\n\n    if (userId) {\n      providerClientConfig = _.get(clientConfig, [\n        'userSettings',\n        userId,\n        'provider',\n        provider,\n      ]);\n    } else {\n      providerClientConfig = _.get(clientConfig, ['provider', provider]);\n    }\n\n    if (!providerClientConfig) {\n      providerClientConfig = {};\n    }\n\n    const data = {\n      grant_type: refresh ? 'refresh_token' : 'authorization_code',\n      code: params && params.code ? params.code : undefined,\n      client_id: providerConfig.clientId,\n      client_secret: providerConfig.clientSecret,\n      redirect_uri: providerConfig.redirectUri,\n      refresh_token: refresh ? providerClientConfig.refresh_token : undefined,\n    };\n\n    const uri = providerTokenUri[provider];\n\n    let providerAuth;\n\n    try {\n      providerAuth = (await axios.post(uri, querystring.stringify(data))).data;\n    } catch (error) {\n      throw Error(JSON.stringify(error.response.data));\n    }\n\n    providerClientConfig = _.merge({}, providerClientConfig, providerAuth);\n    providerClientConfig.begins = Math.floor(new Date().getTime() / 1000);\n\n    if (provider === 'google') {\n      try {\n        providerClientConfig.user = (\n          await axios.get(\n            `https://www.googleapis.com/plus/v1/people/me?access_token=${providerClientConfig.access_token}`\n          )\n        ).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (provider === 'spotify') {\n      try {\n        providerClientConfig.user = (\n          await axios.get(\n            `https://api.spotify.com/v1/me?access_token=${providerClientConfig.access_token}`\n          )\n        ).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (userId) {\n      _.set(\n        clientConfig,\n        ['userSettings', userId, 'provider', provider],\n        providerClientConfig\n      );\n    } else {\n      _.set(clientConfig, ['provider', provider], providerClientConfig);\n    }\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = Auth;\n","module.exports = require(\"querystring\");","module.exports = require(\"express-jwt\");","module.exports = require(\"jwks-rsa\");","module.exports = require(\"auth0\");","module.exports = require(\"jsonwebtoken\");","class ErrorCode {\n  constructor(code, message) {\n    const error = Error(message);\n    error.code = code;\n    return error;\n  }\n}\n\nmodule.exports = ErrorCode;\n","const path = require('path');\nconst Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst _ = require('lodash');\nconst nodemailer = require('nodemailer');\nconst Createsend = Promise.promisifyAll(require('createsend-node'));\nconst nodemailerMailgunTransport = require('nodemailer-mailgun-transport');\nconst Inky = require('inky').Inky;\nconst mjml2html = require('mjml');\n// eslint-disable-next-line\nconst registerComponent = require('mjml-core').registerComponent;\n// eslint-disable-next-line\nconst registerDependencies = require('mjml-validator').registerDependencies;\nconst { McSection, McImage } = require('mjml-mailchimp');\nconst htmlToText = require('html-to-text');\nconst moment = require('moment');\nconst countries = require('i18n-iso-countries');\nconst sass = Promise.promisifyAll(require('node-sass'));\nconst pug = require('pug');\nconst juice = require('juice');\n\nconst ClientConfig = require('./client-config');\nconst Helpers = require('./helpers');\n\nclass Email {\n  constructor(config) {\n    this.config = config;\n\n    this.inky = new Inky();\n\n    registerComponent(McSection);\n    registerComponent(McImage);\n    registerDependencies({\n      'mc-section': ['mj-column', 'mj-group', 'mj-raw'],\n      'mj-column': ['mc-image'],\n      'mj-hero': ['mc-image'],\n    });\n  }\n\n  async getTemplate(templateSlug, templateData = {}, templateOptions = {}) {\n    const options = _.merge(\n      {},\n      {\n        inlineStyles: true,\n        inky: false,\n        mjml: false,\n        skipValidation: false,\n      },\n      templateOptions\n    );\n\n    let templatePath = path.join(this.config.email.templatesPath, templateSlug);\n\n    try {\n      await fs.statAsync(templatePath);\n    } catch (error) {\n      templatePath = path.resolve('../email', templateSlug);\n    }\n\n    const templateFiles = await fs.readdirAsync(templatePath);\n\n    let htmlFileName = 'html';\n    // Support mjml templates\n    if (_.find(templateFiles, fileName => /^html\\.mjml/.test(fileName))) {\n      htmlFileName = 'html.mjml';\n      options.mjml = true;\n    }\n\n    let htmlFileExtension = 'html';\n    if (_.find(templateFiles, fileName => /\\.pug$/.test(fileName))) {\n      htmlFileExtension = 'pug';\n    }\n\n    let style = '';\n    if (_.find(templateFiles, fileName => /^style\\.scss$/.test(fileName))) {\n      style = (\n        await sass.renderAsync({\n          file: path.join(templatePath, 'style.scss'),\n          sourceMapContents: !options.inlineStyles,\n          sourceMapEmbed: !options.inlineStyles,\n        })\n      ).css\n        .toString()\n        .replace(/\"/g, \"'\");\n    }\n\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n    const helpers = new Helpers(this.config);\n\n    templateData = _.merge({}, templateData, {\n      config: _.merge(\n        {},\n        _.pick(this.config, ['cms']),\n        _.pick(clientConfig, ['slug', 'client', 'assets'])\n      ),\n      helpers,\n      style,\n      moment,\n      countries,\n      templateSlug,\n    });\n\n    let html;\n    if (htmlFileExtension === 'html') {\n      html = fs.readFileAsync(\n        `${templatePath}/${htmlFileName}.${htmlFileExtension}`\n      );\n    }\n    if (htmlFileExtension === 'pug') {\n      html = pug.renderFile(\n        `${templatePath}/${htmlFileName}.${htmlFileExtension}`,\n        templateData\n      );\n    }\n\n    if (options.mjml) {\n      const convertMjmlResult = mjml2html(html, {\n        level: options.skipValidation ? 'skip' : 'soft',\n      });\n\n      if (convertMjmlResult.errors && convertMjmlResult.errors.length) {\n        throw Error(\n          _.uniq(\n            convertMjmlResult.errors.map(error => error.formattedMessage)\n          ).join('\\n')\n        );\n      }\n\n      html = convertMjmlResult.html;\n    }\n\n    if (options.inky) {\n      html = this.inky.releaseTheKraken(html);\n    }\n\n    if (options.inlineStyles) {\n      html = juice(html, {\n        preserveMediaQueries: true,\n        preserveFontFaces: true,\n        removeStyleTags: false,\n        removeLinkTags: false,\n        preserveImportant: true,\n        webResources: {\n          links: false,\n          scripts: false,\n          images: false,\n          // relativeTo: '',\n        },\n      });\n    }\n\n    return {\n      html,\n      text: htmlToText.fromString(html),\n    };\n  }\n\n  sendEmail(\n    emailOptions,\n    templateSlug,\n    templateData = {},\n    templateOptions = {}\n  ) {\n    return new Promise((resolve, reject) => {\n      const nodemailerMailgun = nodemailer.createTransport(\n        nodemailerMailgunTransport({\n          auth: {\n            api_key: this.config.mailgun.apiKey,\n            domain: this.config.mailgun.domain,\n          },\n        })\n      );\n\n      this.getTemplate(\n        templateSlug,\n        _.merge({}, emailOptions, templateData),\n        templateOptions\n      ).then(emailTemplate => {\n        emailOptions.html = emailTemplate.html;\n        emailOptions.text = emailTemplate.text;\n\n        nodemailerMailgun.sendMail(emailOptions, (error, metadata) => {\n          if (error) {\n            reject(error);\n            return;\n          }\n\n          resolve({\n            metadata,\n            email: emailOptions,\n          });\n        });\n      }, reject);\n    });\n  }\n\n  subscribe(details, provider, listId) {\n    return new Promise((resolve, reject) => {\n      const cc = new ClientConfig(this.config);\n\n      cc.get().then(clientConfig => {\n        if (provider === 'createsend') {\n          if (clientConfig.provider.createsend) {\n            const cs = new Createsend({\n              apiKey: clientConfig.provider.createsend.clientApiKey,\n            });\n\n            const subscribers = Promise.promisifyAll(cs.subscribers);\n\n            subscribers\n              .addSubscriberAsync(listId, {\n                EmailAddress: details.email,\n                Name: details.name,\n                Resubscribe: true,\n                RestartSubscriptionBasedAutoresponders: true,\n              })\n              .then(result => {\n                resolve(`Email.subscribe(): ${result.emailAddress}`);\n              })\n              .catch(error => {\n                reject(error.Message);\n              });\n\n            return;\n          }\n          reject(Error('Subscriber list not configured'));\n        }\n      }, reject);\n    });\n  }\n}\n\nmodule.exports = Email;\n","module.exports = require(\"nodemailer\");","module.exports = require(\"createsend-node\");","module.exports = require(\"nodemailer-mailgun-transport\");","module.exports = require(\"inky\");","module.exports = require(\"mjml\");","module.exports = require(\"mjml-core\");","module.exports = require(\"mjml-validator\");","module.exports = require(\"mjml-mailchimp\");","module.exports = require(\"html-to-text\");","module.exports = require(\"moment\");","module.exports = require(\"i18n-iso-countries\");","module.exports = require(\"node-sass\");","module.exports = require(\"pug\");","module.exports = require(\"juice\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst EmbedlyApi = require('embedly');\n\nclass Embedly {\n  constructor(config) {\n    this.config = config;\n  }\n\n  oembed(urls) {\n    return new Promise((resolve, reject) => {\n      const embedly = new EmbedlyApi({\n        key: this.config.embedly.apiKey,\n      });\n\n      const opts = {\n        urls: _.isArray(urls) ? urls : [urls],\n        format: 'json',\n      };\n\n      embedly.oembed(opts, (error, result) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(result);\n      });\n    });\n  }\n}\n\nmodule.exports = Embedly;\n","module.exports = require(\"embedly\");","module.exports = require(\"json-query\");","module.exports = require(\"deep-diff\");","const _ = require('lodash');\nconst request = require('request-promise');\n\nclass Instagram {\n  constructor(options) {\n    const defaultOptions = {\n      client_id: null,\n      access_token: null,\n      version: 'v1',\n      host: 'https://api.instagram.com',\n    };\n\n    this.options = _.merge({}, defaultOptions, options || {});\n  }\n\n  async _request(method, endpoint, query) {\n    const requestOptions = {\n      method,\n      url: [this.options.host, this.options.version, endpoint].join('/'),\n      qs: {\n        access_token: query.access_token || this.options.access_token,\n        client_id: query.client_id || this.options.client_id,\n      },\n    };\n\n    requestOptions.qs = _.extend({}, requestOptions.qs, query);\n\n    const response = await request(requestOptions);\n\n    return JSON.parse(response);\n  }\n\n  get(endpoint, query) {\n    return this._request('GET', endpoint, query);\n  }\n}\n\nmodule.exports = Instagram;\n","const fs = require('fs');\nconst path = require('path');\nconst _ = require('lodash');\nconst _eval = require('eval');\nconst request = require('request-promise');\nconst readdir = require('recursive-readdir');\nconst Entity = require('./entity');\nconst ClientConfig = require('./client-config');\n\nclass Pdf {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getTemplates() {\n    const templates = {};\n\n    const files = await readdir(this.config.pdf.templatesPath);\n\n    files.forEach(file => {\n      if (!/\\.js$/.test(file)) {\n        return;\n      }\n\n      const id = file\n        .replace(`${this.config.pdf.templatesPath}/`, '')\n        .replace('.js', '');\n\n      // eslint-disable-next-line\n      templates[id] = require(file);\n    });\n\n    return templates;\n  }\n\n  async getPayload(templateId, entityId, role) {\n    // if (!this.templates) {\n    //   this.templates = await this.getTemplates();\n    // }\n\n    // if (!this.templates[templateId]) {\n    //   throw Error('Template not found');\n    // }\n\n    const template = _eval(\n      fs.readFileSync(\n        path.join(this.config.pdf.templatesPath, `${templateId}.js`),\n        'utf-8'\n      ),\n      `${templateId}.js`,\n      {},\n      true\n    );\n\n    const entity = new Entity(this.config);\n\n    const entities = (\n      await entity.entityList([entityId], { children: 2, role })\n    ).map(row => row.doc);\n\n    if (entities.length === 0) {\n      throw Error('Entity not found');\n    }\n\n    const payload = template(Entity.flattenValues(entities)[0]);\n\n    return payload;\n  }\n\n  async getPdf(payload) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n    const assistPdfUrl = `${this.config.assist.url}/${assetSlug}/pdf/download`;\n\n    payload =\n      typeof payload === 'object'\n        ? JSON.stringify(payload).replace(/'/gi, '’')\n        : payload;\n\n    const response = await request({\n      method: 'POST',\n      uri: assistPdfUrl,\n      encoding: null,\n      form: {\n        payload,\n      },\n    });\n\n    return response;\n  }\n}\n\nmodule.exports = Pdf;\n","module.exports = require(\"eval\");","module.exports = require(\"recursive-readdir\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 51;","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass Settings {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async update(settings) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.client = _.merge({}, clientConfig.client, settings);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = Settings;\n","const axios = require('axios');\nconst he = require('he');\nconst Handlebars = require('handlebars');\nconst jsontoxml = require('jsontoxml');\n\nconst ClientConfig = require('./client-config');\n\nclass Shopify {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getCatalog({ shopLink, productLinkTemplate }) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const result = (\n      await axios({\n        url: `https://${clientConfig.provider.shopify.domain}.myshopify.com/api/graphql`,\n        method: 'post',\n        headers: {\n          'X-Shopify-Storefront-Access-Token':\n            clientConfig.provider.shopify.storefrontAccessToken,\n        },\n        data: {\n          query: `\n          query {\n            shop {\n              name\n              primaryDomain {\n                url\n              }\n              description\n              products(first: 250) {\n                edges {\n                  node {\n                    id\n                    handle\n                    title\n                    description\n                    onlineStoreUrl\n                    images(first: 1) {\n                      edges {\n                        node {\n                          originalSrc\n                          transformedSrc\n                        }\n                      }\n                    }\n                    productType\n                    vendor\n                    availableForSale\n                    priceRange {\n                      minVariantPrice {\n                        amount\n                        currencyCode\n                      }\n                      maxVariantPrice {\n                        amount\n                        currencyCode\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `,\n        },\n      })\n    ).data.data;\n\n    const template = Handlebars.compile(productLinkTemplate);\n\n    const products = result.shop.products.edges.map(edge => ({\n      'g:id': edge.node.handle,\n      'g:title': he.encode(edge.node.title),\n      'g:description': he.encode(edge.node.description),\n      // 'g:link': edge.node.onlineStoreUrl,\n      'g:link': template({ handle: edge.node.handle }),\n      'g:image_link': edge.node.images.edges[0].node.originalSrc,\n      'g:brand': edge.node.vendor,\n      'g:condition': 'new',\n      'g:availability': edge.node.availableForSale\n        ? 'in stock'\n        : 'out of stock',\n      'g:price': `${edge.node.priceRange.minVariantPrice.amount} ${edge.node.priceRange.minVariantPrice.currencyCode}`,\n      // 'g:google_product_category': he.encode(edge.node.productType),\n    }));\n\n    const channel = [\n      { name: 'title', text: result.shop.name },\n      // { name: 'link', text: result.shop.primaryDomain.url },\n      { name: 'link', text: shopLink },\n      { name: 'description', text: result.shop.description },\n    ];\n\n    products.forEach(product => {\n      channel.push({\n        name: 'item',\n        children: product,\n      });\n    });\n\n    return `<?xml version=\"1.0\"?>\n    <rss xmlns:g=\"http://base.google.com/ns/1.0\" version=\"2.0\">\n      ${jsontoxml({ channel })}\n    </rss>`;\n  }\n}\n\nmodule.exports = Shopify;\n","module.exports = require(\"he\");","module.exports = require(\"handlebars\");","module.exports = require(\"jsontoxml\");","const _ = require('lodash');\nconst Db = require('./db');\nconst ClientConfig = require('./client-config');\n\nclass Taxonomy {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async create(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.taxonomies.push(taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const taxonomy = _.find(clientConfig.taxonomies, { slug: taxonomySlug });\n\n    if (!taxonomy) {\n      throw Error(`Taxonomy not found: ${taxonomySlug}`);\n    }\n\n    return taxonomy;\n  }\n\n  async update(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.taxonomies, { slug: taxonomy.slug });\n\n    if (index === -1) {\n      throw Error(`Taxonomy not found: ${taxonomy.slug}`);\n    }\n\n    clientConfig.taxonomies.splice(index, 1, taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    taxonomySlug = _.isArray(taxonomySlug) ? taxonomySlug : [taxonomySlug];\n\n    clientConfig.taxonomies = clientConfig.taxonomies.filter(\n      taxonomy => taxonomySlug.indexOf(taxonomy.slug) === -1\n    );\n\n    return cc.set(clientConfig);\n  }\n\n  async entitiesByTerm(term) {\n    const db = Db.connect(this.config);\n\n    const entityGroups = (\n      await db.view('entity', 'byTaxonomyTerm', {\n        keys: [term.id],\n        group: true,\n      })\n    ).rows.map(row => row.value)[0];\n\n    if (!entityGroups) {\n      return [];\n    }\n\n    let entityIds = [];\n\n    _.forEach(entityGroups, entities => {\n      entityIds = entityIds.concat(entities);\n    });\n\n    entityIds = _.uniq(entityIds);\n\n    const entities = (\n      await db.fetch({ keys: entityIds, include_docs: true })\n    ).rows\n      .filter(row => row.doc)\n      .map(row => row.doc);\n\n    return entities;\n  }\n\n  async createTerm(taxonomySlug, term) {\n    const taxonomy = await this.read(taxonomySlug);\n\n    taxonomy.terms.push(term);\n\n    return this.update(taxonomy);\n  }\n\n  async updateTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map(entity => {\n      entity.fields = _.mapValues(entity.fields, field => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.map(_term => {\n            if (_term.id === term.id) {\n              _term.title = term.title;\n              _term.slug = term.slug;\n            }\n\n            if (!_term.parents) {\n              _term.parents = [];\n            }\n\n            _term.parents = _term.parents.map(parent => {\n              if (parent.id === term.id) {\n                parent.title = term.title;\n                parent.slug = term.slug;\n              }\n              return parent;\n            });\n\n            return _term;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n\n  async deleteTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map(entity => {\n      entity.fields = _.mapValues(entity.fields, field => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.filter(_term => {\n            if (_term.id === term.id) {\n              return false;\n            }\n\n            if (\n              (_term.parents || []).filter(parent => parent.id === term.id)\n                .length\n            ) {\n              return false;\n            }\n\n            return true;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n}\n\nmodule.exports = Taxonomy;\n","const Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst Cloudant = require('@cloudant/cloudant');\nconst Db = require('./db');\n\nclass Tools {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getDb() {\n    const result = await Db.connect(this.config).fetch({\n      include_docs: true,\n    });\n\n    return result;\n  }\n\n  async getChanges() {\n    const result = await Db.connect(this.config).changes({\n      limit: 50,\n      include_docs: true,\n      filter: 'entity/changes',\n    });\n\n    return result;\n  }\n\n  async importDb(dbBackupFile) {\n    const dbName = this.config.db.name;\n\n    const fileConents = await fs.readFileAsync(dbBackupFile.path);\n\n    const docs = JSON.parse(fileConents).rows.map(row => {\n      const { doc } = row;\n      delete doc._rev;\n      return doc;\n    });\n\n    await fs.unlinkAsync(dbBackupFile.path);\n\n    const cloudant = new Cloudant({\n      url: this.config.db.url,\n      plugins: ['promises', 'retry'],\n    }).db;\n\n    try {\n      await cloudant.destroy(dbName);\n    } catch (error) {\n      //\n    }\n\n    await cloudant.create(dbName);\n\n    const result = await Db.connect(this.config, dbName).bulk({ docs });\n\n    return result;\n  }\n}\n\nmodule.exports = Tools;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass User {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    user.id = user.id.toLowerCase();\n    user.email = user.email.toLowerCase();\n\n    clientConfig.users.push(user);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async update(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.users, { id: user.id });\n\n    if (index === -1) {\n      throw Error(`User not found: ${user.id}`);\n    }\n\n    user.email = user.email.toLowerCase();\n\n    clientConfig.users.splice(index, 1, user);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    userId = _.isArray(userId) ? userId : [userId];\n\n    clientConfig.users = clientConfig.users.filter(\n      user => userId.indexOf(user.id) === -1\n    );\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = User;\n"],"sourceRoot":""}