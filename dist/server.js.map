{"version":3,"sources":["webpack://AceApiServer/webpack/universalModuleDefinition","webpack://AceApiServer/webpack/bootstrap","webpack://AceApiServer/external \"@babel/runtime/helpers/interopRequireDefault\"","webpack://AceApiServer/external \"@babel/runtime/regenerator\"","webpack://AceApiServer/external \"lodash\"","webpack://AceApiServer/./lib/client-config.js","webpack://AceApiServer/external \"bluebird\"","webpack://AceApiServer/./lib/db.js","webpack://AceApiServer/./lib/helpers.js","webpack://AceApiServer/external \"axios\"","webpack://AceApiServer/external \"path\"","webpack://AceApiServer/external \"fs\"","webpack://AceApiServer/external \"express\"","webpack://AceApiServer/./lib/assist.js","webpack://AceApiServer/external \"@cloudant/cloudant\"","webpack://AceApiServer/./lib/roles.js","webpack://AceApiServer/./lib/email.js","webpack://AceApiServer/./lib/entity.js","webpack://AceApiServer/./lib/schema.js","webpack://AceApiServer/./lib/fields.js","webpack://AceApiServer/external \"request-promise\"","webpack://AceApiServer/./server/config.default.js","webpack://AceApiServer/external \"lodash/pick\"","webpack://AceApiServer/external \"lodash/isArray\"","webpack://AceApiServer/./server/server.js","webpack://AceApiServer/external \"http\"","webpack://AceApiServer/external \"morgan\"","webpack://AceApiServer/external \"helmet\"","webpack://AceApiServer/external \"cookie-parser\"","webpack://AceApiServer/external \"body-parser\"","webpack://AceApiServer/external \"method-override\"","webpack://AceApiServer/external \"express-session\"","webpack://AceApiServer/external \"connect-redis\"","webpack://AceApiServer/./server/index.js","webpack://AceApiServer/external \"cache-manager\"","webpack://AceApiServer/external \"cache-manager-redis-store\"","webpack://AceApiServer/external \"url-parse\"","webpack://AceApiServer/external \"zlib\"","webpack://AceApiServer/external \"circular-json-es6\"","webpack://AceApiServer/external \"object-sizeof\"","webpack://AceApiServer/external \"deep-freeze\"","webpack://AceApiServer/external \"xxhashjs\"","webpack://AceApiServer/./index.js","webpack://AceApiServer/./config.default.js","webpack://AceApiServer/external \"password-hash\"","webpack://AceApiServer/./lib/auth.js","webpack://AceApiServer/external \"querystring\"","webpack://AceApiServer/./lib/ecommerce.js","webpack://AceApiServer/external \"nodemailer\"","webpack://AceApiServer/external \"createsend-node\"","webpack://AceApiServer/external \"nodemailer-mailgun-transport\"","webpack://AceApiServer/external \"inky\"","webpack://AceApiServer/external \"mjml\"","webpack://AceApiServer/external \"mjml-core\"","webpack://AceApiServer/external \"mjml-validator\"","webpack://AceApiServer/external \"mjml-mailchimp\"","webpack://AceApiServer/external \"html-to-text\"","webpack://AceApiServer/external \"moment\"","webpack://AceApiServer/external \"i18n-iso-countries\"","webpack://AceApiServer/external \"node-sass\"","webpack://AceApiServer/external \"pug\"","webpack://AceApiServer/external \"ejs\"","webpack://AceApiServer/external \"juice\"","webpack://AceApiServer/./lib/embedly.js","webpack://AceApiServer/external \"embedly\"","webpack://AceApiServer/external \"@babel/runtime/helpers/defineProperty\"","webpack://AceApiServer/external \"json-query\"","webpack://AceApiServer/external \"deep-diff\"","webpack://AceApiServer/./lib/instagram.js","webpack://AceApiServer/./lib/jwt.js","webpack://AceApiServer/external \"jsonwebtoken\"","webpack://AceApiServer/./lib/pdf.js","webpack://AceApiServer/external \"eval\"","webpack://AceApiServer/external \"recursive-readdir\"","webpack://AceApiServer/./lib sync","webpack://AceApiServer/./lib/settings.js","webpack://AceApiServer/./lib/shippo.js","webpack://AceApiServer/external \"shippo\"","webpack://AceApiServer/./lib/shopify.js","webpack://AceApiServer/external \"he\"","webpack://AceApiServer/external \"handlebars\"","webpack://AceApiServer/external \"jsontoxml\"","webpack://AceApiServer/./lib/stripe.js","webpack://AceApiServer/external \"stripe\"","webpack://AceApiServer/external \"hashids\"","webpack://AceApiServer/./lib/taxonomy.js","webpack://AceApiServer/./lib/tools.js","webpack://AceApiServer/./lib/user.js","webpack://AceApiServer/./server/routes/analytics.js","webpack://AceApiServer/./server/routes/auth.js","webpack://AceApiServer/./server/routes/cache.js","webpack://AceApiServer/./server/routes/config.js","webpack://AceApiServer/./server/routes/debug.js","webpack://AceApiServer/external \"express-useragent\"","webpack://AceApiServer/./server/routes/ecommerce.js","webpack://AceApiServer/./server/routes/email.js","webpack://AceApiServer/./server/routes/embedly.js","webpack://AceApiServer/./server/routes/entity.js","webpack://AceApiServer/./server/routes/metadata.js","webpack://AceApiServer/./server/routes/pdf.js","webpack://AceApiServer/./server/routes/provider.js","webpack://AceApiServer/./server/routes/schema.js","webpack://AceApiServer/./server/routes/settings.js","webpack://AceApiServer/./server/routes/shippo.js","webpack://AceApiServer/./server/routes/shopify.js","webpack://AceApiServer/./server/routes/social.js","webpack://AceApiServer/external \"twitter\"","webpack://AceApiServer/./server/routes/stripe.js","webpack://AceApiServer/./server/routes/taxonomy.js","webpack://AceApiServer/./server/routes/token.js","webpack://AceApiServer/./server/routes/tools.js","webpack://AceApiServer/./server/routes/user.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","_","Db","Helpers","DEFAULT_CLIENT_CONFIG","_id","client","assets","schemas","taxonomies","users","roles","provider","constructor","config","this","clientConfig","connect","merge","slug","set","createOrUpdate","Cloudant","dbName","url","db","maxAttempt","plugins","retry","retryDelayMultiplier","retryInitialDelayMsecs","use","Promise","assistUrl","assist","doc","resolve","reject","insert","then","response","id","_rev","rev","error","statusCode","docs","chunkSize","chunks","chunk","promises","forEach","push","bulk","all","entities","groupSize","Infinity","grouped","group","entity","groupBefore","length","groupAfter","ratio","thumbnail","groupRatio","JSON","stringify","Date","replace","array","replacementObject","map","thumbnailSrc","settings","cropSlug","cropDefault","settingsArray","split","setting","crop","crops","x","y","x2","y2","g","join","settingsString","test","thumbnailType","ext","thumbnailUrl","axios","passwordHash","ClientConfig","deleteFiles","fileNames","cc","assetsSlug","post","auth","username","password","generate","result","data","permissions","entityGrid","entityCreate","entityRead","entityUpdate","entityDelete","taxonomyCreate","taxonomyRead","taxonomyUpdate","taxonomyDelete","fileCreate","fileRead","fileUpdate","fileDelete","schema","user","userSettings","tools","ecommerce","role","freeze","find","path","fs","promisifyAll","nodemailer","Createsend","nodemailerMailgunTransport","Inky","mjml2html","registerComponent","registerDependencies","McSection","McImage","htmlToText","moment","countries","sass","pug","ejs","juice","inky","getTemplate","templateSlug","templateData","templateOptions","options","inlineStyles","mjml","skipValidation","templatePath","email","templatesPath","statAsync","readdirAsync","templateFiles","htmlFileName","fileName","htmlFileExtension","style","renderAsync","file","sourceMapContents","sourceMapEmbed","css","toString","helpers","pick","html","readFileAsync","renderFile","convertMjmlResult","level","errors","Error","uniq","formattedMessage","releaseTheKraken","preserveMediaQueries","preserveFontFaces","removeStyleTags","removeLinkTags","preserveImportant","webResources","links","scripts","images","text","fromString","sendEmail","emailOptions","nodemailerMailgun","createTransport","api_key","mailgun","apiKey","domain","emailTemplate","sendMail","metadata","subscribe","details","listId","createsend","cs","clientApiKey","subscribers","addSubscriberAsync","EmailAddress","Name","Resubscribe","RestartSubscriptionBasedAutoresponders","emailAddress","catch","Message","jsonQuery","diff","Schema","Assist","CHUNK_UPDATE_SIZE","Entity","flattenValues","fields","size","mapValues","field","type","isArray","filter","obj","undefined","published","childrenMap","omitBy","startsWith","rows","parents","entityMap","row","_filterEntityFields","uniqBy","fieldValues","fieldSlug","searchTerm","viewWithList","startkey","endkey","query","isFieldQuery","queryParts","trim","selector","modifier","slice","locals","input","start","end","sample","sampleSize","paths","copy","pathParts","match","pathFrom","pathTo","allowRegexp","queryString","methodArgs","queries","emptyArgs","times","splice","_entitiesById","ids","include_docs","keys","view","_appendParents","children","limit","isNumber","_getDocMap","rowsOrDocs","docMap","_childDepth","childIds","rowOrDoc","isRow","_queriesFromString","concat","flatten","_query","childDocs","_childDepthLimit","fieldQueryMap","_mergeDocs","_extendRowsOrDocs","select","_removeChildren","updatedEntities","indexOf","chunkUpdate","_updateChildren","title","entityList","_entitySearch","Math","min","sort","isString","include_fields","bookmark","index","group_field","search","groups","total_rows","hits","entitySearch","__entitySearch","clone","entityFind","updateEntityIndex","entityRevisions","entityId","revs_info","revisionIds","_revs_info","revision","status","open_revs","revisions","childrenIds","ok","fetch","console","_appendChildren","restore","entityIds","entityOrEntityId","isObject","oldFileNames","oldEntity","newEntity","mergeWith","a","b","trashed","forever","deleted","_fileNames","filesResult","_deleted","entitiesResult","files","Fields","read","schemaSlug","update","findIndex","delete","schemaSlugs","updateAll","ddoc","default_field","enabled","analyzer","$and","fieldRef","dataType","environment","process","env","ENVIRONMENT","api","prefix","API_PREFIX","forceHttps","API_FORCE_HTTPS","parse","blacklistToken","API_BLACKLIST_TOKEN","blacklistReferrer","API_BLACKLIST_REFERRER","session","secret","SESSION_SECRET","ttl","parseInt","SESSION_TTL","cache","CACHE_ENABLED","CACHE_TTL","compress","CACHE_COMPRESS","memory","max","CACHE_MEMORY_MAX","redis","REDIS_URL","host","REDIS_HOST","port","REDIS_PORT","REDIS_PASSWORD","REDIS_DB","logentriesToken","LOGENTRIES_TOKEN","PORT","HOST","express","http","logger","helmet","cookieParser","bodyParser","methodOverride","RedisStore","AceApiServer","defaultConfig","customConfig","listen","app","sessionOptions","resave","saveUninitialized","redisOptions","store","cookie","maxAge","json","urlencoded","extended","server","createServer","on","log","cacheManager","redisStore","URL","zlib","CircularJSON","sizeof","deepFreeze","XXH","Api","HASH_SEED","customAuthMiddleware","asyncMiddleware","fn","req","res","next","skipAuth","route","RegExp","authMiddleware","userId","send","code","message","omitUndefined","forIn","isPlainObject","isUndefined","cloneConfig","cloneDeep","redisClient","caching","getClient","item","hash","body","h64","cacheMiddleware","async","__cache","gunzipAsync","Buffer","from","jwt","Jwt","router","Router","headers","scheme","redirect","enable","Vary","method","sendStatus","referrer","referer","referrerHostname","hostname","token","apiToken","payload","verifyToken","context","permissionMiddleware","Roles","authorised","permission","getConfig","configClone","handleResponse","cacheResponse","gzipAsync","handleError","stack","statusText","afterResponse","removeListener","args","Auth","Ecommerce","Email","Embedly","Instagram","Pdf","Settings","Shippo","Shopify","Stripe","Taxonomy","Tools","User","debug","DEBUG","SLUG","baseUrl","BASE_URL","DB_URL","DB_HOST","DB_NAME","requestPlugin","DB_REQUEST_PLUGIN","meterType","DB_METER_TYPE","superUserId","AUTH_SUPER_USER_ID","tokenSecret","AUTH_TOKEN_SECRET","dev","DEV_USER_ID","DEV_ROLE","cms","CMS_TITLE","CMS_URL","ASSIST_URL","ASSIST_USERNAME","ASSIST_PASSWORD","MAILGUN_API_KEY","MAILGUN_DOMAIN","embedly","EMBEDLY_API_KEY","pdf","__dirname","google","clientId","GOOGLE_CLIENT_ID","clientSecret","GOOGLE_CLIENT_SECRET","instagram","INSTAGRAM_CLIENT_ID","INSTAGRAM_CLIENT_SECRET","spotify","SPOTIFY_CLIENT_ID","SPOTIFY_CLIENT_SECRET","stripe","STRIPE_CLIENT_ID","STRIPE_CLIENT_SECRET","STRIPE_API_KEY","twitter","consumerKey","TWITTER_CONSUMER_KEY","consumerSecret","TWITTER_CONSUMER_SECRET","accessTokenKey","TWITTER_ACCESS_TOKEN_KEY","accessTokenSecret","TWITTER_ACCESS_TOKEN_SECRET","vimeo","VIMEO_CLIENT_ID","VIMEO_CLIENT_SECRET","querystring","providerTokenUri","authUser","superUser","active","toLowerCase","authProvider","params","refresh","providerConfig","providerClientConfig","grant_type","client_id","client_secret","redirect_uri","redirectUri","refresh_token","uri","providerAuth","begins","floor","getTime","access_token","getType","setType","deleteType","items","getOrder","orderId","verifyDiscount","discount","now","dateStart","dateEnd","EmbedlyApi","oembed","urls","opts","format","request","version","_request","endpoint","requestOptions","qs","extend","signToken","sign","verify","_eval","readdir","getTemplates","templates","getPayload","templateId","template","readFileSync","getPdf","assetSlug","assistPdfUrl","encoding","form","webpackEmptyContext","e","shippo","getQuote","address","parcel","addressFrom","object_purpose","zip","fromZip","country","fromCountry","addressTo","distance_unit","mass_unit","shipment","address_from","address_to","ratesReady","attempts","object_status","retrieve","object_id","val","rates","he","Handlebars","jsontoxml","getCatalog","shopLink","productLinkTemplate","shopify","storefrontAccessToken","compile","products","shop","edges","edge","node","handle","encode","description","originalSrc","vendor","availableForSale","priceRange","minVariantPrice","amount","currencyCode","channel","product","Hashids","hashids","getSettings","clientStripeAccountId","stripe_user_id","checkout","order","customerDetails","findOrCreateCustomer","customer","createOrder","updateOrCreateStripeCustomer","stripeCustomer","updateCustomer","createCharge","updatedOrder","sendReceipt","orderReceipt","messages","sendNotification","orderNotification","updateOrder","finalOrder","retrieveAccount","accounts","refund","refunds","refund_application_fee","charge","stripe_account","charges","amountRefunded","amount_refunded","newCustomer","createdAt","modifiedAt","phone","billingAddress","shippingAddress","orders","source","customer_id","customers","param","price","quantity","newOrder","shippingMethod","Number","subtotal","tax","rate","includedInPrice","total","show","currency","iso","capture","order_id","statement_descriptor","kebabCase","storeName","toUpperCase","application_fee","ceil","paymentGateway","livemode","emailSenderName","emailSenderAddress","to","subject","taxonomy","taxonomySlug","entitiesByTerm","term","entityGroups","createTerm","terms","updateTerm","_term","parent","deleteTerm","getDb","getChanges","changes","importDb","dbBackupFile","fileConents","unlinkAsync","cloudant","destroy","Analytics","analytics","error_description","put","pattern","del","clientInfo","useragent","renderTemplate","fromName","fromEmail","toName","toEmail","indexAsync","q","use_index","$or","$exists","attachment","providerApiBaseUrl","providerApiHandler","expires_in","token_type","baseURL","Authorization","schemaId","setHeader","instagramAccessTokenMap","Twitter","consumer_key","consumer_secret","access_token_key","access_token_secret","pagination","next_url","taxonomySlugs","pickBy","isNaN","userIds"],"mappings":"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","file":"server.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AceApiServer\"] = factory();\n\telse\n\t\troot[\"AceApiServer\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","module.exports = require(\"@babel/runtime/helpers/interopRequireDefault\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"lodash\");","const _ = require('lodash');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Roles = require('./roles');\n\nconst roles = new Roles();\n\nconst DEFAULT_CLIENT_CONFIG = {\n  _id: 'config',\n  client: {},\n  assets: {},\n  schemas: [],\n  taxonomies: [],\n  users: [],\n  roles: roles.roles(),\n  provider: {},\n  module: {},\n};\n\nclass ClientConfig {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async get() {\n    let clientConfig = DEFAULT_CLIENT_CONFIG;\n\n    try {\n      clientConfig = await Db.connect(this.config).get('config');\n\n      clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n    } catch (error) {\n      //\n    }\n\n    clientConfig.slug = this.config.slug;\n\n    return clientConfig;\n  }\n\n  async set(clientConfig) {\n    clientConfig._id = 'config';\n\n    delete clientConfig.roles;\n\n    clientConfig = await Helpers.createOrUpdate(this.config, clientConfig);\n\n    clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n\n    return clientConfig;\n  }\n}\n\n\nmodule.exports = ClientConfig;\n","module.exports = require(\"bluebird\");","const Cloudant = require('@cloudant/cloudant');\n\nclass Db {\n  constructor (config, dbName) {\n    this.config = config;\n\n    return Db.connect(config, dbName);\n  }\n\n  static connect (config, dbName) {\n    const cloudant = new Cloudant({\n      url: config.db.url,\n      maxAttempt: 5,\n      plugins: [\n        'promises',\n        {\n          retry: {\n            retryDelayMultiplier: 2,\n            retryInitialDelayMsecs: 500,\n          },\n        },\n      ],\n    });\n\n    return cloudant.db.use(dbName || config.db.name);\n  }\n}\n\nmodule.exports = Db;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\n\nclass Helpers {\n  constructor(config) {\n    this.config = config;\n    this.assistUrl = config.assist.url;\n    this.slug = config.slug;\n  }\n\n  static createOrUpdate (config, doc) {\n    return new Promise((resolve, reject) => {\n      Db.connect(config).insert(doc)\n        .then((response) => {\n          doc._id = response.id;\n          doc._rev = response.rev;\n          resolve(doc);\n        }, (error) => {\n          if (error.statusCode !== 409) {\n            reject(error);\n            return;\n          }\n\n          Db.connect(config).get(doc._id)\n            .then((response) => {\n              doc._rev = response._rev;\n\n              Db.connect(config).insert(doc)\n                .then((response) => {\n                  doc._rev = response.rev;\n                  resolve(doc);\n                }, reject);\n            }, reject);\n        });\n    });\n  }\n\n  static chunkUpdate (config, docs, chunkSize = 1000) {\n    return new Promise((resolve, reject) => {\n      const chunks = _.chunk(docs, chunkSize);\n      const promises = [];\n\n      chunks.forEach((chunk) => {\n        promises.push(new Promise((resolve, reject) => {\n          Db.connect(config).bulk({\n            docs: chunk,\n          }).then(resolve, reject);\n        }));\n      });\n\n      Promise.all(promises).then(resolve, reject);\n    });\n  }\n\n  static groupEntities (entities, groupSize = Infinity) {\n    const grouped = [];\n\n    let group = {\n      entities: [],\n    };\n\n    entities.forEach((entity) => {\n      if (!entity.groupBefore || group.entities.length >= groupSize) {\n        group = {\n          entities: [],\n        };\n      }\n\n      group.entities.push(entity);\n\n      if (!entity.groupAfter || group.entities.length >= groupSize) {\n        group.ratio = 0;\n\n        group.entities.forEach((entity) => {\n          group.ratio += (entity.thumbnail || entity).ratio;\n        });\n\n        group.entities.forEach((entity) => {\n          entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n        });\n\n        grouped.push(group);\n      }\n    });\n\n    return grouped;\n  }\n\n  static now () {\n    return JSON.stringify(new Date()).replace(/\"/g, '');\n  }\n\n  static replace (array, replacementObject, key) {\n    return array.map((object) => {\n      if (object[key] === replacementObject[key]) {\n        return replacementObject;\n      }\n      return object;\n    });\n  }\n\n  thumbnailSrc (thumbnail, settings, cropSlug, cropDefault) {\n    if (!thumbnail) {\n      return '';\n    }\n\n    let settingsArray;\n\n    if (typeof settings === 'string') {\n      settingsArray = settings.split(/,|;/);\n\n      settings = {};\n\n      settingsArray.forEach((setting) => {\n        setting = setting.split(/_|:/);\n\n        settings[setting[0]] = setting[1];\n      });\n    }\n\n    const crop = thumbnail.crops ? thumbnail.crops[cropSlug] : false;\n\n    if (crop) {\n      settings.x = crop[0];\n      settings.y = crop[1];\n      settings.x2 = crop[2];\n      settings.y2 = crop[3];\n    } else if (cropDefault) {\n      settings.g = cropDefault;\n    }\n\n    settingsArray = [];\n\n    _.forEach(settings, (value, key) => {\n      settingsArray.push([key, value].join(':'));\n    });\n\n    const settingsString = settingsArray.join(';');\n\n    if (/(image)/.test(thumbnail.thumbnailType)) {\n      if (thumbnail.ext === 'svg') {\n        return [this.assistUrl, this.slug, thumbnail.name + thumbnail.ext].join('/');\n      }\n\n      return [this.assistUrl, this.slug, 'transform', settingsString, thumbnail.name + thumbnail.ext].join('/');\n    }\n\n    if (/(video)/.test(thumbnail.thumbnailType)) {\n      return [this.assistUrl, this.slug, 'transform', settingsString, thumbnail.name, 'thumb.jpg'].join('/');\n    }\n\n    if (/(oembed|proxy)/.test(thumbnail.thumbnailType)) {\n      const thumbnailUrl = thumbnail.thumbnailUrl.replace(/https?:\\/\\//, '');\n\n      return [this.assistUrl, this.slug, 'proxy', 'transform', settingsString, thumbnailUrl].join('/');\n    }\n\n    return '';\n  }\n\n}\n\nmodule.exports = Helpers;\n","module.exports = require(\"axios\");","module.exports = require(\"path\");","module.exports = require(\"fs\");","module.exports = require(\"express\");","const _ = require('lodash');\nconst axios = require('axios');\nconst passwordHash = require('password-hash');\nconst ClientConfig = require('./client-config');\n\nclass Assist {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async deleteFiles(fileNames) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetsSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n\n    if (fileNames.length === 0) {\n      return [];\n    }\n\n    const result = (await axios.post(`${this.config.assist.url}/${assetsSlug}/file/delete`, { fileNames }, {\n      auth: {\n        username: this.config.assist.username,\n        password: passwordHash.generate(this.config.assist.password),\n      },\n    })).data;\n\n    return result;\n  }\n\n}\n\nmodule.exports = Assist;\n","module.exports = require(\"@cloudant/cloudant\");","const _ = require('lodash');\n\nconst roles = [\n  {\n    name: 'Admin',\n    slug: 'admin',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: true,\n      settings: true,\n      userSettings: true,\n      tools: true,\n      ecommerce: true,\n    },\n  },\n  {\n    name: 'Editor',\n    slug: 'editor',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: true,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n  {\n    name: 'Guest',\n    slug: 'guest',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: false,\n      entityRead: true,\n      entityUpdate: false,\n      entityDelete: false,\n\n      taxonomyCreate: false,\n      taxonomyRead: true,\n      taxonomyUpdate: false,\n      taxonomyDelete: false,\n\n      fileCreate: false,\n      fileRead: true,\n      fileUpdate: false,\n      fileDelete: false,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: false,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n];\n\nclass Roles {\n  roles() {\n    return roles.map(role => Object.freeze(role));\n  }\n  role(slug) {\n    return _.find(this.roles(), { slug });\n  }\n}\n\nmodule.exports = Roles;\n","const path = require('path');\nconst Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst _ = require('lodash');\nconst nodemailer = require('nodemailer');\nconst Createsend = Promise.promisifyAll(require('createsend-node'));\nconst nodemailerMailgunTransport = require('nodemailer-mailgun-transport');\nconst Inky = require('inky').Inky;\nconst mjml2html = require('mjml');\n// eslint-disable-next-line\nconst registerComponent = require('mjml-core').registerComponent;\n// eslint-disable-next-line\nconst registerDependencies = require('mjml-validator').registerDependencies;\nconst { McSection, McImage } = require('mjml-mailchimp');\nconst htmlToText = require('html-to-text');\nconst moment = require('moment');\nconst countries = require('i18n-iso-countries');\nconst sass = Promise.promisifyAll(require('node-sass'));\nconst pug = require('pug');\nconst ejs = require('ejs');\nconst juice = require('juice');\n\nconst ClientConfig = require('./client-config');\nconst Helpers = require('./helpers');\n\nclass Email {\n  constructor(config) {\n    this.config = config;\n\n    this.inky = new Inky();\n\n    registerComponent(McSection);\n    registerComponent(McImage);\n    registerDependencies({\n      'mc-section': ['mj-column', 'mj-group', 'mj-raw'],\n      'mj-column': ['mc-image'],\n      'mj-hero': ['mc-image'],\n    });\n  }\n\n  async getTemplate(templateSlug, templateData = {}, templateOptions = {}) {\n    const options = _.merge({}, {\n      inlineStyles: true,\n      inky: false,\n      mjml: false,\n      skipValidation: false,\n    }, templateOptions);\n\n    let templatePath = path.join(this.config.email.templatesPath, templateSlug);\n\n    try {\n      await fs.statAsync(templatePath);\n    } catch (error) {\n      templatePath = path.resolve('../email', templateSlug);\n    }\n\n    const templateFiles = await fs.readdirAsync(templatePath);\n\n    let htmlFileName = 'html';\n    // Support mjml templates\n    if (_.find(templateFiles, fileName => /^html\\.mjml/.test(fileName))) {\n      htmlFileName = 'html.mjml';\n      options.mjml = true;\n    }\n\n    let htmlFileExtension = 'html';\n    if (_.find(templateFiles, fileName => /\\.pug$/.test(fileName))) {\n      htmlFileExtension = 'pug';\n    }\n    if (_.find(templateFiles, fileName => /\\.ejs$/.test(fileName))) {\n      htmlFileExtension = 'ejs';\n    }\n\n    let style = '';\n    if (_.find(templateFiles, fileName => /^style\\.scss$/.test(fileName))) {\n      style = (await sass.renderAsync({\n        file: path.join(templatePath, 'style.scss'),\n        sourceMapContents: !options.inlineStyles,\n        sourceMapEmbed: !options.inlineStyles,\n      })).css.toString().replace(/\"/g, '\\'');\n    }\n\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n    const helpers = new Helpers(this.config);\n\n    templateData = _.merge({}, templateData, {\n      config: _.merge({}, _.pick(this.config, ['cms']), _.pick(clientConfig, ['slug', 'client', 'assets'])),\n      helpers,\n      style,\n      moment,\n      countries,\n      templateSlug,\n    });\n\n    let html;\n    if (htmlFileExtension === 'html') {\n      html = fs.readFileAsync(`${templatePath}/${htmlFileName}.${htmlFileExtension}`);\n    }\n    if (htmlFileExtension === 'pug') {\n      html = pug.renderFile(`${templatePath}/${htmlFileName}.${htmlFileExtension}`, templateData);\n    }\n    if (htmlFileExtension === 'ejs') {\n      html = await ejs.renderFile(`${templatePath}/${htmlFileName}.${htmlFileExtension}`, templateData);\n    }\n\n    if (options.mjml) {\n      const convertMjmlResult = mjml2html(html, {\n        level: options.skipValidation ? 'skip' : 'soft',\n      });\n\n      if (convertMjmlResult.errors && convertMjmlResult.errors.length) {\n        throw new Error(_.uniq(convertMjmlResult.errors.map(error => error.formattedMessage)).join('\\n'));\n      }\n\n      html = convertMjmlResult.html;\n    }\n\n    if (options.inky) {\n      html = this.inky.releaseTheKraken(html);\n    }\n\n    if (options.inlineStyles) {\n      html = juice(html, {\n        preserveMediaQueries: true,\n        preserveFontFaces: true,\n        removeStyleTags: false,\n        removeLinkTags: false,\n        preserveImportant: true,\n        webResources: {\n          links: false,\n          scripts: false,\n          images: false,\n          // relativeTo: '',\n        },\n      });\n    }\n\n    return {\n      html,\n      text: htmlToText.fromString(html),\n    };\n  }\n\n  sendEmail(emailOptions, templateSlug, templateData = {}, templateOptions = {}) {\n    return new Promise((resolve, reject) => {\n      const nodemailerMailgun = nodemailer.createTransport(nodemailerMailgunTransport({\n        auth: {\n          api_key: this.config.mailgun.apiKey,\n          domain: this.config.mailgun.domain,\n        },\n      }));\n\n      this.getTemplate(templateSlug, _.merge({}, emailOptions, templateData), templateOptions)\n        .then((emailTemplate) => {\n          emailOptions.html = emailTemplate.html;\n          emailOptions.text = emailTemplate.text;\n\n          nodemailerMailgun.sendMail(emailOptions, (error, metadata) => {\n            if (error) {\n              reject(error);\n              return;\n            }\n\n            resolve({\n              metadata,\n              email: emailOptions,\n            });\n          });\n        }, reject);\n    });\n  }\n\n  subscribe(details, provider, listId) {\n    return new Promise((resolve, reject) => {\n      const cc = new ClientConfig(this.config);\n\n      cc.get()\n        .then((clientConfig) => {\n          if (provider === 'createsend') {\n            if (clientConfig.provider.createsend) {\n              const cs = new Createsend({\n                apiKey: clientConfig.provider.createsend.clientApiKey,\n              });\n\n              const subscribers = Promise.promisifyAll(cs.subscribers);\n\n              subscribers.addSubscriberAsync(listId, {\n                EmailAddress: details.email,\n                Name: details.name,\n                Resubscribe: true,\n                RestartSubscriptionBasedAutoresponders: true,\n              })\n                .then((result) => {\n                  resolve(`Email.subscribe(): ${result.emailAddress}`);\n                })\n                .catch((error) => {\n                  reject(error.Message);\n                });\n\n              return;\n            }\n            reject(new Error('Subscriber list not configured'));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Email;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst jsonQuery = require('json-query');\nconst { diff } = require('deep-diff');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Schema = require('./schema');\nconst Assist = require('./assist');\n\nconst CHUNK_UPDATE_SIZE = 1000;\n\nclass Entity {\n  constructor(config) {\n    this.config = config;\n\n    // Expose helpers\n    this.flattenValues = Entity.flattenValues;\n  }\n\n  static flattenValues(docs) {\n    return docs.map((doc) => {\n      if (!doc.fields || !_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (/entity/.test(field.type) && _.isArray(field.value)) { // entity / entityTile / entityGrid\n          field.value = Entity.flattenValues(field.value);\n        }\n        return field.value;\n      });\n\n      return doc;\n    });\n  }\n\n  static _filterEntityFields(docs, role = 'guest') {\n    const isArray = _.isArray(docs);\n\n    docs = (isArray ? docs : [docs]).map((doc) => {\n      if (_.size(doc.fields)) {\n        doc.fields = _.mapValues(doc.fields, (field) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter((obj) => {\n              if (!obj) {\n                return false;\n              }\n              if (obj.type && obj.type === 'entity' && role === 'guest') {\n                return obj.published !== undefined ? obj.published : true;\n              }\n              return true;\n            });\n          }\n          return field;\n        });\n      }\n      return doc;\n    });\n\n    return isArray ? docs : docs[0];\n  }\n\n  static _appendChildren(docs, childrenMap) {\n    return docs.map((doc) => {\n      if (!_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (_.isArray(field.value)) {\n          field.value = field.value.filter((obj) => {\n            if (!obj) {\n              return false;\n            }\n            if (obj.type === 'entity') {\n              return childrenMap[obj.id] !== undefined;\n            }\n            return true;\n          });\n\n          field.value = field.value.map((obj) => {\n            if (obj.type === 'entity') {\n              obj = _.merge(obj, childrenMap[obj.id]);\n            }\n            obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n            return obj;\n          });\n        }\n\n        return field;\n      });\n\n      return doc;\n    });\n  }\n\n  static _appendParents(rows, parents = null, role = 'guest') {\n    let entityMap = {};\n\n    rows.forEach((row) => {\n      if (row.doc && row.value.type === 'entity') {\n        entityMap[row.id] = { ...row.doc, parents: [] };\n      }\n    });\n\n    if (parents) {\n      rows.forEach((row) => {\n        if (row.doc && row.value.type === 'parent') {\n          entityMap[row.key].parents.push(Entity._filterEntityFields(row.doc, role));\n        }\n      });\n\n      entityMap = _.mapValues(entityMap, (entity) => {\n        entity.parents = _.uniqBy(entity.parents, entity => entity._id);\n        return entity;\n      });\n    }\n\n    rows = rows.map((row) => {\n      row.doc = entityMap[row.id];\n      return row;\n    });\n\n    rows = rows.filter(row => row.value.type === 'entity');\n\n    return rows;\n  }\n\n  static _fileNames(entities) {\n    const fileNames = [];\n\n    entities.forEach((entity) => {\n      _.forEach(entity.fields, (field) => {\n        if (field.value && field.value.file) {\n          fileNames.push(field.value.file.name);\n        }\n      });\n    });\n\n    return _.uniq(fileNames);\n  }\n\n  async fieldValues(fieldSlug, searchTerm) {\n    const result = await Db.connect(this.config).viewWithList('entity', 'byField', 'search', {\n      startkey: [fieldSlug],\n      endkey: [fieldSlug, {}],\n      group: true,\n      searchTerm,\n    });\n    return result;\n  }\n\n  static _query(data, query, isFieldQuery = false) {\n    query = query.replace(/(\\s\\s|\\t|\\r|\\n)/g, '');\n\n    if (isFieldQuery) {\n      const queryParts = query.trim().split(/\\[|\\]/);\n      const selector = `fields.${queryParts[0]}.value[${queryParts[1] || '*'}]`;\n      const modifier = /\\]:/.test(query) ? `:${query.split(/\\]:/).slice(-1)[0].trim()}` : '';\n      query = `${selector}${modifier}`;\n    }\n\n    const result = jsonQuery(query, {\n      data,\n      locals: {\n        slice: (input, start, end) => _.slice(input, start, end),\n        sample: (input, size = 1) => _.sampleSize(input, size),\n        group: (entities, groupSize = Infinity) => {\n          const grouped = [];\n\n          let group = [];\n\n          entities.forEach((entity) => {\n            if (!entity.groupBefore || group.length >= groupSize) {\n              group = [];\n            }\n\n            group.push(entity);\n\n            if (!entity.groupAfter || group.length >= groupSize) {\n              group.ratio = 0;\n\n              group.forEach((entity) => {\n                group.ratio += (entity.thumbnail || entity).ratio;\n              });\n\n              group.forEach((entity) => {\n                entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n              });\n\n              grouped.push(group);\n            }\n          });\n\n          return grouped;\n        },\n        pick: (input, ...paths) => _.map(input, (obj) => {\n          const copy = {\n            id: obj.id || undefined,\n          };\n          paths = paths.filter(path => path); // Remove empty paths (tolerate trailing comma in args)\n          paths.forEach((path) => {\n            const pathParts = path.match(/([^\\s]+)/g);\n            const pathFrom = pathParts[0];\n            const pathTo = pathParts[pathParts.length - 1];\n            _.set(copy, pathTo, _.get(obj, pathFrom));\n          });\n          return copy;\n        }),\n      },\n      allowRegexp: true,\n    });\n\n    return result;\n  }\n\n  static _queriesFromString(queryString) {\n    // Remove white space\n    queryString = queryString.replace(/(\\s\\s|\\t|\\r|\\n)/gm, '');\n\n    // Match and store (...args) from query so we can split by comma\n    const methodArgs = queryString.match(/\\(([^)]+)\\)/g);\n\n    // Replace (...args) with empty ()\n    queryString = queryString.replace(/\\(.*?\\)/g, '()');\n\n    // Extract queries\n    let queries = queryString.split(/,(?![^([]*[\\])])/g);\n\n    queries = queries.map((query) => {\n      // Replace () with original (...args)\n      const emptyArgs = query.match(/\\(\\)/g);\n      if (emptyArgs) {\n        _.times(emptyArgs.length, () => {\n          query = query.replace('()', methodArgs.splice(0, 1));\n        });\n      }\n      return query.trim();\n    });\n\n    return queries;\n  }\n\n  async _entitiesById(ids = [], options = {}) {\n    options = _.merge({\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    const query = {\n      include_docs: true,\n    };\n\n    if (ids.length) {\n      query.keys = ids;\n    }\n\n    const result = await Db.connect(this.config)\n      .view('entity', options.parents ? 'byIdExtended' : 'byId', query);\n\n    result.rows = result.rows.map((row) => {\n      row.doc = Entity._filterEntityFields(row.doc, options.role);\n      return row;\n    });\n\n    result.rows = Entity._appendParents(result.rows, options.parents, options.role);\n\n    return result;\n  }\n\n  static _childDepthLimit(children) {\n    let limit = 0;\n    if (_.isNumber(children)) {\n      limit = children - 1;\n    }\n    if (_.isArray(children)) {\n      limit = children.length - 1;\n    }\n    return limit;\n  }\n\n  async _getDocMap(rowsOrDocs, docMap = {}, options = {}) {\n    options._childDepth = options._childDepth || 0;\n\n    if (!options.parents && !options.children) {\n      return docMap;\n    }\n\n    let ids = [];\n    let childIds = [];\n\n    rowsOrDocs.forEach((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      let doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      doc = Entity._filterEntityFields(doc, options.role);\n\n      if (options.children && doc.fields && _.size(doc.fields)) {\n        if (_.isArray(options.children)) {\n          Entity._queriesFromString(options.children[options._childDepth]).forEach((query) => {\n            childIds = childIds.concat(_.flatten(Entity._query(doc, query, true).value).map(obj => obj && obj.id));\n          });\n\n        } else {\n          _.forEach(doc.fields, (field) => {\n            if (_.isArray(field.value)) {\n              field.value = field.value.filter(obj => obj);\n\n              field.value.forEach((obj) => {\n                if (obj.id) {\n                  childIds.push(obj.id);\n                }\n              });\n            }\n          });\n        }\n      }\n\n      ids.push(isRow ? rowOrDoc.id : doc._id || doc.id);\n    });\n\n    ids = _.uniq(ids);\n    ids = ids.filter(id => !docMap[id]);\n\n    let docs = [];\n    if (ids.length > 0) {\n      docs = (await this._entitiesById(ids, options)).rows.map(row => row.doc);\n\n      docs.forEach((doc) => {\n        docMap[doc._id] = doc;\n      });\n    }\n\n    childIds = _.uniq(childIds);\n    childIds = childIds.filter(id => !docMap[id]);\n\n    let childDocs = [];\n    if (childIds.length > 0) {\n      childDocs = (await this._entitiesById(childIds, { ...options, parents: false })).rows.map(row => row.doc);\n\n      childDocs.forEach((doc) => {\n        docMap[doc._id] = doc;\n      });\n    }\n\n    if (!options.children || (options._childDepth === Entity._childDepthLimit(options.children))) {\n      return docMap;\n    }\n\n    docMap = await this._getDocMap(childDocs, docMap, { ...options, parents: false, _childDepth: options._childDepth + 1 });\n\n    return docMap;\n  }\n\n  static _mergeDocs(docs, docMap, options = { children: false, parents: false }) {\n    options._childDepth = options._childDepth || 0;\n\n    if (options.children && (options._childDepth - 1 === Entity._childDepthLimit(options.children))) {\n      return docs;\n    }\n\n    docs = docs.map((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      let doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (docMap[rowOrDoc.id || rowOrDoc._id]) {\n        doc = _.merge({}, doc, docMap[rowOrDoc.id || rowOrDoc._id]);\n      }\n\n      if (options.children && doc.fields && _.size(doc.fields)) {\n\n        let fieldQueryMap;\n\n        if (_.isArray(options.children)) {\n          fieldQueryMap = {};\n          Entity._queriesFromString(options.children[options._childDepth]).forEach((query) => {\n            const key = query.split(/\\[|\\]/)[0];\n            fieldQueryMap[key] = query;\n          });\n        }\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter(obj => obj);\n\n            if (!fieldQueryMap || (fieldQueryMap && fieldQueryMap[fieldSlug])) {\n              if (fieldQueryMap && fieldQueryMap[fieldSlug]) {\n                field.value = field.value.filter(obj => obj.id && docMap[obj.id]);\n              }\n\n              field.value = field.value.map((obj) => {\n                if (obj && obj.id && docMap[obj.id]) {\n                  obj = _.merge(obj, docMap[obj.id] || {});\n                  obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n                }\n                return obj;\n              });\n\n              field.value = Entity._mergeDocs(field.value, docMap, { ...options, _childDepth: options._childDepth + 1 });\n            }\n          }\n          return field;\n        });\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            if (fieldQueryMap && fieldQueryMap[fieldSlug]) {\n              field.value = _.flatten(Entity._query(doc, fieldQueryMap[fieldSlug], true).value);\n            }\n          }\n          return field;\n        });\n      }\n\n      if (_.isArray(options.parents) && doc.parents) {\n        doc.parents = _.flatten(Entity._query(doc.parents, options.parents[0]).value);\n      }\n\n      if (isRow) {\n        rowOrDoc.doc = doc;\n      } else {\n        rowOrDoc = doc;\n      }\n\n      return rowOrDoc;\n    });\n\n    return docs;\n  }\n\n  async _extendRowsOrDocs(rowsOrDocs, options = {}) {\n    options = _.merge({\n      select: false,\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    let docMap = await this._getDocMap(rowsOrDocs, {}, options);\n\n    rowsOrDocs = Entity._mergeDocs(rowsOrDocs, docMap, options);\n\n    if (options.select) {\n      rowsOrDocs = _.flatten(Entity._query(rowsOrDocs, options.select).value);\n    }\n\n    docMap = null;\n\n    return rowsOrDocs;\n  }\n\n  _removeChildren(entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      entities = entities.map(entity => entity._id);\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const updatedEntities = _.uniqBy(response.rows, row => row.doc._id).map((row) => {\n            row.doc.fields = _.mapValues(row.doc.fields, (field) => {\n              if (_.isArray(field.value)) {\n                field.value = _.filter(field.value, obj => !(obj.type === 'entity' && entities.indexOf(obj.id) !== -1));\n              }\n              return field;\n            });\n\n            return row.doc;\n          });\n\n          if (updatedEntities.length === 0) {\n            resolve([]);\n            return;\n          }\n\n          Helpers.chunkUpdate(this.config, updatedEntities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  _updateChildren(entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      const entityMap = {};\n\n      entities = entities.map((entity) => {\n        entityMap[entity._id] = entity;\n\n        return entity._id;\n      });\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const entities = response.rows.map((row) => {\n            const entity = row.doc;\n\n            _.forEach(entity.fields, (field, fieldSlug) => {\n              if (_.isArray(field.value)) {\n                entity.fields[fieldSlug].value = field.value\n                  .filter(obj => obj)\n                  .map((obj) => {\n                    if (obj.type === 'entity' && entityMap[obj.id]) {\n                      obj.slug = entityMap[obj.id].slug;\n                      obj.title = entityMap[obj.id].title;\n                      obj.schema = entityMap[obj.id].schema;\n                      obj.published = entityMap[obj.id].published;\n\n                      if (entityMap[obj.id].thumbnail) {\n                        obj.thumbnail = entityMap[obj.id].thumbnail;\n                      } else {\n                        obj.thumbnail = null;\n                      }\n                    }\n\n                    return obj;\n                  });\n              }\n            });\n\n            return entity;\n          });\n\n          Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  async entityList(ids = [], options = {}) {\n    options = _.merge({\n      select: false,\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    const result = await this._entitiesById(ids, options);\n\n    const rows = await this._extendRowsOrDocs(result.rows, options);\n\n    return rows;\n  }\n\n  _entitySearch(query, options = {}) {\n    return new Promise((resolve, reject) => {\n      query.limit = Math.min(query.limit || 200, 200);\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      if (options.children) {\n        query.include_docs = true;\n      }\n\n      if (!query.include_fields) {\n        query.include_fields = [];\n      }\n\n      if (_.isArray(query.include_fields)) {\n        query.include_fields = JSON.stringify(query.include_fields);\n      }\n\n      if (!query.sort) {\n        delete query.sort;\n      }\n      if (!query.bookmark) {\n        delete query.bookmark;\n      }\n      if (!query.index) {\n        delete query.index;\n      }\n      if (!query.group_field) {\n        delete query.group_field;\n      }\n\n      Db.connect(this.config).search('entity', query.index || 'all', query)\n        .then((result) => {\n\n          if (result.groups) {\n            const promises = [];\n\n            result.groups = result.groups.map((group) => {\n              promises.push(new Promise((resolve, reject) => {\n                if ((!options.children && !options.parents) || group.total_rows === 0) {\n                  resolve();\n                  return;\n                }\n\n                this._extendRowsOrDocs(group.hits, options)\n                  .then((docs) => {\n                    group.hits = docs;\n\n                    resolve();\n                  }, reject);\n              }));\n              return group;\n            });\n\n            Promise.all(promises)\n              .then(() => {\n                resolve(result);\n              }, reject);\n\n            return;\n          }\n\n          this._extendRowsOrDocs(result.rows, options)\n            .then((docs) => {\n              result.rows = docs;\n\n              resolve(result);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entitySearch(query, options = {}) {\n    options = _.merge({\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    return new Promise((resolve, reject) => {\n      const limit = query.limit || 25;\n\n      if (limit <= 200) {\n        this._entitySearch(query, options)\n          .then(resolve, reject);\n        return;\n      }\n\n      let rows = [];\n      let groups = [];\n\n      function __entitySearch(bookmark) {\n        const _query = _.clone(query);\n\n        if (bookmark) {\n          _query.bookmark = bookmark;\n        }\n\n        this._entitySearch(_query, options)\n          .then((result) => {\n            if (result.rows) {\n              rows = rows.concat(result.rows);\n            }\n            if (result.groups) {\n              groups = groups.concat(result.groups);\n            }\n\n            if (rows.length < result.total_rows && rows.length < limit) {\n              __entitySearch.call(this, result.bookmark);\n              return;\n            }\n\n            result.rows = rows;\n            result.groups = groups;\n\n            resolve(result);\n          }, reject);\n      }\n\n      __entitySearch.call(this);\n    });\n  }\n\n  async entityFind(query, options = {}) {\n    options = _.merge({\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    let result;\n\n    try {\n      result = await Db.connect(this.config).find(query);\n    } catch (error) {\n      if (error.error === 'no_usable_index') {\n        const cc = new ClientConfig(this.config);\n        const clientConfig = await cc.get();\n\n        const schema = new Schema(this.config);\n        await schema.updateEntityIndex(clientConfig.schemas);\n\n        result = await Db.connect(this.config).find(query);\n      }\n    }\n\n    if (options.children === false) {\n      return result;\n    }\n\n    if (query.fields && query.fields.indexOf('_id') === -1) {\n      throw new Error('_id field required for `children`');\n    }\n\n    result.docs = await this._extendRowsOrDocs(result.docs, options);\n\n    return result;\n  }\n\n  entityRevisions(entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId, {\n        revs_info: true,\n      })\n        .then((response) => {\n          const revisionIds = [];\n\n          response._revs_info.forEach((revision) => {\n            if (revision.status === 'available') {\n              revisionIds.push(revision.rev);\n            }\n          });\n\n          Db.connect(this.config).get(entityId, {\n            open_revs: JSON.stringify(revisionIds),\n          })\n            .then((response) => {\n              const revisions = [];\n              const childrenIds = [];\n\n              response.forEach((revision) => {\n                if (revision.ok) {\n                  revisions.push(revision.ok);\n\n                  _.forEach(revision.ok.fields, (field) => {\n                    if (/entity/.test(field.type)) {\n                      _.forEach(field.value, (obj) => {\n                        if (obj.id) {\n                          childrenIds.push(obj.id);\n                        }\n                      });\n                    }\n                  });\n                }\n              });\n\n              Db.connect(this.config).fetch({\n                keys: _.uniq(childrenIds),\n                include_docs: true,\n              })\n                .then((result) => {\n                  const childrenMap = {};\n\n                  result.rows.forEach((row) => {\n                    try {\n                      childrenMap[row.doc._id] = row.doc;\n                    } catch (error) {\n                      console.error('Error: child no longer exists');\n                    }\n                  });\n\n                  resolve(Entity._appendChildren(revisions, childrenMap));\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entityCreate(entity) {\n    return new Promise((resolve, reject) => {\n      entity.type = 'entity';\n\n      Db.connect(this.config).insert(entity)\n        .then((response) => {\n          entity._id = response.id;\n          entity._rev = response.rev;\n\n          resolve(entity);\n        }, reject);\n    });\n  }\n\n  entityRead(entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId)\n        .then(resolve, reject);\n    });\n  }\n\n  async entityUpdate(entities, restore) {\n    entities = _.isArray(entities) ? entities : [entities];\n\n    const entityMap = {};\n\n    const entityIds = entities.map((entityOrEntityId) => {\n      let entityId;\n\n      if (_.isObject(entityOrEntityId)) {\n        entityId = entityOrEntityId._id;\n        entityMap[entityId] = entityOrEntityId;\n      }\n      if (_.isString(entityOrEntityId)) {\n        entityId = entityOrEntityId;\n      }\n\n      return entityId;\n    });\n\n    const response = await Db.connect(this.config).fetch({\n      keys: entityIds,\n      include_docs: true,\n    });\n\n    const children = [];\n    const oldFileNames = [];\n\n    entities = response.rows.map((row) => {\n      const oldEntity = row.doc;\n      const newEntity = entityMap[oldEntity._id];\n\n      let entity = oldEntity;\n\n      if (newEntity) {\n        delete newEntity._rev;\n\n        const diffs = diff(oldEntity, newEntity);\n\n        diffs.forEach((diff) => {\n\n          // If any reference fields have changed, update all references\n          if (/published|slug|title|thumbnail/.test(diff.path[0])) {\n            if (children.indexOf(newEntity) === -1 && entityIds.indexOf(newEntity._id) !== -1) {\n              children.push(newEntity);\n            }\n          }\n\n          // If any file fields have changed, remove the old file\n          if (diff.path[0] === 'fields' && diff.path[2] === 'value') {\n            const field = oldEntity.fields[diff.path[1]];\n            if (/attachment|image|audio|video/.test(field.type) && field.value) {\n              oldFileNames.push(field.value.file.name);\n            }\n          }\n\n        });\n\n        entity = _.mergeWith({}, oldEntity, newEntity, (a, b) => {\n          if (_.isArray(a) && _.isArray(b)) {\n            return b;\n          }\n          return undefined;\n        });\n      }\n\n      if (restore) {\n        entity.trashed = false;\n      }\n\n      return entity;\n    });\n\n    if (oldFileNames.length) {\n      // TODO: fix delete orphaned files\n      // const assist = new Assist(this.config);\n      // await assist.deleteFiles(oldFileNames);\n    }\n\n    if (children.length) {\n      await this._updateChildren(children);\n    }\n\n    const result = await Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE);\n\n    return result;\n  }\n\n  async entityDelete(entityIds, forever = false) {\n    let entities;\n    let filesResult;\n\n    if (entityIds === 'trashed') {\n      forever = true;\n\n      entities = (await Db.connect(this.config).view('entity', 'trashed', {\n        include_docs: true,\n      })).rows;\n\n    } else {\n      entities = (await Db.connect(this.config).fetch({\n        keys: _.isArray(entityIds) ? entityIds : [entityIds],\n        include_docs: true,\n      })).rows;\n    }\n\n    entities = entities.filter(entity => !entity.value || !entity.value.deleted);\n\n    entities = entities.map(entity => entity.doc);\n\n    await this._removeChildren(entities);\n\n    if (forever) {\n      const fileNames = Entity._fileNames(entities);\n\n      if (fileNames.length) {\n        const assist = new Assist(this.config);\n        filesResult = await assist.deleteFiles(fileNames);\n      }\n\n      entities = entities.map(entity => ({\n        _id: entity._id,\n        _rev: entity._rev,\n        _deleted: true,\n      }));\n\n    } else {\n      entities = entities.map((entity) => {\n        entity.trashed = true;\n        return entity;\n      });\n    }\n\n    const entitiesResult = await Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE);\n\n    return {\n      entities: entitiesResult,\n      files: filesResult,\n    };\n  }\n\n}\n\nmodule.exports = Entity;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Fields = require('./fields');\n\nclass Schema {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas.push(schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(schemaSlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const schema = _.find(clientConfig.schemas, { slug: schemaSlug });\n\n    if (!schema) {\n      throw Error(`Schema not found: ${schemaSlug}`);\n    }\n\n    return schema;\n  }\n\n  async update(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.schemas, { slug: schema.slug });\n\n    if (index === -1) {\n      throw Error(`Schema not found: ${schema.slug}`);\n    }\n\n    clientConfig.schemas.splice(index, 1, schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(schemaSlugs) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    schemaSlugs = _.isArray(schemaSlugs) ? schemaSlugs : [schemaSlugs];\n\n    clientConfig.schemas = clientConfig.schemas.filter(schema => schemaSlugs.indexOf(schema.slug) === -1);\n\n    clientConfig.schemas = clientConfig.schemas.map((schema) => {\n      if (!schema.fields) {\n        return schema;\n      }\n      schema.fields = schema.fields.map((field) => {\n        if (!field.settings) {\n          return field;\n        }\n        if (field.settings.schemas) {\n          field.settings.schemas = field.settings.schemas.filter(schema => schemaSlugs.indexOf(schema) === -1);\n        }\n        return field;\n      });\n      return schema;\n    });\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateAll(schemas) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas = schemas;\n\n    // await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateEntityIndex(schemas) {\n    let fields = [];\n\n    schemas.forEach((schema) => {\n      fields = fields.concat(schema.fields);\n    });\n\n    fields = _.uniqBy(fields, 'slug');\n\n    const index = {\n      name: 'entity',\n      type: 'text',\n      ddoc: 'entityIndex',\n      index: {\n        default_field: {\n          enabled: true,\n          analyzer: 'standard',\n        },\n        selector: {\n          $and: [\n            {\n              type: 'entity',\n            },\n          ],\n        },\n        fields: [\n          {\n            name: 'published',\n            type: 'boolean',\n          },\n          {\n            name: 'trashed',\n            type: 'boolean',\n          },\n          {\n            name: 'title',\n            type: 'string',\n          },\n          {\n            name: 'slug',\n            type: 'string',\n          },\n          {\n            name: 'schema',\n            type: 'string',\n          },\n          {\n            name: 'modifiedAt',\n            type: 'string',\n          },\n          {\n            name: 'publishedAt',\n            type: 'string',\n          },\n        ],\n      },\n    };\n\n    fields.forEach((field) => {\n      const fieldRef = Fields.field(field.type);\n\n      if (/number|string|boolean/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value`,\n          type: fieldRef.dataType,\n        });\n      }\n\n      if (/array/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.[].slug`,\n          type: 'string',\n        });\n      }\n\n      if (/taxonomy/.test(field.type)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.terms.[].slug`,\n          type: 'string',\n        });\n      }\n    });\n\n    const result = await Db.connect(this.config).index(index);\n\n    return result;\n  }\n\n}\n\nmodule.exports = Schema;\n","const _ = require('lodash');\n\nconst fields = [\n  {\n    type: 'attachment',\n    name: 'Attachment',\n    dataType: null,\n  },\n  {\n    type: 'audio',\n    name: 'Audio',\n    dataType: null,\n  },\n  {\n    type: 'checkbox',\n    name: 'Checkbox',\n    dataType: 'boolean',\n  },\n  {\n    type: 'color',\n    name: 'Color',\n    dataType: 'string',\n  },\n  {\n    type: 'date',\n    name: 'Date',\n    dataType: 'string',\n  },\n  {\n    type: 'embedly',\n    name: 'Embedly',\n    dataType: null,\n  },\n  {\n    type: 'entity',\n    name: 'Entity',\n    dataType: 'array',\n  },\n  {\n    type: 'entityGrid',\n    name: 'Entity Grid',\n    dataType: 'array',\n  },\n  {\n    type: 'entityTile',\n    name: 'Entity Tile',\n    dataType: 'array',\n  },\n  {\n    type: 'image',\n    name: 'Image',\n    dataType: null,\n  },\n  {\n    type: 'keyValue',\n    name: 'Key Value',\n    dataType: null,\n  },\n  {\n    type: 'number',\n    name: 'Number',\n    dataType: 'number',\n  },\n  {\n    type: 'richText',\n    name: 'Rich Text',\n    dataType: null,\n  },\n  {\n    type: 'select',\n    name: 'Select',\n    dataType: 'array',\n  },\n  {\n    type: 'taxonomy',\n    name: 'Taxonomy',\n    dataType: null,\n  },\n  {\n    type: 'text',\n    name: 'Text',\n    dataType: 'string',\n  },\n  {\n    type: 'textArea',\n    name: 'Text Area',\n    dataType: 'string',\n  },\n  {\n    type: 'user',\n    name: 'User',\n    dataType: 'array',\n  },\n  {\n    type: 'video',\n    name: 'Video',\n    dataType: null,\n  },\n  {\n    type: 'vimeo',\n    name: 'Vimeo',\n    dataType: null,\n  },\n];\n\nclass Fields {\n  static fields() {\n    return fields.map(field => Object.freeze(field));\n  }\n  static field(type) {\n    return _.find(Fields.fields(), { type });\n  }\n}\n\nmodule.exports = Fields;\n","module.exports = require(\"request-promise\");","const config = {\n  environment: process.env.ENVIRONMENT || 'development',\n\n  api: {\n    prefix: process.env.API_PREFIX || '',\n    forceHttps: process.env.API_FORCE_HTTPS ? JSON.parse(process.env.API_FORCE_HTTPS) : false,\n    blacklistToken: (process.env.API_BLACKLIST_TOKEN || '').split(','),\n    blacklistReferrer: (process.env.API_BLACKLIST_REFERRER || '').split(','),\n  },\n\n  session: {\n    secret: process.env.SESSION_SECRET || 'change_me',\n    ttl: parseInt(process.env.SESSION_TTL || 7200, 10),\n  },\n\n  cache: {\n    enabled: process.env.CACHE_ENABLED ? JSON.parse(process.env.CACHE_ENABLED) : false,\n    ttl: parseInt(process.env.CACHE_TTL || 30, 10) * 60, // 30mins\n    compress: process.env.CACHE_COMPRESS ? JSON.parse(process.env.CACHE_COMPRESS) : false,\n    memory: {\n      max: parseInt(process.env.CACHE_MEMORY_MAX || 128, 10) * 1000 * 1000, // ~128mb\n    },\n  },\n\n  redis: {\n    url: process.env.REDIS_URL,\n    host: process.env.REDIS_HOST,\n    port: process.env.REDIS_PORT,\n    password: process.env.REDIS_PASSWORD,\n    db: parseInt(process.env.REDIS_DB || 0, 10),\n  },\n\n  logentriesToken: process.env.LOGENTRIES_TOKEN,\n};\n\nmodule.exports = config;\n","module.exports = require(\"lodash/pick\");","module.exports = require(\"lodash/isArray\");","const PORT = process.env.PORT || 5001;\nconst HOST = process.env.HOST || 'localhost';\n\nconst _ = require('lodash');\nconst express = require('express');\nconst http = require('http');\nconst logger = require('morgan');\nconst helmet = require('helmet');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst methodOverride = require('method-override');\nconst session = require('express-session');\nconst RedisStore = require('connect-redis')(session);\n\nconst AceApiServer = require('./index');\n\nconst defaultConfig = require('./config.default');\n\nfunction Serve(customConfig = {}, listen = true) {\n  const config = _.merge({}, defaultConfig, customConfig);\n\n  const app = express();\n\n  const sessionOptions = {\n    secret: config.session.secret,\n    resave: true,\n    saveUninitialized: true,\n  };\n\n  if (config.redis.url || config.redis.host) {\n    const redisOptions = {\n      ttl: config.session.ttl,\n    };\n\n    if (config.redis.url) {\n      redisOptions.url = config.redis.url;\n    } else {\n      redisOptions.host = config.redis.host;\n      redisOptions.port = config.redis.port;\n      redisOptions.password = config.redis.password;\n      redisOptions.db = config.redis.db;\n    }\n\n    sessionOptions.store = new RedisStore(redisOptions);\n  } else {\n    sessionOptions.cookie = {\n      maxAge: config.session.ttl,\n    };\n  }\n\n  app.use(helmet());\n  app.use(logger('tiny'));\n  app.use(cookieParser());\n  app.use(\n    bodyParser.json({\n      limit: '50mb',\n    })\n  );\n  app.use(\n    bodyParser.urlencoded({\n      extended: true,\n      limit: '50mb',\n    })\n  );\n  app.use(methodOverride());\n  app.use(session(sessionOptions));\n\n  AceApiServer(app, config);\n\n  if (listen) {\n    const server = http.createServer(app);\n    server.on('listening', () => {\n      console.log(`listening: http://${HOST}:${PORT}`);\n    });\n    server.listen(PORT);\n  }\n\n  return app;\n}\n\nmodule.exports = Serve;\n","module.exports = require(\"http\");","module.exports = require(\"morgan\");","module.exports = require(\"helmet\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"body-parser\");","module.exports = require(\"method-override\");","module.exports = require(\"express-session\");","module.exports = require(\"connect-redis\");","process.on('unhandledRejection', result => console.error(result));\n\nconst _ = require('lodash');\nconst express = require('express');\nconst cacheManager = require('cache-manager');\nconst redisStore = require('cache-manager-redis-store');\nconst Promise = require('bluebird');\nconst URL = require('url-parse');\nconst zlib = Promise.promisifyAll(require('zlib'));\nconst CircularJSON = require('circular-json-es6');\nconst sizeof = require('object-sizeof');\nconst deepFreeze = require('deep-freeze');\nconst XXH = require('xxhashjs');\n\nconst Api = require('../index');\n\nconst HASH_SEED = 0xABCD;\n\nconst defaultConfig = require('./config.default');\n\nfunction AceApiServer(app, customConfig = {}, customAuthMiddleware = null) {\n  const config = deepFreeze(_.merge({}, Api.defaultConfig, defaultConfig, customConfig));\n\n  // Async middleware\n\n  const asyncMiddleware = fn => (req, res, next) => {\n    Promise.resolve(fn(req, res, next))\n      .catch(next);\n  };\n\n  // Skip authorisation\n\n  const skipAuth = (req) => {\n    const prodAllowedRoutes = [\n      '/auth/user',\n      '/config/info',\n    ];\n\n    const devAllowedRoutes = [\n      '/token',\n      '/email',\n    ];\n\n    if (_.find(prodAllowedRoutes, route => new RegExp(`^${route}`).test(req.path))) {\n      return true;\n    }\n\n    if (config.environment === 'development' && _.find(devAllowedRoutes, route => new RegExp(`^${route}`).test(req.path))) {\n      return true;\n    }\n\n    return false;\n  };\n\n  // Default auth middleware\n\n  const defaultAuthMiddleware = (req, res, next) => {\n    if (skipAuth(req)) {\n      next();\n      return;\n    }\n\n    if (!req.session.userId) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  const authMiddleware = customAuthMiddleware || defaultAuthMiddleware;\n\n  // Permissions middleware\n\n  const permissionMiddleware = (permissions, req, res, next) => {\n    if (!req.session.role) {\n      res.status(401);\n      res.send({\n        permissions,\n        message: 'Error: undefined role',\n      });\n      return;\n    }\n\n    if (req.session.role === 'super') {\n      next();\n      return;\n    }\n\n    const roles = Api.Roles();\n\n    if (_.isString(permissions)) {\n      permissions = permissions.split(',');\n    }\n\n    let authorised = false;\n\n    permissions.forEach((permission) => {\n      if (roles.role(req.session.role).permissions[permission.trim()]) {\n        authorised = true;\n      }\n    });\n\n    if (!roles.role(req.session.role) || !authorised) {\n      res.status(401);\n      res.send({\n        permissions,\n        message: 'Error: not authorised',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  // Clone and extend config per request/session\n\n  const omitUndefined = (obj) => {\n    _.forIn(obj, (value, key, obj) => {\n      if (_.isPlainObject(value)) {\n        value = omitUndefined(value);\n\n        if (_.keys(value).length === 0) {\n          delete obj[key];\n        }\n      }\n\n      if (_.isUndefined(value)) {\n        delete obj[key];\n      }\n    });\n\n    return obj;\n  };\n\n  const cloneConfig = config => _.mergeWith({}, JSON.parse(JSON.stringify(config)), omitUndefined(_.cloneDeep(config)));\n\n  const getConfig = async (slug) => {\n    const configClone = cloneConfig(config);\n\n    configClone.slug = slug;\n    configClone.db.name = slug;\n\n    return configClone;\n  };\n\n  // Cache\n\n  let cache;\n\n  if (config.cache.enabled) {\n    if (config.redis.url || config.redis.host) {\n      const redisOptions = {\n        ttl: config.cache.ttl,\n      };\n\n      if (config.redis.url) {\n        redisOptions.url = config.redis.url;\n      } else {\n        redisOptions.host = config.redis.host;\n        redisOptions.port = config.redis.port;\n        redisOptions.password = config.redis.password;\n        redisOptions.db = config.redis.db;\n      }\n\n      cache = cacheManager.caching(_.merge({ store: redisStore }, redisOptions));\n\n      const redisClient = cache.store.getClient();\n      redisClient.on('ready', () => {\n        console.log('redis: ready');\n      });\n      redisClient.on('error', (error) => {\n        console.error('redis: error:', error);\n      });\n\n    } else {\n      cache = cacheManager.caching({\n        store: 'memory',\n        ttl: config.cache.ttl,\n        max: config.cache.memory.max,\n        length: (item) => {\n          // const length = Buffer.byteLength(item, 'utf8')\n          const length = sizeof(item);\n          return length;\n        },\n      });\n    }\n  }\n\n  // Cache middleware\n\n  const hash = (req) => {\n    const obj = {\n      path: req.path,\n      query: req.query,\n      body: req.body,\n    };\n    return `${req.session.slug}:${XXH.h64(JSON.stringify(obj), HASH_SEED).toString(16)}`;\n  };\n\n  const cacheMiddleware = asyncMiddleware(async (req, res, next) => {\n    const useCachedResponse = (\n      config.cache.enabled\n      && req.session.role === 'guest' // TODO: Replace 'guest' with constant\n      && (req.query.__cache && JSON.parse(req.query.__cache)) !== false\n    );\n\n    if (useCachedResponse) {\n      try {\n        const key = hash(req);\n\n        let response = await cache.get(key);\n\n        if (typeof response === 'string') {\n          if (config.cache.compress) {\n            response = (await zlib.gunzipAsync(Buffer.from(response, 'base64'))).toString();\n          }\n\n          try {\n            response = JSON.parse(response);\n          } catch (error) {\n            //\n          }\n\n          res.set('X-Cached-Response', true);\n          res.status(response ? 200 : 204);\n          res.send(response);\n\n          return;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    res.set('X-Cached-Response', false);\n    next();\n  });\n\n  // Response helpers\n\n  const handleError = (req, res, error) => {\n    if (Object.prototype.toString.call(error) === '[object Object]') {\n      error = CircularJSON.parse(CircularJSON.stringify(error));\n    }\n\n    error = error.response || error;\n\n    console.error(error);\n\n    const code = error.statusCode || error.status || error.code || 500;\n    const message = error.stack || error.error || error.message || error.body || error.data || error.statusText || error;\n\n    res.status(typeof code === 'string' ? 500 : code);\n    res.send({\n      code,\n      message,\n    });\n  };\n\n  const handleResponse = async (req, res, response, cacheResponse = false) => {\n    if (response === undefined || response === null) {\n      response = '';\n      res.status(204);\n      res.send(response);\n\n    } else {\n      response = CircularJSON.stringify(response);\n      res.status(200);\n      res.send(JSON.parse(response));\n    }\n\n    if (cacheResponse && config.cache.enabled && req.session.role === 'guest') { // TODO: Replace 'guest' with constant\n      const key = hash(req);\n\n      if (config.cache.compress) {\n        response = (await zlib.gzipAsync(Buffer.from(response))).toString('base64');\n      }\n\n      const ttl = req.query.__cache ? parseInt(req.query.__cache, 10) : config.cache.ttl;\n\n      cache.set(key, response, { ttl });\n    }\n  };\n\n  // Header middleware\n\n  const headerMiddleware = (req, res, next) => {\n    const headers = {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,OPTIONS',\n      'Access-Control-Expose-Headers': 'X-Slug, X-Role, X-User-Id',\n      Vary: 'Accept-Encoding, X-Api-Token',\n    };\n\n    if (req.headers['access-control-request-headers']) {\n      headers['Access-Control-Allow-Headers'] = req.headers['access-control-request-headers'];\n    }\n\n    res.set(headers);\n\n    if (req.method === 'OPTIONS') {\n      res.sendStatus(200);\n      return;\n    }\n\n    next();\n  };\n\n  // Session middleware\n\n  const jwt = Api.Jwt(config);\n\n  const sessionMiddleware = (req, res, next) => {\n    if (skipAuth(req)) {\n      next();\n      return;\n    }\n\n    const referrer = req.headers.referrer || req.headers.referer;\n\n    if (referrer) {\n      const referrerHostname = new URL(referrer)\n        .hostname.split('.').slice(-2).join('.');\n\n      if (config.api.blacklistReferrer.indexOf(referrerHostname) > -1) {\n        res.status(401);\n        res.send({\n          code: 401,\n          message: 'Not authorised, referrer blacklisted',\n        });\n        return;\n      }\n    }\n\n    const token = req.headers['x-api-token'] || req.query.apiToken || req.session.apiToken;\n\n    if (!token) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing token',\n      });\n      return;\n    }\n\n    if (config.api.blacklistToken.indexOf(token) > -1) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, token blacklisted',\n      });\n      return;\n    }\n\n    try {\n      const payload = jwt.verifyToken(token);\n\n      req.session.userId = payload.userId;\n      req.session.slug = payload.slug;\n      req.session.role = payload.role || 'guest'; // TODO: Replace 'guest' with constant\n\n    } catch (error) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: `Not authorised, token verification failed (${error.message})`,\n        error,\n      });\n      return;\n    }\n\n    if (!req.session.slug) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing slug',\n      });\n      return;\n    }\n\n    if (!req.session.role) {\n      req.session.role = 'guest';\n    }\n\n    if (req.session.userId) {\n      res.set('X-User-Id', req.session.userId);\n    }\n\n    res.set('X-Environment', config.environment);\n    res.set('X-Slug', req.session.slug);\n    res.set('X-Role', req.session.role);\n\n    next();\n  };\n\n  // Router\n\n  const router = express.Router();\n\n  const forceHttps = (req, res, next) => {\n    if (\n      (req.headers['x-forwarded-proto'] && req.headers['x-forwarded-proto'] !== 'https')\n      && (req.headers['cf-visitor'] && JSON.parse(req.headers['cf-visitor']).scheme !== 'https') // Fix for Cloudflare/Heroku flexible SSL\n    ) {\n      res.redirect(301, `https://${req.headers.host}${req.path}`);\n      return;\n    }\n    next();\n  };\n\n  if (config.environment === 'production' && config.api.forceHttps === true) {\n    if (app.enable) {\n      app.enable('trust proxy');\n    }\n    app.use(forceHttps);\n  }\n\n  app.use(`/${config.api.prefix}`, headerMiddleware, sessionMiddleware, router);\n\n  app.get(`/${config.api.prefix}`, (req, res) => {\n    res.send('<pre> ______\\n|A     |\\n|  /\\\\  |\\n| /  \\\\ |\\n|(    )|\\n|  )(  |\\n|______|</pre>');\n  });\n\n  // Context\n\n  const context = {\n    app,\n    router,\n    cache,\n    authMiddleware,\n    permissionMiddleware,\n    cacheMiddleware,\n    asyncMiddleware,\n    getConfig,\n    handleResponse,\n    handleError,\n  };\n\n  // Inject API into context\n\n  Object.keys(Api).forEach((key) => {\n    context[key] = Api[key];\n  });\n\n  const afterResponse = (req, res) => {\n    res.removeListener('finish', afterResponse);\n    res.removeListener('close', afterResponse);\n  };\n\n  if (config.environment !== 'production') {\n    app.use((req, res, next) => {\n      res.on('finish', afterResponse.bind(null, req, res));\n      res.on('close', afterResponse.bind(null, req, res));\n      next();\n    });\n  }\n\n  // Bootstrap Routes\n\n  require('./routes/analytics')(context, config);\n  require('./routes/auth')(context, config);\n  require('./routes/cache')(context, config);\n  require('./routes/config')(context, config);\n  require('./routes/debug')(context, config);\n  require('./routes/ecommerce')(context, config);\n  require('./routes/email')(context, config);\n  require('./routes/embedly')(context, config);\n  require('./routes/entity')(context, config);\n  require('./routes/metadata')(context, config);\n  require('./routes/pdf')(context, config);\n  require('./routes/provider')(context, config);\n  require('./routes/schema')(context, config);\n  require('./routes/settings')(context, config);\n  require('./routes/shippo')(context, config);\n  require('./routes/shopify')(context, config);\n  require('./routes/social')(context, config);\n  require('./routes/stripe')(context, config);\n  require('./routes/taxonomy')(context, config);\n  require('./routes/token')(context, config);\n  require('./routes/tools')(context, config);\n  require('./routes/user')(context, config);\n\n  return app;\n}\n\nmodule.exports = AceApiServer;\n","module.exports = require(\"cache-manager\");","module.exports = require(\"cache-manager-redis-store\");","module.exports = require(\"url-parse\");","module.exports = require(\"zlib\");","module.exports = require(\"circular-json-es6\");","module.exports = require(\"object-sizeof\");","module.exports = require(\"deep-freeze\");","module.exports = require(\"xxhashjs\");","function Api() { }\n\nApi.defaultConfig = require('./config.default');\n\nApi.Assist = (...args) => new (require('./lib/assist'))(...args);\nApi.Auth = (...args) => new (require('./lib/auth'))(...args);\nApi.ClientConfig = (...args) => new (require('./lib/client-config'))(...args);\nApi.Db = (...args) => new (require('./lib/db'))(...args);\nApi.Ecommerce = (...args) => new (require('./lib/ecommerce'))(...args);\nApi.Email = (...args) => new (require('./lib/email'))(...args);\nApi.Embedly = (...args) => new (require('./lib/embedly'))(...args);\nApi.Entity = (...args) => new (require('./lib/entity'))(...args);\nApi.Fields = (...args) => new (require('./lib/fields'))(...args);\nApi.Helpers = (...args) => new (require('./lib/helpers'))(...args);\nApi.Instagram = (...args) => new (require('./lib/instagram'))(...args);\nApi.Jwt = (...args) => new (require('./lib/jwt'))(...args);\nApi.Pdf = (...args) => new (require('./lib/pdf'))(...args);\nApi.Roles = (...args) => new (require('./lib/roles'))(...args);\nApi.Schema = (...args) => new (require('./lib/schema'))(...args);\nApi.Settings = (...args) => new (require('./lib/settings'))(...args);\nApi.Shippo = (...args) => new (require('./lib/shippo'))(...args);\nApi.Shopify = (...args) => new (require('./lib/shopify'))(...args);\nApi.Stripe = (...args) => new (require('./lib/stripe'))(...args);\nApi.Taxonomy = (...args) => new (require('./lib/taxonomy'))(...args);\nApi.Tools = (...args) => new (require('./lib/tools'))(...args);\nApi.User = (...args) => new (require('./lib/user'))(...args);\n\nmodule.exports = Api;\n","const path = require('path');\n\nconst config = {\n  environment: process.env.ENVIRONMENT || 'development',\n  debug: process.env.DEBUG || false,\n\n  slug: process.env.SLUG,\n  baseUrl: process.env.BASE_URL || '',\n\n  db: {\n    url: process.env.DB_URL,\n    host: process.env.DB_HOST,\n    name: process.env.DB_NAME,\n    requestPlugin: process.env.DB_REQUEST_PLUGIN,\n    meterType: process.env.DB_METER_TYPE,\n  },\n\n  auth: {\n    superUserId: process.env.AUTH_SUPER_USER_ID,\n    tokenSecret: process.env.AUTH_TOKEN_SECRET || 'change_this_secret',\n  },\n\n  dev: {\n    userId: process.env.DEV_USER_ID || 'dev',\n    role: process.env.DEV_ROLE || 'super',\n  },\n\n  cms: {\n    title: process.env.CMS_TITLE,\n    url: process.env.CMS_URL,\n  },\n\n  assist: {\n    url: process.env.ASSIST_URL,\n    username: process.env.ASSIST_USERNAME,\n    password: process.env.ASSIST_PASSWORD,\n  },\n\n  mailgun: {\n    apiKey: process.env.MAILGUN_API_KEY,\n    domain: process.env.MAILGUN_DOMAIN,\n  },\n\n  embedly: {\n    apiKey: process.env.EMBEDLY_API_KEY,\n  },\n\n  pdf: {\n    templatesPath: path.resolve(__dirname, 'pdf'),\n  },\n\n  email: {\n    templatesPath: path.resolve(__dirname, 'email'),\n  },\n\n  provider: {\n    google: {\n      clientId: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    },\n\n    instagram: {\n      clientId: process.env.INSTAGRAM_CLIENT_ID,\n      clientSecret: process.env.INSTAGRAM_CLIENT_SECRET,\n    },\n\n    spotify: {\n      clientId: process.env.SPOTIFY_CLIENT_ID,\n      clientSecret: process.env.SPOTIFY_CLIENT_SECRET,\n    },\n\n    stripe: {\n      clientId: process.env.STRIPE_CLIENT_ID,\n      clientSecret: process.env.STRIPE_CLIENT_SECRET,\n      apiKey: process.env.STRIPE_API_KEY,\n    },\n\n    twitter: {\n      consumerKey: process.env.TWITTER_CONSUMER_KEY,\n      consumerSecret: process.env.TWITTER_CONSUMER_SECRET,\n      accessTokenKey: process.env.TWITTER_ACCESS_TOKEN_KEY,\n      accessTokenSecret: process.env.TWITTER_ACCESS_TOKEN_SECRET,\n    },\n\n    vimeo: {\n      clientId: process.env.VIMEO_CLIENT_ID,\n      clientSecret: process.env.VIMEO_CLIENT_SECRET,\n    },\n  },\n};\n\nmodule.exports = config;\n","module.exports = require(\"password-hash\");","const _ = require('lodash');\nconst querystring = require('querystring');\nconst axios = require('axios');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\n\nconst providerTokenUri = {\n  google: 'https://www.googleapis.com/oauth2/v4/token',\n  instagram: 'https://api.instagram.com/oauth/access_token',\n  stripe: 'https://connect.stripe.com/oauth/token',\n  vimeo: 'https://api.vimeo.com/oauth/access_token',\n  spotify: 'https://accounts.spotify.com/api/token',\n};\n\nclass Auth {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async authUser(slug, userId) {\n    const isSuperUser = _.get(this.config, 'auth.superUserId', '').split(',').map(superUser => superUser.trim()).indexOf(userId) > -1;\n\n    if (isSuperUser) {\n      return {\n        id: userId,\n        active: true,\n        role: 'super',\n      };\n    }\n\n    const clientConfig = await Db.connect(this.config, slug).get('config');\n\n    const user = _.find(clientConfig.users, user => user.email.toLowerCase() === userId.toLowerCase());\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    if (!user.active) {\n      throw Error(`User not active: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async authProvider(provider, params = {}, userId = null, refresh = false) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const providerConfig = _.merge({}, this.config.provider[provider], params || {});\n\n    let providerClientConfig;\n\n    if (userId) {\n      providerClientConfig = _.get(clientConfig, ['userSettings', userId, 'provider', provider]);\n    } else {\n      providerClientConfig = _.get(clientConfig, ['provider', provider]);\n    }\n\n    if (!providerClientConfig) {\n      providerClientConfig = {};\n    }\n\n    const data = {\n      grant_type: refresh ? 'refresh_token' : 'authorization_code',\n      code: params && params.code ? params.code : undefined,\n      client_id: providerConfig.clientId,\n      client_secret: providerConfig.clientSecret,\n      redirect_uri: providerConfig.redirectUri,\n      refresh_token: refresh ? providerClientConfig.refresh_token : undefined,\n    };\n\n    const uri = providerTokenUri[provider];\n\n    let providerAuth;\n\n    try {\n      providerAuth = (await axios.post(uri, querystring.stringify(data))).data;\n    } catch (error) {\n      throw new Error(JSON.stringify(error.response.data));\n    }\n\n    providerClientConfig = _.merge({}, providerClientConfig, providerAuth);\n    providerClientConfig.begins = Math.floor(new Date().getTime() / 1000);\n\n    if (provider === 'google') {\n      try {\n        providerClientConfig.user = (await axios.get(`https://www.googleapis.com/plus/v1/people/me?access_token=${providerClientConfig.access_token}`)).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (provider === 'spotify') {\n      try {\n        providerClientConfig.user = (await axios.get(`https://api.spotify.com/v1/me?access_token=${providerClientConfig.access_token}`)).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (userId) {\n      _.set(clientConfig, ['userSettings', userId, 'provider', provider], providerClientConfig);\n    } else {\n      _.set(clientConfig, ['provider', provider], providerClientConfig);\n    }\n\n    return cc.set(clientConfig);\n  }\n\n}\n\nmodule.exports = Auth;\n","module.exports = require(\"querystring\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass Ecommerce {\n  constructor(config) {\n    this.config = config;\n  }\n\n  getType(type, query) {\n    return new Promise((resolve, reject) => {\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      Db.connect(this.config).search('ecommerce', type, query)\n        .then(resolve, reject);\n    });\n  }\n\n  setType(type, item) {\n    return new Promise((resolve, reject) => {\n      item.type = type;\n\n      Helpers.createOrUpdate(this.config, item)\n        .then(resolve, reject);\n    });\n  }\n\n  deleteType(items) {\n    return new Promise((resolve, reject) => {\n      items = items.map(item => ({\n        _id: item._id,\n        _rev: item._rev,\n        _deleted: true,\n      }));\n\n      Helpers.chunkUpdate(this.config, items, 1000)\n        .then(resolve, reject);\n    });\n  }\n\n  getOrder(orderId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'orderByOrderId', {\n        key: orderId,\n        include_docs: true,\n      })\n        .then((body) => {\n          if (!body.rows.length) {\n            reject(new Error('Order not found'));\n            return;\n          }\n\n          resolve(body.rows[0].doc);\n        }, reject);\n    });\n  }\n\n  verifyDiscount(code) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'discountByCode', {\n        keys: [code],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            const discount = body.rows[0].doc;\n\n            const now = new Date().getTime();\n\n            const dateStart = new Date(Date.parse(discount.dateStart)).getTime();\n            const dateEnd = new Date(Date.parse(discount.dateEnd)).getTime();\n\n            if (dateStart > now) {\n              reject(new Error('Discount not valid (not begun)'));\n              return;\n\n            }\n\n            if (dateEnd < now) {\n              reject(new Error('Discount not valid (expired)'));\n              return;\n            }\n\n            resolve(discount);\n\n          } else {\n            reject(new Error({\n              statusCode: 404,\n              message: `Discount code not found (${code})`,\n            }));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Ecommerce;\n","module.exports = require(\"nodemailer\");","module.exports = require(\"createsend-node\");","module.exports = require(\"nodemailer-mailgun-transport\");","module.exports = require(\"inky\");","module.exports = require(\"mjml\");","module.exports = require(\"mjml-core\");","module.exports = require(\"mjml-validator\");","module.exports = require(\"mjml-mailchimp\");","module.exports = require(\"html-to-text\");","module.exports = require(\"moment\");","module.exports = require(\"i18n-iso-countries\");","module.exports = require(\"node-sass\");","module.exports = require(\"pug\");","module.exports = require(\"ejs\");","module.exports = require(\"juice\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst EmbedlyApi = require('embedly');\n\nclass Embedly {\n  constructor(config) {\n    this.config = config;\n  }\n\n  oembed(urls) {\n    return new Promise((resolve, reject) => {\n      const embedly = new EmbedlyApi({\n        key: this.config.embedly.apiKey,\n      });\n\n      const opts = {\n        urls: _.isArray(urls) ? urls : [urls],\n        format: 'json',\n      };\n\n      embedly.oembed(opts, (error, result) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(result);\n      });\n    });\n  }\n\n}\n\nmodule.exports = Embedly;\n","module.exports = require(\"embedly\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"json-query\");","module.exports = require(\"deep-diff\");","const _ = require('lodash');\nconst request = require('request-promise');\n\nclass Instagram {\n  constructor(options) {\n    const defaultOptions = {\n      client_id: null,\n      access_token: null,\n      version: 'v1',\n      host: 'https://api.instagram.com',\n    };\n\n    this.options = _.merge({}, defaultOptions, options || {});\n  }\n\n  async _request(method, endpoint, query) {\n    const requestOptions = {\n      method,\n      url: [this.options.host, this.options.version, endpoint].join('/'),\n      qs: {\n        access_token: query.access_token || this.options.access_token,\n        client_id: query.client_id || this.options.client_id,\n      },\n    };\n\n    requestOptions.qs = _.extend({}, requestOptions.qs, query);\n\n    const response = await request(requestOptions);\n\n    return JSON.parse(response);\n  }\n\n  get(endpoint, query) {\n    return this._request('GET', endpoint, query);\n  }\n}\n\nmodule.exports = Instagram;\n","const jwt = require('jsonwebtoken');\n\nclass Jwt {\n  constructor(config) {\n    this.config = config;\n  }\n\n  signToken(payload, options = {}) {\n    return jwt.sign(payload, this.config.auth.tokenSecret, options);\n  }\n\n  verifyToken(token) {\n    return jwt.verify(token, this.config.auth.tokenSecret);\n  }\n}\n\nmodule.exports = Jwt;\n","module.exports = require(\"jsonwebtoken\");","const fs = require('fs');\nconst path = require('path');\nconst _ = require('lodash');\nconst _eval = require('eval');\nconst request = require('request-promise');\nconst readdir = require('recursive-readdir');\nconst Entity = require('./entity');\nconst ClientConfig = require('./client-config');\n\nclass Pdf {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getTemplates() {\n    const templates = {};\n\n    const files = await readdir(this.config.pdf.templatesPath);\n\n    files.forEach((file) => {\n      if (!/\\.js$/.test(file)) {\n        return;\n      }\n\n      const id = file\n        .replace(`${this.config.pdf.templatesPath}/`, '')\n        .replace('.js', '');\n\n      // eslint-disable-next-line\n      templates[id] = require(file);\n    });\n\n    return templates;\n  }\n\n  async getPayload(templateId, entityId, role) {\n    // if (!this.templates) {\n    //   this.templates = await this.getTemplates();\n    // }\n\n    // if (!this.templates[templateId]) {\n    //   throw new Error('Template not found');\n    // }\n\n    const template = _eval(fs.readFileSync(path.join(this.config.pdf.templatesPath, `${templateId}.js`), 'utf-8'), `${templateId}.js`, {}, true);\n\n    const entity = new Entity(this.config);\n\n    const entities = (await entity.entityList([entityId], { children: 2, role })).map(row => row.doc);\n\n    if (entities.length === 0) {\n      throw new Error('Entity not found');\n    }\n\n    const payload = template(Entity.flattenValues(entities)[0]);\n\n    return payload;\n  }\n\n  async getPdf(payload) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n    const assistPdfUrl = `${this.config.assist.url}/${assetSlug}/pdf/download`;\n\n    payload = typeof payload === 'object' ? JSON.stringify(payload).replace(/'/gi, '’') : payload;\n\n    const response = await request({\n      method: 'POST',\n      uri: assistPdfUrl,\n      encoding: null,\n      form: {\n        payload,\n      },\n    });\n\n    return response;\n  }\n\n}\n\nmodule.exports = Pdf;\n","module.exports = require(\"eval\");","module.exports = require(\"recursive-readdir\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 72;","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass Settings {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async update(settings) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.client = _.merge({}, clientConfig.client, settings);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = Settings;\n","const Promise = require('bluebird');\nconst shippo = require('shippo');\n\nclass Shippo {\n  constructor(config) {\n    this.config = config;\n\n    this.shippo = shippo(config.shippo.token);\n  }\n\n  getQuote(address, parcel) {\n    return new Promise((resolve, reject) => {\n\n      const addressFrom = {\n        object_purpose: 'QUOTE',\n        zip: this.config.shippo.fromZip,\n        country: this.config.shippo.fromCountry,\n      };\n\n      const addressTo = {\n        object_purpose: 'QUOTE',\n        // 'name': address.name,\n        // 'company': '',\n        // 'street1': address.street1,\n        // 'street2': address.street2,\n        // 'city': address.city,\n        // 'state': '',\n        zip: address.zip,\n        country: address.country,\n        // 'phone': address.phone,\n        // 'email': address.email,\n        metadata: '',\n      };\n\n      parcel.distance_unit = 'cm';\n      parcel.mass_unit = 'kg';\n\n      this.shippo.shipment.create({\n        object_purpose: 'QUOTE',\n        address_from: addressFrom,\n        address_to: addressTo,\n        parcel,\n      })\n        .then((shipment) => {\n          const ratesReady = (shipment, attempts) => {\n            if ((shipment.object_status === 'QUEUED' || shipment.object_status === 'WAITING') && attempts < 10) {\n              this.shippo.shipment.retrieve(shipment.object_id).then((val) => {\n                ratesReady(val, attempts + 1);\n              });\n\n            } else {\n              this.shippo.shipment.rates(shipment.object_id)\n                .then((rates) => {\n                  resolve(rates);\n\n                }, (error) => {\n                  console.error('There was an error retrieving rates : %s', error);\n                  reject(error);\n                });\n            }\n          };\n\n          ratesReady(shipment, 0);\n\n        }, (error) => {\n          console.error('There was an error creating shipment: %s', error);\n          reject(error);\n        });\n\n    });\n  }\n\n}\n\nmodule.exports = Shippo;\n","module.exports = require(\"shippo\");","const axios = require('axios');\nconst he = require('he');\nconst Handlebars = require('handlebars');\nconst jsontoxml = require('jsontoxml');\n\nconst ClientConfig = require('./client-config');\n\nclass Shopify {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getCatalog({ shopLink, productLinkTemplate }) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const result = (await axios({\n      url: `https://${clientConfig.provider.shopify.domain}.myshopify.com/api/graphql`,\n      method: 'post',\n      headers: {\n        'X-Shopify-Storefront-Access-Token': clientConfig.provider.shopify.storefrontAccessToken,\n      },\n      data: {\n        query: `\n          query {\n            shop {\n              name\n              primaryDomain {\n                url\n              }\n              description\n              products(first: 250) {\n                edges {\n                  node {\n                    id\n                    handle\n                    title\n                    description\n                    onlineStoreUrl\n                    images(first: 1) {\n                      edges {\n                        node {\n                          originalSrc\n                          transformedSrc\n                        }\n                      }\n                    }\n                    productType\n                    vendor\n                    availableForSale\n                    priceRange {\n                      minVariantPrice {\n                        amount\n                        currencyCode\n                      }\n                      maxVariantPrice {\n                        amount\n                        currencyCode\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `,\n      },\n    })).data.data;\n\n    const template = Handlebars.compile(productLinkTemplate);\n\n    const products = result.shop.products.edges.map(edge => ({\n      'g:id': edge.node.handle,\n      'g:title': he.encode(edge.node.title),\n      'g:description': he.encode(edge.node.description),\n      // 'g:link': edge.node.onlineStoreUrl,\n      'g:link': template({ handle: edge.node.handle }),\n      'g:image_link': edge.node.images.edges[0].node.originalSrc,\n      'g:brand': edge.node.vendor,\n      'g:condition': 'new',\n      'g:availability': edge.node.availableForSale ? 'in stock' : 'out of stock',\n      'g:price': `${edge.node.priceRange.minVariantPrice.amount} ${edge.node.priceRange.minVariantPrice.currencyCode}`,\n      // 'g:google_product_category': he.encode(edge.node.productType),\n    }));\n\n    const channel = [\n      { name: 'title', text: result.shop.name },\n      // { name: 'link', text: result.shop.primaryDomain.url },\n      { name: 'link', text: shopLink },\n      { name: 'description', text: result.shop.description },\n    ];\n\n    products.forEach((product) => {\n      channel.push({\n        name: 'item',\n        children: product,\n      });\n    });\n\n    return `<?xml version=\"1.0\"?>\n    <rss xmlns:g=\"http://base.google.com/ns/1.0\" version=\"2.0\">\n      ${jsontoxml({ channel })}\n    </rss>`;\n  }\n}\n\nmodule.exports = Shopify;\n","module.exports = require(\"he\");","module.exports = require(\"handlebars\");","module.exports = require(\"jsontoxml\");","const _ = require('lodash');\nconst Stripe = require('stripe');\nconst Promise = require('bluebird');\nconst Hashids = require('hashids');\n\nconst ClientConfig = require('./client-config');\nconst Email = require('./email');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass StripeClass {\n  constructor(config) {\n    this.config = config;\n\n    this.stripe = Stripe(this.config.stripe.apiKey);\n    this.email = new Email(this.config);\n\n    this.hashids = new Hashids(this.config.slug, 6, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n  }\n\n  async getSettings() {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    let settings;\n\n    try {\n      settings = clientConfig.module.ecommerce;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    try {\n      settings.clientStripeAccountId = clientConfig.provider.stripe.stripe_user_id;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    settings.client = clientConfig.client;\n    settings.assets = clientConfig.assets;\n\n    return settings;\n  }\n\n  checkout(token, order) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n\n          const listId = _.get(settings, 'createsend.checkoutSubscriberListId');\n\n          if (order.subscribe && listId) {\n            this.email.subscribe(order.customerDetails, 'createsend', listId)\n              .then((result) => {\n                console.log(result);\n              }, (error) => {\n                console.error(error);\n              });\n          }\n\n          // lookup customer by email, create if not found\n          this.findOrCreateCustomer(order.customerDetails.email, order)\n            .then((customer) => {\n\n              // store order data (customer, items, address)\n              this.createOrder(order, customer)\n                .then((order) => {\n\n                  this.updateOrCreateStripeCustomer(settings.clientStripeAccountId, customer, token, order)\n                    .then((stripeCustomer) => {\n\n                      // update customer, append order to customer, update metadata\n                      this.updateCustomer(customer, stripeCustomer, order)\n                        .then((customer) => {\n\n                          // create charge, take fee\n                          this.createCharge(settings, stripeCustomer, customer, order)\n                            .then((updatedOrder) => {\n\n                              this.sendReceipt(settings, customer, order)\n                                .then((orderReceipt) => {\n\n                                  updatedOrder.messages.orderReceipt = orderReceipt;\n\n                                  this.sendNotification(settings, customer, order)\n                                    .then((orderNotification) => {\n\n                                      updatedOrder.messages.orderNotification = orderNotification;\n\n                                      // update order charge status, charge id\n                                      this.updateOrder(updatedOrder)\n                                        .then((finalOrder) => {\n\n                                          resolve(finalOrder);\n\n                                        }, reject);\n                                    }, reject);\n                                }, reject);\n                            }, reject);\n                        }, reject);\n                    }, reject);\n                }, reject);\n            }, reject);\n        }, reject)\n        .catch(reject);\n    });\n  }\n\n  retrieveAccount() {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.accounts.retrieve(settings.clientStripeAccountId)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  refund(order, amount) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.refunds.create({\n            refund_application_fee: true,\n            charge: order.charge.id,\n            amount,\n          }, {\n            stripe_account: settings.clientStripeAccountId,\n          })\n            .then((refund) => {\n              this.stripe.charges.retrieve(order.charge.id, {\n                stripe_account: settings.clientStripeAccountId,\n              })\n                .then((charge) => {\n                  order.charge.status = charge.status;\n                  order.charge.amount = charge.amount;\n                  order.charge.amountRefunded = charge.amount_refunded;\n\n                  Helpers.createOrUpdate(this.config, order)\n                    .then(resolve, reject);\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  findOrCreateCustomer(email, order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'customerByEmail', {\n        keys: [email],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            resolve(body.rows[0].doc);\n\n          } else {\n            const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n            const newCustomer = {\n              type: 'customer',\n              createdAt: now,\n              modifiedAt: now,\n              email: order.customerDetails.email,\n              name: order.customerDetails.name,\n              phone: order.customerDetails.phone,\n              billingAddress: order.billingAddress,\n              shippingAddress: order.shippingAddress,\n              orders: [],\n            };\n\n            Db.connect(this.config).insert(newCustomer)\n              .then((body) => {\n                newCustomer._id = body.id;\n                newCustomer._rev = body.rev;\n\n                resolve(newCustomer);\n              }, reject);\n          }\n        }, reject);\n    });\n  }\n\n  updateOrCreateStripeCustomer(clientStripeAccountId, customer, token, order) {\n    return new Promise((resolve, reject) => {\n      const stripeCustomer = {\n        source: token,\n        email: order.customer.email,\n        description: order.customer.name,\n        metadata: {\n          customer_id: customer._id,\n        // billingAddress: JSON.stringify(order.billingAddress),\n        // shippingAddress: JSON.stringify(order.shippingAddress)\n        },\n      };\n\n      if (customer.stripe && customer.stripe.customer.id) {\n        this.stripe.customers.update(customer.stripe.customer.id, stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        })\n          .then(resolve, (error) => {\n            if (error.type === 'StripeInvalidRequestError' && error.param === 'id') {\n              this.stripe.customers.create(stripeCustomer, {\n                stripe_account: clientStripeAccountId,\n              }).then(resolve, reject);\n\n            } else {\n              reject(error);\n            }\n          });\n\n      } else {\n        this.stripe.customers.create(stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        }).then(resolve, reject);\n      }\n    });\n  }\n\n  createOrder(order, customer) {\n    return new Promise((resolve, reject) => {\n      const items = order.items.map(item => ({\n        id: item.id,\n        title: item.title.replace(/<br\\s?>/ig, ' ').replace(/<\\/?p>|<\\/?span>/ig, ''),\n        price: item.price,\n        quantity: item.quantity,\n        metadata: item.metadata || {},\n      }));\n\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      const newOrder = {\n        type: 'order',\n        orderId: this.hashids.encode(new Date().getTime()),\n        createdAt: now,\n        modifiedAt: now,\n        customer: {\n          id: customer._id,\n          email: customer.email,\n          name: customer.name,\n        },\n        items,\n        shippingMethod: {\n          name: order.shippingMethod.name,\n          amount: Number(order.shippingMethod.amount),\n        },\n        subtotal: Number(order.subtotal),\n        tax: {\n          rate: order.tax.rate || 0,\n          includedInPrice: order.tax.includedInPrice || false,\n          total: order.tax.total || 0,\n          show: order.tax.show || false,\n        },\n        discount: {\n          code: order.discount.code || '',\n          name: order.discount.name || '',\n          total: order.discount.total || 0,\n        },\n        total: Number(order.total),\n        billingAddress: order.billingAddress,\n        shippingAddress: order.shippingAddress,\n        messages: {},\n        status: 'pending',\n        test: true,\n      };\n\n      Db.connect(this.config).insert(newOrder)\n        .then((body) => {\n          newOrder._id = body.id;\n          newOrder._rev = body.rev;\n\n          resolve(newOrder);\n        }, reject);\n    });\n  }\n\n  updateOrder(order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).insert(order)\n        .then((body) => {\n          order._rev = body.rev;\n\n          resolve(order);\n        }, reject);\n    });\n  }\n\n  updateCustomer(customer, stripeCustomer, order) {\n    return new Promise((resolve, reject) => {\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      customer.modifiedAt = now;\n\n      if (!customer.orders) {\n        customer.orders = [];\n      }\n\n      customer.orders.push(order._id);\n\n      if (!customer.stripe) {\n        customer.stripe = {\n          customer: {\n            id: null,\n          },\n        };\n      }\n\n      customer.stripe.customer.id = stripeCustomer.id;\n\n      Db.connect(this.config).insert(customer)\n        .then((body) => {\n          customer._rev = body.rev;\n\n          resolve(customer);\n        }, reject);\n    });\n  }\n\n  createCharge(settings, stripeCustomer, customer, order) {\n    return new Promise((resolve, reject) => {\n      const amount = Number(order.total) * 100;\n\n      const charge = {\n        amount,\n        currency: settings.currency.iso.toLowerCase(),\n        customer: stripeCustomer.id,\n        capture: true,\n        description: order.orderId,\n        // shipping: order.shippingAddress, // fraud prevention, must follow expected schema\n        metadata: {\n          customer_id: customer._id,\n          order_id: order._id,\n        },\n        statement_descriptor: _.kebabCase(settings.storeName).toUpperCase(),\n        application_fee: Math.ceil(amount * 0.02),\n      };\n\n      this.stripe.charges.create(charge, {\n        stripe_account: settings.clientStripeAccountId,\n      })\n        .then((charge) => {\n\n          order.charge = {\n            paymentGateway: 'stripe',\n            id: charge.id,\n            status: charge.status,\n            currency: charge.currency.toUpperCase(),\n            amount: charge.amount,\n            amountRefunded: charge.amount_refunded,\n          };\n\n          order.test = !charge.livemode;\n\n          resolve(order);\n\n        }, reject);\n    });\n  }\n\n  sendReceipt(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: customer.email,\n        subject: `Your order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-receipt`, templateData).then(resolve, reject);\n    });\n  }\n\n  sendNotification(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: settings.emailSenderAddress,\n        subject: `New order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-notification`, templateData).then(resolve, reject);\n    });\n  }\n\n}\n\nmodule.exports = StripeClass;\n","module.exports = require(\"stripe\");","module.exports = require(\"hashids\");","const _ = require('lodash');\nconst Db = require('./db');\nconst ClientConfig = require('./client-config');\n\nclass Taxonomy {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async create(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.taxonomies.push(taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const taxonomy = _.find(clientConfig.taxonomies, { slug: taxonomySlug });\n\n    if (!taxonomy) {\n      throw Error(`Taxonomy not found: ${taxonomySlug}`);\n    }\n\n    return taxonomy;\n  }\n\n  async update(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.taxonomies, { slug: taxonomy.slug });\n\n    if (index === -1) {\n      throw Error(`Taxonomy not found: ${taxonomy.slug}`);\n    }\n\n    clientConfig.taxonomies.splice(index, 1, taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    taxonomySlug = _.isArray(taxonomySlug) ? taxonomySlug : [taxonomySlug];\n\n    clientConfig.taxonomies = clientConfig.taxonomies.filter(taxonomy => taxonomySlug.indexOf(taxonomy.slug) === -1);\n\n    return cc.set(clientConfig);\n  }\n\n  async entitiesByTerm(term) {\n    const db = Db.connect(this.config);\n\n    const entityGroups = (await db.view('entity', 'byTaxonomyTerm', { keys: [term.id], group: true })).rows.map(row => row.value)[0];\n\n    if (!entityGroups) {\n      return [];\n    }\n\n    let entityIds = [];\n\n    _.forEach(entityGroups, (entities) => {\n      entityIds = entityIds.concat(entities);\n    });\n\n    entityIds = _.uniq(entityIds);\n\n    const entities = (await db.fetch({ keys: entityIds, include_docs: true })).rows\n      .filter(row => row.doc)\n      .map(row => row.doc);\n\n    return entities;\n  }\n\n  async createTerm(taxonomySlug, term) {\n    const taxonomy = await this.read(taxonomySlug);\n\n    taxonomy.terms.push(term);\n\n    return this.update(taxonomy);\n  }\n\n  async updateTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.map((_term) => {\n            if (_term.id === term.id) {\n              _term.title = term.title;\n              _term.slug = term.slug;\n            }\n\n            if (!_term.parents) {\n              _term.parents = [];\n            }\n\n            _term.parents = _term.parents.map((parent) => {\n              if (parent.id === term.id) {\n                parent.title = term.title;\n                parent.slug = term.slug;\n              }\n              return parent;\n            });\n\n            return _term;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n\n  async deleteTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.filter((_term) => {\n            if (_term.id === term.id) {\n              return false;\n            }\n\n            if ((_term.parents || []).filter(parent => parent.id === term.id).length) {\n              return false;\n            }\n\n            return true;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n}\n\nmodule.exports = Taxonomy;\n","const Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst Cloudant = require('@cloudant/cloudant');\nconst Db = require('./db');\n\nclass Tools {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getDb() {\n    const result = await Db.connect(this.config).fetch({\n      include_docs: true,\n    });\n\n    return result;\n  }\n\n  async getChanges() {\n    const result = await Db.connect(this.config).changes({\n      limit: 50,\n      include_docs: true,\n      filter: 'tools/changesEntity',\n    });\n\n    return result;\n  }\n\n  async importDb(dbBackupFile) {\n    const dbName = this.config.db.name;\n\n    const fileConents = await fs.readFileAsync(dbBackupFile.path);\n\n    const docs = JSON.parse(fileConents).rows.map((row) => {\n      const { doc } = row;\n      delete doc._rev;\n      return doc;\n    });\n\n    await fs.unlinkAsync(dbBackupFile.path);\n\n    const cloudant = new Cloudant({\n      url: this.config.db.url,\n      plugins: ['promises', 'retry'],\n    }).db;\n\n    try {\n      await cloudant.destroy(dbName);\n    } catch (error) {\n      //\n    }\n\n    await cloudant.create(dbName);\n\n    const result = await Db.connect(this.config, dbName).bulk({ docs });\n\n    return result;\n  }\n\n}\n\nmodule.exports = Tools;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass User {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    user.id = user.id.toLowerCase();\n    user.email = user.email.toLowerCase();\n\n    clientConfig.users.push(user);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async update(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.users, { id: user.id });\n\n    if (index === -1) {\n      throw Error(`User not found: ${user.id}`);\n    }\n\n    user.email = user.email.toLowerCase();\n\n    clientConfig.users.splice(index, 1, user);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    userId = _.isArray(userId) ? userId : [userId];\n\n    clientConfig.users = clientConfig.users.filter(user => userId.indexOf(user.id) === -1);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = User;\n","module.exports = ({\n  Analytics,\n  router,\n  authMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/analytics.:ext?',\n    authMiddleware,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const analytics = Analytics(await getConfig());\n\n      try {\n        handleResponse(req, res, await analytics.get(req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const pick = require('lodash/pick');\n\nmodule.exports = ({\n  Auth,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/auth/user.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.query.slug));\n\n      const user = pick((await auth.authUser(req.query.slug, req.query.userId)), [\n        'active',\n        'role',\n      ]);\n\n      try {\n        handleResponse(req, res, user);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/auth/provider/:provider/config',\n    authMiddleware,\n    permissionMiddleware.bind(null, ['settings', 'userSettings']),\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      if (!config.provider[req.params.provider]) {\n        res.status(404);\n        res.send({});\n        return;\n      }\n\n      res.status(200);\n      res.send({ clientId: config.provider[req.params.provider].clientId });\n    })\n  );\n\n  router.get(\n    '/auth/provider/:provider',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    (req, res) => {\n      res.status(req.query.error ? 500 : 200);\n      res.send(`${req.params.provider}: ${(req.query.error_description ? req.query.error_description : 'successfully authenticated')}`);\n    }\n  );\n\n  router.post(\n    '/auth/provider/:provider',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/auth/provider/:provider/refresh',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, null, true));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/auth/provider/:provider/:userId',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'userSettings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, req.params.userId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/auth/provider/:provider/:userId/refresh',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, req.params.userId, true));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  router,\n  cache,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n}) => {\n\n  /**\n   * @swagger\n   * /cache/clear:\n   *  get:\n   *    tags:\n   *      - cache\n   *    summary: Clear cache\n   *    description: Clears the LRU cache of API responses\n   *    produces:\n   *      - text/plain\n   *    responses:\n   *      200:\n   *        description: Result\n   */\n  router.get(\n    '/cache/clear.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      if (!config.cache.enabled) {\n        handleResponse(req, res, 'Cache disabled');\n        return;\n      }\n\n      const pattern = cache.store.name === 'redis' ? '*' : undefined;\n\n      cache.keys(pattern).then((keys) => {\n        const items = keys.filter(key => key.indexOf(req.session.slug) === 0);\n\n        items.forEach(key => cache.del(key));\n\n        handleResponse(req, res, `${items.length} items removed from cache`);\n      });\n    })\n  );\n\n};\n","const pick = require('lodash/pick');\n\nmodule.exports = ({\n  ClientConfig,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n  router.get(\n    '/config/info.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(\n        await getConfig(req.query.slug || req.session.slug)\n      );\n\n      const clientInfo = pick(await clientConfig.get(), ['client.name']);\n\n      if (Object.keys(clientInfo).length === 0) {\n        handleError(req, res, new Error('Account ID not found'));\n        return;\n      }\n\n      try {\n        handleResponse(req, res, clientInfo);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/config.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.get());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/config.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'config'),\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.set(req.body.config));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  router,\n}) => {\n\n  router.all('/debug/useragent.:ext?', (req, res) => {\n    const expressUseragent = require('express-useragent');\n    const useragent = expressUseragent.parse(req.headers['user-agent']);\n\n    res.status(200);\n    res.send(`\n      <html>\n        <head>\n          <title>${useragent.source}</title>\n          <meta name=\"description\" content=\"${useragent.source}\">\n        </head>\n        <body>${useragent.source}</body>\n      </html>\n    `);\n  });\n\n};\n","module.exports = require(\"express-useragent\");","const isArray = require('lodash/isArray');\n\nmodule.exports = ({\n  Ecommerce,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/ecommerce/order/message/:message.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        const order = await ecommerce.getOrder(req.query.orderId);\n        handleResponse(req, res, order.messages[req.params.message].email.html);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (isArray(req.query.sort)) {\n        req.query.sort = JSON.stringify(req.query.sort).replace(/\\\\\"/g, '');\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.getType(req.params.type, req.query));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (!/^(discount|order)$/.test(req.params.type)) {\n        handleError(req, res, `Illegal type: ${req.params.type}`);\n        return;\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.setType(req.params.type, req.body.item));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (!/^(discount)$/.test(req.params.type)) {\n        handleError(req, res, `Illegal type: ${req.params.type}`);\n        return;\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.deleteType(req.body.item));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/ecommerce/discount/:code.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.verifyDiscount(req.params.code));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Email,\n  Entity,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /email/preview:\n   *  get:\n   *    tags:\n   *      - email\n   *    summary: Preview email template\n   * #   description: Preview email template\n   *    produces:\n   *      - text/html\n   *    parameters:\n   *      - name: slug\n   *        description: Slug (optionally override slug in development mode)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: templateSlug\n   *        description: Template slug (folder name of the template)\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: payload\n   *        description: JSON payload from which to render the template\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: entityId\n   *        description: Entity `_id` from which to render the template\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: inlineStyles\n   *        description: Inline CSS\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: true\n   *    responses:\n   *      200:\n   *        description: Template\n   */\n  router.all(\n    '/email/preview.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query || {};\n\n      const templateOptions = {\n        data: input.data ? JSON.parse(input.data) : false,\n        inlineStyles: input.inlineStyles ? JSON.parse(input.inlineStyles) : true,\n        inky: input.inky ? JSON.parse(input.inky) : false,\n        mjml: input.mjml ? JSON.parse(input.mjml) : false,\n        skipValidation: input.skipValidation ? JSON.parse(input.skipValidation) : false,\n      };\n\n      const slug = input.slug || req.session.slug;\n\n      // if (!slug) {\n      //   throw new Error('Missing `slug` parameter');\n      // }\n\n      async function renderTemplate(data = {}) {\n        if (templateOptions.data) {\n          handleResponse(req, res, data);\n          return;\n        }\n\n        const email = Email(await getConfig(slug));\n\n        try {\n          const template = await email.getTemplate(input.templateSlug, data, templateOptions);\n\n          handleResponse(req, res, template.html);\n        } catch (error) {\n          handleError(req, res, error);\n        }\n      }\n\n      if (input.payload) {\n        renderTemplate(JSON.parse(input.payload));\n        return;\n      }\n\n      if (input.entityId) {\n        const entity = Entity(await getConfig(slug));\n\n        const entities = (await entity.entityList([input.entityId], { children: 2 })).map(row => row.doc);\n\n        renderTemplate(entity.flattenValues(entities)[0]);\n        return;\n      }\n\n      renderTemplate();\n    })\n  );\n\n  router.all(\n    '/email/send.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query || {};\n\n      const templateOptions = {\n        inlineStyles: input.inlineStyles ? JSON.parse(input.inlineStyles) : true,\n        inky: input.inky ? JSON.parse(input.inky) : false,\n        mjml: input.mjml ? JSON.parse(input.mjml) : false,\n        skipValidation: input.skipValidation ? JSON.parse(input.skipValidation) : true,\n      };\n\n      const emailOptions = {\n        fromName: input.fromName || '',\n        fromEmail: input.fromEmail,\n        toName: input.toName || '',\n        toEmail: input.toEmail,\n        from: `${input.fromName || ''} <${input.fromEmail}>`,\n        to: input.toEmail,\n        subject: input.subject,\n      };\n\n      const slug = input.slug || req.session.slug;\n\n      const email = Email(await getConfig(slug));\n\n      try {\n        const result = await email.sendEmail(emailOptions, input.templateSlug, input.payload, templateOptions);\n\n        handleResponse(req, res, result);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/email/subscribe.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const email = Email(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await email.subscribe({\n          email: req.body.email || req.query.email,\n          name: req.body.name || req.query.name || '',\n        }));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Embedly,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/embedly/oembed.:ext?',\n    authMiddleware,\n    asyncMiddleware(async(req, res) => {\n      const embedly = Embedly(await getConfig());\n\n      try {\n        handleResponse(req, res, await embedly.oembed(req.query.url || req.query.urls));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const isArray = require('lodash/isArray');\n\nmodule.exports = ({\n  Db,\n  Entity,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * definitions:\n   *  Entity:\n   *    type: object\n   *    required:\n   *      - _id\n   *      - _rev\n   *    properties:\n   *      _id:\n   *        type: string\n   *      _rev:\n   *        type: string\n   *      schema:\n   *        type: string\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      thumbnail:\n   *        type: object\n   *      fields:\n   *        type: object\n   *      published:\n   *        type: boolean\n   *      publishedAt:\n   *        type: string\n   */\n\n  /**\n   * @swagger\n   * /entities/index:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Show indexes\n   *    description: Show all indexes, use this to find fields available for search/query.\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Indexes\n   */\n  router.get(\n    '/entities/index.:ext?',\n    asyncMiddleware(async (req, res) => {\n      try {\n        handleResponse(req, res, await Db(await getConfig(req.session.slug)).indexAsync());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/search:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Search entities\n   *    description: This endpoint extends Cloudant's Lucene based search. Learn more from Cloudant's [documentation](https://docs.cloudant.com/search.html).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: Lucene search query\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: include_docs\n   *        description: Include docs in search results (ignored if `children` or `parents` is `true`)\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: sort\n   *        description: Field to sort results by. Prefixed with `-` to reverse order. Suffixed with &#60;`string|number`&#62;\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: limit\n   *        description: Limit results (max 200)\n   *        in: query\n   *        required: false\n   *        type: number\n   *      - name: bookmark\n   *        description: Bookmark for the next page of results\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: group_field\n   *        description: Field to group results by\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: index\n   *        description: Search index\n   *        in: query\n   *        required: false\n   *        type: string\n   *        default: all\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: trashed\n   *        description: Get trashed entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Search result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            total_rows:\n   *              type: number\n   *            rows:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/search?.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      // eslint-disable-next-line\n      const include_docs = input.include_docs !== undefined\n        ? JSON.parse(input.include_docs) : false;\n\n      // eslint-disable-next-line\n      const include_fields = input.include_fields !== undefined\n        ? typeof input.include_fields === 'object' ? input.include_fields : JSON.parse(input.include_fields)\n        : [];\n\n      const select = input.select !== undefined ? input.select : false;\n\n      let children = input.children !== undefined\n        ? typeof input.children === 'object' ? input.children : JSON.parse(input.children)\n        : false;\n      let parents = input.parents !== undefined\n        ? typeof input.parents === 'object' ? input.parents : JSON.parse(input.parents)\n        : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      const trashed = input.trashed !== undefined\n        ? JSON.parse(input.trashed) : false;\n\n      const sort = input.sort !== undefined\n        ? input.sort : null;\n      const limit = input.limit !== undefined\n        ? parseInt(input.limit, 10) : null;\n\n      const bookmark = input.bookmark !== undefined\n        ? input.bookmark : null;\n\n      // eslint-disable-next-line\n      const group_field = input.group_field !== undefined\n        ? input.group_field : null;\n\n      const index = input.index !== undefined\n        ? input.index : null;\n\n      const q = input.query || input.q;\n\n      let query = [];\n\n      query.push(trashed ? 'trashed:true' : '!trashed:true');\n\n      if (req.session.role === 'guest') {\n        query.push('published:true');\n      }\n\n      if (q) {\n        query.push(`(${q})`);\n      }\n\n      query = query.join(' AND ');\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entitySearch(\n          {\n            query,\n            include_docs,\n            include_fields,\n            sort,\n            limit,\n            bookmark,\n            group_field,\n            index,\n          },\n          {\n            select,\n            children,\n            parents,\n            role: req.session.role,\n          }\n        ), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/find:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Query entities\n   *    description: This endpoint extends CouchDB's Mango query. Learn more from Cloudant's [documentation](https://docs.cloudant.com/cloudant_query.html#finding-documents-using-an-index).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: JSON query object, refer to CouchDB/Cloudant docs.\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Query result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            docs:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/find.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      let children = input.children !== undefined\n        ? typeof input.children === 'object' ? input.children : JSON.parse(input.children)\n        : false;\n      let parents = input.parents !== undefined\n        ? typeof input.parents === 'object' ? input.parents : JSON.parse(input.parents)\n        : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      const trashed = input.trashed !== undefined\n        ? JSON.parse(input.trashed) : false;\n\n      const query = input.query\n        ? JSON.parse(input.query) : { selector: {} };\n\n      query.use_index = ['entityIndex', 'entity'];\n\n      if (!query.selector.$and) {\n        query.selector = {\n          $and: [\n            query.selector,\n          ],\n        };\n      }\n\n      if (trashed) {\n        query.selector.$and.push({ trashed: true });\n      } else {\n        query.selector.$and.push({\n          $or: [\n            {\n              trashed: {\n                $exists: false,\n              },\n            },\n            {\n              trashed: false,\n            },\n          ],\n        });\n      }\n\n      if (req.session.role === 'guest') {\n        query.selector.$and.push({ published: true });\n      }\n\n      if (req.query.limit) {\n        query.limit = parseInt(req.query.limit, 10);\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityFind(query, { children, parents, role: req.session.role }), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entities/field.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.fieldValues(req.query.slug || req.query.fieldSlug, req.query.searchTerm), true);\n      } catch (error) {\n        handleError(res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Get all entities\n   *    description: Get all entities, optionally from an array of IDs\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: id\n   *        description: Entity ID\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: ids\n   *        description: Entity IDs\n   *        in: query\n   *        required: false\n   *        type: array\n   *        items:\n   *          type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Entities\n   *        schema:\n   *          type: array\n   *          items:\n   *            $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      const select = input.select !== undefined ? input.select : false;\n\n      let children = input.children !== undefined\n        ? typeof input.children === 'object' ? input.children : JSON.parse(input.children)\n        : false;\n      let parents = input.parents !== undefined\n        ? typeof input.parents === 'object' ? input.parents : JSON.parse(input.parents)\n        : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      let ids = input.ids || input.id;\n\n      if (ids) {\n        ids = isArray(ids) ? ids : [ids];\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityList(ids, {\n          select,\n          children,\n          parents,\n          role: req.session.role,\n        }), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity/revisions.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRevisions(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityCreate'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityCreate(req.body.entity));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRead(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityUpdate(req.body.entity || req.body.entities, req.body.restore || false));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityDelete(req.body.entity || req.body.entities, req.body.forever || false));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity/trashed.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityDelete('trashed'));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  ClientConfig,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /metadata:\n   *  get:\n   *    tags:\n   *      - metadata\n   *    summary: Get metadata\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Metadata\n   *        schema:\n   *          type: object\n   *          properties:\n   *            description:\n   *              type: string\n   */\n  router.get(\n    '/metadata.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const cc = ClientConfig(await getConfig(req.session.slug));\n\n      const clientConfig = await cc.get();\n\n      try {\n        handleResponse(req, res, clientConfig.client.metadata, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","const _ = require('lodash');\n\nmodule.exports = ({\n  Pdf,\n  ClientConfig,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleError,\n}) => {\n\n  router.get(\n    '/pdf/view.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          pdf.getPdf(payload)\n            .then((pdf) => {\n              res.type('application/pdf');\n              res.status(200);\n              res.send(pdf);\n            }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/download.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          pdf.getPdf(payload)\n            .then((pdf) => {\n              res.attachment(payload.fileName || 'download.pdf');\n              res.status(200);\n              res.send(pdf);\n            }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/payload.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          res.status(200);\n          res.json(payload);\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/submit.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig(req.session.slug);\n\n      const cc = ClientConfig(config);\n      const clientConfig = await cc.get();\n\n      const assetSlug = _.get(clientConfig, 'assets.slug', req.session.slug);\n\n      const pdf = Pdf(config);\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          payload = JSON.stringify(payload).replace(/'/gi, '’');\n\n          res.status(200);\n          res.send(`\n          <body onload='form.submit()'>\n            <form id='form' method='POST' action='${config.assist.url}/${assetSlug}/pdf/download' target='_self'>\n              <input type='hidden' name='payload' value='${payload}' />\n            </form>\n          </body>\n        `);\n        }, handleError.bind(null, req, res));\n    })\n  );\n};\n","const _ = require('lodash');\nconst axios = require('axios');\n\nmodule.exports = ({\n  Auth,\n  ClientConfig,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  const providerApiBaseUrl = {\n    google: 'https://www.googleapis.com',\n    instagram: 'https://api.instagram.com',\n    spotify: 'https://api.spotify.com',\n    vimeo: 'https://api.vimeo.com',\n  };\n\n  const providerApiHandler = asyncMiddleware(async (req, res) => {\n    const method = req.method;\n    const provider = req.params[0];\n    const userId = req.params[2] ? req.params[1] : null;\n    const endpoint = (req.params[2] || req.params[1]).split('/').filter(param => param !== '').join('/');\n\n    const config = await getConfig(req.session.slug);\n\n    const cc = ClientConfig(config);\n\n    let clientConfig = await cc.get();\n    let providerConfig;\n\n    if (userId) {\n      if (!clientConfig.userSettings[userId]) {\n        throw Error(`User settings not found: ${userId}`);\n      }\n      providerConfig = clientConfig.userSettings[userId].provider[provider];\n    } else {\n      providerConfig = clientConfig.provider[provider];\n    }\n\n    if (Math.floor(new Date().getTime() / 1000) - (providerConfig.begins || 0) > providerConfig.expires_in) {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      if (userId) {\n        clientConfig = await auth.authProvider(provider, {}, userId, true);\n        providerConfig = clientConfig.userSettings[userId].provider[provider];\n      } else {\n        clientConfig = await auth.authProvider(provider, {}, null, true);\n        providerConfig = clientConfig.provider[provider];\n      }\n    }\n\n    let params = _.merge({}, req.query);\n    params = _.omitBy(params, (value, key) => /^(__)/.test(key));\n\n    if (!/bearer/i.test(providerConfig.token_type)) {\n      params.access_token = providerConfig.access_token;\n    }\n\n    try {\n      const result = await axios.request({\n        url: endpoint,\n        baseURL: providerApiBaseUrl[provider],\n        method,\n        headers: {\n          Authorization: `Bearer ${providerConfig.access_token}`,\n        },\n        params,\n      });\n\n      handleResponse(req, res, result.data, true);\n    } catch (error) {\n      handleError(req, res, error);\n    }\n  });\n\n  router.all(\n    /\\/provider\\/([^/]+)\\/([^/]+)\\/api\\/?(.+)?/,\n    cacheMiddleware,\n    providerApiHandler,\n  );\n\n  router.all(\n    /\\/provider\\/([^/]+)\\/api\\/?(.+)?/,\n    cacheMiddleware,\n    providerApiHandler,\n  );\n\n};\n","module.exports = ({\n  Schema,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.create(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.read(req.query.schemaId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.update(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.delete(req.body.schemaSlug || req.body.schemaSlugs || req.query.schemaSlug || req.query.schemaSlugs));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schemas.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.updateAll(req.body.schemas));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Settings,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/settings.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const settings = Settings(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await settings.update(req.body.settings));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Shippo,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.all(\n    '/shippo/quote.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const shippo = Shippo(await getConfig());\n\n      const address = req.body.address || JSON.parse(req.params.address);\n      const parcel = req.body.parcel || JSON.parse(req.params.parcel);\n\n      try {\n        handleResponse(req, res, await shippo.getQuote(address, parcel), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Shopify,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /shopify/catalog:\n   *  get:\n   *    tags:\n   *      - shopify\n   *    summary: Get Facebook product feed xml\n   * #   description: Get Facebook product feed xml\n   *    produces:\n   *      - application/rss+xml\n   *    parameters:\n   *      - name: shopLink\n   *        description: Shop URL\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: productLinkTemplate\n   *        description: Product URL Handlebars template, containing {{handle}}\n   *        in: query\n   *        required: true\n   *        type: string\n   *    responses:\n   *      200:\n   *        description: XML Product Feed\n   */\n  router.get(\n    '/shopify/catalog.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const shopify = Shopify(await getConfig(req.session.slug));\n\n      try {\n        res.setHeader('Content-Type', 'application/rss+xml');\n        handleResponse(req, res, await shopify.getCatalog(req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  ClientConfig,\n  Instagram,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  const instagramAccessTokenMap = {};\n\n  router.get(\n    /\\/social\\/twitter\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      const Promise = require('bluebird');\n      const Twitter = require('twitter');\n\n      const twitter = Promise.promisifyAll(new Twitter({\n        consumer_key: config.provider.twitter.consumerKey,\n        consumer_secret: config.provider.twitter.consumerSecret,\n        access_token_key: config.provider.twitter.accessTokenKey,\n        access_token_secret: config.provider.twitter.accessTokenSecret,\n      }));\n\n      try {\n        handleResponse(req, res, await twitter[`${method}Async`](params.join('/'), req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    /\\/social\\/instagram\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      if (!instagramAccessTokenMap[req.session.slug]) {\n        const cc = ClientConfig(config);\n\n        try {\n          const clientConfig = await cc.get();\n          instagramAccessTokenMap[req.session.slug] = clientConfig.provider.instagram.access_token;\n        } catch (error) {\n          handleError(res, new Error('Instagram: access_token required'));\n          return;\n        }\n      }\n\n      req.query.access_token = instagramAccessTokenMap[req.session.slug];\n\n      const instagram = Instagram({\n        client_id: config.provider.instagram.clientId,\n      });\n\n      try {\n        const result = await instagram[method](params.join('/'), req.query);\n        try {\n          delete result.pagination.next_url;\n        } catch (error) {\n          //\n        }\n        handleResponse(req, res, result, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = require(\"twitter\");","module.exports = ({\n  Ecommerce,\n  Email,\n  Stripe,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.all(\n    '/stripe/checkout.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const token = req.body.token || JSON.parse(req.query.token);\n      const order = req.body.order || JSON.parse(req.query.order);\n\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.checkout(token, order));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/stripe/refund.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const order = req.body.order || JSON.parse(req.query.order);\n      const amount = Number(req.body.amount || req.query.amount || 0) * 100;\n\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.refund(order, amount));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/stripe/account.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.retrieveAccount());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/stripe/email.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig(req.session.slug);\n      const email = Email(config);\n      const stripe = Stripe(config);\n      const ecommerce = Ecommerce(config);\n\n      const settings = await stripe.getSettings();\n      const order = await ecommerce.getOrder(req.query.orderId);\n\n      const data = {\n        settings,\n        order,\n      };\n\n      const template = await email.getTemplate(`${req.session.slug}/${req.query.template}`, data);\n\n      try {\n        handleResponse(req, res, template.html);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Taxonomy,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * definitions:\n   *  TaxonomyTerm:\n   *    type: object\n   *    properties:\n   *      id:\n   *        type: string\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      terms:\n   *        type: array\n   *        items:\n   *          type: object\n   *          $ref: '#/definitions/TaxonomyTerm'\n   */\n\n  /**\n   * @swagger\n   * definitions:\n   *  Taxonomy:\n   *    type: object\n   *    properties:\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      terms:\n   *        type: array\n   *        items:\n   *          type: object\n   *          $ref: '#/definitions/TaxonomyTerm'\n   */\n\n  router.post(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.create(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /taxonomy:\n   *  get:\n   *    tags:\n   *      - taxonomy\n   *    summary: Get taxonomy\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Taxonomy slug\n   *        in: query\n   *        required: true\n   *        type: string\n   *    responses:\n   *      200:\n   *        description: Taxonomy\n   *        schema:\n   *          type: object\n   *          $ref: '#/definitions/Taxonomy'\n   */\n  router.get(\n    '/taxonomy.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.read(req.query.slug || req.query.taxonomySlug), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.update(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.delete(req.body.taxonomySlug || req.body.taxonomySlugs || req.query.taxonomySlug || req.query.taxonomySlugs));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.createTerm(req.body.slug || req.body.taxonomySlug, req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.updateTerm(req.query.term || req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.deleteTerm(req.query.term || req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Jwt,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  // handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /token:\n   *  get:\n   *    tags:\n   *      - token\n   *    summary: Get JWT\n   *    description: Get Json Web Token (JWT) for API access\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Slug for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: userId\n   *        description: User ID for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: role\n   *        description: Role for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: expiresIn\n   *        description: Duration of token in seconds\n   *        in: query\n   *        required: false\n   *        type: number\n   *    responses:\n   *      200:\n   *        description: Token\n   */\n\n  router.get(\n    '/token.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      const payload = {\n        role: req.session.role,\n        slug: req.session.slug,\n        userId: req.session.userId,\n      };\n\n      if (req.session.role === 'super' || config.environment === 'development') {\n        payload.role = req.query.role || req.session.role || config.dev.role;\n        payload.slug = req.query.slug || req.session.slug || config.dev.slug;\n        if (payload.role !== 'guest') {\n          payload.userId = req.query.userId || req.session.userId || config.dev.userId;\n        }\n      }\n\n      const _ = require('lodash');\n\n      let options = _.pickBy(req.query, (value, key) => /^(expiresIn|notBefore|audience|issuer|jwtid|subject|noTimestamp|header)$/.test(key));\n\n      options = _.mapValues(options, (value) => {\n        if (!_.isNaN(+value)) { // Check if value is a numeric string\n          return +value; // Convert numeric string to number\n        }\n        return value;\n      });\n\n      const jwt = Jwt(config);\n\n      const token = jwt.signToken(payload, options);\n\n      req.session.apiToken = token;\n\n      const response = {\n        token,\n        payload,\n        options,\n      };\n\n      handleResponse(req, res, response);\n    })\n  );\n\n};\n","module.exports = ({\n  Tools,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/tools/export-db.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'tools'),\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        const db = await tools.getDb();\n\n        res.setHeader('Content-Disposition', `attachment; filename=${req.session.slug}.json`);\n        res.setHeader('Content-Type', 'application/json');\n        res.status(200);\n        res.send(db);\n\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/tools/changes.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await tools.getChanges());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  User,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.create(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.read(req.query.userId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.update(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.delete(req.body.userId || req.body.userIds || req.query.userId || req.query.userIds));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n"],"sourceRoot":""}