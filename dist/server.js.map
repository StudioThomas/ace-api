{"version":3,"sources":["webpack://AceApiServer/webpack/universalModuleDefinition","webpack://AceApiServer/webpack/bootstrap","webpack://AceApiServer/external \"@babel/runtime/helpers/interopRequireDefault\"","webpack://AceApiServer/external \"@babel/runtime/regenerator\"","webpack://AceApiServer/external \"lodash\"","webpack://AceApiServer/./lib/client-config.js","webpack://AceApiServer/external \"bluebird\"","webpack://AceApiServer/./lib/db.js","webpack://AceApiServer/./lib/helpers.js","webpack://AceApiServer/external \"axios\"","webpack://AceApiServer/external \"path\"","webpack://AceApiServer/external \"fs\"","webpack://AceApiServer/external \"express\"","webpack://AceApiServer/./lib/assist.js","webpack://AceApiServer/external \"@cloudant/cloudant\"","webpack://AceApiServer/./lib/roles.js","webpack://AceApiServer/./lib/email.js","webpack://AceApiServer/./lib/entity.js","webpack://AceApiServer/./lib/schema.js","webpack://AceApiServer/./lib/fields.js","webpack://AceApiServer/external \"request-promise\"","webpack://AceApiServer/./server/config.default.js","webpack://AceApiServer/external \"lodash/pick\"","webpack://AceApiServer/external \"lodash/isArray\"","webpack://AceApiServer/./server/server.js","webpack://AceApiServer/external \"http\"","webpack://AceApiServer/external \"morgan\"","webpack://AceApiServer/external \"helmet\"","webpack://AceApiServer/external \"cookie-parser\"","webpack://AceApiServer/external \"body-parser\"","webpack://AceApiServer/external \"method-override\"","webpack://AceApiServer/external \"express-session\"","webpack://AceApiServer/external \"connect-redis\"","webpack://AceApiServer/./server/index.js","webpack://AceApiServer/external \"cache-manager\"","webpack://AceApiServer/external \"cache-manager-redis-store\"","webpack://AceApiServer/external \"url-parse\"","webpack://AceApiServer/external \"zlib\"","webpack://AceApiServer/external \"circular-json-es6\"","webpack://AceApiServer/external \"object-sizeof\"","webpack://AceApiServer/external \"deep-freeze\"","webpack://AceApiServer/external \"xxhashjs\"","webpack://AceApiServer/./index.js","webpack://AceApiServer/./config.default.js","webpack://AceApiServer/external \"password-hash\"","webpack://AceApiServer/./lib/auth.js","webpack://AceApiServer/external \"querystring\"","webpack://AceApiServer/./lib/ecommerce.js","webpack://AceApiServer/external \"nodemailer\"","webpack://AceApiServer/external \"createsend-node\"","webpack://AceApiServer/external \"nodemailer-mailgun-transport\"","webpack://AceApiServer/external \"inky\"","webpack://AceApiServer/external \"mjml\"","webpack://AceApiServer/external \"mjml-core\"","webpack://AceApiServer/external \"mjml-validator\"","webpack://AceApiServer/external \"mjml-mailchimp\"","webpack://AceApiServer/external \"html-to-text\"","webpack://AceApiServer/external \"moment\"","webpack://AceApiServer/external \"i18n-iso-countries\"","webpack://AceApiServer/external \"node-sass\"","webpack://AceApiServer/external \"pug\"","webpack://AceApiServer/external \"ejs\"","webpack://AceApiServer/external \"juice\"","webpack://AceApiServer/./lib/embedly.js","webpack://AceApiServer/external \"embedly\"","webpack://AceApiServer/external \"@babel/runtime/helpers/objectSpread\"","webpack://AceApiServer/external \"json-query\"","webpack://AceApiServer/external \"deep-diff\"","webpack://AceApiServer/./lib/instagram.js","webpack://AceApiServer/./lib/jwt.js","webpack://AceApiServer/external \"jsonwebtoken\"","webpack://AceApiServer/./lib/pdf.js","webpack://AceApiServer/external \"eval\"","webpack://AceApiServer/external \"recursive-readdir\"","webpack://AceApiServer/./lib sync","webpack://AceApiServer/./lib/settings.js","webpack://AceApiServer/./lib/shippo.js","webpack://AceApiServer/external \"shippo\"","webpack://AceApiServer/./lib/shopify.js","webpack://AceApiServer/external \"he\"","webpack://AceApiServer/external \"handlebars\"","webpack://AceApiServer/external \"jsontoxml\"","webpack://AceApiServer/./lib/stripe.js","webpack://AceApiServer/external \"stripe\"","webpack://AceApiServer/external \"hashids\"","webpack://AceApiServer/./lib/taxonomy.js","webpack://AceApiServer/./lib/tools.js","webpack://AceApiServer/./lib/user.js","webpack://AceApiServer/./server/routes/analytics.js","webpack://AceApiServer/./server/routes/auth.js","webpack://AceApiServer/./server/routes/cache.js","webpack://AceApiServer/./server/routes/config.js","webpack://AceApiServer/./server/routes/debug.js","webpack://AceApiServer/external \"express-useragent\"","webpack://AceApiServer/./server/routes/ecommerce.js","webpack://AceApiServer/./server/routes/email.js","webpack://AceApiServer/./server/routes/embedly.js","webpack://AceApiServer/./server/routes/entity.js","webpack://AceApiServer/./server/routes/metadata.js","webpack://AceApiServer/./server/routes/pdf.js","webpack://AceApiServer/./server/routes/provider.js","webpack://AceApiServer/./server/routes/schema.js","webpack://AceApiServer/./server/routes/settings.js","webpack://AceApiServer/./server/routes/shippo.js","webpack://AceApiServer/./server/routes/shopify.js","webpack://AceApiServer/./server/routes/social.js","webpack://AceApiServer/external \"twitter\"","webpack://AceApiServer/./server/routes/stripe.js","webpack://AceApiServer/./server/routes/taxonomy.js","webpack://AceApiServer/./server/routes/token.js","webpack://AceApiServer/./server/routes/tools.js","webpack://AceApiServer/./server/routes/user.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","_","Db","Helpers","DEFAULT_CLIENT_CONFIG","_id","client","assets","schemas","taxonomies","users","roles","provider","constructor","config","this","clientConfig","_regenerator","default","async","_context","prev","next","awrap","connect","sent","merge","t0","slug","abrupt","stop","set","_context2","createOrUpdate","Cloudant","dbName","[object Object]","url","db","maxAttempt","plugins","retry","retryDelayMultiplier","retryInitialDelayMsecs","use","Promise","assistUrl","assist","doc","resolve","reject","insert","then","response","id","_rev","rev","error","statusCode","docs","chunkSize","chunks","chunk","promises","forEach","push","bulk","all","entities","groupSize","Infinity","grouped","group","entity","groupBefore","length","groupAfter","ratio","thumbnail","groupRatio","JSON","stringify","Date","replace","array","replacementObject","map","thumbnailSrc","settings","cropSlug","cropDefault","settingsArray","split","setting","crop","crops","x","y","x2","y2","g","join","settingsString","test","thumbnailType","ext","thumbnailUrl","axios","passwordHash","ClientConfig","deleteFiles","fileNames","cc","assetsSlug","result","post","auth","username","password","generate","data","permissions","entityGrid","entityCreate","entityRead","entityUpdate","entityDelete","taxonomyCreate","taxonomyRead","taxonomyUpdate","taxonomyDelete","fileCreate","fileRead","fileUpdate","fileDelete","schema","user","userSettings","tools","ecommerce","role","freeze","find","path","fs","promisifyAll","nodemailer","Createsend","nodemailerMailgunTransport","Inky","mjml2html","registerComponent","registerDependencies","McSection","McImage","htmlToText","moment","countries","sass","pug","ejs","juice","inky","mc-section","mj-column","mj-hero","getTemplate","templateSlug","templateData","templateOptions","options","templatePath","templateFiles","htmlFileName","htmlFileExtension","style","helpers","html","convertMjmlResult","inlineStyles","mjml","skipValidation","email","templatesPath","statAsync","readdirAsync","fileName","renderAsync","file","sourceMapContents","sourceMapEmbed","css","toString","pick","readFileAsync","renderFile","level","errors","Error","uniq","formattedMessage","releaseTheKraken","preserveMediaQueries","preserveFontFaces","removeStyleTags","removeLinkTags","preserveImportant","webResources","links","scripts","images","text","fromString","sendEmail","emailOptions","nodemailerMailgun","createTransport","api_key","mailgun","apiKey","domain","emailTemplate","sendMail","metadata","subscribe","details","listId","createsend","cs","clientApiKey","subscribers","addSubscriberAsync","EmailAddress","Name","Resubscribe","RestartSubscriptionBasedAutoresponders","emailAddress","catch","Message","jsonQuery","diff","Schema","Assist","CHUNK_UPDATE_SIZE","Entity","flattenValues","fields","size","mapValues","field","type","isArray","filter","obj","undefined","published","childrenMap","omitBy","startsWith","rows","parents","entityMap","row","_objectSpread2","_filterEntityFields","uniqBy","fieldValues","fieldSlug","searchTerm","viewWithList","startkey","endkey","query","isFieldQuery","queryParts","trim","selector","modifier","slice","locals","input","start","end","sample","sampleSize","paths","copy","pathParts","match","pathFrom","pathTo","allowRegexp","queryString","methodArgs","queries","emptyArgs","times","splice","_entitiesById","ids","include_docs","keys","view","_appendParents","children","limit","isNumber","_getDocMap","rowsOrDocs","docMap","childIds","childDocs","_context3","_childDepth","rowOrDoc","isRow","_queriesFromString","concat","flatten","_query","t1","_childDepthLimit","fieldQueryMap","_mergeDocs","_extendRowsOrDocs","_context4","select","_removeChildren","updatedEntities","indexOf","chunkUpdate","_updateChildren","title","entityList","_context5","_entitySearch","Math","min","sort","isString","include_fields","bookmark","index","group_field","search","groups","total_rows","hits","entitySearch","__entitySearch","clone","entityFind","_context6","updateEntityIndex","entityRevisions","entityId","revs_info","revisionIds","_revs_info","revision","status","open_revs","revisions","childrenIds","ok","fetch","console","_appendChildren","restore","entityIds","oldFileNames","_context7","entityOrEntityId","isObject","oldEntity","newEntity","mergeWith","a","b","trashed","forever","filesResult","entitiesResult","_context8","deleted","_fileNames","_deleted","files","Fields","read","schemaSlug","update","findIndex","delete","schemaSlugs","updateAll","ddoc","default_field","enabled","analyzer","$and","fieldRef","dataType","environment","process","env","ENVIRONMENT","api","prefix","API_PREFIX","forceHttps","API_FORCE_HTTPS","parse","blacklistToken","API_BLACKLIST_TOKEN","blacklistReferrer","API_BLACKLIST_REFERRER","session","secret","SESSION_SECRET","ttl","parseInt","SESSION_TTL","cache","CACHE_ENABLED","CACHE_TTL","compress","CACHE_COMPRESS","memory","max","CACHE_MEMORY_MAX","redis","REDIS_URL","host","REDIS_HOST","port","REDIS_PORT","REDIS_PASSWORD","REDIS_DB","logentriesToken","LOGENTRIES_TOKEN","PORT","HOST","express","http","logger","helmet","cookieParser","bodyParser","methodOverride","RedisStore","AceApiServer","defaultConfig","customConfig","listen","app","sessionOptions","resave","saveUninitialized","redisOptions","store","cookie","maxAge","json","urlencoded","extended","server","createServer","on","log","cacheManager","redisStore","URL","zlib","CircularJSON","sizeof","deepFreeze","XXH","Api","HASH_SEED","customAuthMiddleware","asyncMiddleware","fn","req","res","skipAuth","route","RegExp","authMiddleware","userId","send","code","message","omitUndefined","forIn","isPlainObject","isUndefined","cloneConfig","cloneDeep","redisClient","caching","getClient","item","hash","body","h64","cacheMiddleware","__cache","gunzipAsync","Buffer","from","jwt","Jwt","router","Router","headers","scheme","redirect","enable","Access-Control-Allow-Origin","Access-Control-Allow-Methods","Access-Control-Expose-Headers","Vary","method","sendStatus","referrer","referer","referrerHostname","hostname","token","apiToken","payload","verifyToken","context","permissionMiddleware","Roles","authorised","permission","getConfig","configClone","handleResponse","cacheResponse","gzipAsync","handleError","stack","statusText","afterResponse","removeListener","args","Auth","Ecommerce","Email","Embedly","Instagram","Pdf","Settings","Shippo","Shopify","Stripe","Taxonomy","Tools","User","debug","DEBUG","SLUG","baseUrl","BASE_URL","DB_URL","DB_HOST","DB_NAME","requestPlugin","DB_REQUEST_PLUGIN","meterType","DB_METER_TYPE","superUserId","AUTH_SUPER_USER_ID","tokenSecret","AUTH_TOKEN_SECRET","dev","DEV_USER_ID","DEV_ROLE","cms","CMS_TITLE","CMS_URL","ASSIST_URL","ASSIST_USERNAME","ASSIST_PASSWORD","MAILGUN_API_KEY","MAILGUN_DOMAIN","embedly","EMBEDLY_API_KEY","pdf","__dirname","google","clientId","GOOGLE_CLIENT_ID","clientSecret","GOOGLE_CLIENT_SECRET","instagram","INSTAGRAM_CLIENT_ID","INSTAGRAM_CLIENT_SECRET","spotify","SPOTIFY_CLIENT_ID","SPOTIFY_CLIENT_SECRET","stripe","STRIPE_CLIENT_ID","STRIPE_CLIENT_SECRET","STRIPE_API_KEY","twitter","consumerKey","TWITTER_CONSUMER_KEY","consumerSecret","TWITTER_CONSUMER_SECRET","accessTokenKey","TWITTER_ACCESS_TOKEN_KEY","accessTokenSecret","TWITTER_ACCESS_TOKEN_SECRET","vimeo","VIMEO_CLIENT_ID","VIMEO_CLIENT_SECRET","querystring","providerTokenUri","authUser","superUser","active","toLowerCase","authProvider","params","refresh","providerConfig","providerClientConfig","uri","providerAuth","grant_type","client_id","client_secret","redirect_uri","redirectUri","refresh_token","begins","floor","getTime","access_token","t2","getType","setType","deleteType","items","getOrder","orderId","verifyDiscount","discount","now","dateStart","dateEnd","EmbedlyApi","oembed","urls","opts","format","request","version","_request","endpoint","requestOptions","qs","extend","signToken","sign","verify","_eval","readdir","getTemplates","templates","getPayload","templateId","template","readFileSync","getPdf","assetSlug","assistPdfUrl","encoding","form","webpackEmptyContext","e","shippo","getQuote","address","parcel","addressFrom","object_purpose","zip","fromZip","country","fromCountry","addressTo","distance_unit","mass_unit","shipment","address_from","address_to","ratesReady","attempts","object_status","retrieve","object_id","val","rates","he","Handlebars","jsontoxml","getCatalog","shopLink","productLinkTemplate","products","channel","shopify","X-Shopify-Storefront-Access-Token","storefrontAccessToken","compile","shop","edges","edge","g:id","node","handle","g:title","encode","g:description","description","g:link","g:image_link","originalSrc","g:brand","vendor","g:condition","g:availability","availableForSale","g:price","priceRange","minVariantPrice","amount","currencyCode","product","Hashids","hashids","getSettings","clientStripeAccountId","stripe_user_id","checkout","order","customerDetails","findOrCreateCustomer","customer","createOrder","updateOrCreateStripeCustomer","stripeCustomer","updateCustomer","createCharge","updatedOrder","sendReceipt","orderReceipt","messages","sendNotification","orderNotification","updateOrder","finalOrder","retrieveAccount","accounts","refund","refunds","refund_application_fee","charge","stripe_account","charges","amountRefunded","amount_refunded","newCustomer","createdAt","modifiedAt","phone","billingAddress","shippingAddress","orders","source","customer_id","customers","param","price","quantity","newOrder","shippingMethod","Number","subtotal","tax","rate","includedInPrice","total","show","currency","iso","capture","order_id","statement_descriptor","kebabCase","storeName","toUpperCase","application_fee","ceil","paymentGateway","livemode","emailSenderName","emailSenderAddress","to","subject","taxonomy","taxonomySlug","entitiesByTerm","term","entityGroups","createTerm","terms","updateTerm","_term","parent","deleteTerm","getDb","getChanges","changes","importDb","dbBackupFile","fileConents","cloudant","unlinkAsync","destroy","Analytics","analytics","t3","t4","t5","t6","error_description","put","pattern","del","clientInfo","useragent","renderTemplate","fromName","fromEmail","toName","toEmail","indexAsync","t7","t8","q","use_index","$or","$exists","_context9","_context10","_context11","attachment","providerApiBaseUrl","providerApiHandler","expires_in","token_type","baseURL","Authorization","schemaId","setHeader","instagramAccessTokenMap","Twitter","consumer_key","consumer_secret","access_token_key","access_token_secret","pagination","next_url","taxonomySlugs","pickBy","isNaN","userIds"],"mappings":"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","file":"server.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AceApiServer\"] = factory();\n\telse\n\t\troot[\"AceApiServer\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","module.exports = require(\"@babel/runtime/helpers/interopRequireDefault\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"lodash\");","const _ = require('lodash');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Roles = require('./roles');\n\nconst roles = new Roles();\n\nconst DEFAULT_CLIENT_CONFIG = {\n  _id: 'config',\n  client: {},\n  assets: {},\n  schemas: [],\n  taxonomies: [],\n  users: [],\n  roles: roles.roles(),\n  provider: {},\n  module: {},\n};\n\nclass ClientConfig {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async get() {\n    let clientConfig = DEFAULT_CLIENT_CONFIG;\n\n    try {\n      clientConfig = await Db.connect(this.config).get('config');\n\n      clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n    } catch (error) {\n      //\n    }\n\n    clientConfig.slug = this.config.slug;\n\n    return clientConfig;\n  }\n\n  async set(clientConfig) {\n    clientConfig._id = 'config';\n\n    delete clientConfig.roles;\n\n    clientConfig = await Helpers.createOrUpdate(this.config, clientConfig);\n\n    clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n\n    return clientConfig;\n  }\n}\n\n\nmodule.exports = ClientConfig;\n","module.exports = require(\"bluebird\");","const Cloudant = require('@cloudant/cloudant');\n\nclass Db {\n  constructor (config, dbName) {\n    this.config = config;\n\n    return Db.connect(config, dbName);\n  }\n\n  static connect (config, dbName) {\n    const cloudant = new Cloudant({\n      url: config.db.url,\n      maxAttempt: 5,\n      plugins: [\n        'promises',\n        {\n          retry: {\n            retryDelayMultiplier: 2,\n            retryInitialDelayMsecs: 500,\n          },\n        },\n      ],\n    });\n\n    return cloudant.db.use(dbName || config.db.name);\n  }\n}\n\nmodule.exports = Db;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\n\nclass Helpers {\n  constructor(config) {\n    this.config = config;\n    this.assistUrl = config.assist.url;\n    this.slug = config.slug;\n  }\n\n  static createOrUpdate (config, doc) {\n    return new Promise((resolve, reject) => {\n      Db.connect(config).insert(doc)\n        .then((response) => {\n          doc._id = response.id;\n          doc._rev = response.rev;\n          resolve(doc);\n        }, (error) => {\n          if (error.statusCode !== 409) {\n            reject(error);\n            return;\n          }\n\n          Db.connect(config).get(doc._id)\n            .then((response) => {\n              doc._rev = response._rev;\n\n              Db.connect(config).insert(doc)\n                .then((response) => {\n                  doc._rev = response.rev;\n                  resolve(doc);\n                }, reject);\n            }, reject);\n        });\n    });\n  }\n\n  static chunkUpdate (config, docs, chunkSize = 1000) {\n    return new Promise((resolve, reject) => {\n      const chunks = _.chunk(docs, chunkSize);\n      const promises = [];\n\n      chunks.forEach((chunk) => {\n        promises.push(new Promise((resolve, reject) => {\n          Db.connect(config).bulk({\n            docs: chunk,\n          }).then(resolve, reject);\n        }));\n      });\n\n      Promise.all(promises).then(resolve, reject);\n    });\n  }\n\n  static groupEntities (entities, groupSize = Infinity) {\n    const grouped = [];\n\n    let group = {\n      entities: [],\n    };\n\n    entities.forEach((entity) => {\n      if (!entity.groupBefore || group.entities.length >= groupSize) {\n        group = {\n          entities: [],\n        };\n      }\n\n      group.entities.push(entity);\n\n      if (!entity.groupAfter || group.entities.length >= groupSize) {\n        group.ratio = 0;\n\n        group.entities.forEach((entity) => {\n          group.ratio += (entity.thumbnail || entity).ratio;\n        });\n\n        group.entities.forEach((entity) => {\n          entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n        });\n\n        grouped.push(group);\n      }\n    });\n\n    return grouped;\n  }\n\n  static now () {\n    return JSON.stringify(new Date()).replace(/\"/g, '');\n  }\n\n  static replace (array, replacementObject, key) {\n    return array.map((object) => {\n      if (object[key] === replacementObject[key]) {\n        return replacementObject;\n      }\n      return object;\n    });\n  }\n\n  thumbnailSrc (thumbnail, settings, cropSlug, cropDefault) {\n    if (!thumbnail) {\n      return '';\n    }\n\n    let settingsArray;\n\n    if (typeof settings === 'string') {\n      settingsArray = settings.split(/,|;/);\n\n      settings = {};\n\n      settingsArray.forEach((setting) => {\n        setting = setting.split(/_|:/);\n\n        settings[setting[0]] = setting[1];\n      });\n    }\n\n    const crop = thumbnail.crops ? thumbnail.crops[cropSlug] : false;\n\n    if (crop) {\n      settings.x = crop[0];\n      settings.y = crop[1];\n      settings.x2 = crop[2];\n      settings.y2 = crop[3];\n    } else if (cropDefault) {\n      settings.g = cropDefault;\n    }\n\n    settingsArray = [];\n\n    _.forEach(settings, (value, key) => {\n      settingsArray.push([key, value].join(':'));\n    });\n\n    const settingsString = settingsArray.join(';');\n\n    if (/(image)/.test(thumbnail.thumbnailType)) {\n      if (thumbnail.ext === 'svg') {\n        return [this.assistUrl, this.slug, thumbnail.name + thumbnail.ext].join('/');\n      }\n\n      return [this.assistUrl, this.slug, 'transform', settingsString, thumbnail.name + thumbnail.ext].join('/');\n    }\n\n    if (/(video)/.test(thumbnail.thumbnailType)) {\n      return [this.assistUrl, this.slug, 'transform', settingsString, thumbnail.name, 'thumb.jpg'].join('/');\n    }\n\n    if (/(oembed|proxy)/.test(thumbnail.thumbnailType)) {\n      const thumbnailUrl = thumbnail.thumbnailUrl.replace(/https?:\\/\\//, '');\n\n      return [this.assistUrl, this.slug, 'proxy', 'transform', settingsString, thumbnailUrl].join('/');\n    }\n\n    return '';\n  }\n\n}\n\nmodule.exports = Helpers;\n","module.exports = require(\"axios\");","module.exports = require(\"path\");","module.exports = require(\"fs\");","module.exports = require(\"express\");","const _ = require('lodash');\nconst axios = require('axios');\nconst passwordHash = require('password-hash');\nconst ClientConfig = require('./client-config');\n\nclass Assist {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async deleteFiles(fileNames) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetsSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n\n    if (fileNames.length === 0) {\n      return [];\n    }\n\n    const result = (await axios.post(`${this.config.assist.url}/${assetsSlug}/file/delete`, { fileNames }, {\n      auth: {\n        username: this.config.assist.username,\n        password: passwordHash.generate(this.config.assist.password),\n      },\n    })).data;\n\n    return result;\n  }\n\n}\n\nmodule.exports = Assist;\n","module.exports = require(\"@cloudant/cloudant\");","const _ = require('lodash');\n\nconst roles = [\n  {\n    name: 'Admin',\n    slug: 'admin',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: true,\n      settings: true,\n      userSettings: true,\n      tools: true,\n      ecommerce: true,\n    },\n  },\n  {\n    name: 'Editor',\n    slug: 'editor',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: true,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n  {\n    name: 'Guest',\n    slug: 'guest',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: false,\n      entityRead: true,\n      entityUpdate: false,\n      entityDelete: false,\n\n      taxonomyCreate: false,\n      taxonomyRead: true,\n      taxonomyUpdate: false,\n      taxonomyDelete: false,\n\n      fileCreate: false,\n      fileRead: true,\n      fileUpdate: false,\n      fileDelete: false,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: false,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n];\n\nclass Roles {\n  roles() {\n    return roles.map(role => Object.freeze(role));\n  }\n  role(slug) {\n    return _.find(this.roles(), { slug });\n  }\n}\n\nmodule.exports = Roles;\n","const path = require('path');\nconst Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst _ = require('lodash');\nconst nodemailer = require('nodemailer');\nconst Createsend = Promise.promisifyAll(require('createsend-node'));\nconst nodemailerMailgunTransport = require('nodemailer-mailgun-transport');\nconst Inky = require('inky').Inky;\nconst mjml2html = require('mjml');\n// eslint-disable-next-line\nconst registerComponent = require('mjml-core').registerComponent;\n// eslint-disable-next-line\nconst registerDependencies = require('mjml-validator').registerDependencies;\nconst { McSection, McImage } = require('mjml-mailchimp');\nconst htmlToText = require('html-to-text');\nconst moment = require('moment');\nconst countries = require('i18n-iso-countries');\nconst sass = Promise.promisifyAll(require('node-sass'));\nconst pug = require('pug');\nconst ejs = require('ejs');\nconst juice = require('juice');\n\nconst ClientConfig = require('./client-config');\nconst Helpers = require('./helpers');\n\nclass Email {\n  constructor(config) {\n    this.config = config;\n\n    this.inky = new Inky();\n\n    registerComponent(McSection);\n    registerComponent(McImage);\n    registerDependencies({\n      'mc-section': ['mj-column', 'mj-group', 'mj-raw'],\n      'mj-column': ['mc-image'],\n      'mj-hero': ['mc-image'],\n    });\n  }\n\n  async getTemplate(templateSlug, templateData = {}, templateOptions = {}) {\n    const options = _.merge({}, {\n      inlineStyles: true,\n      inky: false,\n      mjml: false,\n      skipValidation: false,\n    }, templateOptions);\n\n    let templatePath = path.join(this.config.email.templatesPath, templateSlug);\n\n    try {\n      await fs.statAsync(templatePath);\n    } catch (error) {\n      templatePath = path.resolve('../email', templateSlug);\n    }\n\n    const templateFiles = await fs.readdirAsync(templatePath);\n\n    let htmlFileName = 'html';\n    // Support mjml templates\n    if (_.find(templateFiles, fileName => /^html\\.mjml/.test(fileName))) {\n      htmlFileName = 'html.mjml';\n      options.mjml = true;\n    }\n\n    let htmlFileExtension = 'html';\n    if (_.find(templateFiles, fileName => /\\.pug$/.test(fileName))) {\n      htmlFileExtension = 'pug';\n    }\n    if (_.find(templateFiles, fileName => /\\.ejs$/.test(fileName))) {\n      htmlFileExtension = 'ejs';\n    }\n\n    let style = '';\n    if (_.find(templateFiles, fileName => /^style\\.scss$/.test(fileName))) {\n      style = (await sass.renderAsync({\n        file: path.join(templatePath, 'style.scss'),\n        sourceMapContents: !options.inlineStyles,\n        sourceMapEmbed: !options.inlineStyles,\n      })).css.toString().replace(/\"/g, '\\'');\n    }\n\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n    const helpers = new Helpers(this.config);\n\n    templateData = _.merge({}, templateData, {\n      config: _.merge({}, _.pick(this.config, ['cms']), _.pick(clientConfig, ['slug', 'client', 'assets'])),\n      helpers,\n      style,\n      moment,\n      countries,\n      templateSlug,\n    });\n\n    let html;\n    if (htmlFileExtension === 'html') {\n      html = fs.readFileAsync(`${templatePath}/${htmlFileName}.${htmlFileExtension}`);\n    }\n    if (htmlFileExtension === 'pug') {\n      html = pug.renderFile(`${templatePath}/${htmlFileName}.${htmlFileExtension}`, templateData);\n    }\n    if (htmlFileExtension === 'ejs') {\n      html = await ejs.renderFile(`${templatePath}/${htmlFileName}.${htmlFileExtension}`, templateData);\n    }\n\n    if (options.mjml) {\n      const convertMjmlResult = mjml2html(html, {\n        level: options.skipValidation ? 'skip' : 'soft',\n      });\n\n      if (convertMjmlResult.errors && convertMjmlResult.errors.length) {\n        throw new Error(_.uniq(convertMjmlResult.errors.map(error => error.formattedMessage)).join('\\n'));\n      }\n\n      html = convertMjmlResult.html;\n    }\n\n    if (options.inky) {\n      html = this.inky.releaseTheKraken(html);\n    }\n\n    if (options.inlineStyles) {\n      html = juice(html, {\n        preserveMediaQueries: true,\n        preserveFontFaces: true,\n        removeStyleTags: false,\n        removeLinkTags: false,\n        preserveImportant: true,\n        webResources: {\n          links: false,\n          scripts: false,\n          images: false,\n          // relativeTo: '',\n        },\n      });\n    }\n\n    return {\n      html,\n      text: htmlToText.fromString(html),\n    };\n  }\n\n  sendEmail(emailOptions, templateSlug, templateData = {}, templateOptions = {}) {\n    return new Promise((resolve, reject) => {\n      const nodemailerMailgun = nodemailer.createTransport(nodemailerMailgunTransport({\n        auth: {\n          api_key: this.config.mailgun.apiKey,\n          domain: this.config.mailgun.domain,\n        },\n      }));\n\n      this.getTemplate(templateSlug, _.merge({}, emailOptions, templateData), templateOptions)\n        .then((emailTemplate) => {\n          emailOptions.html = emailTemplate.html;\n          emailOptions.text = emailTemplate.text;\n\n          nodemailerMailgun.sendMail(emailOptions, (error, metadata) => {\n            if (error) {\n              reject(error);\n              return;\n            }\n\n            resolve({\n              metadata,\n              email: emailOptions,\n            });\n          });\n        }, reject);\n    });\n  }\n\n  subscribe(details, provider, listId) {\n    return new Promise((resolve, reject) => {\n      const cc = new ClientConfig(this.config);\n\n      cc.get()\n        .then((clientConfig) => {\n          if (provider === 'createsend') {\n            if (clientConfig.provider.createsend) {\n              const cs = new Createsend({\n                apiKey: clientConfig.provider.createsend.clientApiKey,\n              });\n\n              const subscribers = Promise.promisifyAll(cs.subscribers);\n\n              subscribers.addSubscriberAsync(listId, {\n                EmailAddress: details.email,\n                Name: details.name,\n                Resubscribe: true,\n                RestartSubscriptionBasedAutoresponders: true,\n              })\n                .then((result) => {\n                  resolve(`Email.subscribe(): ${result.emailAddress}`);\n                })\n                .catch((error) => {\n                  reject(error.Message);\n                });\n\n              return;\n            }\n            reject(new Error('Subscriber list not configured'));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Email;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst jsonQuery = require('json-query');\nconst { diff } = require('deep-diff');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Schema = require('./schema');\nconst Assist = require('./assist');\n\nconst CHUNK_UPDATE_SIZE = 1000;\n\nclass Entity {\n  constructor(config) {\n    this.config = config;\n\n    // Expose helpers\n    this.flattenValues = Entity.flattenValues;\n  }\n\n  static flattenValues(docs) {\n    return docs.map((doc) => {\n      if (!doc.fields || !_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (/entity/.test(field.type) && _.isArray(field.value)) { // entity / entityTile / entityGrid\n          field.value = Entity.flattenValues(field.value);\n        }\n        return field.value;\n      });\n\n      return doc;\n    });\n  }\n\n  static _filterEntityFields(docs, role = 'guest') {\n    const isArray = _.isArray(docs);\n\n    docs = (isArray ? docs : [docs]).map((doc) => {\n      if (_.size(doc.fields)) {\n        doc.fields = _.mapValues(doc.fields, (field) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter((obj) => {\n              if (!obj) {\n                return false;\n              }\n              if (obj.type && obj.type === 'entity' && role === 'guest') {\n                return obj.published !== undefined ? obj.published : true;\n              }\n              return true;\n            });\n          }\n          return field;\n        });\n      }\n      return doc;\n    });\n\n    return isArray ? docs : docs[0];\n  }\n\n  static _appendChildren(docs, childrenMap) {\n    return docs.map((doc) => {\n      if (!_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (_.isArray(field.value)) {\n          field.value = field.value.filter((obj) => {\n            if (!obj) {\n              return false;\n            }\n            if (obj.type === 'entity') {\n              return childrenMap[obj.id] !== undefined;\n            }\n            return true;\n          });\n\n          field.value = field.value.map((obj) => {\n            if (obj.type === 'entity') {\n              obj = _.merge(obj, childrenMap[obj.id]);\n            }\n            obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n            return obj;\n          });\n        }\n\n        return field;\n      });\n\n      return doc;\n    });\n  }\n\n  static _appendParents(rows, parents = null, role = 'guest') {\n    let entityMap = {};\n\n    rows.forEach((row) => {\n      if (row.doc && row.value.type === 'entity') {\n        entityMap[row.id] = { ...row.doc, parents: [] };\n      }\n    });\n\n    if (parents) {\n      rows.forEach((row) => {\n        if (row.doc && row.value.type === 'parent') {\n          entityMap[row.key].parents.push(Entity._filterEntityFields(row.doc, role));\n        }\n      });\n\n      entityMap = _.mapValues(entityMap, (entity) => {\n        entity.parents = _.uniqBy(entity.parents, entity => entity._id);\n        return entity;\n      });\n    }\n\n    rows = rows.map((row) => {\n      row.doc = entityMap[row.id];\n      return row;\n    });\n\n    rows = rows.filter(row => row.value.type === 'entity');\n\n    return rows;\n  }\n\n  static _fileNames(entities) {\n    const fileNames = [];\n\n    entities.forEach((entity) => {\n      _.forEach(entity.fields, (field) => {\n        if (field.value && field.value.file) {\n          fileNames.push(field.value.file.name);\n        }\n      });\n    });\n\n    return _.uniq(fileNames);\n  }\n\n  async fieldValues(fieldSlug, searchTerm) {\n    const result = await Db.connect(this.config).viewWithList('entity', 'byField', 'search', {\n      startkey: [fieldSlug],\n      endkey: [fieldSlug, {}],\n      group: true,\n      searchTerm,\n    });\n    return result;\n  }\n\n  static _query(data, query, isFieldQuery = false) {\n    query = query.replace(/(\\s\\s|\\t|\\r|\\n)/g, '');\n\n    if (isFieldQuery) {\n      const queryParts = query.trim().split(/\\[|\\]/);\n      const selector = `fields.${queryParts[0]}.value[${queryParts[1] || '*'}]`;\n      const modifier = /\\]:/.test(query) ? `:${query.split(/\\]:/).slice(-1)[0].trim()}` : '';\n      query = `${selector}${modifier}`;\n    }\n\n    const result = jsonQuery(query, {\n      data,\n      locals: {\n        slice: (input, start, end) => _.slice(input, start, end),\n        sample: (input, size = 1) => _.sampleSize(input, size),\n        group: (entities, groupSize = Infinity) => {\n          const grouped = [];\n\n          let group = [];\n\n          entities.forEach((entity) => {\n            if (!entity.groupBefore || group.length >= groupSize) {\n              group = [];\n            }\n\n            group.push(entity);\n\n            if (!entity.groupAfter || group.length >= groupSize) {\n              group.ratio = 0;\n\n              group.forEach((entity) => {\n                group.ratio += (entity.thumbnail || entity).ratio;\n              });\n\n              group.forEach((entity) => {\n                entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n              });\n\n              grouped.push(group);\n            }\n          });\n\n          return grouped;\n        },\n        pick: (input, ...paths) => _.map(input, (obj) => {\n          const copy = {\n            id: obj.id || undefined,\n          };\n          paths = paths.filter(path => path); // Remove empty paths (tolerate trailing comma in args)\n          paths.forEach((path) => {\n            const pathParts = path.match(/([^\\s]+)/g);\n            const pathFrom = pathParts[0];\n            const pathTo = pathParts[pathParts.length - 1];\n            _.set(copy, pathTo, _.get(obj, pathFrom));\n          });\n          return copy;\n        }),\n      },\n      allowRegexp: true,\n    });\n\n    return result;\n  }\n\n  static _queriesFromString(queryString) {\n    // Remove white space\n    queryString = queryString.replace(/(\\s\\s|\\t|\\r|\\n)/gm, '');\n\n    // Match and store (...args) from query so we can split by comma\n    const methodArgs = queryString.match(/\\(([^)]+)\\)/g);\n\n    // Replace (...args) with empty ()\n    queryString = queryString.replace(/\\(.*?\\)/g, '()');\n\n    // Extract queries\n    let queries = queryString.split(/,(?![^([]*[\\])])/g);\n\n    queries = queries.map((query) => {\n      // Replace () with original (...args)\n      const emptyArgs = query.match(/\\(\\)/g);\n      if (emptyArgs) {\n        _.times(emptyArgs.length, () => {\n          query = query.replace('()', methodArgs.splice(0, 1));\n        });\n      }\n      return query.trim();\n    });\n\n    return queries;\n  }\n\n  async _entitiesById(ids = [], options = {}) {\n    options = _.merge({\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    const query = {\n      include_docs: true,\n    };\n\n    if (ids.length) {\n      query.keys = ids;\n    }\n\n    const result = await Db.connect(this.config)\n      .view('entity', options.parents ? 'byIdExtended' : 'byId', query);\n\n    result.rows = result.rows.map((row) => {\n      row.doc = Entity._filterEntityFields(row.doc, options.role);\n      return row;\n    });\n\n    result.rows = Entity._appendParents(result.rows, options.parents, options.role);\n\n    return result;\n  }\n\n  static _childDepthLimit(children) {\n    let limit = 0;\n    if (_.isNumber(children)) {\n      limit = children - 1;\n    }\n    if (_.isArray(children)) {\n      limit = children.length - 1;\n    }\n    return limit;\n  }\n\n  async _getDocMap(rowsOrDocs, docMap = {}, options = {}) {\n    options._childDepth = options._childDepth || 0;\n\n    if (!options.parents && !options.children) {\n      return docMap;\n    }\n\n    let ids = [];\n    let childIds = [];\n\n    rowsOrDocs.forEach((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      let doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      doc = Entity._filterEntityFields(doc, options.role);\n\n      if (options.children && doc.fields && _.size(doc.fields)) {\n        if (_.isArray(options.children)) {\n          Entity._queriesFromString(options.children[options._childDepth]).forEach((query) => {\n            childIds = childIds.concat(_.flatten(Entity._query(doc, query, true).value).map(obj => obj && obj.id));\n          });\n\n        } else {\n          _.forEach(doc.fields, (field) => {\n            if (_.isArray(field.value)) {\n              field.value = field.value.filter(obj => obj);\n\n              field.value.forEach((obj) => {\n                if (obj.id) {\n                  childIds.push(obj.id);\n                }\n              });\n            }\n          });\n        }\n      }\n\n      ids.push(isRow ? rowOrDoc.id : doc._id || doc.id);\n    });\n\n    ids = _.uniq(ids);\n    ids = ids.filter(id => !docMap[id]);\n\n    let docs = [];\n    if (ids.length > 0) {\n      docs = (await this._entitiesById(ids, options)).rows.map(row => row.doc);\n\n      docs.forEach((doc) => {\n        docMap[doc._id] = doc;\n      });\n    }\n\n    childIds = _.uniq(childIds);\n    childIds = childIds.filter(id => !docMap[id]);\n\n    let childDocs = [];\n    if (childIds.length > 0) {\n      childDocs = (await this._entitiesById(childIds, { ...options, parents: false })).rows.map(row => row.doc);\n\n      childDocs.forEach((doc) => {\n        docMap[doc._id] = doc;\n      });\n    }\n\n    if (!options.children || (options._childDepth === Entity._childDepthLimit(options.children))) {\n      return docMap;\n    }\n\n    docMap = await this._getDocMap(childDocs, docMap, { ...options, parents: false, _childDepth: options._childDepth + 1 });\n\n    return docMap;\n  }\n\n  static _mergeDocs(docs, docMap, options = { children: false, parents: false }) {\n    options._childDepth = options._childDepth || 0;\n\n    if (options.children && (options._childDepth - 1 === Entity._childDepthLimit(options.children))) {\n      return docs;\n    }\n\n    docs = docs.map((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      let doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (docMap[rowOrDoc.id || rowOrDoc._id]) {\n        doc = _.merge({}, doc, docMap[rowOrDoc.id || rowOrDoc._id]);\n      }\n\n      if (options.children && doc.fields && _.size(doc.fields)) {\n\n        let fieldQueryMap;\n\n        if (_.isArray(options.children)) {\n          fieldQueryMap = {};\n          Entity._queriesFromString(options.children[options._childDepth]).forEach((query) => {\n            const key = query.split(/\\[|\\]/)[0];\n            fieldQueryMap[key] = query;\n          });\n        }\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter(obj => obj);\n\n            if (!fieldQueryMap || (fieldQueryMap && fieldQueryMap[fieldSlug])) {\n              if (fieldQueryMap && fieldQueryMap[fieldSlug]) {\n                field.value = field.value.filter(obj => obj.id && docMap[obj.id]);\n              }\n\n              field.value = field.value.map((obj) => {\n                if (obj && obj.id && docMap[obj.id]) {\n                  obj = _.merge(obj, docMap[obj.id] || {});\n                  obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n                }\n                return obj;\n              });\n\n              field.value = Entity._mergeDocs(field.value, docMap, { ...options, _childDepth: options._childDepth + 1 });\n            }\n          }\n          return field;\n        });\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            if (fieldQueryMap && fieldQueryMap[fieldSlug]) {\n              field.value = _.flatten(Entity._query(doc, fieldQueryMap[fieldSlug], true).value);\n            }\n          }\n          return field;\n        });\n      }\n\n      if (_.isArray(options.parents) && doc.parents) {\n        doc.parents = _.flatten(Entity._query(doc.parents, options.parents[0]).value);\n      }\n\n      if (isRow) {\n        rowOrDoc.doc = doc;\n      } else {\n        rowOrDoc = doc;\n      }\n\n      return rowOrDoc;\n    });\n\n    return docs;\n  }\n\n  async _extendRowsOrDocs(rowsOrDocs, options = {}) {\n    options = _.merge({\n      select: false,\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    let docMap = await this._getDocMap(rowsOrDocs, {}, options);\n\n    rowsOrDocs = Entity._mergeDocs(rowsOrDocs, docMap, options);\n\n    if (options.select) {\n      rowsOrDocs = _.flatten(Entity._query(rowsOrDocs, options.select).value);\n    }\n\n    docMap = null;\n\n    return rowsOrDocs;\n  }\n\n  _removeChildren(entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      entities = entities.map(entity => entity._id);\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const updatedEntities = _.uniqBy(response.rows, row => row.doc._id).map((row) => {\n            row.doc.fields = _.mapValues(row.doc.fields, (field) => {\n              if (_.isArray(field.value)) {\n                field.value = _.filter(field.value, obj => !(obj.type === 'entity' && entities.indexOf(obj.id) !== -1));\n              }\n              return field;\n            });\n\n            return row.doc;\n          });\n\n          if (updatedEntities.length === 0) {\n            resolve([]);\n            return;\n          }\n\n          Helpers.chunkUpdate(this.config, updatedEntities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  _updateChildren(entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      const entityMap = {};\n\n      entities = entities.map((entity) => {\n        entityMap[entity._id] = entity;\n\n        return entity._id;\n      });\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const entities = response.rows.map((row) => {\n            const entity = row.doc;\n\n            _.forEach(entity.fields, (field, fieldSlug) => {\n              if (_.isArray(field.value)) {\n                entity.fields[fieldSlug].value = field.value\n                  .filter(obj => obj)\n                  .map((obj) => {\n                    if (obj.type === 'entity' && entityMap[obj.id]) {\n                      obj.slug = entityMap[obj.id].slug;\n                      obj.title = entityMap[obj.id].title;\n                      obj.schema = entityMap[obj.id].schema;\n                      obj.published = entityMap[obj.id].published;\n\n                      if (entityMap[obj.id].thumbnail) {\n                        obj.thumbnail = entityMap[obj.id].thumbnail;\n                      } else {\n                        obj.thumbnail = null;\n                      }\n                    }\n\n                    return obj;\n                  });\n              }\n            });\n\n            return entity;\n          });\n\n          Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  async entityList(ids = [], options = {}) {\n    options = _.merge({\n      select: false,\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    const result = await this._entitiesById(ids, options);\n\n    const rows = await this._extendRowsOrDocs(result.rows, options);\n\n    return rows;\n  }\n\n  _entitySearch(query, options = {}) {\n    return new Promise((resolve, reject) => {\n      query.limit = Math.min(query.limit || 200, 200);\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      if (options.children) {\n        query.include_docs = true;\n      }\n\n      if (!query.include_fields) {\n        query.include_fields = [];\n      }\n\n      if (_.isArray(query.include_fields)) {\n        query.include_fields = JSON.stringify(query.include_fields);\n      }\n\n      if (!query.sort) {\n        delete query.sort;\n      }\n      if (!query.bookmark) {\n        delete query.bookmark;\n      }\n      if (!query.index) {\n        delete query.index;\n      }\n      if (!query.group_field) {\n        delete query.group_field;\n      }\n\n      Db.connect(this.config).search('entity', query.index || 'all', query)\n        .then((result) => {\n\n          if (result.groups) {\n            const promises = [];\n\n            result.groups = result.groups.map((group) => {\n              promises.push(new Promise((resolve, reject) => {\n                if ((!options.children && !options.parents) || group.total_rows === 0) {\n                  resolve();\n                  return;\n                }\n\n                this._extendRowsOrDocs(group.hits, options)\n                  .then((docs) => {\n                    group.hits = docs;\n\n                    resolve();\n                  }, reject);\n              }));\n              return group;\n            });\n\n            Promise.all(promises)\n              .then(() => {\n                resolve(result);\n              }, reject);\n\n            return;\n          }\n\n          this._extendRowsOrDocs(result.rows, options)\n            .then((docs) => {\n              result.rows = docs;\n\n              resolve(result);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entitySearch(query, options = {}) {\n    options = _.merge({\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    return new Promise((resolve, reject) => {\n      const limit = query.limit || 25;\n\n      if (limit <= 200) {\n        this._entitySearch(query, options)\n          .then(resolve, reject);\n        return;\n      }\n\n      let rows = [];\n      let groups = [];\n\n      function __entitySearch(bookmark) {\n        const _query = _.clone(query);\n\n        if (bookmark) {\n          _query.bookmark = bookmark;\n        }\n\n        this._entitySearch(_query, options)\n          .then((result) => {\n            if (result.rows) {\n              rows = rows.concat(result.rows);\n            }\n            if (result.groups) {\n              groups = groups.concat(result.groups);\n            }\n\n            if (rows.length < result.total_rows && rows.length < limit) {\n              __entitySearch.call(this, result.bookmark);\n              return;\n            }\n\n            result.rows = rows;\n            result.groups = groups;\n\n            resolve(result);\n          }, reject);\n      }\n\n      __entitySearch.call(this);\n    });\n  }\n\n  async entityFind(query, options = {}) {\n    options = _.merge({\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    let result;\n\n    try {\n      result = await Db.connect(this.config).find(query);\n    } catch (error) {\n      if (error.error === 'no_usable_index') {\n        const cc = new ClientConfig(this.config);\n        const clientConfig = await cc.get();\n\n        const schema = new Schema(this.config);\n        await schema.updateEntityIndex(clientConfig.schemas);\n\n        result = await Db.connect(this.config).find(query);\n      }\n    }\n\n    if (options.children === false) {\n      return result;\n    }\n\n    if (query.fields && query.fields.indexOf('_id') === -1) {\n      throw new Error('_id field required for `children`');\n    }\n\n    result.docs = await this._extendRowsOrDocs(result.docs, options);\n\n    return result;\n  }\n\n  entityRevisions(entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId, {\n        revs_info: true,\n      })\n        .then((response) => {\n          const revisionIds = [];\n\n          response._revs_info.forEach((revision) => {\n            if (revision.status === 'available') {\n              revisionIds.push(revision.rev);\n            }\n          });\n\n          Db.connect(this.config).get(entityId, {\n            open_revs: JSON.stringify(revisionIds),\n          })\n            .then((response) => {\n              const revisions = [];\n              const childrenIds = [];\n\n              response.forEach((revision) => {\n                if (revision.ok) {\n                  revisions.push(revision.ok);\n\n                  _.forEach(revision.ok.fields, (field) => {\n                    if (/entity/.test(field.type)) {\n                      _.forEach(field.value, (obj) => {\n                        if (obj.id) {\n                          childrenIds.push(obj.id);\n                        }\n                      });\n                    }\n                  });\n                }\n              });\n\n              Db.connect(this.config).fetch({\n                keys: _.uniq(childrenIds),\n                include_docs: true,\n              })\n                .then((result) => {\n                  const childrenMap = {};\n\n                  result.rows.forEach((row) => {\n                    try {\n                      childrenMap[row.doc._id] = row.doc;\n                    } catch (error) {\n                      console.error('Error: child no longer exists');\n                    }\n                  });\n\n                  resolve(Entity._appendChildren(revisions, childrenMap));\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entityCreate(entity) {\n    return new Promise((resolve, reject) => {\n      entity.type = 'entity';\n\n      Db.connect(this.config).insert(entity)\n        .then((response) => {\n          entity._id = response.id;\n          entity._rev = response.rev;\n\n          resolve(entity);\n        }, reject);\n    });\n  }\n\n  entityRead(entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId)\n        .then(resolve, reject);\n    });\n  }\n\n  async entityUpdate(entities, restore) {\n    entities = _.isArray(entities) ? entities : [entities];\n\n    const entityMap = {};\n\n    const entityIds = entities.map((entityOrEntityId) => {\n      let entityId;\n\n      if (_.isObject(entityOrEntityId)) {\n        entityId = entityOrEntityId._id;\n        entityMap[entityId] = entityOrEntityId;\n      }\n      if (_.isString(entityOrEntityId)) {\n        entityId = entityOrEntityId;\n      }\n\n      return entityId;\n    });\n\n    const response = await Db.connect(this.config).fetch({\n      keys: entityIds,\n      include_docs: true,\n    });\n\n    const children = [];\n    const oldFileNames = [];\n\n    entities = response.rows.map((row) => {\n      const oldEntity = row.doc;\n      const newEntity = entityMap[oldEntity._id];\n\n      let entity = oldEntity;\n\n      if (newEntity) {\n        delete newEntity._rev;\n\n        const diffs = diff(oldEntity, newEntity);\n\n        diffs.forEach((diff) => {\n\n          // If any reference fields have changed, update all references\n          if (/published|slug|title|thumbnail/.test(diff.path[0])) {\n            if (children.indexOf(newEntity) === -1 && entityIds.indexOf(newEntity._id) !== -1) {\n              children.push(newEntity);\n            }\n          }\n\n          // If any file fields have changed, remove the old file\n          if (diff.path[0] === 'fields' && diff.path[2] === 'value') {\n            const field = oldEntity.fields[diff.path[1]];\n            if (/attachment|image|audio|video/.test(field.type) && field.value) {\n              oldFileNames.push(field.value.file.name);\n            }\n          }\n\n        });\n\n        entity = _.mergeWith({}, oldEntity, newEntity, (a, b) => {\n          if (_.isArray(a) && _.isArray(b)) {\n            return b;\n          }\n          return undefined;\n        });\n      }\n\n      if (restore) {\n        entity.trashed = false;\n      }\n\n      return entity;\n    });\n\n    if (oldFileNames.length) {\n      // TODO: fix delete orphaned files\n      // const assist = new Assist(this.config);\n      // await assist.deleteFiles(oldFileNames);\n    }\n\n    if (children.length) {\n      await this._updateChildren(children);\n    }\n\n    const result = await Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE);\n\n    return result;\n  }\n\n  async entityDelete(entityIds, forever = false) {\n    let entities;\n    let filesResult;\n\n    if (entityIds === 'trashed') {\n      forever = true;\n\n      entities = (await Db.connect(this.config).view('entity', 'trashed', {\n        include_docs: true,\n      })).rows;\n\n    } else {\n      entities = (await Db.connect(this.config).fetch({\n        keys: _.isArray(entityIds) ? entityIds : [entityIds],\n        include_docs: true,\n      })).rows;\n    }\n\n    entities = entities.filter(entity => !entity.value || !entity.value.deleted);\n\n    entities = entities.map(entity => entity.doc);\n\n    await this._removeChildren(entities);\n\n    if (forever) {\n      const fileNames = Entity._fileNames(entities);\n\n      if (fileNames.length) {\n        const assist = new Assist(this.config);\n        filesResult = await assist.deleteFiles(fileNames);\n      }\n\n      entities = entities.map(entity => ({\n        _id: entity._id,\n        _rev: entity._rev,\n        _deleted: true,\n      }));\n\n    } else {\n      entities = entities.map((entity) => {\n        entity.trashed = true;\n        return entity;\n      });\n    }\n\n    const entitiesResult = await Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE);\n\n    return {\n      entities: entitiesResult,\n      files: filesResult,\n    };\n  }\n\n}\n\nmodule.exports = Entity;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Fields = require('./fields');\n\nclass Schema {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas.push(schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(schemaSlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const schema = _.find(clientConfig.schemas, { slug: schemaSlug });\n\n    if (!schema) {\n      throw Error(`Schema not found: ${schemaSlug}`);\n    }\n\n    return schema;\n  }\n\n  async update(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.schemas, { slug: schema.slug });\n\n    if (index === -1) {\n      throw Error(`Schema not found: ${schema.slug}`);\n    }\n\n    clientConfig.schemas.splice(index, 1, schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(schemaSlugs) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    schemaSlugs = _.isArray(schemaSlugs) ? schemaSlugs : [schemaSlugs];\n\n    clientConfig.schemas = clientConfig.schemas.filter(schema => schemaSlugs.indexOf(schema.slug) === -1);\n\n    clientConfig.schemas = clientConfig.schemas.map((schema) => {\n      if (!schema.fields) {\n        return schema;\n      }\n      schema.fields = schema.fields.map((field) => {\n        if (!field.settings) {\n          return field;\n        }\n        if (field.settings.schemas) {\n          field.settings.schemas = field.settings.schemas.filter(schema => schemaSlugs.indexOf(schema) === -1);\n        }\n        return field;\n      });\n      return schema;\n    });\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateAll(schemas) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas = schemas;\n\n    // await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateEntityIndex(schemas) {\n    let fields = [];\n\n    schemas.forEach((schema) => {\n      fields = fields.concat(schema.fields);\n    });\n\n    fields = _.uniqBy(fields, 'slug');\n\n    const index = {\n      name: 'entity',\n      type: 'text',\n      ddoc: 'entityIndex',\n      index: {\n        default_field: {\n          enabled: true,\n          analyzer: 'standard',\n        },\n        selector: {\n          $and: [\n            {\n              type: 'entity',\n            },\n          ],\n        },\n        fields: [\n          {\n            name: 'published',\n            type: 'boolean',\n          },\n          {\n            name: 'trashed',\n            type: 'boolean',\n          },\n          {\n            name: 'title',\n            type: 'string',\n          },\n          {\n            name: 'slug',\n            type: 'string',\n          },\n          {\n            name: 'schema',\n            type: 'string',\n          },\n          {\n            name: 'modifiedAt',\n            type: 'string',\n          },\n          {\n            name: 'publishedAt',\n            type: 'string',\n          },\n        ],\n      },\n    };\n\n    fields.forEach((field) => {\n      const fieldRef = Fields.field(field.type);\n\n      if (/number|string|boolean/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value`,\n          type: fieldRef.dataType,\n        });\n      }\n\n      if (/array/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.[].slug`,\n          type: 'string',\n        });\n      }\n\n      if (/taxonomy/.test(field.type)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.terms.[].slug`,\n          type: 'string',\n        });\n      }\n    });\n\n    const result = await Db.connect(this.config).index(index);\n\n    return result;\n  }\n\n}\n\nmodule.exports = Schema;\n","const _ = require('lodash');\n\nconst fields = [\n  {\n    type: 'attachment',\n    name: 'Attachment',\n    dataType: null,\n  },\n  {\n    type: 'audio',\n    name: 'Audio',\n    dataType: null,\n  },\n  {\n    type: 'checkbox',\n    name: 'Checkbox',\n    dataType: 'boolean',\n  },\n  {\n    type: 'color',\n    name: 'Color',\n    dataType: 'string',\n  },\n  {\n    type: 'date',\n    name: 'Date',\n    dataType: 'string',\n  },\n  {\n    type: 'embedly',\n    name: 'Embedly',\n    dataType: null,\n  },\n  {\n    type: 'entity',\n    name: 'Entity',\n    dataType: 'array',\n  },\n  {\n    type: 'entityGrid',\n    name: 'Entity Grid',\n    dataType: 'array',\n  },\n  {\n    type: 'entityTile',\n    name: 'Entity Tile',\n    dataType: 'array',\n  },\n  {\n    type: 'image',\n    name: 'Image',\n    dataType: null,\n  },\n  {\n    type: 'keyValue',\n    name: 'Key Value',\n    dataType: null,\n  },\n  {\n    type: 'number',\n    name: 'Number',\n    dataType: 'number',\n  },\n  {\n    type: 'richText',\n    name: 'Rich Text',\n    dataType: null,\n  },\n  {\n    type: 'select',\n    name: 'Select',\n    dataType: 'array',\n  },\n  {\n    type: 'taxonomy',\n    name: 'Taxonomy',\n    dataType: null,\n  },\n  {\n    type: 'text',\n    name: 'Text',\n    dataType: 'string',\n  },\n  {\n    type: 'textArea',\n    name: 'Text Area',\n    dataType: 'string',\n  },\n  {\n    type: 'user',\n    name: 'User',\n    dataType: 'array',\n  },\n  {\n    type: 'video',\n    name: 'Video',\n    dataType: null,\n  },\n  {\n    type: 'vimeo',\n    name: 'Vimeo',\n    dataType: null,\n  },\n];\n\nclass Fields {\n  static fields() {\n    return fields.map(field => Object.freeze(field));\n  }\n  static field(type) {\n    return _.find(Fields.fields(), { type });\n  }\n}\n\nmodule.exports = Fields;\n","module.exports = require(\"request-promise\");","const config = {\n  environment: process.env.ENVIRONMENT || 'development',\n\n  api: {\n    prefix: process.env.API_PREFIX || '',\n    forceHttps: process.env.API_FORCE_HTTPS ? JSON.parse(process.env.API_FORCE_HTTPS) : false,\n    blacklistToken: (process.env.API_BLACKLIST_TOKEN || '').split(','),\n    blacklistReferrer: (process.env.API_BLACKLIST_REFERRER || '').split(','),\n  },\n\n  session: {\n    secret: process.env.SESSION_SECRET || 'change_me',\n    ttl: parseInt(process.env.SESSION_TTL || 7200, 10),\n  },\n\n  cache: {\n    enabled: process.env.CACHE_ENABLED ? JSON.parse(process.env.CACHE_ENABLED) : false,\n    ttl: parseInt(process.env.CACHE_TTL || 30, 10) * 60, // 30mins\n    compress: process.env.CACHE_COMPRESS ? JSON.parse(process.env.CACHE_COMPRESS) : false,\n    memory: {\n      max: parseInt(process.env.CACHE_MEMORY_MAX || 128, 10) * 1000 * 1000, // ~128mb\n    },\n  },\n\n  redis: {\n    url: process.env.REDIS_URL,\n    host: process.env.REDIS_HOST,\n    port: process.env.REDIS_PORT,\n    password: process.env.REDIS_PASSWORD,\n    db: parseInt(process.env.REDIS_DB || 0, 10),\n  },\n\n  logentriesToken: process.env.LOGENTRIES_TOKEN,\n};\n\nmodule.exports = config;\n","module.exports = require(\"lodash/pick\");","module.exports = require(\"lodash/isArray\");","const PORT = process.env.PORT || 5000;\nconst HOST = process.env.HOST || 'localhost';\n\nconst _ = require('lodash');\nconst express = require('express');\nconst http = require('http');\nconst logger = require('morgan');\nconst helmet = require('helmet');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst methodOverride = require('method-override');\nconst session = require('express-session');\nconst RedisStore = require('connect-redis')(session);\n\nconst AceApiServer = require('./index');\n\nconst defaultConfig = require('./config.default');\n\nfunction Serve (customConfig = {}, listen = true) {\n  const config = _.merge({}, defaultConfig, customConfig);\n\n  const app = express();\n\n  const sessionOptions = {\n    secret: config.session.secret,\n    resave: true,\n    saveUninitialized: true,\n  };\n\n  if (config.redis.url || config.redis.host) {\n    const redisOptions = {\n      ttl: config.session.ttl,\n    };\n\n    if (config.redis.url) {\n      redisOptions.url = config.redis.url;\n    } else {\n      redisOptions.host = config.redis.host;\n      redisOptions.port = config.redis.port;\n      redisOptions.password = config.redis.password;\n      redisOptions.db = config.redis.db;\n    }\n\n    sessionOptions.store = new RedisStore(redisOptions);\n  } else {\n    sessionOptions.cookie = {\n      maxAge: config.session.ttl,\n    };\n  }\n\n  app.use(helmet());\n  app.use(logger('tiny'));\n  app.use(cookieParser());\n  app.use(bodyParser.json({\n    limit: '50mb',\n  }));\n  app.use(bodyParser.urlencoded({\n    extended: true,\n    limit: '50mb',\n  }));\n  app.use(methodOverride());\n  app.use(session(sessionOptions));\n\n  AceApiServer(app, config);\n\n  if (listen) {\n    const server = http.createServer(app);\n    server.on('listening', () => {\n      console.log(`listening: http://${HOST}:${PORT}`);\n    });\n    server.listen(PORT);\n  }\n\n  return app;\n}\n\nmodule.exports = Serve;\n","module.exports = require(\"http\");","module.exports = require(\"morgan\");","module.exports = require(\"helmet\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"body-parser\");","module.exports = require(\"method-override\");","module.exports = require(\"express-session\");","module.exports = require(\"connect-redis\");","process.on('unhandledRejection', result => console.error(result));\n\nconst _ = require('lodash');\nconst express = require('express');\nconst cacheManager = require('cache-manager');\nconst redisStore = require('cache-manager-redis-store');\nconst Promise = require('bluebird');\nconst URL = require('url-parse');\nconst zlib = Promise.promisifyAll(require('zlib'));\nconst CircularJSON = require('circular-json-es6');\nconst sizeof = require('object-sizeof');\nconst deepFreeze = require('deep-freeze');\nconst XXH = require('xxhashjs');\n\nconst Api = require('../index');\n\nconst HASH_SEED = 0xABCD;\n\nconst defaultConfig = require('./config.default');\n\nfunction AceApiServer(app, customConfig = {}, customAuthMiddleware = null) {\n  const config = deepFreeze(_.merge({}, Api.defaultConfig, defaultConfig, customConfig));\n\n  // Async middleware\n\n  const asyncMiddleware = fn => (req, res, next) => {\n    Promise.resolve(fn(req, res, next))\n      .catch(next);\n  };\n\n  // Skip authorisation\n\n  const skipAuth = (req) => {\n    const prodAllowedRoutes = [\n      '/auth/user',\n      '/config/info',\n    ];\n\n    const devAllowedRoutes = [\n      '/token',\n      '/email',\n    ];\n\n    if (_.find(prodAllowedRoutes, route => new RegExp(`^${route}`).test(req.path))) {\n      return true;\n    }\n\n    if (config.environment === 'development' && _.find(devAllowedRoutes, route => new RegExp(`^${route}`).test(req.path))) {\n      return true;\n    }\n\n    return false;\n  };\n\n  // Default auth middleware\n\n  const defaultAuthMiddleware = (req, res, next) => {\n    if (skipAuth(req)) {\n      next();\n      return;\n    }\n\n    if (!req.session.userId) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  const authMiddleware = customAuthMiddleware || defaultAuthMiddleware;\n\n  // Permissions middleware\n\n  const permissionMiddleware = (permissions, req, res, next) => {\n    if (!req.session.role) {\n      res.status(401);\n      res.send({\n        permissions,\n        message: 'Error: undefined role',\n      });\n      return;\n    }\n\n    if (req.session.role === 'super') {\n      next();\n      return;\n    }\n\n    const roles = Api.Roles();\n\n    if (_.isString(permissions)) {\n      permissions = permissions.split(',');\n    }\n\n    let authorised = false;\n\n    permissions.forEach((permission) => {\n      if (roles.role(req.session.role).permissions[permission.trim()]) {\n        authorised = true;\n      }\n    });\n\n    if (!roles.role(req.session.role) || !authorised) {\n      res.status(401);\n      res.send({\n        permissions,\n        message: 'Error: not authorised',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  // Clone and extend config per request/session\n\n  const omitUndefined = (obj) => {\n    _.forIn(obj, (value, key, obj) => {\n      if (_.isPlainObject(value)) {\n        value = omitUndefined(value);\n\n        if (_.keys(value).length === 0) {\n          delete obj[key];\n        }\n      }\n\n      if (_.isUndefined(value)) {\n        delete obj[key];\n      }\n    });\n\n    return obj;\n  };\n\n  const cloneConfig = config => _.mergeWith({}, JSON.parse(JSON.stringify(config)), omitUndefined(_.cloneDeep(config)));\n\n  const getConfig = async (slug) => {\n    const configClone = cloneConfig(config);\n\n    configClone.slug = slug;\n    configClone.db.name = slug;\n\n    return configClone;\n  };\n\n  // Cache\n\n  let cache;\n\n  if (config.cache.enabled) {\n    if (config.redis.url || config.redis.host) {\n      const redisOptions = {\n        ttl: config.cache.ttl,\n      };\n\n      if (config.redis.url) {\n        redisOptions.url = config.redis.url;\n      } else {\n        redisOptions.host = config.redis.host;\n        redisOptions.port = config.redis.port;\n        redisOptions.password = config.redis.password;\n        redisOptions.db = config.redis.db;\n      }\n\n      cache = cacheManager.caching(_.merge({ store: redisStore }, redisOptions));\n\n      const redisClient = cache.store.getClient();\n      redisClient.on('ready', () => {\n        console.log('redis: ready');\n      });\n      redisClient.on('error', (error) => {\n        console.error('redis: error:', error);\n      });\n\n    } else {\n      cache = cacheManager.caching({\n        store: 'memory',\n        ttl: config.cache.ttl,\n        max: config.cache.memory.max,\n        length: (item) => {\n          // const length = Buffer.byteLength(item, 'utf8')\n          const length = sizeof(item);\n          return length;\n        },\n      });\n    }\n  }\n\n  // Cache middleware\n\n  const hash = (req) => {\n    const obj = {\n      path: req.path,\n      query: req.query,\n      body: req.body,\n    };\n    return `${req.session.slug}:${XXH.h64(JSON.stringify(obj), HASH_SEED).toString(16)}`;\n  };\n\n  const cacheMiddleware = asyncMiddleware(async (req, res, next) => {\n    const useCachedResponse = (\n      config.cache.enabled\n      && req.session.role === 'guest' // TODO: Replace 'guest' with constant\n      && (req.query.__cache && JSON.parse(req.query.__cache)) !== false\n    );\n\n    if (useCachedResponse) {\n      try {\n        const key = hash(req);\n\n        let response = await cache.get(key);\n\n        if (typeof response === 'string') {\n          if (config.cache.compress) {\n            response = (await zlib.gunzipAsync(Buffer.from(response, 'base64'))).toString();\n          }\n\n          try {\n            response = JSON.parse(response);\n          } catch (error) {\n            //\n          }\n\n          res.set('X-Cached-Response', true);\n          res.status(response ? 200 : 204);\n          res.send(response);\n\n          return;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    res.set('X-Cached-Response', false);\n    next();\n  });\n\n  // Response helpers\n\n  const handleError = (req, res, error) => {\n    if (Object.prototype.toString.call(error) === '[object Object]') {\n      error = CircularJSON.parse(CircularJSON.stringify(error));\n    }\n\n    error = error.response || error;\n\n    console.error(error);\n\n    const code = error.statusCode || error.status || error.code || 500;\n    const message = error.stack || error.error || error.message || error.body || error.data || error.statusText || error;\n\n    res.status(typeof code === 'string' ? 500 : code);\n    res.send({\n      code,\n      message,\n    });\n  };\n\n  const handleResponse = async (req, res, response, cacheResponse = false) => {\n    if (response === undefined || response === null) {\n      response = '';\n      res.status(204);\n      res.send(response);\n\n    } else {\n      response = CircularJSON.stringify(response);\n      res.status(200);\n      res.send(JSON.parse(response));\n    }\n\n    if (cacheResponse && config.cache.enabled && req.session.role === 'guest') { // TODO: Replace 'guest' with constant\n      const key = hash(req);\n\n      if (config.cache.compress) {\n        response = (await zlib.gzipAsync(Buffer.from(response))).toString('base64');\n      }\n\n      const ttl = req.query.__cache ? parseInt(req.query.__cache, 10) : config.cache.ttl;\n\n      cache.set(key, response, { ttl });\n    }\n  };\n\n  // Header middleware\n\n  const headerMiddleware = (req, res, next) => {\n    const headers = {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,OPTIONS',\n      'Access-Control-Expose-Headers': 'X-Slug, X-Role, X-User-Id',\n      Vary: 'Accept-Encoding, X-Api-Token',\n    };\n\n    if (req.headers['access-control-request-headers']) {\n      headers['Access-Control-Allow-Headers'] = req.headers['access-control-request-headers'];\n    }\n\n    res.set(headers);\n\n    if (req.method === 'OPTIONS') {\n      res.sendStatus(200);\n      return;\n    }\n\n    next();\n  };\n\n  // Session middleware\n\n  const jwt = Api.Jwt(config);\n\n  const sessionMiddleware = (req, res, next) => {\n    if (skipAuth(req)) {\n      next();\n      return;\n    }\n\n    const referrer = req.headers.referrer || req.headers.referer;\n\n    if (referrer) {\n      const referrerHostname = new URL(referrer)\n        .hostname.split('.').slice(-2).join('.');\n\n      if (config.api.blacklistReferrer.indexOf(referrerHostname) > -1) {\n        res.status(401);\n        res.send({\n          code: 401,\n          message: 'Not authorised, referrer blacklisted',\n        });\n        return;\n      }\n    }\n\n    const token = req.headers['x-api-token'] || req.query.apiToken || req.session.apiToken;\n\n    if (!token) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing token',\n      });\n      return;\n    }\n\n    if (config.api.blacklistToken.indexOf(token) > -1) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, token blacklisted',\n      });\n      return;\n    }\n\n    try {\n      const payload = jwt.verifyToken(token);\n\n      req.session.userId = payload.userId;\n      req.session.slug = payload.slug;\n      req.session.role = payload.role || 'guest'; // TODO: Replace 'guest' with constant\n\n    } catch (error) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: `Not authorised, token verification failed (${error.message})`,\n        error,\n      });\n      return;\n    }\n\n    if (!req.session.slug) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing slug',\n      });\n      return;\n    }\n\n    if (!req.session.role) {\n      req.session.role = 'guest';\n    }\n\n    if (req.session.userId) {\n      res.set('X-User-Id', req.session.userId);\n    }\n\n    res.set('X-Environment', config.environment);\n    res.set('X-Slug', req.session.slug);\n    res.set('X-Role', req.session.role);\n\n    next();\n  };\n\n  // Router\n\n  const router = express.Router();\n\n  const forceHttps = (req, res, next) => {\n    if (\n      (req.headers['x-forwarded-proto'] && req.headers['x-forwarded-proto'] !== 'https')\n      && (req.headers['cf-visitor'] && JSON.parse(req.headers['cf-visitor']).scheme !== 'https') // Fix for Cloudflare/Heroku flexible SSL\n    ) {\n      res.redirect(301, `https://${req.headers.host}${req.path}`);\n      return;\n    }\n    next();\n  };\n\n  if (config.environment === 'production' && config.api.forceHttps === true) {\n    if (app.enable) {\n      app.enable('trust proxy');\n    }\n    app.use(forceHttps);\n  }\n\n  app.use(`/${config.api.prefix}`, headerMiddleware, sessionMiddleware, router);\n\n  app.get(`/${config.api.prefix}`, (req, res) => {\n    res.send('<pre> ______\\n|A     |\\n|  /\\\\  |\\n| /  \\\\ |\\n|(    )|\\n|  )(  |\\n|______|</pre>');\n  });\n\n  // Context\n\n  const context = {\n    app,\n    router,\n    cache,\n    authMiddleware,\n    permissionMiddleware,\n    cacheMiddleware,\n    asyncMiddleware,\n    getConfig,\n    handleResponse,\n    handleError,\n  };\n\n  // Inject API into context\n\n  Object.keys(Api).forEach((key) => {\n    context[key] = Api[key];\n  });\n\n  const afterResponse = (req, res) => {\n    res.removeListener('finish', afterResponse);\n    res.removeListener('close', afterResponse);\n  };\n\n  if (config.environment !== 'production') {\n    app.use((req, res, next) => {\n      res.on('finish', afterResponse.bind(null, req, res));\n      res.on('close', afterResponse.bind(null, req, res));\n      next();\n    });\n  }\n\n  // Bootstrap Routes\n\n  require('./routes/analytics')(context, config);\n  require('./routes/auth')(context, config);\n  require('./routes/cache')(context, config);\n  require('./routes/config')(context, config);\n  require('./routes/debug')(context, config);\n  require('./routes/ecommerce')(context, config);\n  require('./routes/email')(context, config);\n  require('./routes/embedly')(context, config);\n  require('./routes/entity')(context, config);\n  require('./routes/metadata')(context, config);\n  require('./routes/pdf')(context, config);\n  require('./routes/provider')(context, config);\n  require('./routes/schema')(context, config);\n  require('./routes/settings')(context, config);\n  require('./routes/shippo')(context, config);\n  require('./routes/shopify')(context, config);\n  require('./routes/social')(context, config);\n  require('./routes/stripe')(context, config);\n  require('./routes/taxonomy')(context, config);\n  require('./routes/token')(context, config);\n  require('./routes/tools')(context, config);\n  require('./routes/user')(context, config);\n\n  return app;\n}\n\nmodule.exports = AceApiServer;\n","module.exports = require(\"cache-manager\");","module.exports = require(\"cache-manager-redis-store\");","module.exports = require(\"url-parse\");","module.exports = require(\"zlib\");","module.exports = require(\"circular-json-es6\");","module.exports = require(\"object-sizeof\");","module.exports = require(\"deep-freeze\");","module.exports = require(\"xxhashjs\");","function Api() { }\n\nApi.defaultConfig = require('./config.default');\n\nApi.Assist = (...args) => new (require('./lib/assist'))(...args);\nApi.Auth = (...args) => new (require('./lib/auth'))(...args);\nApi.ClientConfig = (...args) => new (require('./lib/client-config'))(...args);\nApi.Db = (...args) => new (require('./lib/db'))(...args);\nApi.Ecommerce = (...args) => new (require('./lib/ecommerce'))(...args);\nApi.Email = (...args) => new (require('./lib/email'))(...args);\nApi.Embedly = (...args) => new (require('./lib/embedly'))(...args);\nApi.Entity = (...args) => new (require('./lib/entity'))(...args);\nApi.Fields = (...args) => new (require('./lib/fields'))(...args);\nApi.Helpers = (...args) => new (require('./lib/helpers'))(...args);\nApi.Instagram = (...args) => new (require('./lib/instagram'))(...args);\nApi.Jwt = (...args) => new (require('./lib/jwt'))(...args);\nApi.Pdf = (...args) => new (require('./lib/pdf'))(...args);\nApi.Roles = (...args) => new (require('./lib/roles'))(...args);\nApi.Schema = (...args) => new (require('./lib/schema'))(...args);\nApi.Settings = (...args) => new (require('./lib/settings'))(...args);\nApi.Shippo = (...args) => new (require('./lib/shippo'))(...args);\nApi.Shopify = (...args) => new (require('./lib/shopify'))(...args);\nApi.Stripe = (...args) => new (require('./lib/stripe'))(...args);\nApi.Taxonomy = (...args) => new (require('./lib/taxonomy'))(...args);\nApi.Tools = (...args) => new (require('./lib/tools'))(...args);\nApi.User = (...args) => new (require('./lib/user'))(...args);\n\nmodule.exports = Api;\n","const path = require('path');\n\nconst config = {\n  environment: process.env.ENVIRONMENT || 'development',\n  debug: process.env.DEBUG || false,\n\n  slug: process.env.SLUG,\n  baseUrl: process.env.BASE_URL || '',\n\n  db: {\n    url: process.env.DB_URL,\n    host: process.env.DB_HOST,\n    name: process.env.DB_NAME,\n    requestPlugin: process.env.DB_REQUEST_PLUGIN,\n    meterType: process.env.DB_METER_TYPE,\n  },\n\n  auth: {\n    superUserId: process.env.AUTH_SUPER_USER_ID,\n    tokenSecret: process.env.AUTH_TOKEN_SECRET || 'change_this_secret',\n  },\n\n  dev: {\n    userId: process.env.DEV_USER_ID || 'dev',\n    role: process.env.DEV_ROLE || 'super',\n  },\n\n  cms: {\n    title: process.env.CMS_TITLE,\n    url: process.env.CMS_URL,\n  },\n\n  assist: {\n    url: process.env.ASSIST_URL,\n    username: process.env.ASSIST_USERNAME,\n    password: process.env.ASSIST_PASSWORD,\n  },\n\n  mailgun: {\n    apiKey: process.env.MAILGUN_API_KEY,\n    domain: process.env.MAILGUN_DOMAIN,\n  },\n\n  embedly: {\n    apiKey: process.env.EMBEDLY_API_KEY,\n  },\n\n  pdf: {\n    templatesPath: path.resolve(__dirname, 'pdf'),\n  },\n\n  email: {\n    templatesPath: path.resolve(__dirname, 'email'),\n  },\n\n  provider: {\n    google: {\n      clientId: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    },\n\n    instagram: {\n      clientId: process.env.INSTAGRAM_CLIENT_ID,\n      clientSecret: process.env.INSTAGRAM_CLIENT_SECRET,\n    },\n\n    spotify: {\n      clientId: process.env.SPOTIFY_CLIENT_ID,\n      clientSecret: process.env.SPOTIFY_CLIENT_SECRET,\n    },\n\n    stripe: {\n      clientId: process.env.STRIPE_CLIENT_ID,\n      clientSecret: process.env.STRIPE_CLIENT_SECRET,\n      apiKey: process.env.STRIPE_API_KEY,\n    },\n\n    twitter: {\n      consumerKey: process.env.TWITTER_CONSUMER_KEY,\n      consumerSecret: process.env.TWITTER_CONSUMER_SECRET,\n      accessTokenKey: process.env.TWITTER_ACCESS_TOKEN_KEY,\n      accessTokenSecret: process.env.TWITTER_ACCESS_TOKEN_SECRET,\n    },\n\n    vimeo: {\n      clientId: process.env.VIMEO_CLIENT_ID,\n      clientSecret: process.env.VIMEO_CLIENT_SECRET,\n    },\n  },\n};\n\nmodule.exports = config;\n","module.exports = require(\"password-hash\");","const _ = require('lodash');\nconst querystring = require('querystring');\nconst axios = require('axios');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\n\nconst providerTokenUri = {\n  google: 'https://www.googleapis.com/oauth2/v4/token',\n  instagram: 'https://api.instagram.com/oauth/access_token',\n  stripe: 'https://connect.stripe.com/oauth/token',\n  vimeo: 'https://api.vimeo.com/oauth/access_token',\n  spotify: 'https://accounts.spotify.com/api/token',\n};\n\nclass Auth {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async authUser(slug, userId) {\n    const isSuperUser = _.get(this.config, 'auth.superUserId', '').split(',').map(superUser => superUser.trim()).indexOf(userId) > -1;\n\n    if (isSuperUser) {\n      return {\n        id: userId,\n        active: true,\n        role: 'super',\n      };\n    }\n\n    const clientConfig = await Db.connect(this.config, slug).get('config');\n\n    const user = _.find(clientConfig.users, user => user.email.toLowerCase() === userId.toLowerCase());\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    if (!user.active) {\n      throw Error(`User not active: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async authProvider(provider, params = {}, userId = null, refresh = false) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const providerConfig = _.merge({}, this.config.provider[provider], params || {});\n\n    let providerClientConfig;\n\n    if (userId) {\n      providerClientConfig = _.get(clientConfig, ['userSettings', userId, 'provider', provider]);\n    } else {\n      providerClientConfig = _.get(clientConfig, ['provider', provider]);\n    }\n\n    if (!providerClientConfig) {\n      providerClientConfig = {};\n    }\n\n    const data = {\n      grant_type: refresh ? 'refresh_token' : 'authorization_code',\n      code: params && params.code ? params.code : undefined,\n      client_id: providerConfig.clientId,\n      client_secret: providerConfig.clientSecret,\n      redirect_uri: providerConfig.redirectUri,\n      refresh_token: refresh ? providerClientConfig.refresh_token : undefined,\n    };\n\n    const uri = providerTokenUri[provider];\n\n    let providerAuth;\n\n    try {\n      providerAuth = (await axios.post(uri, querystring.stringify(data))).data;\n    } catch (error) {\n      throw new Error(JSON.stringify(error.response.data));\n    }\n\n    providerClientConfig = _.merge({}, providerClientConfig, providerAuth);\n    providerClientConfig.begins = Math.floor(new Date().getTime() / 1000);\n\n    if (provider === 'google') {\n      try {\n        providerClientConfig.user = (await axios.get(`https://www.googleapis.com/plus/v1/people/me?access_token=${providerClientConfig.access_token}`)).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (provider === 'spotify') {\n      try {\n        providerClientConfig.user = (await axios.get(`https://api.spotify.com/v1/me?access_token=${providerClientConfig.access_token}`)).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (userId) {\n      _.set(clientConfig, ['userSettings', userId, 'provider', provider], providerClientConfig);\n    } else {\n      _.set(clientConfig, ['provider', provider], providerClientConfig);\n    }\n\n    return cc.set(clientConfig);\n  }\n\n}\n\nmodule.exports = Auth;\n","module.exports = require(\"querystring\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass Ecommerce {\n  constructor(config) {\n    this.config = config;\n  }\n\n  getType(type, query) {\n    return new Promise((resolve, reject) => {\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      Db.connect(this.config).search('ecommerce', type, query)\n        .then(resolve, reject);\n    });\n  }\n\n  setType(type, item) {\n    return new Promise((resolve, reject) => {\n      item.type = type;\n\n      Helpers.createOrUpdate(this.config, item)\n        .then(resolve, reject);\n    });\n  }\n\n  deleteType(items) {\n    return new Promise((resolve, reject) => {\n      items = items.map(item => ({\n        _id: item._id,\n        _rev: item._rev,\n        _deleted: true,\n      }));\n\n      Helpers.chunkUpdate(this.config, items, 1000)\n        .then(resolve, reject);\n    });\n  }\n\n  getOrder(orderId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'orderByOrderId', {\n        key: orderId,\n        include_docs: true,\n      })\n        .then((body) => {\n          if (!body.rows.length) {\n            reject(new Error('Order not found'));\n            return;\n          }\n\n          resolve(body.rows[0].doc);\n        }, reject);\n    });\n  }\n\n  verifyDiscount(code) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'discountByCode', {\n        keys: [code],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            const discount = body.rows[0].doc;\n\n            const now = new Date().getTime();\n\n            const dateStart = new Date(Date.parse(discount.dateStart)).getTime();\n            const dateEnd = new Date(Date.parse(discount.dateEnd)).getTime();\n\n            if (dateStart > now) {\n              reject(new Error('Discount not valid (not begun)'));\n              return;\n\n            }\n\n            if (dateEnd < now) {\n              reject(new Error('Discount not valid (expired)'));\n              return;\n            }\n\n            resolve(discount);\n\n          } else {\n            reject(new Error({\n              statusCode: 404,\n              message: `Discount code not found (${code})`,\n            }));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Ecommerce;\n","module.exports = require(\"nodemailer\");","module.exports = require(\"createsend-node\");","module.exports = require(\"nodemailer-mailgun-transport\");","module.exports = require(\"inky\");","module.exports = require(\"mjml\");","module.exports = require(\"mjml-core\");","module.exports = require(\"mjml-validator\");","module.exports = require(\"mjml-mailchimp\");","module.exports = require(\"html-to-text\");","module.exports = require(\"moment\");","module.exports = require(\"i18n-iso-countries\");","module.exports = require(\"node-sass\");","module.exports = require(\"pug\");","module.exports = require(\"ejs\");","module.exports = require(\"juice\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst EmbedlyApi = require('embedly');\n\nclass Embedly {\n  constructor(config) {\n    this.config = config;\n  }\n\n  oembed(urls) {\n    return new Promise((resolve, reject) => {\n      const embedly = new EmbedlyApi({\n        key: this.config.embedly.apiKey,\n      });\n\n      const opts = {\n        urls: _.isArray(urls) ? urls : [urls],\n        format: 'json',\n      };\n\n      embedly.oembed(opts, (error, result) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(result);\n      });\n    });\n  }\n\n}\n\nmodule.exports = Embedly;\n","module.exports = require(\"embedly\");","module.exports = require(\"@babel/runtime/helpers/objectSpread\");","module.exports = require(\"json-query\");","module.exports = require(\"deep-diff\");","const _ = require('lodash');\nconst request = require('request-promise');\n\nclass Instagram {\n  constructor(options) {\n    const defaultOptions = {\n      client_id: null,\n      access_token: null,\n      version: 'v1',\n      host: 'https://api.instagram.com',\n    };\n\n    this.options = _.merge({}, defaultOptions, options || {});\n  }\n\n  async _request(method, endpoint, query) {\n    const requestOptions = {\n      method,\n      url: [this.options.host, this.options.version, endpoint].join('/'),\n      qs: {\n        access_token: query.access_token || this.options.access_token,\n        client_id: query.client_id || this.options.client_id,\n      },\n    };\n\n    requestOptions.qs = _.extend({}, requestOptions.qs, query);\n\n    const response = await request(requestOptions);\n\n    return JSON.parse(response);\n  }\n\n  get(endpoint, query) {\n    return this._request('GET', endpoint, query);\n  }\n}\n\nmodule.exports = Instagram;\n","const jwt = require('jsonwebtoken');\n\nclass Jwt {\n  constructor(config) {\n    this.config = config;\n  }\n\n  signToken(payload, options = {}) {\n    return jwt.sign(payload, this.config.auth.tokenSecret, options);\n  }\n\n  verifyToken(token) {\n    return jwt.verify(token, this.config.auth.tokenSecret);\n  }\n}\n\nmodule.exports = Jwt;\n","module.exports = require(\"jsonwebtoken\");","const fs = require('fs');\nconst path = require('path');\nconst _ = require('lodash');\nconst _eval = require('eval');\nconst request = require('request-promise');\nconst readdir = require('recursive-readdir');\nconst Entity = require('./entity');\nconst ClientConfig = require('./client-config');\n\nclass Pdf {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getTemplates() {\n    const templates = {};\n\n    const files = await readdir(this.config.pdf.templatesPath);\n\n    files.forEach((file) => {\n      if (!/\\.js$/.test(file)) {\n        return;\n      }\n\n      const id = file\n        .replace(`${this.config.pdf.templatesPath}/`, '')\n        .replace('.js', '');\n\n      // eslint-disable-next-line\n      templates[id] = require(file);\n    });\n\n    return templates;\n  }\n\n  async getPayload(templateId, entityId, role) {\n    // if (!this.templates) {\n    //   this.templates = await this.getTemplates();\n    // }\n\n    // if (!this.templates[templateId]) {\n    //   throw new Error('Template not found');\n    // }\n\n    const template = _eval(fs.readFileSync(path.join(this.config.pdf.templatesPath, `${templateId}.js`), 'utf-8'), `${templateId}.js`, {}, true);\n\n    const entity = new Entity(this.config);\n\n    const entities = (await entity.entityList([entityId], { children: 2, role })).map(row => row.doc);\n\n    if (entities.length === 0) {\n      throw new Error('Entity not found');\n    }\n\n    const payload = template(Entity.flattenValues(entities)[0]);\n\n    return payload;\n  }\n\n  async getPdf(payload) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n    const assistPdfUrl = `${this.config.assist.url}/${assetSlug}/pdf/download`;\n\n    payload = typeof payload === 'object' ? JSON.stringify(payload).replace(/'/gi, '’') : payload;\n\n    const response = await request({\n      method: 'POST',\n      uri: assistPdfUrl,\n      encoding: null,\n      form: {\n        payload,\n      },\n    });\n\n    return response;\n  }\n\n}\n\nmodule.exports = Pdf;\n","module.exports = require(\"eval\");","module.exports = require(\"recursive-readdir\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 72;","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass Settings {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async update(settings) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.client = _.merge({}, clientConfig.client, settings);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = Settings;\n","const Promise = require('bluebird');\nconst shippo = require('shippo');\n\nclass Shippo {\n  constructor(config) {\n    this.config = config;\n\n    this.shippo = shippo(config.shippo.token);\n  }\n\n  getQuote(address, parcel) {\n    return new Promise((resolve, reject) => {\n\n      const addressFrom = {\n        object_purpose: 'QUOTE',\n        zip: this.config.shippo.fromZip,\n        country: this.config.shippo.fromCountry,\n      };\n\n      const addressTo = {\n        object_purpose: 'QUOTE',\n        // 'name': address.name,\n        // 'company': '',\n        // 'street1': address.street1,\n        // 'street2': address.street2,\n        // 'city': address.city,\n        // 'state': '',\n        zip: address.zip,\n        country: address.country,\n        // 'phone': address.phone,\n        // 'email': address.email,\n        metadata: '',\n      };\n\n      parcel.distance_unit = 'cm';\n      parcel.mass_unit = 'kg';\n\n      this.shippo.shipment.create({\n        object_purpose: 'QUOTE',\n        address_from: addressFrom,\n        address_to: addressTo,\n        parcel,\n      })\n        .then((shipment) => {\n          const ratesReady = (shipment, attempts) => {\n            if ((shipment.object_status === 'QUEUED' || shipment.object_status === 'WAITING') && attempts < 10) {\n              this.shippo.shipment.retrieve(shipment.object_id).then((val) => {\n                ratesReady(val, attempts + 1);\n              });\n\n            } else {\n              this.shippo.shipment.rates(shipment.object_id)\n                .then((rates) => {\n                  resolve(rates);\n\n                }, (error) => {\n                  console.error('There was an error retrieving rates : %s', error);\n                  reject(error);\n                });\n            }\n          };\n\n          ratesReady(shipment, 0);\n\n        }, (error) => {\n          console.error('There was an error creating shipment: %s', error);\n          reject(error);\n        });\n\n    });\n  }\n\n}\n\nmodule.exports = Shippo;\n","module.exports = require(\"shippo\");","const axios = require('axios');\nconst he = require('he');\nconst Handlebars = require('handlebars');\nconst jsontoxml = require('jsontoxml');\n\nconst ClientConfig = require('./client-config');\n\nclass Shopify {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getCatalog({ shopLink, productLinkTemplate }) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const result = (await axios({\n      url: `https://${clientConfig.provider.shopify.domain}.myshopify.com/api/graphql`,\n      method: 'post',\n      headers: {\n        'X-Shopify-Storefront-Access-Token': clientConfig.provider.shopify.storefrontAccessToken,\n      },\n      data: {\n        query: `\n          query {\n            shop {\n              name\n              primaryDomain {\n                url\n              }\n              description\n              products(first: 250) {\n                edges {\n                  node {\n                    id\n                    handle\n                    title\n                    description\n                    onlineStoreUrl\n                    images(first: 1) {\n                      edges {\n                        node {\n                          originalSrc\n                          transformedSrc\n                        }\n                      }\n                    }\n                    productType\n                    vendor\n                    availableForSale\n                    priceRange {\n                      minVariantPrice {\n                        amount\n                        currencyCode\n                      }\n                      maxVariantPrice {\n                        amount\n                        currencyCode\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `,\n      },\n    })).data.data;\n\n    const template = Handlebars.compile(productLinkTemplate);\n\n    const products = result.shop.products.edges.map(edge => ({\n      'g:id': edge.node.handle,\n      'g:title': he.encode(edge.node.title),\n      'g:description': he.encode(edge.node.description),\n      // 'g:link': edge.node.onlineStoreUrl,\n      'g:link': template({ handle: edge.node.handle }),\n      'g:image_link': edge.node.images.edges[0].node.originalSrc,\n      'g:brand': edge.node.vendor,\n      'g:condition': 'new',\n      'g:availability': edge.node.availableForSale ? 'in stock' : 'out of stock',\n      'g:price': `${edge.node.priceRange.minVariantPrice.amount} ${edge.node.priceRange.minVariantPrice.currencyCode}`,\n      // 'g:google_product_category': he.encode(edge.node.productType),\n    }));\n\n    const channel = [\n      { name: 'title', text: result.shop.name },\n      // { name: 'link', text: result.shop.primaryDomain.url },\n      { name: 'link', text: shopLink },\n      { name: 'description', text: result.shop.description },\n    ];\n\n    products.forEach((product) => {\n      channel.push({\n        name: 'item',\n        children: product,\n      });\n    });\n\n    return `<?xml version=\"1.0\"?>\n    <rss xmlns:g=\"http://base.google.com/ns/1.0\" version=\"2.0\">\n      ${jsontoxml({ channel })}\n    </rss>`;\n  }\n}\n\nmodule.exports = Shopify;\n","module.exports = require(\"he\");","module.exports = require(\"handlebars\");","module.exports = require(\"jsontoxml\");","const _ = require('lodash');\nconst Stripe = require('stripe');\nconst Promise = require('bluebird');\nconst Hashids = require('hashids');\n\nconst ClientConfig = require('./client-config');\nconst Email = require('./email');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass StripeClass {\n  constructor(config) {\n    this.config = config;\n\n    this.stripe = Stripe(this.config.stripe.apiKey);\n    this.email = new Email(this.config);\n\n    this.hashids = new Hashids(this.config.slug, 6, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n  }\n\n  async getSettings() {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    let settings;\n\n    try {\n      settings = clientConfig.module.ecommerce;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    try {\n      settings.clientStripeAccountId = clientConfig.provider.stripe.stripe_user_id;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    settings.client = clientConfig.client;\n    settings.assets = clientConfig.assets;\n\n    return settings;\n  }\n\n  checkout(token, order) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n\n          const listId = _.get(settings, 'createsend.checkoutSubscriberListId');\n\n          if (order.subscribe && listId) {\n            this.email.subscribe(order.customerDetails, 'createsend', listId)\n              .then((result) => {\n                console.log(result);\n              }, (error) => {\n                console.error(error);\n              });\n          }\n\n          // lookup customer by email, create if not found\n          this.findOrCreateCustomer(order.customerDetails.email, order)\n            .then((customer) => {\n\n              // store order data (customer, items, address)\n              this.createOrder(order, customer)\n                .then((order) => {\n\n                  this.updateOrCreateStripeCustomer(settings.clientStripeAccountId, customer, token, order)\n                    .then((stripeCustomer) => {\n\n                      // update customer, append order to customer, update metadata\n                      this.updateCustomer(customer, stripeCustomer, order)\n                        .then((customer) => {\n\n                          // create charge, take fee\n                          this.createCharge(settings, stripeCustomer, customer, order)\n                            .then((updatedOrder) => {\n\n                              this.sendReceipt(settings, customer, order)\n                                .then((orderReceipt) => {\n\n                                  updatedOrder.messages.orderReceipt = orderReceipt;\n\n                                  this.sendNotification(settings, customer, order)\n                                    .then((orderNotification) => {\n\n                                      updatedOrder.messages.orderNotification = orderNotification;\n\n                                      // update order charge status, charge id\n                                      this.updateOrder(updatedOrder)\n                                        .then((finalOrder) => {\n\n                                          resolve(finalOrder);\n\n                                        }, reject);\n                                    }, reject);\n                                }, reject);\n                            }, reject);\n                        }, reject);\n                    }, reject);\n                }, reject);\n            }, reject);\n        }, reject)\n        .catch(reject);\n    });\n  }\n\n  retrieveAccount() {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.accounts.retrieve(settings.clientStripeAccountId)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  refund(order, amount) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.refunds.create({\n            refund_application_fee: true,\n            charge: order.charge.id,\n            amount,\n          }, {\n            stripe_account: settings.clientStripeAccountId,\n          })\n            .then((refund) => {\n              this.stripe.charges.retrieve(order.charge.id, {\n                stripe_account: settings.clientStripeAccountId,\n              })\n                .then((charge) => {\n                  order.charge.status = charge.status;\n                  order.charge.amount = charge.amount;\n                  order.charge.amountRefunded = charge.amount_refunded;\n\n                  Helpers.createOrUpdate(this.config, order)\n                    .then(resolve, reject);\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  findOrCreateCustomer(email, order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'customerByEmail', {\n        keys: [email],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            resolve(body.rows[0].doc);\n\n          } else {\n            const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n            const newCustomer = {\n              type: 'customer',\n              createdAt: now,\n              modifiedAt: now,\n              email: order.customerDetails.email,\n              name: order.customerDetails.name,\n              phone: order.customerDetails.phone,\n              billingAddress: order.billingAddress,\n              shippingAddress: order.shippingAddress,\n              orders: [],\n            };\n\n            Db.connect(this.config).insert(newCustomer)\n              .then((body) => {\n                newCustomer._id = body.id;\n                newCustomer._rev = body.rev;\n\n                resolve(newCustomer);\n              }, reject);\n          }\n        }, reject);\n    });\n  }\n\n  updateOrCreateStripeCustomer(clientStripeAccountId, customer, token, order) {\n    return new Promise((resolve, reject) => {\n      const stripeCustomer = {\n        source: token,\n        email: order.customer.email,\n        description: order.customer.name,\n        metadata: {\n          customer_id: customer._id,\n        // billingAddress: JSON.stringify(order.billingAddress),\n        // shippingAddress: JSON.stringify(order.shippingAddress)\n        },\n      };\n\n      if (customer.stripe && customer.stripe.customer.id) {\n        this.stripe.customers.update(customer.stripe.customer.id, stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        })\n          .then(resolve, (error) => {\n            if (error.type === 'StripeInvalidRequestError' && error.param === 'id') {\n              this.stripe.customers.create(stripeCustomer, {\n                stripe_account: clientStripeAccountId,\n              }).then(resolve, reject);\n\n            } else {\n              reject(error);\n            }\n          });\n\n      } else {\n        this.stripe.customers.create(stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        }).then(resolve, reject);\n      }\n    });\n  }\n\n  createOrder(order, customer) {\n    return new Promise((resolve, reject) => {\n      const items = order.items.map(item => ({\n        id: item.id,\n        title: item.title.replace(/<br\\s?>/ig, ' ').replace(/<\\/?p>|<\\/?span>/ig, ''),\n        price: item.price,\n        quantity: item.quantity,\n        metadata: item.metadata || {},\n      }));\n\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      const newOrder = {\n        type: 'order',\n        orderId: this.hashids.encode(new Date().getTime()),\n        createdAt: now,\n        modifiedAt: now,\n        customer: {\n          id: customer._id,\n          email: customer.email,\n          name: customer.name,\n        },\n        items,\n        shippingMethod: {\n          name: order.shippingMethod.name,\n          amount: Number(order.shippingMethod.amount),\n        },\n        subtotal: Number(order.subtotal),\n        tax: {\n          rate: order.tax.rate || 0,\n          includedInPrice: order.tax.includedInPrice || false,\n          total: order.tax.total || 0,\n          show: order.tax.show || false,\n        },\n        discount: {\n          code: order.discount.code || '',\n          name: order.discount.name || '',\n          total: order.discount.total || 0,\n        },\n        total: Number(order.total),\n        billingAddress: order.billingAddress,\n        shippingAddress: order.shippingAddress,\n        messages: {},\n        status: 'pending',\n        test: true,\n      };\n\n      Db.connect(this.config).insert(newOrder)\n        .then((body) => {\n          newOrder._id = body.id;\n          newOrder._rev = body.rev;\n\n          resolve(newOrder);\n        }, reject);\n    });\n  }\n\n  updateOrder(order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).insert(order)\n        .then((body) => {\n          order._rev = body.rev;\n\n          resolve(order);\n        }, reject);\n    });\n  }\n\n  updateCustomer(customer, stripeCustomer, order) {\n    return new Promise((resolve, reject) => {\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      customer.modifiedAt = now;\n\n      if (!customer.orders) {\n        customer.orders = [];\n      }\n\n      customer.orders.push(order._id);\n\n      if (!customer.stripe) {\n        customer.stripe = {\n          customer: {\n            id: null,\n          },\n        };\n      }\n\n      customer.stripe.customer.id = stripeCustomer.id;\n\n      Db.connect(this.config).insert(customer)\n        .then((body) => {\n          customer._rev = body.rev;\n\n          resolve(customer);\n        }, reject);\n    });\n  }\n\n  createCharge(settings, stripeCustomer, customer, order) {\n    return new Promise((resolve, reject) => {\n      const amount = Number(order.total) * 100;\n\n      const charge = {\n        amount,\n        currency: settings.currency.iso.toLowerCase(),\n        customer: stripeCustomer.id,\n        capture: true,\n        description: order.orderId,\n        // shipping: order.shippingAddress, // fraud prevention, must follow expected schema\n        metadata: {\n          customer_id: customer._id,\n          order_id: order._id,\n        },\n        statement_descriptor: _.kebabCase(settings.storeName).toUpperCase(),\n        application_fee: Math.ceil(amount * 0.02),\n      };\n\n      this.stripe.charges.create(charge, {\n        stripe_account: settings.clientStripeAccountId,\n      })\n        .then((charge) => {\n\n          order.charge = {\n            paymentGateway: 'stripe',\n            id: charge.id,\n            status: charge.status,\n            currency: charge.currency.toUpperCase(),\n            amount: charge.amount,\n            amountRefunded: charge.amount_refunded,\n          };\n\n          order.test = !charge.livemode;\n\n          resolve(order);\n\n        }, reject);\n    });\n  }\n\n  sendReceipt(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: customer.email,\n        subject: `Your order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-receipt`, templateData).then(resolve, reject);\n    });\n  }\n\n  sendNotification(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: settings.emailSenderAddress,\n        subject: `New order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-notification`, templateData).then(resolve, reject);\n    });\n  }\n\n}\n\nmodule.exports = StripeClass;\n","module.exports = require(\"stripe\");","module.exports = require(\"hashids\");","const _ = require('lodash');\nconst Db = require('./db');\nconst ClientConfig = require('./client-config');\n\nclass Taxonomy {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async create(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.taxonomies.push(taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const taxonomy = _.find(clientConfig.taxonomies, { slug: taxonomySlug });\n\n    if (!taxonomy) {\n      throw Error(`Taxonomy not found: ${taxonomySlug}`);\n    }\n\n    return taxonomy;\n  }\n\n  async update(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.taxonomies, { slug: taxonomy.slug });\n\n    if (index === -1) {\n      throw Error(`Taxonomy not found: ${taxonomy.slug}`);\n    }\n\n    clientConfig.taxonomies.splice(index, 1, taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    taxonomySlug = _.isArray(taxonomySlug) ? taxonomySlug : [taxonomySlug];\n\n    clientConfig.taxonomies = clientConfig.taxonomies.filter(taxonomy => taxonomySlug.indexOf(taxonomy.slug) === -1);\n\n    return cc.set(clientConfig);\n  }\n\n  async entitiesByTerm(term) {\n    const db = Db.connect(this.config);\n\n    const entityGroups = (await db.view('entity', 'byTaxonomyTerm', { keys: [term.id], group: true })).rows.map(row => row.value)[0];\n\n    if (!entityGroups) {\n      return [];\n    }\n\n    let entityIds = [];\n\n    _.forEach(entityGroups, (entities) => {\n      entityIds = entityIds.concat(entities);\n    });\n\n    entityIds = _.uniq(entityIds);\n\n    const entities = (await db.fetch({ keys: entityIds, include_docs: true })).rows\n      .filter(row => row.doc)\n      .map(row => row.doc);\n\n    return entities;\n  }\n\n  async createTerm(taxonomySlug, term) {\n    const taxonomy = await this.read(taxonomySlug);\n\n    taxonomy.terms.push(term);\n\n    return this.update(taxonomy);\n  }\n\n  async updateTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.map((_term) => {\n            if (_term.id === term.id) {\n              _term.title = term.title;\n              _term.slug = term.slug;\n            }\n\n            if (!_term.parents) {\n              _term.parents = [];\n            }\n\n            _term.parents = _term.parents.map((parent) => {\n              if (parent.id === term.id) {\n                parent.title = term.title;\n                parent.slug = term.slug;\n              }\n              return parent;\n            });\n\n            return _term;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n\n  async deleteTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.filter((_term) => {\n            if (_term.id === term.id) {\n              return false;\n            }\n\n            if ((_term.parents || []).filter(parent => parent.id === term.id).length) {\n              return false;\n            }\n\n            return true;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n}\n\nmodule.exports = Taxonomy;\n","const Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst Cloudant = require('@cloudant/cloudant');\nconst Db = require('./db');\n\nclass Tools {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getDb() {\n    const result = await Db.connect(this.config).fetch({\n      include_docs: true,\n    });\n\n    return result;\n  }\n\n  async getChanges() {\n    const result = await Db.connect(this.config).changes({\n      limit: 50,\n      include_docs: true,\n      filter: 'tools/changesEntity',\n    });\n\n    return result;\n  }\n\n  async importDb(dbBackupFile) {\n    const dbName = this.config.db.name;\n\n    const fileConents = await fs.readFileAsync(dbBackupFile.path);\n\n    const docs = JSON.parse(fileConents).rows.map((row) => {\n      const { doc } = row;\n      delete doc._rev;\n      return doc;\n    });\n\n    await fs.unlinkAsync(dbBackupFile.path);\n\n    const cloudant = new Cloudant({\n      url: this.config.db.url,\n      plugins: ['promises', 'retry'],\n    }).db;\n\n    try {\n      await cloudant.destroy(dbName);\n    } catch (error) {\n      //\n    }\n\n    await cloudant.create(dbName);\n\n    const result = await Db.connect(this.config, dbName).bulk({ docs });\n\n    return result;\n  }\n\n}\n\nmodule.exports = Tools;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass User {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    user.id = user.id.toLowerCase();\n    user.email = user.email.toLowerCase();\n\n    clientConfig.users.push(user);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async update(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.users, { id: user.id });\n\n    if (index === -1) {\n      throw Error(`User not found: ${user.id}`);\n    }\n\n    user.email = user.email.toLowerCase();\n\n    clientConfig.users.splice(index, 1, user);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    userId = _.isArray(userId) ? userId : [userId];\n\n    clientConfig.users = clientConfig.users.filter(user => userId.indexOf(user.id) === -1);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = User;\n","module.exports = ({\n  Analytics,\n  router,\n  authMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/analytics.:ext?',\n    authMiddleware,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const analytics = Analytics(await getConfig());\n\n      try {\n        handleResponse(req, res, await analytics.get(req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const pick = require('lodash/pick');\n\nmodule.exports = ({\n  Auth,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/auth/user.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.query.slug));\n\n      const user = pick((await auth.authUser(req.query.slug, req.query.userId)), [\n        'active',\n        'role',\n      ]);\n\n      try {\n        handleResponse(req, res, user);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/auth/provider/:provider/config',\n    authMiddleware,\n    permissionMiddleware.bind(null, ['settings', 'userSettings']),\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      if (!config.provider[req.params.provider]) {\n        res.status(404);\n        res.send({});\n        return;\n      }\n\n      res.status(200);\n      res.send({ clientId: config.provider[req.params.provider].clientId });\n    })\n  );\n\n  router.get(\n    '/auth/provider/:provider',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    (req, res) => {\n      res.status(req.query.error ? 500 : 200);\n      res.send(`${req.params.provider}: ${(req.query.error_description ? req.query.error_description : 'successfully authenticated')}`);\n    }\n  );\n\n  router.post(\n    '/auth/provider/:provider',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/auth/provider/:provider/refresh',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, null, true));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/auth/provider/:provider/:userId',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'userSettings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, req.params.userId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/auth/provider/:provider/:userId/refresh',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, req.params.userId, true));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  router,\n  cache,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n}) => {\n\n  /**\n   * @swagger\n   * /cache/clear:\n   *  get:\n   *    tags:\n   *      - cache\n   *    summary: Clear cache\n   *    description: Clears the LRU cache of API responses\n   *    produces:\n   *      - text/plain\n   *    responses:\n   *      200:\n   *        description: Result\n   */\n  router.get(\n    '/cache/clear.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      if (!config.cache.enabled) {\n        handleResponse(req, res, 'Cache disabled');\n        return;\n      }\n\n      const pattern = cache.store.name === 'redis' ? '*' : undefined;\n\n      cache.keys(pattern).then((keys) => {\n        const items = keys.filter(key => key.indexOf(req.session.slug) === 0);\n\n        items.forEach(key => cache.del(key));\n\n        handleResponse(req, res, `${items.length} items removed from cache`);\n      });\n    })\n  );\n\n};\n","const pick = require('lodash/pick');\n\nmodule.exports = ({\n  ClientConfig,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/config/info.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.query.slug || req.session.slug));\n\n      const clientInfo = pick((await clientConfig.get()), [\n        'client.name',\n      ]);\n\n      if (Object.keys(clientInfo).length === 0) {\n        handleError(req, res, new Error('Account ID not found'));\n        return;\n      }\n\n      try {\n        handleResponse(req, res, clientInfo);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/config.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.get());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/config.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'config'),\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.set(req.body.config));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  router,\n}) => {\n\n  router.all('/debug/useragent.:ext?', (req, res) => {\n    const expressUseragent = require('express-useragent');\n    const useragent = expressUseragent.parse(req.headers['user-agent']);\n\n    res.status(200);\n    res.send(`\n      <html>\n        <head>\n          <title>${useragent.source}</title>\n          <meta name=\"description\" content=\"${useragent.source}\">\n        </head>\n        <body>${useragent.source}</body>\n      </html>\n    `);\n  });\n\n};\n","module.exports = require(\"express-useragent\");","const isArray = require('lodash/isArray');\n\nmodule.exports = ({\n  Ecommerce,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/ecommerce/order/message/:message.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        const order = await ecommerce.getOrder(req.query.orderId);\n        handleResponse(req, res, order.messages[req.params.message].email.html);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (isArray(req.query.sort)) {\n        req.query.sort = JSON.stringify(req.query.sort).replace(/\\\\\"/g, '');\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.getType(req.params.type, req.query));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (!/^(discount|order)$/.test(req.params.type)) {\n        handleError(req, res, `Illegal type: ${req.params.type}`);\n        return;\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.setType(req.params.type, req.body.item));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (!/^(discount)$/.test(req.params.type)) {\n        handleError(req, res, `Illegal type: ${req.params.type}`);\n        return;\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.deleteType(req.body.item));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/ecommerce/discount/:code.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.verifyDiscount(req.params.code));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Email,\n  Entity,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /email/preview:\n   *  get:\n   *    tags:\n   *      - email\n   *    summary: Preview email template\n   * #   description: Preview email template\n   *    produces:\n   *      - text/html\n   *    parameters:\n   *      - name: slug\n   *        description: Slug (optionally override slug in development mode)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: templateSlug\n   *        description: Template slug (folder name of the template)\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: payload\n   *        description: JSON payload from which to render the template\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: entityId\n   *        description: Entity `_id` from which to render the template\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: inlineStyles\n   *        description: Inline CSS\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: true\n   *    responses:\n   *      200:\n   *        description: Template\n   */\n  router.all(\n    '/email/preview.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query || {};\n\n      const templateOptions = {\n        data: input.data ? JSON.parse(input.data) : false,\n        inlineStyles: input.inlineStyles ? JSON.parse(input.inlineStyles) : true,\n        inky: input.inky ? JSON.parse(input.inky) : false,\n        mjml: input.mjml ? JSON.parse(input.mjml) : false,\n        skipValidation: input.skipValidation ? JSON.parse(input.skipValidation) : false,\n      };\n\n      const slug = input.slug || req.session.slug;\n\n      // if (!slug) {\n      //   throw new Error('Missing `slug` parameter');\n      // }\n\n      async function renderTemplate(data = {}) {\n        if (templateOptions.data) {\n          handleResponse(req, res, data);\n          return;\n        }\n\n        const email = Email(await getConfig(slug));\n\n        try {\n          const template = await email.getTemplate(input.templateSlug, data, templateOptions);\n\n          handleResponse(req, res, template.html);\n        } catch (error) {\n          handleError(req, res, error);\n        }\n      }\n\n      if (input.payload) {\n        renderTemplate(JSON.parse(input.payload));\n        return;\n      }\n\n      if (input.entityId) {\n        const entity = Entity(await getConfig(slug));\n\n        const entities = (await entity.entityList([input.entityId], { children: 2 })).map(row => row.doc);\n\n        renderTemplate(entity.flattenValues(entities)[0]);\n        return;\n      }\n\n      renderTemplate();\n    })\n  );\n\n  router.all(\n    '/email/send.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query || {};\n\n      const templateOptions = {\n        inlineStyles: input.inlineStyles ? JSON.parse(input.inlineStyles) : true,\n        inky: input.inky ? JSON.parse(input.inky) : false,\n        mjml: input.mjml ? JSON.parse(input.mjml) : false,\n        skipValidation: input.skipValidation ? JSON.parse(input.skipValidation) : true,\n      };\n\n      const emailOptions = {\n        fromName: input.fromName || '',\n        fromEmail: input.fromEmail,\n        toName: input.toName || '',\n        toEmail: input.toEmail,\n        from: `${input.fromName || ''} <${input.fromEmail}>`,\n        to: input.toEmail,\n        subject: input.subject,\n      };\n\n      const slug = input.slug || req.session.slug;\n\n      const email = Email(await getConfig(slug));\n\n      try {\n        const result = await email.sendEmail(emailOptions, input.templateSlug, input.payload, templateOptions);\n\n        handleResponse(req, res, result);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/email/subscribe.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const email = Email(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await email.subscribe({\n          email: req.body.email || req.query.email,\n          name: req.body.name || req.query.name || '',\n        }));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Embedly,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/embedly/oembed.:ext?',\n    authMiddleware,\n    asyncMiddleware(async(req, res) => {\n      const embedly = Embedly(await getConfig());\n\n      try {\n        handleResponse(req, res, await embedly.oembed(req.query.url || req.query.urls));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const isArray = require('lodash/isArray');\n\nmodule.exports = ({\n  Db,\n  Entity,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * definitions:\n   *  Entity:\n   *    type: object\n   *    required:\n   *      - _id\n   *      - _rev\n   *    properties:\n   *      _id:\n   *        type: string\n   *      _rev:\n   *        type: string\n   *      schema:\n   *        type: string\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      thumbnail:\n   *        type: object\n   *      fields:\n   *        type: object\n   *      published:\n   *        type: boolean\n   *      publishedAt:\n   *        type: string\n   */\n\n  /**\n   * @swagger\n   * /entities/index:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Show indexes\n   *    description: Show all indexes, use this to find fields available for search/query.\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Indexes\n   */\n  router.get(\n    '/entities/index.:ext?',\n    asyncMiddleware(async (req, res) => {\n      try {\n        handleResponse(req, res, await Db(await getConfig(req.session.slug)).indexAsync());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/search:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Search entities\n   *    description: This endpoint extends Cloudant's Lucene based search. Learn more from Cloudant's [documentation](https://docs.cloudant.com/search.html).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: Lucene search query\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: include_docs\n   *        description: Include docs in search results (ignored if `children` or `parents` is `true`)\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: sort\n   *        description: Field to sort results by. Prefixed with `-` to reverse order. Suffixed with &#60;`string|number`&#62;\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: limit\n   *        description: Limit results (max 200)\n   *        in: query\n   *        required: false\n   *        type: number\n   *      - name: bookmark\n   *        description: Bookmark for the next page of results\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: group_field\n   *        description: Field to group results by\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: index\n   *        description: Search index\n   *        in: query\n   *        required: false\n   *        type: string\n   *        default: all\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: trashed\n   *        description: Get trashed entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Search result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            total_rows:\n   *              type: number\n   *            rows:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/search?.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      // eslint-disable-next-line\n      const include_docs = input.include_docs !== undefined\n        ? JSON.parse(input.include_docs) : false;\n\n      // eslint-disable-next-line\n      const include_fields = input.include_fields !== undefined\n        ? typeof input.include_fields === 'object' ? input.include_fields : JSON.parse(input.include_fields)\n        : [];\n\n      const select = input.select !== undefined ? input.select : false;\n\n      let children = input.children !== undefined\n        ? typeof input.children === 'object' ? input.children : JSON.parse(input.children)\n        : false;\n      let parents = input.parents !== undefined\n        ? typeof input.parents === 'object' ? input.parents : JSON.parse(input.parents)\n        : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      const trashed = input.trashed !== undefined\n        ? JSON.parse(input.trashed) : false;\n\n      const sort = input.sort !== undefined\n        ? input.sort : null;\n      const limit = input.limit !== undefined\n        ? parseInt(input.limit, 10) : null;\n\n      const bookmark = input.bookmark !== undefined\n        ? input.bookmark : null;\n\n      // eslint-disable-next-line\n      const group_field = input.group_field !== undefined\n        ? input.group_field : null;\n\n      const index = input.index !== undefined\n        ? input.index : null;\n\n      const q = input.query || input.q;\n\n      let query = [];\n\n      query.push(trashed ? 'trashed:true' : '!trashed:true');\n\n      if (req.session.role === 'guest') {\n        query.push('published:true');\n      }\n\n      if (q) {\n        query.push(`(${q})`);\n      }\n\n      query = query.join(' AND ');\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entitySearch(\n          {\n            query,\n            include_docs,\n            include_fields,\n            sort,\n            limit,\n            bookmark,\n            group_field,\n            index,\n          },\n          {\n            select,\n            children,\n            parents,\n            role: req.session.role,\n          }\n        ), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/find:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Query entities\n   *    description: This endpoint extends CouchDB's Mango query. Learn more from Cloudant's [documentation](https://docs.cloudant.com/cloudant_query.html#finding-documents-using-an-index).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: JSON query object, refer to CouchDB/Cloudant docs.\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Query result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            docs:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/find.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      let children = input.children !== undefined\n        ? typeof input.children === 'object' ? input.children : JSON.parse(input.children)\n        : false;\n      let parents = input.parents !== undefined\n        ? typeof input.parents === 'object' ? input.parents : JSON.parse(input.parents)\n        : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      const trashed = input.trashed !== undefined\n        ? JSON.parse(input.trashed) : false;\n\n      const query = input.query\n        ? JSON.parse(input.query) : { selector: {} };\n\n      query.use_index = ['entityIndex', 'entity'];\n\n      if (!query.selector.$and) {\n        query.selector = {\n          $and: [\n            query.selector,\n          ],\n        };\n      }\n\n      if (trashed) {\n        query.selector.$and.push({ trashed: true });\n      } else {\n        query.selector.$and.push({\n          $or: [\n            {\n              trashed: {\n                $exists: false,\n              },\n            },\n            {\n              trashed: false,\n            },\n          ],\n        });\n      }\n\n      if (req.session.role === 'guest') {\n        query.selector.$and.push({ published: true });\n      }\n\n      if (req.query.limit) {\n        query.limit = parseInt(req.query.limit, 10);\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityFind(query, { children, parents, role: req.session.role }), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entities/field.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.fieldValues(req.query.slug || req.query.fieldSlug, req.query.searchTerm), true);\n      } catch (error) {\n        handleError(res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Get all entities\n   *    description: Get all entities, optionally from an array of IDs\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: id\n   *        description: Entity ID\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: ids\n   *        description: Entity IDs\n   *        in: query\n   *        required: false\n   *        type: array\n   *        items:\n   *          type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Entities\n   *        schema:\n   *          type: array\n   *          items:\n   *            $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      const select = input.select !== undefined ? input.select : false;\n\n      let children = input.children !== undefined\n        ? typeof input.children === 'object' ? input.children : JSON.parse(input.children)\n        : false;\n      let parents = input.parents !== undefined\n        ? typeof input.parents === 'object' ? input.parents : JSON.parse(input.parents)\n        : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      let ids = input.ids || input.id;\n\n      if (ids) {\n        ids = isArray(ids) ? ids : [ids];\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityList(ids, {\n          select,\n          children,\n          parents,\n          role: req.session.role,\n        }), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity/revisions.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRevisions(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityCreate'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityCreate(req.body.entity));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRead(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityUpdate(req.body.entity || req.body.entities, req.body.restore || false));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityDelete(req.body.entity || req.body.entities, req.body.forever || false));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity/trashed.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityDelete('trashed'));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  ClientConfig,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /metadata:\n   *  get:\n   *    tags:\n   *      - metadata\n   *    summary: Get metadata\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Metadata\n   *        schema:\n   *          type: object\n   *          properties:\n   *            description:\n   *              type: string\n   */\n  router.get(\n    '/metadata.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const cc = ClientConfig(await getConfig(req.session.slug));\n\n      const clientConfig = await cc.get();\n\n      try {\n        handleResponse(req, res, clientConfig.client.metadata, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","const _ = require('lodash');\n\nmodule.exports = ({\n  Pdf,\n  ClientConfig,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleError,\n}) => {\n\n  router.get(\n    '/pdf/view.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          pdf.getPdf(payload)\n            .then((pdf) => {\n              res.type('application/pdf');\n              res.status(200);\n              res.send(pdf);\n            }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/download.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          pdf.getPdf(payload)\n            .then((pdf) => {\n              res.attachment(payload.fileName || 'download.pdf');\n              res.status(200);\n              res.send(pdf);\n            }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/payload.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          res.status(200);\n          res.json(payload);\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/submit.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig(req.session.slug);\n\n      const cc = ClientConfig(config);\n      const clientConfig = await cc.get();\n\n      const assetSlug = _.get(clientConfig, 'assets.slug', req.session.slug);\n\n      const pdf = Pdf(config);\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          payload = JSON.stringify(payload).replace(/'/gi, '’');\n\n          res.status(200);\n          res.send(`\n          <body onload='form.submit()'>\n            <form id='form' method='POST' action='${config.assist.url}/${assetSlug}/pdf/download' target='_self'>\n              <input type='hidden' name='payload' value='${payload}' />\n            </form>\n          </body>\n        `);\n        }, handleError.bind(null, req, res));\n    })\n  );\n};\n","const _ = require('lodash');\nconst axios = require('axios');\n\nmodule.exports = ({\n  Auth,\n  ClientConfig,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  const providerApiBaseUrl = {\n    google: 'https://www.googleapis.com',\n    instagram: 'https://api.instagram.com',\n    spotify: 'https://api.spotify.com',\n    vimeo: 'https://api.vimeo.com',\n  };\n\n  const providerApiHandler = asyncMiddleware(async (req, res) => {\n    const method = req.method;\n    const provider = req.params[0];\n    const userId = req.params[2] ? req.params[1] : null;\n    const endpoint = (req.params[2] || req.params[1]).split('/').filter(param => param !== '').join('/');\n\n    const config = await getConfig(req.session.slug);\n\n    const cc = ClientConfig(config);\n\n    let clientConfig = await cc.get();\n    let providerConfig;\n\n    if (userId) {\n      if (!clientConfig.userSettings[userId]) {\n        throw Error(`User settings not found: ${userId}`);\n      }\n      providerConfig = clientConfig.userSettings[userId].provider[provider];\n    } else {\n      providerConfig = clientConfig.provider[provider];\n    }\n\n    if (Math.floor(new Date().getTime() / 1000) - (providerConfig.begins || 0) > providerConfig.expires_in) {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      if (userId) {\n        clientConfig = await auth.authProvider(provider, {}, userId, true);\n        providerConfig = clientConfig.userSettings[userId].provider[provider];\n      } else {\n        clientConfig = await auth.authProvider(provider, {}, null, true);\n        providerConfig = clientConfig.provider[provider];\n      }\n    }\n\n    let params = _.merge({}, req.query);\n    params = _.omitBy(params, (value, key) => /^(__)/.test(key));\n\n    if (!/bearer/i.test(providerConfig.token_type)) {\n      params.access_token = providerConfig.access_token;\n    }\n\n    try {\n      const result = await axios.request({\n        url: endpoint,\n        baseURL: providerApiBaseUrl[provider],\n        method,\n        headers: {\n          Authorization: `Bearer ${providerConfig.access_token}`,\n        },\n        params,\n      });\n\n      handleResponse(req, res, result.data, true);\n    } catch (error) {\n      handleError(req, res, error);\n    }\n  });\n\n  router.all(\n    /\\/provider\\/([^/]+)\\/([^/]+)\\/api\\/?(.+)?/,\n    cacheMiddleware,\n    providerApiHandler,\n  );\n\n  router.all(\n    /\\/provider\\/([^/]+)\\/api\\/?(.+)?/,\n    cacheMiddleware,\n    providerApiHandler,\n  );\n\n};\n","module.exports = ({\n  Schema,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.create(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.read(req.query.schemaId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.update(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.delete(req.body.schemaSlug || req.body.schemaSlugs || req.query.schemaSlug || req.query.schemaSlugs));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schemas.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.updateAll(req.body.schemas));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Settings,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/settings.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const settings = Settings(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await settings.update(req.body.settings));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Shippo,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.all(\n    '/shippo/quote.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const shippo = Shippo(await getConfig());\n\n      const address = req.body.address || JSON.parse(req.params.address);\n      const parcel = req.body.parcel || JSON.parse(req.params.parcel);\n\n      try {\n        handleResponse(req, res, await shippo.getQuote(address, parcel), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Shopify,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /shopify/catalog:\n   *  get:\n   *    tags:\n   *      - shopify\n   *    summary: Get Facebook product feed xml\n   * #   description: Get Facebook product feed xml\n   *    produces:\n   *      - application/rss+xml\n   *    parameters:\n   *      - name: shopLink\n   *        description: Shop URL\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: productLinkTemplate\n   *        description: Product URL Handlebars template, containing {{handle}}\n   *        in: query\n   *        required: true\n   *        type: string\n   *    responses:\n   *      200:\n   *        description: XML Product Feed\n   */\n  router.get(\n    '/shopify/catalog.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const shopify = Shopify(await getConfig(req.session.slug));\n\n      try {\n        res.setHeader('Content-Type', 'application/rss+xml');\n        handleResponse(req, res, await shopify.getCatalog(req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  ClientConfig,\n  Instagram,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  const instagramAccessTokenMap = {};\n\n  router.get(\n    /\\/social\\/twitter\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      const Promise = require('bluebird');\n      const Twitter = require('twitter');\n\n      const twitter = Promise.promisifyAll(new Twitter({\n        consumer_key: config.provider.twitter.consumerKey,\n        consumer_secret: config.provider.twitter.consumerSecret,\n        access_token_key: config.provider.twitter.accessTokenKey,\n        access_token_secret: config.provider.twitter.accessTokenSecret,\n      }));\n\n      try {\n        handleResponse(req, res, await twitter[`${method}Async`](params.join('/'), req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    /\\/social\\/instagram\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      if (!instagramAccessTokenMap[req.session.slug]) {\n        const cc = ClientConfig(config);\n\n        try {\n          const clientConfig = await cc.get();\n          instagramAccessTokenMap[req.session.slug] = clientConfig.provider.instagram.access_token;\n        } catch (error) {\n          handleError(res, new Error('Instagram: access_token required'));\n          return;\n        }\n      }\n\n      req.query.access_token = instagramAccessTokenMap[req.session.slug];\n\n      const instagram = Instagram({\n        client_id: config.provider.instagram.clientId,\n      });\n\n      try {\n        const result = await instagram[method](params.join('/'), req.query);\n        try {\n          delete result.pagination.next_url;\n        } catch (error) {\n          //\n        }\n        handleResponse(req, res, result, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = require(\"twitter\");","module.exports = ({\n  Ecommerce,\n  Email,\n  Stripe,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.all(\n    '/stripe/checkout.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const token = req.body.token || JSON.parse(req.query.token);\n      const order = req.body.order || JSON.parse(req.query.order);\n\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.checkout(token, order));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/stripe/refund.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const order = req.body.order || JSON.parse(req.query.order);\n      const amount = Number(req.body.amount || req.query.amount || 0) * 100;\n\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.refund(order, amount));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/stripe/account.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.retrieveAccount());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/stripe/email.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig(req.session.slug);\n      const email = Email(config);\n      const stripe = Stripe(config);\n      const ecommerce = Ecommerce(config);\n\n      const settings = await stripe.getSettings();\n      const order = await ecommerce.getOrder(req.query.orderId);\n\n      const data = {\n        settings,\n        order,\n      };\n\n      const template = await email.getTemplate(`${req.session.slug}/${req.query.template}`, data);\n\n      try {\n        handleResponse(req, res, template.html);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Taxonomy,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * definitions:\n   *  TaxonomyTerm:\n   *    type: object\n   *    properties:\n   *      id:\n   *        type: string\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      terms:\n   *        type: array\n   *        items:\n   *          type: object\n   *          $ref: '#/definitions/TaxonomyTerm'\n   */\n\n  /**\n   * @swagger\n   * definitions:\n   *  Taxonomy:\n   *    type: object\n   *    properties:\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      terms:\n   *        type: array\n   *        items:\n   *          type: object\n   *          $ref: '#/definitions/TaxonomyTerm'\n   */\n\n  router.post(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.create(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /taxonomy:\n   *  get:\n   *    tags:\n   *      - taxonomy\n   *    summary: Get taxonomy\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Taxonomy slug\n   *        in: query\n   *        required: true\n   *        type: string\n   *    responses:\n   *      200:\n   *        description: Taxonomy\n   *        schema:\n   *          type: object\n   *          $ref: '#/definitions/Taxonomy'\n   */\n  router.get(\n    '/taxonomy.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.read(req.query.slug || req.query.taxonomySlug), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.update(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.delete(req.body.taxonomySlug || req.body.taxonomySlugs || req.query.taxonomySlug || req.query.taxonomySlugs));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.createTerm(req.body.slug || req.body.taxonomySlug, req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.updateTerm(req.query.term || req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.deleteTerm(req.query.term || req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Jwt,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  // handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /token:\n   *  get:\n   *    tags:\n   *      - token\n   *    summary: Get JWT\n   *    description: Get Json Web Token (JWT) for API access\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Slug for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: userId\n   *        description: User ID for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: role\n   *        description: Role for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: expiresIn\n   *        description: Duration of token in seconds\n   *        in: query\n   *        required: false\n   *        type: number\n   *    responses:\n   *      200:\n   *        description: Token\n   */\n\n  router.get(\n    '/token.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      const payload = {\n        role: req.session.role,\n        slug: req.session.slug,\n        userId: req.session.userId,\n      };\n\n      if (req.session.role === 'super' || config.environment === 'development') {\n        payload.role = req.query.role || req.session.role || config.dev.role;\n        payload.slug = req.query.slug || req.session.slug || config.dev.slug;\n        if (payload.role !== 'guest') {\n          payload.userId = req.query.userId || req.session.userId || config.dev.userId;\n        }\n      }\n\n      const _ = require('lodash');\n\n      let options = _.pickBy(req.query, (value, key) => /^(expiresIn|notBefore|audience|issuer|jwtid|subject|noTimestamp|header)$/.test(key));\n\n      options = _.mapValues(options, (value) => {\n        if (!_.isNaN(+value)) { // Check if value is a numeric string\n          return +value; // Convert numeric string to number\n        }\n        return value;\n      });\n\n      const jwt = Jwt(config);\n\n      const token = jwt.signToken(payload, options);\n\n      req.session.apiToken = token;\n\n      const response = {\n        token,\n        payload,\n        options,\n      };\n\n      handleResponse(req, res, response);\n    })\n  );\n\n};\n","module.exports = ({\n  Tools,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/tools/export-db.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'tools'),\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        const db = await tools.getDb();\n\n        res.setHeader('Content-Disposition', `attachment; filename=${req.session.slug}.json`);\n        res.setHeader('Content-Type', 'application/json');\n        res.status(200);\n        res.send(db);\n\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/tools/changes.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await tools.getChanges());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  User,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.create(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.read(req.query.userId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.update(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.delete(req.body.userId || req.body.userIds || req.query.userId || req.query.userIds));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n"],"sourceRoot":""}