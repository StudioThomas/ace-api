{"version":3,"sources":["webpack://AceApiServer/webpack/universalModuleDefinition","webpack://AceApiServer/webpack/bootstrap","webpack://AceApiServer/external \"babel-runtime/helpers/asyncToGenerator\"","webpack://AceApiServer/external \"babel-runtime/regenerator\"","webpack://AceApiServer/external \"lodash\"","webpack://AceApiServer/external \"babel-runtime/helpers/createClass\"","webpack://AceApiServer/external \"babel-runtime/helpers/classCallCheck\"","webpack://AceApiServer/./lib/client-config.js","webpack://AceApiServer/external \"bluebird\"","webpack://AceApiServer/./lib/db.js","webpack://AceApiServer/external \"babel-runtime/core-js/json/stringify\"","webpack://AceApiServer/./lib/helpers.js","webpack://AceApiServer/external \"axios\"","webpack://AceApiServer/external \"fs\"","webpack://AceApiServer/external \"path\"","webpack://AceApiServer/external \"babel-runtime/core-js/object/keys\"","webpack://AceApiServer/external \"lodash/isArray\"","webpack://AceApiServer/./server/config.default.js","webpack://AceApiServer/external \"babel-runtime/helpers/typeof\"","webpack://AceApiServer/external \"request-promise\"","webpack://AceApiServer/./lib/fields.js","webpack://AceApiServer/./lib/schema.js","webpack://AceApiServer/./lib/entity.js","webpack://AceApiServer/./lib/email.js","webpack://AceApiServer/external \"babel-runtime/core-js/object/freeze\"","webpack://AceApiServer/./lib/roles.js","webpack://AceApiServer/external \"@cloudant/cloudant\"","webpack://AceApiServer/./lib/assist.js","webpack://AceApiServer/external \"express\"","webpack://AceApiServer/./server/routes/user.js","webpack://AceApiServer/./server/routes/tools.js","webpack://AceApiServer/./server/routes/token.js","webpack://AceApiServer/./server/routes/taxonomy.js","webpack://AceApiServer/./server/routes/stripe.js","webpack://AceApiServer/external \"twitter\"","webpack://AceApiServer/./server/routes/social.js","webpack://AceApiServer/./server/routes/shopify.js","webpack://AceApiServer/./server/routes/shippo.js","webpack://AceApiServer/./server/routes/settings.js","webpack://AceApiServer/./server/routes/schema.js","webpack://AceApiServer/./server/routes/provider.js","webpack://AceApiServer/./server/routes/pdf.js","webpack://AceApiServer/./server/routes/metadata.js","webpack://AceApiServer/./server/routes/entity.js","webpack://AceApiServer/./server/routes/embedly.js","webpack://AceApiServer/./server/routes/email.js","webpack://AceApiServer/./server/routes/ecommerce.js","webpack://AceApiServer/external \"express-useragent\"","webpack://AceApiServer/./server/routes/debug.js","webpack://AceApiServer/./server/routes/config.js","webpack://AceApiServer/./server/routes/cache.js","webpack://AceApiServer/./server/routes/auth.js","webpack://AceApiServer/./server/routes/analytics.js","webpack://AceApiServer/./lib/user.js","webpack://AceApiServer/./lib/tools.js","webpack://AceApiServer/./lib/taxonomy.js","webpack://AceApiServer/external \"hashids\"","webpack://AceApiServer/external \"stripe\"","webpack://AceApiServer/./lib/stripe.js","webpack://AceApiServer/external \"jsontoxml\"","webpack://AceApiServer/external \"handlebars\"","webpack://AceApiServer/external \"he\"","webpack://AceApiServer/./lib/shopify.js","webpack://AceApiServer/external \"shippo\"","webpack://AceApiServer/./lib/shippo.js","webpack://AceApiServer/./lib/settings.js","webpack://AceApiServer/./lib sync","webpack://AceApiServer/external \"recursive-readdir\"","webpack://AceApiServer/external \"eval\"","webpack://AceApiServer/./lib/pdf.js","webpack://AceApiServer/external \"jsonwebtoken\"","webpack://AceApiServer/./lib/jwt.js","webpack://AceApiServer/./lib/instagram.js","webpack://AceApiServer/external \"deep-diff\"","webpack://AceApiServer/external \"json-query\"","webpack://AceApiServer/external \"embedly\"","webpack://AceApiServer/./lib/embedly.js","webpack://AceApiServer/external \"node-sass\"","webpack://AceApiServer/external \"i18n-iso-countries\"","webpack://AceApiServer/external \"moment\"","webpack://AceApiServer/external \"html-to-text\"","webpack://AceApiServer/external \"mjml-mailchimp\"","webpack://AceApiServer/external \"mjml-validator\"","webpack://AceApiServer/external \"mjml-core\"","webpack://AceApiServer/external \"mjml\"","webpack://AceApiServer/external \"inky\"","webpack://AceApiServer/external \"email-templates\"","webpack://AceApiServer/external \"nodemailer-mailgun-transport\"","webpack://AceApiServer/external \"createsend-node\"","webpack://AceApiServer/external \"nodemailer\"","webpack://AceApiServer/./lib/ecommerce.js","webpack://AceApiServer/external \"querystring\"","webpack://AceApiServer/./lib/auth.js","webpack://AceApiServer/external \"password-hash\"","webpack://AceApiServer/./config.default.js","webpack://AceApiServer/./index.js","webpack://AceApiServer/external \"xxhashjs\"","webpack://AceApiServer/external \"deep-freeze\"","webpack://AceApiServer/external \"object-sizeof\"","webpack://AceApiServer/external \"circular-json-es6\"","webpack://AceApiServer/external \"le_node\"","webpack://AceApiServer/external \"zlib\"","webpack://AceApiServer/external \"url-parse\"","webpack://AceApiServer/external \"cache-manager-redis-store\"","webpack://AceApiServer/external \"cache-manager\"","webpack://AceApiServer/./server/index.js","webpack://AceApiServer/external \"connect-redis\"","webpack://AceApiServer/external \"express-session\"","webpack://AceApiServer/external \"method-override\"","webpack://AceApiServer/external \"body-parser\"","webpack://AceApiServer/external \"cookie-parser\"","webpack://AceApiServer/external \"helmet\"","webpack://AceApiServer/external \"morgan\"","webpack://AceApiServer/external \"http\"","webpack://AceApiServer/./server/server.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","_","Db","Helpers","DEFAULT_CLIENT_CONFIG","_id","client","assets","schemas","taxonomies","users","roles","provider","ClientConfig","config","_classCallCheck3","default","this","clientConfig","connect","merge","slug","createOrUpdate","Cloudant","dbName","url","db","maxAttempt","plugins","retry","retryDelayMultiplier","retryInitialDelayMsecs","use","Promise","assistUrl","assist","thumbnail","settings","cropSlug","cropDefault","settingsArray","split","forEach","setting","crop","crops","x","y","x2","y2","g","push","join","settingsString","test","thumbnailType","ext","thumbnailUrl","replace","doc","resolve","reject","insert","then","response","id","_rev","rev","error","statusCode","docs","chunkSize","arguments","length","undefined","promises","chunk","bulk","all","entities","groupSize","Infinity","grouped","group","entity","groupBefore","groupAfter","ratio","groupRatio","_stringify2","Date","array","replacementObject","map","environment","process","env","ENVIRONMENT","api","prefix","API_PREFIX","forceHttps","API_FORCE_HTTPS","JSON","parse","blacklistToken","API_BLACKLIST_TOKEN","blacklistReferrer","API_BLACKLIST_REFERRER","session","secret","SESSION_SECRET","ttl","parseInt","SESSION_TTL","cache","enabled","CACHE_ENABLED","CACHE_TTL","compress","CACHE_COMPRESS","memory","max","CACHE_MEMORY_MAX","redis","REDIS_URL","host","REDIS_HOST","port","REDIS_PORT","password","REDIS_PASSWORD","REDIS_DB","logentriesToken","LOGENTRIES_TOKEN","fields","type","dataType","Fields","field","_freeze2","find","Schema","schema","cc","updateEntityIndex","set","schemaSlug","Error","index","findIndex","splice","schemaSlugs","isArray","filter","indexOf","concat","uniqBy","ddoc","default_field","analyzer","selector","$and","fieldRef","result","jsonQuery","diff","Assist","Entity","flattenValues","fieldSlug","searchTerm","viewWithList","startkey","endkey","ids","options","parents","role","query","include_docs","keys","view","_appendParents","docMap","childDepth","children","rowOrDoc","isRow","size","_queriesFromString","flatten","_query","obj","uniq","_entitiesById","row","_docs","rows","_childDepthLimit","_getDocMap","select","_mergeDocs","_this","updatedEntities","mapValues","remove","chunkUpdate","_this2","entityMap","title","published","_extendDocs","_this3","limit","Math","min","sort","isString","include_fields","bookmark","group_field","search","groups","total_rows","hits","_this4","_entitySearch","__entitySearch","_this5","clone","_context6","t0","entityId","_this6","revs_info","revisionIds","_revs_info","revision","status","open_revs","revisions","childrenIds","ok","fetch","childrenMap","console","_appendChildren","_this7","_this8","restore","_this9","entityIds","entityOrEntityId","isObject","oldEntity","newEntity","path","mergeWith","a","b","trashed","_updateChildren","forever","filesResult","deleted","_removeChildren","fileNames","_fileNames","deleteFiles","_deleted","entitiesResult","files","omitBy","startsWith","filterEntityFields","file","data","queryParts","trim","slice","locals","input","start","end","sample","sampleSize","pick","_len","paths","Array","_key","copy","pathParts","match","pathFrom","pathTo","allowRegexp","queryString","methodArgs","queries","merging","isNumber","fieldQueryMap","fs","nodemailer","Createsend","promisifyAll","nodemailerMailgunTransport","EmailTemplate","Inky","mjml2html","registerComponent","registerDependencies","McSection","McImage","htmlToText","moment","countries","sass","Email","inky","mc-section","mj-column","mj-hero","templateSlug","templateData","templateOptions","inlineStyles","mjml","skipValidation","templatePath","email","templatesPath","existsSync","templateFiles","readdirSync","htmlPath","fileName","extension","style","renderSync","sourceMapContents","sourceMapEmbed","css","toString","emailTemplate","views","juice","juiceResources","preserveMediaQueries","preserveFontFaces","removeStyleTags","removeLinkTags","preserveImportant","webResources","links","scripts","images","transport","jsonTransport","helpers","render","html","convertMjmlResult","level","errors","releaseTheKraken","text","fromString","emailOptions","nodemailerMailgun","createTransport","auth","api_key","mailgun","apiKey","domain","getTemplate","sendMail","metadata","details","listId","createsend","cs","clientApiKey","subscribers","addSubscriberAsync","EmailAddress","Name","Resubscribe","RestartSubscriptionBasedAutoresponders","emailAddress","catch","Message","permissions","entityGrid","entityCreate","entityRead","entityUpdate","entityDelete","taxonomyCreate","taxonomyRead","taxonomyUpdate","taxonomyDelete","fileCreate","fileRead","fileUpdate","fileDelete","user","userSettings","tools","ecommerce","Roles","axios","passwordHash","assetsSlug","post","username","generate","_ref","_ref2","_ref3","_ref4","_ref5","User","router","authMiddleware","permissionMiddleware","asyncMiddleware","getConfig","handleResponse","handleError","_asyncToGenerator3","_regenerator2","mark","_callee","req","res","wrap","_context","prev","next","t1","sent","t2","t3","t4","body","t5","t6","stop","_x","_x2","apply","_callee2","_context2","read","userId","_x3","_x4","put","_callee3","_context3","update","_x5","_x6","delete","_callee4","_context4","userIds","_x7","_x8","Tools","getDb","setHeader","send","getChanges","Jwt","payload","jwt","token","dev","pickBy","isNaN","signToken","apiToken","_ref6","_ref7","_ref8","Taxonomy","cacheMiddleware","taxonomy","taxonomySlug","taxonomySlugs","_callee5","_context5","createTerm","term","_x9","_x10","_callee6","updateTerm","_x11","_x12","_callee7","_context7","deleteTerm","_x13","_x14","Ecommerce","Stripe","order","stripe","checkout","amount","Number","refund","retrieveAccount","template","getSettings","getOrder","orderId","Instagram","instagramAccessTokenMap","method","params","Twitter","twitter","param","consumer_key","consumerKey","consumer_secret","consumerSecret","access_token_key","accessTokenKey","access_token_secret","accessTokenSecret","instagram","access_token","abrupt","client_id","clientId","pagination","next_url","Shopify","shopify","getCatalog","Shippo","shippo","address","parcel","getQuote","Settings","schemaId","updateAll","Auth","providerApiBaseUrl","google","spotify","vimeo","providerApiHandler","endpoint","providerConfig","floor","getTime","begins","expires_in","authProvider","token_type","request","baseURL","headers","Authorization","Pdf","pdf","getPayload","getPdf","attachment","json","assetSlug","_ref9","_ref10","_ref11","_ref12","indexAsync","q","_keys2","_typeof3","entitySearch","use_index","$or","$exists","entityFind","fieldValues","entityList","entityRevisions","_callee8","_context8","_x15","_x16","_callee9","_context9","_x17","_x18","_callee10","_context10","_x19","_x20","_callee11","_context11","_x21","_x22","Embedly","embedly","oembed","urls","renderTemplate","fromName","fromEmail","toName","toEmail","from","to","subject","sendEmail","subscribe","messages","message","getType","setType","item","deleteType","verifyDiscount","code","useragent","source","pattern","store","items","del","error_description","Analytics","analytics","changes","dbBackupFile","readFileAsync","fileConents","unlinkAsync","cloudant","destroy","entityGroups","terms","entitiesByTerm","_term","parent","Hashids","StripeClass","hashids","clientStripeAccountId","stripe_user_id","customerDetails","log","findOrCreateCustomer","customer","createOrder","updateOrCreateStripeCustomer","stripeCustomer","updateCustomer","createCharge","updatedOrder","sendReceipt","orderReceipt","sendNotification","orderNotification","updateOrder","finalOrder","accounts","retrieve","refunds","refund_application_fee","charge","stripe_account","charges","amountRefunded","amount_refunded","now","newCustomer","createdAt","modifiedAt","phone","billingAddress","shippingAddress","orders","description","customer_id","customers","price","quantity","newOrder","encode","shippingMethod","subtotal","tax","rate","includedInPrice","total","show","discount","currency","iso","toLowerCase","capture","order_id","statement_descriptor","kebabCase","storeName","toUpperCase","application_fee","ceil","paymentGateway","livemode","_this10","emailSenderName","emailSenderAddress","_this11","he","Handlebars","jsontoxml","shopLink","productLinkTemplate","X-Shopify-Storefront-Access-Token","storefrontAccessToken","compile","products","shop","edges","edge","g:id","node","handle","g:title","g:description","g:link","g:image_link","originalSrc","g:brand","vendor","g:condition","g:availability","availableForSale","g:price","priceRange","minVariantPrice","currencyCode","channel","product","addressFrom","object_purpose","zip","fromZip","country","fromCountry","addressTo","distance_unit","mass_unit","shipment","address_from","address_to","ratesReady","attempts","object_status","object_id","val","rates","webpackEmptyContext","e","_eval","readdir","templates","templateId","readFileSync","assistPdfUrl","uri","encoding","form","sign","tokenSecret","verify","version","requestOptions","qs","extend","_request","EmbedlyApi","opts","format","dateStart","dateEnd","querystring","providerTokenUri","superUserId","superUser","active","refresh","providerClientConfig","grant_type","client_secret","clientSecret","redirect_uri","redirectUri","refresh_token","providerAuth","stringify","debug","DEBUG","SLUG","baseUrl","BASE_URL","DB_URL","DB_HOST","DB_NAME","requestPlugin","DB_REQUEST_PLUGIN","meterType","DB_METER_TYPE","AUTH_SUPER_USER_ID","AUTH_TOKEN_SECRET","DEV_USER_ID","DEV_ROLE","cms","CMS_TITLE","CMS_URL","ASSIST_URL","ASSIST_USERNAME","ASSIST_PASSWORD","MAILGUN_API_KEY","MAILGUN_DOMAIN","EMBEDLY_API_KEY","__dirname","GOOGLE_CLIENT_ID","GOOGLE_CLIENT_SECRET","INSTAGRAM_CLIENT_ID","INSTAGRAM_CLIENT_SECRET","SPOTIFY_CLIENT_ID","SPOTIFY_CLIENT_SECRET","STRIPE_CLIENT_ID","STRIPE_CLIENT_SECRET","STRIPE_API_KEY","TWITTER_CONSUMER_KEY","TWITTER_CONSUMER_SECRET","TWITTER_ACCESS_TOKEN_KEY","TWITTER_ACCESS_TOKEN_SECRET","VIMEO_CLIENT_ID","VIMEO_CLIENT_SECRET","Api","defaultConfig","args","Function","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","_len6","_key6","_len7","_key7","_len8","_key8","_len9","_key9","_len10","_key10","_len11","_key11","_len12","_key12","_len13","_key13","_len14","_key14","_len15","_key15","_len16","_key16","_len17","_key17","_len18","_key18","_len19","_key19","_len20","_key20","_len21","_key21","_len22","_key22","on","express","cacheManager","redisStore","URL","zlib","Logger","CircularJSON","sizeof","deepFreeze","XXH","HASH_SEED","app","customConfig","customAuthMiddleware","fn","skipAuth","route","RegExp","cloneConfig","omitUndefined","forIn","isPlainObject","isUndefined","cloneDeep","configClone","redisOptions","redisClient","caching","getClient","hash","h64","__cache","gunzipAsync","Buffer","cacheResponse","gzipAsync","Router","enable","scheme","redirect","Access-Control-Allow-Origin","Access-Control-Allow-Methods","Access-Control-Expose-Headers","Vary","sendStatus","referrer","referer","referrerHostname","hostname","verifyToken","context","authorised","permission","stack","statusText","afterResponse","removeListener","PORT","HOST","http","logger","helmet","cookieParser","bodyParser","methodOverride","RedisStore","AceApiServer","listen","sessionOptions","resave","saveUninitialized","cookie","maxAge","urlencoded","extended","server","createServer"],"mappings":"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","file":"server.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AceApiServer\"] = factory();\n\telse\n\t\troot[\"AceApiServer\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 112);\n","module.exports = require(\"babel-runtime/helpers/asyncToGenerator\");","module.exports = require(\"babel-runtime/regenerator\");","module.exports = require(\"lodash\");","module.exports = require(\"babel-runtime/helpers/createClass\");","module.exports = require(\"babel-runtime/helpers/classCallCheck\");","const _ = require('lodash');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Roles = require('./roles');\n\nconst roles = new Roles();\n\nconst DEFAULT_CLIENT_CONFIG = {\n  _id: 'config',\n  client: {},\n  assets: {},\n  schemas: [],\n  taxonomies: [],\n  users: [],\n  roles: roles.roles(),\n  provider: {},\n  module: {},\n};\n\nclass ClientConfig {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async get() {\n    let clientConfig = DEFAULT_CLIENT_CONFIG;\n\n    try {\n      clientConfig = await Db.connect(this.config).get('config');\n\n      clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n    } catch (error) {\n      //\n    }\n\n    clientConfig.slug = this.config.slug;\n\n    return clientConfig;\n  }\n\n  async set(clientConfig) {\n    clientConfig._id = 'config';\n\n    delete clientConfig.roles;\n\n    clientConfig = await Helpers.createOrUpdate(this.config, clientConfig);\n\n    clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n\n    return clientConfig;\n  }\n}\n\n\nmodule.exports = ClientConfig;\n","module.exports = require(\"bluebird\");","const Cloudant = require('@cloudant/cloudant');\n\nclass Db {\n  constructor (config, dbName) {\n    this.config = config;\n\n    return Db.connect(config, dbName);\n  }\n\n  static connect (config, dbName) {\n    const cloudant = new Cloudant({\n      url: config.db.url,\n      maxAttempt: 5,\n      plugins: [\n        'promises',\n        {\n          retry: {\n            retryDelayMultiplier: 2,\n            retryInitialDelayMsecs: 500,\n          },\n        },\n      ],\n    });\n\n    return cloudant.db.use(dbName || config.db.name);\n  }\n}\n\nmodule.exports = Db;\n","module.exports = require(\"babel-runtime/core-js/json/stringify\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\n\nclass Helpers {\n  constructor(config) {\n    this.config = config;\n    this.assistUrl = config.assist.url;\n    this.slug = config.slug;\n  }\n\n  static createOrUpdate (config, doc) {\n    return new Promise((resolve, reject) => {\n      Db.connect(config).insert(doc)\n        .then((response) => {\n          doc._id = response.id;\n          doc._rev = response.rev;\n          resolve(doc);\n        }, (error) => {\n          if (error.statusCode !== 409) {\n            reject(error);\n            return;\n          }\n\n          Db.connect(config).get(doc._id)\n            .then((response) => {\n              doc._rev = response._rev;\n\n              Db.connect(config).insert(doc)\n                .then((response) => {\n                  doc._rev = response.rev;\n                  resolve(doc);\n                }, reject);\n            }, reject);\n        });\n    });\n  }\n\n  static chunkUpdate (config, docs, chunkSize = 1000) {\n    return new Promise((resolve, reject) => {\n      const chunks = _.chunk(docs, chunkSize);\n      const promises = [];\n\n      chunks.forEach((chunk) => {\n        promises.push(new Promise((resolve, reject) => {\n          Db.connect(config).bulk({\n            docs: chunk,\n          }).then(resolve, reject);\n        }));\n      });\n\n      Promise.all(promises).then(resolve, reject);\n    });\n  }\n\n  static groupEntities (entities, groupSize = Infinity) {\n    const grouped = [];\n\n    let group = {\n      entities: [],\n    };\n\n    entities.forEach((entity) => {\n      if (!entity.groupBefore || group.entities.length >= groupSize) {\n        group = {\n          entities: [],\n        };\n      }\n\n      group.entities.push(entity);\n\n      if (!entity.groupAfter || group.entities.length >= groupSize) {\n        group.ratio = 0;\n\n        group.entities.forEach((entity) => {\n          group.ratio += (entity.thumbnail || entity).ratio;\n        });\n\n        group.entities.forEach((entity) => {\n          entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n        });\n\n        grouped.push(group);\n      }\n    });\n\n    return grouped;\n  }\n\n  static now () {\n    return JSON.stringify(new Date()).replace(/\"/g, '');\n  }\n\n  static replace (array, replacementObject, key) {\n    return array.map((object) => {\n      if (object[key] === replacementObject[key]) {\n        return replacementObject;\n      }\n      return object;\n    });\n  }\n\n  thumbnailSrc (thumbnail, settings, cropSlug, cropDefault) {\n    if (!thumbnail) {\n      return '';\n    }\n\n    let settingsArray;\n\n    if (typeof settings === 'string') {\n      settingsArray = settings.split(/,|;/);\n\n      settings = {};\n\n      settingsArray.forEach((setting) => {\n        setting = setting.split(/_|:/);\n\n        settings[setting[0]] = setting[1];\n      });\n    }\n\n    const crop = thumbnail.crops ? thumbnail.crops[cropSlug] : false;\n\n    if (crop) {\n      settings.x = crop[0];\n      settings.y = crop[1];\n      settings.x2 = crop[2];\n      settings.y2 = crop[3];\n    } else if (cropDefault) {\n      settings.g = cropDefault;\n    }\n\n    settingsArray = [];\n\n    _.forEach(settings, (value, key) => {\n      settingsArray.push([key, value].join(':'));\n    });\n\n    const settingsString = settingsArray.join(';');\n\n    if (/(image)/.test(thumbnail.thumbnailType)) {\n      if (thumbnail.ext === 'svg') {\n        return [this.assistUrl, this.slug, thumbnail.name + thumbnail.ext].join('/');\n      }\n\n      return [this.assistUrl, this.slug, 'transform', settingsString, thumbnail.name + thumbnail.ext].join('/');\n    }\n\n    if (/(video)/.test(thumbnail.thumbnailType)) {\n      return [this.assistUrl, this.slug, 'transform', settingsString, thumbnail.name, 'thumb.jpg'].join('/');\n    }\n\n    if (/(oembed|proxy)/.test(thumbnail.thumbnailType)) {\n      const thumbnailUrl = thumbnail.thumbnailUrl.replace(/https?:\\/\\//, '');\n\n      return [this.assistUrl, this.slug, 'proxy', 'transform', settingsString, thumbnailUrl].join('/');\n    }\n\n    return '';\n  }\n\n}\n\nmodule.exports = Helpers;\n","module.exports = require(\"axios\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"babel-runtime/core-js/object/keys\");","module.exports = require(\"lodash/isArray\");","const config = {\n  environment: process.env.ENVIRONMENT || 'development',\n\n  api: {\n    prefix: process.env.API_PREFIX || '',\n    forceHttps: process.env.API_FORCE_HTTPS ? JSON.parse(process.env.API_FORCE_HTTPS) : false,\n    blacklistToken: (process.env.API_BLACKLIST_TOKEN || '').split(','),\n    blacklistReferrer: (process.env.API_BLACKLIST_REFERRER || '').split(','),\n  },\n\n  session: {\n    secret: process.env.SESSION_SECRET || 'change_me',\n    ttl: parseInt(process.env.SESSION_TTL || 7200, 10),\n  },\n\n  cache: {\n    enabled: process.env.CACHE_ENABLED ? JSON.parse(process.env.CACHE_ENABLED) : false,\n    ttl: parseInt(process.env.CACHE_TTL || 30, 10) * 60, // 30mins\n    compress: process.env.CACHE_COMPRESS ? JSON.parse(process.env.CACHE_COMPRESS) : false,\n    memory: {\n      max: parseInt(process.env.CACHE_MEMORY_MAX || 128, 10) * 1000 * 1000, // ~128mb\n    },\n  },\n\n  redis: {\n    url: process.env.REDIS_URL,\n    host: process.env.REDIS_HOST,\n    port: process.env.REDIS_PORT,\n    password: process.env.REDIS_PASSWORD,\n    db: parseInt(process.env.REDIS_DB || 0, 10),\n  },\n\n  logentriesToken: process.env.LOGENTRIES_TOKEN,\n};\n\nmodule.exports = config;\n","module.exports = require(\"babel-runtime/helpers/typeof\");","module.exports = require(\"request-promise\");","const _ = require('lodash');\n\nconst fields = [\n  {\n    type: 'attachment',\n    name: 'Attachment',\n    dataType: null,\n  },\n  {\n    type: 'audio',\n    name: 'Audio',\n    dataType: null,\n  },\n  {\n    type: 'checkbox',\n    name: 'Checkbox',\n    dataType: 'boolean',\n  },\n  {\n    type: 'color',\n    name: 'Color',\n    dataType: 'string',\n  },\n  {\n    type: 'date',\n    name: 'Date',\n    dataType: 'string',\n  },\n  {\n    type: 'embedly',\n    name: 'Embedly',\n    dataType: null,\n  },\n  {\n    type: 'entity',\n    name: 'Entity',\n    dataType: 'array',\n  },\n  {\n    type: 'entityGrid',\n    name: 'Entity Grid',\n    dataType: 'array',\n  },\n  {\n    type: 'entityTile',\n    name: 'Entity Tile',\n    dataType: 'array',\n  },\n  {\n    type: 'image',\n    name: 'Image',\n    dataType: null,\n  },\n  {\n    type: 'keyValue',\n    name: 'Key Value',\n    dataType: null,\n  },\n  {\n    type: 'number',\n    name: 'Number',\n    dataType: 'number',\n  },\n  {\n    type: 'richText',\n    name: 'Rich Text',\n    dataType: null,\n  },\n  {\n    type: 'select',\n    name: 'Select',\n    dataType: 'array',\n  },\n  {\n    type: 'taxonomy',\n    name: 'Taxonomy',\n    dataType: null,\n  },\n  {\n    type: 'text',\n    name: 'Text',\n    dataType: 'string',\n  },\n  {\n    type: 'textArea',\n    name: 'Text Area',\n    dataType: 'string',\n  },\n  {\n    type: 'user',\n    name: 'User',\n    dataType: 'array',\n  },\n  {\n    type: 'video',\n    name: 'Video',\n    dataType: null,\n  },\n  {\n    type: 'vimeo',\n    name: 'Vimeo',\n    dataType: null,\n  },\n];\n\nclass Fields {\n  static fields() {\n    return fields.map(field => Object.freeze(field));\n  }\n  static field(type) {\n    return _.find(Fields.fields(), { type });\n  }\n}\n\nmodule.exports = Fields;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Fields = require('./fields');\n\nclass Schema {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas.push(schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(schemaSlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const schema = _.find(clientConfig.schemas, { slug: schemaSlug });\n\n    if (!schema) {\n      throw Error(`Schema not found: ${schemaSlug}`);\n    }\n\n    return schema;\n  }\n\n  async update(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.schemas, { slug: schema.slug });\n\n    if (index === -1) {\n      throw Error(`Schema not found: ${schema.slug}`);\n    }\n\n    clientConfig.schemas.splice(index, 1, schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(schemaSlugs) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    schemaSlugs = _.isArray(schemaSlugs) ? schemaSlugs : [schemaSlugs];\n\n    clientConfig.schemas = clientConfig.schemas.filter(schema => schemaSlugs.indexOf(schema.slug) === -1);\n\n    clientConfig.schemas = clientConfig.schemas.map((schema) => {\n      if (!schema.fields) {\n        return schema;\n      }\n      schema.fields = schema.fields.map((field) => {\n        if (!field.settings) {\n          return field;\n        }\n        if (field.settings.schemas) {\n          field.settings.schemas = field.settings.schemas.filter(schema => schemaSlugs.indexOf(schema) === -1);\n        }\n        return field;\n      });\n      return schema;\n    });\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateAll(schemas) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas = schemas;\n\n    // await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateEntityIndex(schemas) {\n    let fields = [];\n\n    schemas.forEach((schema) => {\n      fields = fields.concat(schema.fields);\n    });\n\n    fields = _.uniqBy(fields, 'slug');\n\n    const index = {\n      name: 'entity',\n      type: 'text',\n      ddoc: 'entityIndex',\n      index: {\n        default_field: {\n          enabled: true,\n          analyzer: 'standard',\n        },\n        selector: {\n          $and: [\n            {\n              type: 'entity',\n            },\n          ],\n        },\n        fields: [\n          {\n            name: 'published',\n            type: 'boolean',\n          },\n          {\n            name: 'trashed',\n            type: 'boolean',\n          },\n          {\n            name: 'title',\n            type: 'string',\n          },\n          {\n            name: 'slug',\n            type: 'string',\n          },\n          {\n            name: 'schema',\n            type: 'string',\n          },\n          {\n            name: 'modifiedAt',\n            type: 'string',\n          },\n          {\n            name: 'publishedAt',\n            type: 'string',\n          },\n        ],\n      },\n    };\n\n    fields.forEach((field) => {\n      const fieldRef = Fields.field(field.type);\n\n      if (/number|string|boolean/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value`,\n          type: fieldRef.dataType,\n        });\n      }\n\n      if (/array/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.[].slug`,\n          type: 'string',\n        });\n      }\n\n      if (/taxonomy/.test(field.type)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.terms.[].slug`,\n          type: 'string',\n        });\n      }\n    });\n\n    const result = await Db.connect(this.config).index(index);\n\n    return result;\n  }\n\n}\n\nmodule.exports = Schema;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst jsonQuery = require('json-query');\nconst diff = require('deep-diff').diff;\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Schema = require('./schema');\nconst Assist = require('./assist');\n\nconst CHUNK_UPDATE_SIZE = 1000;\n\nclass Entity {\n  constructor(config) {\n    this.config = config;\n\n    // Expose helpers\n    this.flattenValues = Entity.flattenValues;\n  }\n\n  static flattenValues(docs) {\n    return docs.map((doc) => {\n      if (!doc.fields || !_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (/entity/.test(field.type) && _.isArray(field.value)) { // entity / entityTile / entityGrid\n          field.value = Entity.flattenValues(field.value);\n        }\n        return field.value;\n      });\n\n      return doc;\n    });\n  }\n\n  static filterEntityFields(docs, role = 'guest') {\n    const isArray = _.isArray(docs);\n\n    docs = (isArray ? docs : [docs]).map((doc) => {\n      if (_.size(doc.fields)) {\n        doc.fields = _.mapValues(doc.fields, (field) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter((obj) => {\n              if (!obj) {\n                return false;\n              }\n              if (obj.type && obj.type === 'entity' && role === 'guest') {\n                return obj.published !== undefined ? obj.published : true;\n              }\n              return true;\n            });\n          }\n          return field;\n        });\n      }\n      return doc;\n    });\n\n    return isArray ? docs : docs[0];\n  }\n\n  static _appendChildren(docs, childrenMap) {\n    return docs.map((doc) => {\n      if (!_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (_.isArray(field.value)) {\n          field.value = field.value.filter((obj) => {\n            if (!obj) {\n              return false;\n            }\n            if (obj.type === 'entity') {\n              return childrenMap[obj.id] !== undefined;\n            }\n            return true;\n          });\n\n          field.value = field.value.map((obj) => {\n            if (obj.type === 'entity') {\n              obj = _.merge(obj, childrenMap[obj.id]);\n            }\n            obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n            return obj;\n          });\n        }\n\n        return field;\n      });\n\n      return doc;\n    });\n  }\n\n  static _appendParents(result, parents = null, role = 'guest') {\n    let entityMap = {};\n\n    result.rows.forEach((row) => {\n      if (!row.doc) {\n        return;\n      }\n\n      if (row.value.type === 'entity') {\n        if (parents) {\n          row.doc.parents = [];\n        }\n        entityMap[row.id] = row.doc;\n      }\n    });\n\n    if (parents) {\n      result.rows.forEach((row) => {\n        if (row.doc && row.value.type === 'parent') {\n          entityMap[row.key].parents.push(Entity.filterEntityFields(row.doc, role));\n        }\n      });\n\n      entityMap = _.mapValues(entityMap, (entity) => {\n        entity.parents = _.uniqBy(entity.parents, entity => entity._id);\n        return entity;\n      });\n    }\n\n    entityMap = null;\n\n    return result;\n  }\n\n  static _fileNames(entities) {\n    const fileNames = [];\n\n    entities.forEach((entity) => {\n      _.forEach(entity.fields, (field) => {\n        if (field.value && field.value.file) {\n          fileNames.push(field.value.file.name);\n        }\n      });\n    });\n\n    return _.uniq(fileNames);\n  }\n\n  async fieldValues(fieldSlug, searchTerm) {\n    const result = await Db.connect(this.config).viewWithList('entity', 'byField', 'search', {\n      startkey: [fieldSlug],\n      endkey: [fieldSlug, {}],\n      group: true,\n      searchTerm,\n    });\n    return result;\n  }\n\n  static _query(data, query, isFieldQuery = false) {\n    if (isFieldQuery) {\n      const queryParts = query.trim().split(/\\[|\\]/);\n      const selector = `fields.${queryParts[0]}.value[${queryParts[1] || '*'}]`;\n      const modifier = /\\]:/.test(query) ? `:${query.split(/\\]:/).slice(-1)[0].trim()}` : '';\n      query = `${selector}${modifier}`;\n    }\n\n    const result = jsonQuery(query, {\n      data,\n      locals: {\n        slice: (input, start, end) => _.slice(input, start, end),\n        sample: (input, size = 1) => _.sampleSize(input, size),\n        group: (entities, groupSize = Infinity) => {\n          const grouped = [];\n\n          let group = [];\n\n          entities.forEach((entity) => {\n            if (!entity.groupBefore || group.length >= groupSize) {\n              group = [];\n            }\n\n            group.push(entity);\n\n            if (!entity.groupAfter || group.length >= groupSize) {\n              group.ratio = 0;\n\n              group.forEach((entity) => {\n                group.ratio += (entity.thumbnail || entity).ratio;\n              });\n\n              group.forEach((entity) => {\n                entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n              });\n\n              grouped.push(group);\n            }\n          });\n\n          return grouped;\n        },\n        pick: (input, ...paths) => _.map(input, (obj) => {\n          const copy = {\n            id: obj.id || undefined,\n          };\n          paths.forEach((path) => {\n            const pathParts = path.match(/([^\\s]+)/g);\n            const pathFrom = pathParts[0];\n            const pathTo = pathParts[pathParts.length - 1];\n            _.set(copy, pathTo, _.get(obj, pathFrom));\n          });\n          return copy;\n        }),\n      },\n      allowRegexp: true,\n    });\n\n    return result;\n  }\n\n  static _queriesFromString(queryString) {\n    // Remove new lines\n    queryString = queryString.replace(/(\\n|\\r)/gm, '');\n\n    // Match and store (...args) from query so we can split by comma\n    const methodArgs = queryString.match(/\\(([^)]+)\\)/g);\n\n    // Replace (...args) with empty ()\n    queryString = queryString.replace(/\\(.*?\\)/g, '()');\n\n    // Extract queries\n    let queries = queryString.split(/,(?![^([]*[\\])])/g);\n\n    queries = queries.map((query) => {\n      // Replace () with original (...args)\n      if (/\\(\\)/.test(query)) {\n        query = query.replace('()', methodArgs.splice(0, 1));\n      }\n      return query.trim();\n    });\n\n    return queries;\n  }\n\n  async _entitiesById(ids = [], options = {}) {\n    options = _.merge({\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    const query = {\n      include_docs: true,\n    };\n\n    if (ids.length) {\n      query.keys = ids;\n    }\n\n    let result = await Db.connect(this.config)\n      .view('entity', options.parents ? 'byIdExtended' : 'byId', query);\n\n    result = Entity._appendParents(result, options.parents, options.role);\n\n    return result;\n  }\n\n  static _childDepthLimit(children, merging = false) {\n    if (_.isNumber(children)) {\n      return children;\n    }\n    if (_.isArray(children)) {\n      if (merging) {\n        return children.length + 1;\n      }\n      return children.length;\n    }\n    return 1;\n  }\n\n  async _getDocMap(docs, options = {}, docMap = {}, childDepth = 0) {\n    if (!options.parents && !options.children) {\n      return docMap;\n    }\n\n    let ids = [];\n\n    docs.forEach((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      const doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (options.children && doc.fields && _.size(doc.fields)) {\n        if (_.isArray(options.children)) {\n          Entity._queriesFromString(options.children[childDepth]).forEach((query) => {\n            ids = ids.concat(_.flatten(Entity._query(doc, query, true).value).map(obj => obj && obj.id));\n          });\n\n        } else {\n          _.forEach(doc.fields, (field) => {\n            if (_.isArray(field.value)) {\n              field.value = field.value.filter(obj => obj);\n\n              field.value.forEach((obj) => {\n                if (obj.id) {\n                  ids.push(obj.id);\n                }\n              });\n            }\n          });\n        }\n      }\n\n      const id = isRow ? rowOrDoc.id : doc._id || doc.id;\n      if (!docMap[id]) {\n        ids.push(id);\n      }\n    });\n\n    ids = _.uniq(ids);\n\n    ids = ids.filter(id => !docMap[id]);\n\n    if (ids.length === 0) {\n      return docMap;\n    }\n\n    let _docs = (await this._entitiesById(ids, options)).rows.map(row => row.doc);\n\n    _docs.forEach((doc) => {\n      docMap[doc._id] = doc;\n    });\n\n    childDepth += 1;\n\n    if (!options.children || (childDepth >= Entity._childDepthLimit(options.children))) {\n      return docMap;\n    }\n\n    docMap = await this._getDocMap(_docs, options, docMap, childDepth);\n\n    _docs = null;\n\n    return docMap;\n  }\n\n  static _mergeDocs(docs, docMap, children, childDepth = 0) {\n    if (children && (childDepth + 1 >= Entity._childDepthLimit(children, true))) {\n      return docs;\n    }\n\n    docs = docs.map((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      let doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (!doc.fields && docMap[rowOrDoc.id || rowOrDoc._id]) {\n        doc = docMap[rowOrDoc.id || rowOrDoc._id];\n      }\n\n      if (children && doc.fields && _.size(doc.fields)) {\n\n        let fieldQueryMap;\n\n        if (_.isArray(children)) {\n          fieldQueryMap = {};\n          Entity._queriesFromString(children[childDepth]).forEach((query) => {\n            const key = query.split(/\\[|\\]/)[0];\n            fieldQueryMap[key] = query;\n          });\n        }\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter(obj => obj);\n\n            if (!fieldQueryMap || (fieldQueryMap && fieldQueryMap[fieldSlug])) {\n              if (fieldQueryMap && fieldQueryMap[fieldSlug]) {\n                field.value = field.value.filter(obj => obj.id && docMap[obj.id]);\n              }\n\n              field.value = field.value.map((obj) => {\n                if (obj && obj.id && docMap[obj.id]) {\n                  obj = _.merge(obj, docMap[obj.id] || {});\n                  obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n                }\n                return obj;\n              });\n\n              field.value = Entity._mergeDocs(field.value, docMap, children, childDepth + 1);\n            }\n          }\n          return field;\n        });\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            if (fieldQueryMap && fieldQueryMap[fieldSlug]) {\n              field.value = _.flatten(Entity._query(doc, fieldQueryMap[fieldSlug], true).value);\n            }\n          }\n          return field;\n        });\n      }\n\n      if (isRow) {\n        rowOrDoc.doc = doc;\n      } else {\n        rowOrDoc = doc;\n      }\n\n      return rowOrDoc;\n    });\n\n    return docs;\n  }\n\n  async _extendDocs(docs, options = {}) {\n    options = _.merge({\n      select: false,\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    let docMap = await this._getDocMap(docs, options);\n\n    docs = Entity._mergeDocs(docs, docMap, options.children);\n\n    if (options.select) {\n      docs = _.flatten(Entity._query(docs, options.select).value);\n    }\n\n    docMap = null;\n\n    return docs;\n  }\n\n  _removeChildren(entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      entities = entities.map(entity => entity._id);\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const updatedEntities = _.uniqBy(response.rows, row => row.doc._id).map((row) => {\n            row.doc.fields = _.mapValues(row.doc.fields, (field) => {\n              if (_.isArray(field.value)) {\n                field.value = _.remove(field.value, obj => obj.type === 'entity' && entities.indexOf(obj.id) !== -1);\n              }\n              return field;\n            });\n\n            return row.doc;\n          });\n\n          if (updatedEntities.length === 0) {\n            resolve([]);\n            return;\n          }\n\n          Helpers.chunkUpdate(this.config, updatedEntities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  _updateChildren(entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      const entityMap = {};\n\n      entities = entities.map((entity) => {\n        entityMap[entity._id] = entity;\n\n        return entity._id;\n      });\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const entities = response.rows.map((row) => {\n            const entity = row.doc;\n\n            _.forEach(entity.fields, (field, fieldSlug) => {\n              if (_.isArray(field.value)) {\n                entity.fields[fieldSlug].value = field.value.map((obj) => {\n                  if (obj.type === 'entity' && entityMap[obj.id]) {\n                    obj.slug = entityMap[obj.id].slug;\n                    obj.title = entityMap[obj.id].title;\n                    obj.schema = entityMap[obj.id].schema;\n                    obj.published = entityMap[obj.id].published;\n\n                    if (entityMap[obj.id].thumbnail) {\n                      obj.thumbnail = entityMap[obj.id].thumbnail;\n                    } else {\n                      obj.thumbnail = null;\n                    }\n                  }\n\n                  return obj;\n                });\n              }\n            });\n\n            return entity;\n          });\n\n          Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  async entityList(ids = [], options = {}) {\n    options = _.merge({\n      select: false,\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    const result = await this._entitiesById(ids, options);\n\n    // if ((!options.children && !options.parents) || result.total_rows === 0) {\n    //   return result.rows;\n    // }\n\n    const rows = await this._extendDocs(result.rows, options);\n\n    return rows;\n  }\n\n  _entitySearch(query, options = {}) {\n    return new Promise((resolve, reject) => {\n      query.limit = Math.min(query.limit || 200, 200);\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      if (options.children) {\n        query.include_docs = true;\n      }\n\n      if (!query.include_fields) {\n        query.include_fields = [];\n      }\n\n      if (_.isArray(query.include_fields)) {\n        query.include_fields = JSON.stringify(query.include_fields);\n      }\n\n      if (!query.sort) {\n        delete query.sort;\n      }\n      if (!query.bookmark) {\n        delete query.bookmark;\n      }\n      if (!query.index) {\n        delete query.index;\n      }\n      if (!query.group_field) {\n        delete query.group_field;\n      }\n\n      Db.connect(this.config).search('entity', query.index || 'all', query)\n        .then((result) => {\n\n          if (result.groups) {\n            const promises = [];\n\n            result.groups = result.groups.map((group) => {\n              promises.push(new Promise((resolve, reject) => {\n                if ((!options.children && !options.parents) || group.total_rows === 0) {\n                  resolve();\n                  return;\n                }\n\n                this._extendDocs(group.hits, options)\n                  .then((docs) => {\n                    group.hits = docs;\n\n                    resolve();\n                  }, reject);\n              }));\n              return group;\n            });\n\n            Promise.all(promises)\n              .then(() => {\n                resolve(result);\n              }, reject);\n\n            return;\n          }\n\n          if ((!options.children && !options.parents) || result.total_rows === 0) {\n            resolve(result);\n            return;\n          }\n\n          this._extendDocs(result.rows, options)\n            .then((docs) => {\n              result.rows = docs;\n\n              resolve(result);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entitySearch(query, options = {}) {\n    options = _.merge({\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    return new Promise((resolve, reject) => {\n      const limit = query.limit || 25;\n\n      if (limit <= 200) {\n        this._entitySearch(query, options)\n          .then(resolve, reject);\n        return;\n      }\n\n      let rows = [];\n      let groups = [];\n\n      function __entitySearch(bookmark) {\n        const _query = _.clone(query);\n\n        if (bookmark) {\n          _query.bookmark = bookmark;\n        }\n\n        this._entitySearch(_query, options)\n          .then((result) => {\n            if (result.rows) {\n              rows = rows.concat(result.rows);\n            }\n            if (result.groups) {\n              groups = groups.concat(result.groups);\n            }\n\n            if (rows.length < result.total_rows && rows.length < limit) {\n              __entitySearch.call(this, result.bookmark);\n              return;\n            }\n\n            result.rows = rows;\n            result.groups = groups;\n\n            resolve(result);\n          }, reject);\n      }\n\n      __entitySearch.call(this);\n    });\n  }\n\n  async entityFind(query, options = {}) {\n    options = _.merge({\n      children: false,\n      parents: false,\n      role: 'guest',\n    }, options);\n\n    let result;\n\n    try {\n      result = await Db.connect(this.config).find(query);\n    } catch (error) {\n      if (error.error === 'no_usable_index') {\n        const cc = new ClientConfig(this.config);\n        const clientConfig = await cc.get();\n\n        const schema = new Schema(this.config);\n        await schema.updateEntityIndex(clientConfig.schemas);\n\n        result = await Db.connect(this.config).find(query);\n      }\n    }\n\n    if (options.children === false) {\n      return result;\n    }\n\n    if (query.fields && query.fields.indexOf('_id') === -1) {\n      throw new Error('_id field required for `children`');\n    }\n\n    result.docs = await this._extendDocs(result.docs, options);\n\n    return result;\n  }\n\n  entityRevisions(entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId, {\n        revs_info: true,\n      })\n        .then((response) => {\n          const revisionIds = [];\n\n          response._revs_info.forEach((revision) => {\n            if (revision.status === 'available') {\n              revisionIds.push(revision.rev);\n            }\n          });\n\n          Db.connect(this.config).get(entityId, {\n            open_revs: JSON.stringify(revisionIds),\n          })\n            .then((response) => {\n              const revisions = [];\n              const childrenIds = [];\n\n              response.forEach((revision) => {\n                if (revision.ok) {\n                  revisions.push(revision.ok);\n\n                  _.forEach(revision.ok.fields, (field) => {\n                    if (/entity/.test(field.type)) {\n                      _.forEach(field.value, (obj) => {\n                        if (obj.id) {\n                          childrenIds.push(obj.id);\n                        }\n                      });\n                    }\n                  });\n                }\n              });\n\n              Db.connect(this.config).fetch({\n                keys: _.uniq(childrenIds),\n                include_docs: true,\n              })\n                .then((result) => {\n                  const childrenMap = {};\n\n                  result.rows.forEach((row) => {\n                    try {\n                      childrenMap[row.doc._id] = row.doc;\n                    } catch (error) {\n                      console.error('Error: child no longer exists');\n                    }\n                  });\n\n                  resolve(Entity._appendChildren(revisions, childrenMap));\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entityCreate(entity) {\n    return new Promise((resolve, reject) => {\n      entity.type = 'entity';\n\n      Db.connect(this.config).insert(entity)\n        .then((response) => {\n          entity._id = response.id;\n          entity._rev = response.rev;\n\n          resolve(entity);\n        }, reject);\n    });\n  }\n\n  entityRead(entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId)\n        .then(resolve, reject);\n    });\n  }\n\n  entityUpdate(entities, restore) {\n    return new Promise((resolve, reject) => {\n      entities = _.isArray(entities) ? entities : [entities];\n\n      const entityMap = {};\n\n      const entityIds = entities.map((entityOrEntityId) => {\n        let entityId;\n\n        if (_.isObject(entityOrEntityId)) {\n          entityId = entityOrEntityId._id;\n          entityMap[entityId] = entityOrEntityId;\n        }\n        if (_.isString(entityOrEntityId)) {\n          entityId = entityOrEntityId;\n        }\n\n        return entityId;\n      });\n\n      Db.connect(this.config).fetch({\n        keys: entityIds,\n        include_docs: true,\n      })\n        .then((response) => {\n          const children = [];\n\n          const entities = response.rows.map((row) => {\n            const oldEntity = row.doc;\n            const newEntity = entityMap[oldEntity._id];\n\n            let entity = oldEntity;\n\n            if (newEntity) {\n              delete newEntity._rev;\n\n              const diffs = diff(oldEntity, newEntity);\n\n              diffs.forEach((diff) => {\n                if (/slug|title|thumbnail/.test(diff.path[0])) {\n                  if (children.indexOf(newEntity) === -1 && entityIds.indexOf(newEntity._id) !== -1) {\n                    children.push(newEntity);\n                  }\n                }\n              });\n\n              entity = _.mergeWith({}, oldEntity, newEntity, (a, b) => {\n                if (_.isArray(a) && _.isArray(b)) {\n                  return b;\n                }\n                return undefined;\n              });\n            }\n\n            if (restore) {\n              entity.trashed = false;\n            }\n\n            return entity;\n          });\n\n          this._updateChildren(children)\n            .then(() => {\n              Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n                .then(resolve, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  async entityDelete(entityIds, forever = false) {\n    let entities;\n    let filesResult;\n\n    if (entityIds === 'trashed') {\n      forever = true;\n\n      entities = (await Db.connect(this.config).view('entity', 'trashed', {\n        include_docs: true,\n      })).rows;\n\n    } else {\n      entities = (await Db.connect(this.config).fetch({\n        keys: _.isArray(entityIds) ? entityIds : [entityIds],\n        include_docs: true,\n      })).rows;\n    }\n\n    entities = entities.filter(entity => !entity.value || !entity.value.deleted);\n\n    entities = entities.map(entity => entity.doc);\n\n    if (forever) {\n      await this._removeChildren(entities);\n\n      const fileNames = Entity._fileNames(entities);\n\n      if (fileNames.length) {\n        const assist = new Assist(this.config);\n        filesResult = await assist.deleteFiles(fileNames);\n      }\n\n      entities = entities.map(entity => ({\n        _id: entity._id,\n        _rev: entity._rev,\n        _deleted: true,\n      }));\n\n    } else {\n      entities = entities.map((entity) => {\n        entity.trashed = true;\n        return entity;\n      });\n    }\n\n    const entitiesResult = await Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE);\n\n    return {\n      entities: entitiesResult,\n      files: filesResult,\n    };\n  }\n\n}\n\nmodule.exports = Entity;\n","const path = require('path');\nconst fs = require('fs');\nconst _ = require('lodash');\nconst Promise = require('bluebird');\nconst nodemailer = require('nodemailer');\nconst Createsend = Promise.promisifyAll(require('createsend-node'));\nconst nodemailerMailgunTransport = require('nodemailer-mailgun-transport');\nconst EmailTemplate = require('email-templates');\nconst Inky = require('inky').Inky;\nconst mjml2html = require('mjml');\nconst registerComponent = require('mjml-core').registerComponent;\nconst registerDependencies = require('mjml-validator').registerDependencies;\nconst { McSection, McImage } = require('mjml-mailchimp');\nconst htmlToText = require('html-to-text');\nconst moment = require('moment');\nconst countries = require('i18n-iso-countries');\nconst sass = require('node-sass');\n\nconst ClientConfig = require('./client-config');\nconst Helpers = require('./helpers');\n\n\nclass Email {\n  constructor(config) {\n    this.config = config;\n\n    this.inky = new Inky();\n\n    registerComponent(McSection);\n    registerComponent(McImage);\n    registerDependencies({\n      'mc-section': ['mj-column', 'mj-group', 'mj-raw'],\n      'mj-column': ['mc-image'],\n      'mj-hero': ['mc-image'],\n    });\n  }\n\n  getTemplate(templateSlug, templateData = {}, templateOptions = {}) {\n    return new Promise((resolve, reject) => {\n      const options = _.merge({}, {\n        inlineStyles: true,\n        inky: false,\n        mjml: false,\n        skipValidation: false,\n      }, templateOptions);\n\n      let templatePath = path.join(this.config.email.templatesPath, templateSlug);\n\n      if (!fs.existsSync(templatePath)) {\n        templatePath = path.resolve('../email', templateSlug);\n      }\n\n      const templateFiles = fs.readdirSync(templatePath);\n\n      let htmlPath = 'html';\n      // Support mjml templates\n      if (_.find(templateFiles, fileName => /^html\\.mjml/.test(fileName))) {\n        htmlPath = 'html.mjml';\n        options.mjml = true;\n      }\n\n      // Support ejs templates (for backwards compatibility)\n      // TODO: convert ejs templates to pug and remove\n      let extension;\n      if (_.find(templateFiles, fileName => /\\.ejs$/.test(fileName))) {\n        extension = 'ejs';\n      }\n\n      let style = '';\n      if (_.find(templateFiles, fileName => /^style\\.scss$/.test(fileName))) {\n        style = sass.renderSync({\n          file: path.join(templatePath, 'style.scss'),\n          sourceMapContents: !options.inlineStyles,\n          sourceMapEmbed: !options.inlineStyles,\n        }).css.toString().replace(/\"/g, '\\'');\n      }\n\n      const emailTemplate = new EmailTemplate({\n        views: {\n          root: this.config.email.templatesPath,\n          options: {\n            extension,\n          },\n        },\n        juice: options.inlineStyles,\n        juiceResources: {\n          preserveMediaQueries: true,\n          preserveFontFaces: true,\n          removeStyleTags: false,\n          removeLinkTags: false,\n          preserveImportant: true,\n          webResources: {\n            links: false,\n            scripts: false,\n            images: false,\n            // relativeTo: '',\n          },\n        },\n        transport: {\n          jsonTransport: true,\n        },\n      });\n\n      const cc = new ClientConfig(this.config);\n      const helpers = new Helpers(this.config);\n\n      cc.get()\n        .then((clientConfig) => {\n          templateData = _.merge({}, templateData, {\n            config: _.merge({}, _.pick(this.config, ['cms']), _.pick(clientConfig, ['slug', 'client', 'assets'])),\n            helpers,\n            style,\n            moment,\n            countries,\n            templateSlug,\n          });\n\n          emailTemplate.render(`${templateSlug}/${htmlPath}`, templateData)\n            .then((html) => {\n\n              if (options.mjml) {\n                const convertMjmlResult = mjml2html(html, {\n                  level: options.skipValidation ? 'skip' : 'soft',\n                });\n\n                if (convertMjmlResult.errors && convertMjmlResult.errors.length) {\n                  reject(convertMjmlResult.errors);\n                  return;\n                }\n\n                html = convertMjmlResult.html;\n              }\n\n              if (options.inky) {\n                html = this.inky.releaseTheKraken(html);\n              }\n\n              resolve({\n                html,\n                text: htmlToText.fromString(html),\n              });\n            }, reject);\n        }, reject);\n    });\n  }\n\n  sendEmail(emailOptions, templateSlug, templateData = {}, templateOptions = {}) {\n    return new Promise((resolve, reject) => {\n      const nodemailerMailgun = nodemailer.createTransport(nodemailerMailgunTransport({\n        auth: {\n          api_key: this.config.mailgun.apiKey,\n          domain: this.config.mailgun.domain,\n        },\n      }));\n\n      this.getTemplate(templateSlug, _.merge({}, emailOptions, templateData), templateOptions)\n        .then((emailTemplate) => {\n          emailOptions.html = emailTemplate.html;\n          emailOptions.text = emailTemplate.text;\n\n          nodemailerMailgun.sendMail(emailOptions, (error, metadata) => {\n            if (error) {\n              reject(error);\n              return;\n            }\n\n            resolve({\n              metadata,\n              email: emailOptions,\n            });\n          });\n        }, reject);\n    });\n  }\n\n  subscribe(details, provider, listId) {\n    return new Promise((resolve, reject) => {\n      const cc = new ClientConfig(this.config);\n\n      cc.get()\n        .then((clientConfig) => {\n          if (provider === 'createsend') {\n            if (clientConfig.provider.createsend) {\n              const cs = new Createsend({\n                apiKey: clientConfig.provider.createsend.clientApiKey,\n              });\n\n              const subscribers = Promise.promisifyAll(cs.subscribers);\n\n              subscribers.addSubscriberAsync(listId, {\n                EmailAddress: details.email,\n                Name: details.name,\n                Resubscribe: true,\n                RestartSubscriptionBasedAutoresponders: true,\n              })\n                .then((result) => {\n                  resolve(`Email.subscribe(): ${result.emailAddress}`);\n                })\n                .catch((error) => {\n                  reject(error.Message);\n                });\n\n              return;\n            }\n            reject(new Error('Subscriber list not configured'));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Email;\n","module.exports = require(\"babel-runtime/core-js/object/freeze\");","const _ = require('lodash');\n\nconst roles = [\n  {\n    name: 'Admin',\n    slug: 'admin',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: true,\n      settings: true,\n      userSettings: true,\n      tools: true,\n      ecommerce: true,\n    },\n  },\n  {\n    name: 'Editor',\n    slug: 'editor',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: true,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n  {\n    name: 'Guest',\n    slug: 'guest',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: false,\n      entityRead: true,\n      entityUpdate: false,\n      entityDelete: false,\n\n      taxonomyCreate: false,\n      taxonomyRead: true,\n      taxonomyUpdate: false,\n      taxonomyDelete: false,\n\n      fileCreate: false,\n      fileRead: true,\n      fileUpdate: false,\n      fileDelete: false,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: false,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n];\n\nclass Roles {\n  roles() {\n    return roles.map(role => Object.freeze(role));\n  }\n  role(slug) {\n    return _.find(this.roles(), { slug });\n  }\n}\n\nmodule.exports = Roles;\n","module.exports = require(\"@cloudant/cloudant\");","const _ = require('lodash');\nconst axios = require('axios');\nconst passwordHash = require('password-hash');\nconst ClientConfig = require('./client-config');\n\nclass Assist {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async deleteFiles(fileNames) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetsSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n\n    if (fileNames.length === 0) {\n      return [];\n    }\n\n    const result = (await axios.post(`${this.config.assist.url}/${assetsSlug}/file/delete`, { fileNames }, {\n      auth: {\n        username: this.config.assist.username,\n        password: passwordHash.generate(this.config.assist.password),\n      },\n    })).data;\n\n    return result;\n  }\n\n}\n\nmodule.exports = Assist;\n","module.exports = require(\"express\");","module.exports = ({\n  User,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.create(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.read(req.query.userId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.update(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.delete(req.body.userId || req.body.userIds || req.query.userId || req.query.userIds));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Tools,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/tools/export-db.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'tools'),\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        const db = await tools.getDb();\n\n        res.setHeader('Content-Disposition', `attachment; filename=${req.session.slug}.json`);\n        res.setHeader('Content-Type', 'application/json');\n        res.status(200);\n        res.send(db);\n\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/tools/changes.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await tools.getChanges());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Jwt,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  // handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /token:\n   *  get:\n   *    tags:\n   *      - token\n   *    summary: Get JWT\n   *    description: Get Json Web Token (JWT) for API access\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Slug for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: userId\n   *        description: User ID for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: role\n   *        description: Role for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: expiresIn\n   *        description: Duration of token in seconds\n   *        in: query\n   *        required: false\n   *        type: number\n   *    responses:\n   *      200:\n   *        description: Token\n   */\n\n  router.get(\n    '/token.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      const payload = {\n        role: req.session.role,\n        slug: req.session.slug,\n        userId: req.session.userId,\n      };\n\n      if (req.session.role === 'super' || config.environment === 'development') {\n        payload.role = req.query.role || req.session.role || config.dev.role;\n        payload.slug = req.query.slug || req.session.slug || config.dev.slug;\n        if (payload.role !== 'guest') {\n          payload.userId = req.query.userId || req.session.userId || config.dev.userId;\n        }\n      }\n\n      const _ = require('lodash');\n\n      let options = _.pickBy(req.query, (value, key) => /^(expiresIn|notBefore|audience|issuer|jwtid|subject|noTimestamp|header)$/.test(key));\n\n      options = _.mapValues(options, (value) => {\n        if (!_.isNaN(+value)) { // Check if value is a numeric string\n          return +value; // Convert numeric string to number\n        }\n        return value;\n      });\n\n      const jwt = Jwt(config);\n\n      const token = jwt.signToken(payload, options);\n\n      req.session.apiToken = token;\n\n      const response = {\n        token,\n        payload,\n        options,\n      };\n\n      handleResponse(req, res, response);\n    })\n  );\n\n};\n","module.exports = ({\n  Taxonomy,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * definitions:\n   *  TaxonomyTerm:\n   *    type: object\n   *    properties:\n   *      id:\n   *        type: string\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      terms:\n   *        type: array\n   *        items:\n   *          type: object\n   *          $ref: '#/definitions/TaxonomyTerm'\n   */\n\n  /**\n   * @swagger\n   * definitions:\n   *  Taxonomy:\n   *    type: object\n   *    properties:\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      terms:\n   *        type: array\n   *        items:\n   *          type: object\n   *          $ref: '#/definitions/TaxonomyTerm'\n   */\n\n  router.post(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.create(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /taxonomy:\n   *  get:\n   *    tags:\n   *      - taxonomy\n   *    summary: Get taxonomy\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Taxonomy slug\n   *        in: query\n   *        required: true\n   *        type: string\n   *    responses:\n   *      200:\n   *        description: Taxonomy\n   *        schema:\n   *          type: object\n   *          $ref: '#/definitions/Taxonomy'\n   */\n  router.get(\n    '/taxonomy.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.read(req.query.slug || req.query.taxonomySlug), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.update(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.delete(req.body.taxonomySlug || req.body.taxonomySlugs || req.query.taxonomySlug || req.query.taxonomySlugs));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.createTerm(req.body.slug || req.body.taxonomySlug, req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.updateTerm(req.query.term || req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.deleteTerm(req.query.term || req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Ecommerce,\n  Email,\n  Stripe,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.all(\n    '/stripe/checkout.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const token = req.body.token || JSON.parse(req.query.token);\n      const order = req.body.order || JSON.parse(req.query.order);\n\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.checkout(token, order));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/stripe/refund.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const order = req.body.order || JSON.parse(req.query.order);\n      const amount = Number(req.body.amount || req.query.amount || 0) * 100;\n\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.refund(order, amount));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/stripe/account.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.retrieveAccount());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/stripe/email.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig(req.session.slug);\n      const email = Email(config);\n      const stripe = Stripe(config);\n      const ecommerce = Ecommerce(config);\n\n      const settings = await stripe.getSettings();\n      const order = await ecommerce.getOrder(req.query.orderId);\n\n      const data = {\n        settings,\n        order,\n      };\n\n      const template = await email.getTemplate(`${req.session.slug}/${req.query.template}`, data);\n\n      try {\n        handleResponse(req, res, template.html);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = require(\"twitter\");","module.exports = ({\n  ClientConfig,\n  Instagram,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  const instagramAccessTokenMap = {};\n\n  router.get(\n    /\\/social\\/twitter\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      const Promise = require('bluebird');\n      const Twitter = require('twitter');\n\n      const twitter = Promise.promisifyAll(new Twitter({\n        consumer_key: config.provider.twitter.consumerKey,\n        consumer_secret: config.provider.twitter.consumerSecret,\n        access_token_key: config.provider.twitter.accessTokenKey,\n        access_token_secret: config.provider.twitter.accessTokenSecret,\n      }));\n\n      try {\n        handleResponse(req, res, await twitter[`${method}Async`](params.join('/'), req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    /\\/social\\/instagram\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      if (!instagramAccessTokenMap[req.session.slug]) {\n        const cc = ClientConfig(config);\n\n        try {\n          const clientConfig = await cc.get();\n          instagramAccessTokenMap[req.session.slug] = clientConfig.provider.instagram.access_token;\n        } catch (error) {\n          handleError(res, new Error('Instagram: access_token required'));\n          return;\n        }\n      }\n\n      req.query.access_token = instagramAccessTokenMap[req.session.slug];\n\n      const instagram = Instagram({\n        client_id: config.provider.instagram.clientId,\n      });\n\n      try {\n        const result = await instagram[method](params.join('/'), req.query);\n        try {\n          delete result.pagination.next_url;\n        } catch (error) {\n          //\n        }\n        handleResponse(req, res, result, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Shopify,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /shopify/catalog:\n   *  get:\n   *    tags:\n   *      - shopify\n   *    summary: Get Facebook product feed xml\n   * #   description: Get Facebook product feed xml\n   *    produces:\n   *      - application/rss+xml\n   *    parameters:\n   *      - name: shopLink\n   *        description: Shop URL\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: productLinkTemplate\n   *        description: Product URL Handlebars template, containing {{handle}}\n   *        in: query\n   *        required: true\n   *        type: string\n   *    responses:\n   *      200:\n   *        description: XML Product Feed\n   */\n  router.get(\n    '/shopify/catalog.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const shopify = Shopify(await getConfig(req.session.slug));\n\n      try {\n        res.setHeader('Content-Type', 'application/rss+xml');\n        handleResponse(req, res, await shopify.getCatalog(req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Shippo,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.all(\n    '/shippo/quote.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const shippo = Shippo(await getConfig());\n\n      const address = req.body.address || JSON.parse(req.params.address);\n      const parcel = req.body.parcel || JSON.parse(req.params.parcel);\n\n      try {\n        handleResponse(req, res, await shippo.getQuote(address, parcel), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Settings,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/settings.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const settings = Settings(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await settings.update(req.body.settings));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Schema,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.create(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.read(req.query.schemaId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.update(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.delete(req.body.schemaSlug || req.body.schemaSlugs || req.query.schemaSlug || req.query.schemaSlugs));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schemas.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.updateAll(req.body.schemas));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","const _ = require('lodash');\nconst axios = require('axios');\n\nmodule.exports = ({\n  Auth,\n  ClientConfig,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  const providerApiBaseUrl = {\n    google: 'https://www.googleapis.com',\n    instagram: 'https://api.instagram.com',\n    spotify: 'https://api.spotify.com',\n    vimeo: 'https://api.vimeo.com',\n  };\n\n  const providerApiHandler = asyncMiddleware(async (req, res) => {\n    const method = req.method;\n    const provider = req.params[0];\n    const userId = req.params[2] ? req.params[1] : null;\n    const endpoint = (req.params[2] || req.params[1]).split('/').filter(param => param !== '').join('/');\n\n    const config = await getConfig(req.session.slug);\n\n    const cc = ClientConfig(config);\n\n    let clientConfig = await cc.get();\n    let providerConfig;\n\n    if (userId) {\n      if (!clientConfig.userSettings[userId]) {\n        throw Error(`User settings not found: ${userId}`);\n      }\n      providerConfig = clientConfig.userSettings[userId].provider[provider];\n    } else {\n      providerConfig = clientConfig.provider[provider];\n    }\n\n    if (Math.floor(new Date().getTime() / 1000) - (providerConfig.begins || 0) > providerConfig.expires_in) {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      if (userId) {\n        clientConfig = await auth.authProvider(provider, {}, userId, true);\n        providerConfig = clientConfig.userSettings[userId].provider[provider];\n      } else {\n        clientConfig = await auth.authProvider(provider, {}, null, true);\n        providerConfig = clientConfig.provider[provider];\n      }\n    }\n\n    let params = _.merge({}, req.query);\n    params = _.omitBy(params, (value, key) => /^(__)/.test(key));\n\n    if (!/bearer/i.test(providerConfig.token_type)) {\n      params.access_token = providerConfig.access_token;\n    }\n\n    try {\n      const result = await axios.request({\n        url: endpoint,\n        baseURL: providerApiBaseUrl[provider],\n        method,\n        headers: {\n          Authorization: `Bearer ${providerConfig.access_token}`,\n        },\n        params,\n      });\n\n      handleResponse(req, res, result.data, true);\n    } catch (error) {\n      handleError(req, res, error);\n    }\n  });\n\n  router.all(\n    /\\/provider\\/([^/]+)\\/([^/]+)\\/api\\/?(.+)?/,\n    cacheMiddleware,\n    providerApiHandler,\n  );\n\n  router.all(\n    /\\/provider\\/([^/]+)\\/api\\/?(.+)?/,\n    cacheMiddleware,\n    providerApiHandler,\n  );\n\n};\n","const _ = require('lodash');\n\nmodule.exports = ({\n  Pdf,\n  ClientConfig,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleError,\n}) => {\n\n  router.get(\n    '/pdf/view.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          pdf.getPdf(payload)\n            .then((pdf) => {\n              res.type('application/pdf');\n              res.status(200);\n              res.send(pdf);\n            }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/download.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          pdf.getPdf(payload)\n            .then((pdf) => {\n              res.attachment(payload.fileName || 'download.pdf');\n              res.status(200);\n              res.send(pdf);\n            }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/payload.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          res.status(200);\n          res.json(payload);\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/submit.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig(req.session.slug);\n\n      const cc = ClientConfig(config);\n      const clientConfig = await cc.get();\n\n      const assetSlug = _.get(clientConfig, 'assets.slug', req.session.slug);\n\n      const pdf = Pdf(config);\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          payload = JSON.stringify(payload).replace(/'/gi, '’');\n\n          res.status(200);\n          res.send(`\n          <body onload='form.submit()'>\n            <form id='form' method='POST' action='${config.assist.url}/${assetSlug}/pdf/download' target='_self'>\n              <input type='hidden' name='payload' value='${payload}' />\n            </form>\n          </body>\n        `);\n        }, handleError.bind(null, req, res));\n    })\n  );\n};\n","module.exports = ({\n  ClientConfig,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /metadata:\n   *  get:\n   *    tags:\n   *      - metadata\n   *    summary: Get metadata\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Metadata\n   *        schema:\n   *          type: object\n   *          properties:\n   *            description:\n   *              type: string\n   */\n  router.get(\n    '/metadata.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const cc = ClientConfig(await getConfig(req.session.slug));\n\n      const clientConfig = await cc.get();\n\n      try {\n        handleResponse(req, res, clientConfig.client.metadata, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","const isArray = require('lodash/isArray');\n\nmodule.exports = ({\n  Db,\n  Entity,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * definitions:\n   *  Entity:\n   *    type: object\n   *    required:\n   *      - _id\n   *      - _rev\n   *    properties:\n   *      _id:\n   *        type: string\n   *      _rev:\n   *        type: string\n   *      schema:\n   *        type: string\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      thumbnail:\n   *        type: object\n   *      fields:\n   *        type: object\n   *      published:\n   *        type: boolean\n   *      publishedAt:\n   *        type: string\n   */\n\n  /**\n   * @swagger\n   * /entities/index:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Show indexes\n   *    description: Show all indexes, use this to find fields available for search/query.\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Indexes\n   */\n  router.get(\n    '/entities/index.:ext?',\n    asyncMiddleware(async(req, res) => {\n      try {\n        handleResponse(req, res, await Db(await getConfig(req.session.slug)).indexAsync());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/search:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Search entities\n   *    description: This endpoint extends Cloudant's Lucene based search. Learn more from Cloudant's [documentation](https://docs.cloudant.com/search.html).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: Lucene search query\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: include_docs\n   *        description: Include docs in search results (ignored if `children` or `parents` is `true`)\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: sort\n   *        description: Field to sort results by. Prefixed with `-` to reverse order. Suffixed with &#60;`string|number`&#62;\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: limit\n   *        description: Limit results (max 200)\n   *        in: query\n   *        required: false\n   *        type: number\n   *      - name: bookmark\n   *        description: Bookmark for the next page of results\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: group_field\n   *        description: Field to group results by\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: index\n   *        description: Search index\n   *        in: query\n   *        required: false\n   *        type: string\n   *        default: all\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: trashed\n   *        description: Get trashed entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Search result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            total_rows:\n   *              type: number\n   *            rows:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/search?.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async(req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      // eslint-disable-next-line\n      const include_docs = input.include_docs !== undefined\n        ? JSON.parse(input.include_docs) : false;\n\n      // eslint-disable-next-line\n      const include_fields = input.include_fields !== undefined\n        ? typeof input.include_fields === 'object' ? input.include_fields : JSON.parse(input.include_fields)\n        : [];\n\n      let children = input.children !== undefined\n        ? typeof input.children === 'object' ? input.children : JSON.parse(input.children)\n        : false;\n      let parents = input.parents !== undefined\n        ? typeof input.parents === 'object' ? input.parents : JSON.parse(input.parents)\n        : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      const trashed = input.trashed !== undefined\n        ? JSON.parse(input.trashed) : false;\n\n      const sort = input.sort !== undefined\n        ? input.sort : null;\n      const limit = input.limit !== undefined\n        ? parseInt(input.limit, 10) : null;\n\n      const bookmark = input.bookmark !== undefined\n        ? input.bookmark : null;\n\n      // eslint-disable-next-line\n      const group_field = input.group_field !== undefined\n        ? input.group_field : null;\n\n      const index = input.index !== undefined\n        ? input.index : null;\n\n      const q = input.query || input.q;\n\n      let query = [];\n\n      query.push(trashed ? 'trashed:true' : '!trashed:true');\n\n      if (req.session.role === 'guest') {\n        query.push('published:true');\n      }\n\n      if (q) {\n        query.push(`(${q})`);\n      }\n\n      query = query.join(' AND ');\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entitySearch(\n          {\n            query,\n            include_docs,\n            include_fields,\n            sort,\n            limit,\n            bookmark,\n            group_field,\n            index,\n          },\n          {\n            children,\n            parents,\n            role: req.session.role,\n          }\n        ), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/find:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Query entities\n   *    description: This endpoint extends CouchDB's Mango query. Learn more from Cloudant's [documentation](https://docs.cloudant.com/cloudant_query.html#finding-documents-using-an-index).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: JSON query object, refer to CouchDB/Cloudant docs.\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Query result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            docs:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/find.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async(req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      let children = input.children !== undefined\n        ? typeof input.children === 'object' ? input.children : JSON.parse(input.children)\n        : false;\n      let parents = input.parents !== undefined\n        ? typeof input.parents === 'object' ? input.parents : JSON.parse(input.parents)\n        : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      const trashed = input.trashed !== undefined\n        ? JSON.parse(input.trashed) : false;\n\n      const query = input.query\n        ? JSON.parse(input.query) : { selector: {} };\n\n      query.use_index = ['entityIndex', 'entity'];\n\n      if (!query.selector.$and) {\n        query.selector = {\n          $and: [\n            query.selector,\n          ],\n        };\n      }\n\n      if (trashed) {\n        query.selector.$and.push({ trashed: true });\n      } else {\n        query.selector.$and.push({\n          $or: [\n            {\n              trashed: {\n                $exists: false,\n              },\n            },\n            {\n              trashed: false,\n            },\n          ],\n        });\n      }\n\n      if (req.session.role === 'guest') {\n        query.selector.$and.push({ published: true });\n      }\n\n      if (req.query.limit) {\n        query.limit = parseInt(req.query.limit, 10);\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityFind(query, { children, parents, role: req.session.role }), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entities/field.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async(req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.fieldValues(req.query.slug || req.query.fieldSlug, req.query.searchTerm), true);\n      } catch (error) {\n        handleError(res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Get all entities\n   *    description: Get all entities, optionally from an array of IDs\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: id\n   *        description: Entity ID\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: ids\n   *        description: Entity IDs\n   *        in: query\n   *        required: false\n   *        type: array\n   *        items:\n   *          type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Entities\n   *        schema:\n   *          type: array\n   *          items:\n   *            $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async(req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      const select = input.select !== undefined ? input.select : false;\n\n      let children = input.children !== undefined\n        ? typeof input.children === 'object' ? input.children : JSON.parse(input.children)\n        : false;\n      let parents = input.parents !== undefined\n        ? typeof input.parents === 'object' ? input.parents : JSON.parse(input.parents)\n        : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      let ids = input.ids || input.id;\n\n      if (ids) {\n        ids = isArray(ids) ? ids : [ids];\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityList(ids, {\n          select,\n          children,\n          parents,\n          role: req.session.role,\n        }), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity/revisions.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async(req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRevisions(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityCreate'),\n    asyncMiddleware(async(req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityCreate(req.body.entity));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async(req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRead(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityUpdate'),\n    asyncMiddleware(async(req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityUpdate(req.body.entity || req.body.entities, req.body.restore || false));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async(req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityDelete(req.body.entity || req.body.entities, req.body.forever || false));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity/trashed.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async(req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityDelete('trashed'));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Embedly,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/embedly/oembed.:ext?',\n    authMiddleware,\n    asyncMiddleware(async(req, res) => {\n      const embedly = Embedly(await getConfig());\n\n      try {\n        handleResponse(req, res, await embedly.oembed(req.query.url || req.query.urls));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Email,\n  Entity,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /email/preview:\n   *  get:\n   *    tags:\n   *      - email\n   *    summary: Preview email template\n   * #   description: Preview email template\n   *    produces:\n   *      - text/html\n   *    parameters:\n   *      - name: slug\n   *        description: Slug (optionally override slug in development mode)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: templateSlug\n   *        description: Template slug (folder name of the template)\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: payload\n   *        description: JSON payload from which to render the template\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: entityId\n   *        description: Entity `_id` from which to render the template\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: inlineStyles\n   *        description: Inline CSS\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: true\n   *    responses:\n   *      200:\n   *        description: Template\n   */\n  router.all(\n    '/email/preview.:ext?',\n    asyncMiddleware(async(req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query || {};\n\n      const templateOptions = {\n        data: input.data ? JSON.parse(input.data) : false,\n        inlineStyles: input.inlineStyles ? JSON.parse(input.inlineStyles) : true,\n        inky: input.inky ? JSON.parse(input.inky) : false,\n        mjml: input.mjml ? JSON.parse(input.mjml) : false,\n        skipValidation: input.skipValidation ? JSON.parse(input.skipValidation) : false,\n      };\n\n      const slug = input.slug || req.session.slug;\n\n      // if (!slug) {\n      //   throw new Error('Missing `slug` parameter');\n      // }\n\n      async function renderTemplate(data = {}) {\n        if (templateOptions.data) {\n          handleResponse(req, res, data);\n          return;\n        }\n\n        const email = Email(await getConfig(slug));\n\n        try {\n          const template = await email.getTemplate(input.templateSlug, data, templateOptions);\n\n          handleResponse(req, res, template.html);\n        } catch (error) {\n          handleError(req, res, error);\n        }\n      }\n\n      if (input.payload) {\n        renderTemplate(JSON.parse(input.payload));\n        return;\n      }\n\n      if (input.entityId) {\n        const entity = Entity(await getConfig(slug));\n\n        const entities = (await entity.entityList([input.entityId], { children: 2 })).map(row => row.doc);\n\n        renderTemplate(entity.flattenValues(entities)[0]);\n        return;\n      }\n\n      renderTemplate();\n    })\n  );\n\n  router.all(\n    '/email/send.:ext?',\n    asyncMiddleware(async(req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query || {};\n\n      const templateOptions = {\n        inlineStyles: input.inlineStyles ? JSON.parse(input.inlineStyles) : true,\n        inky: input.inky ? JSON.parse(input.inky) : false,\n        mjml: input.mjml ? JSON.parse(input.mjml) : false,\n        skipValidation: input.skipValidation ? JSON.parse(input.skipValidation) : true,\n      };\n\n      const emailOptions = {\n        fromName: input.fromName || '',\n        fromEmail: input.fromEmail,\n        toName: input.toName || '',\n        toEmail: input.toEmail,\n        from: `${input.fromName || ''} <${input.fromEmail}>`,\n        to: input.toEmail,\n        subject: input.subject,\n      };\n\n      const slug = input.slug || req.session.slug;\n\n      const email = Email(await getConfig(slug));\n\n      try {\n        const result = await email.sendEmail(emailOptions, input.templateSlug, input.payload, templateOptions);\n\n        handleResponse(req, res, result);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/email/subscribe.:ext?',\n    asyncMiddleware(async(req, res) => {\n      const email = Email(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await email.subscribe({\n          email: req.body.email || req.query.email,\n          name: req.body.name || req.query.name || '',\n        }));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const isArray = require('lodash/isArray');\n\nmodule.exports = ({\n  Ecommerce,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/ecommerce/order/message/:message.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        const order = await ecommerce.getOrder(req.query.orderId);\n        handleResponse(req, res, order.messages[req.params.message].email.html);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (isArray(req.query.sort)) {\n        req.query.sort = JSON.stringify(req.query.sort).replace(/\\\\\"/g, '');\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.getType(req.params.type, req.query));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (!/^(discount|order)$/.test(req.params.type)) {\n        handleError(req, res, `Illegal type: ${req.params.type}`);\n        return;\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.setType(req.params.type, req.body.item));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (!/^(discount)$/.test(req.params.type)) {\n        handleError(req, res, `Illegal type: ${req.params.type}`);\n        return;\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.deleteType(req.body.item));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/ecommerce/discount/:code.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.verifyDiscount(req.params.code));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = require(\"express-useragent\");","module.exports = ({\n  router,\n}) => {\n\n  router.all('/debug/useragent.:ext?', (req, res) => {\n    const expressUseragent = require('express-useragent');\n    const useragent = expressUseragent.parse(req.headers['user-agent']);\n\n    res.status(200);\n    res.send(`\n      <html>\n        <head>\n          <title>${useragent.source}</title>\n          <meta name=\"description\" content=\"${useragent.source}\">\n        </head>\n        <body>${useragent.source}</body>\n      </html>\n    `);\n  });\n\n};\n","module.exports = ({\n  ClientConfig,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/config.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.get());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/config.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'config'),\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.set(req.body.config));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  router,\n  cache,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n}) => {\n\n  /**\n   * @swagger\n   * /cache/clear:\n   *  get:\n   *    tags:\n   *      - cache\n   *    summary: Clear cache\n   *    description: Clears the LRU cache of API responses\n   *    produces:\n   *      - text/plain\n   *    responses:\n   *      200:\n   *        description: Result\n   */\n  router.get(\n    '/cache/clear.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      if (!config.cache.enabled) {\n        handleResponse(req, res, 'Cache disabled');\n        return;\n      }\n\n      const pattern = cache.store.name === 'redis' ? '*' : undefined;\n\n      cache.keys(pattern).then((keys) => {\n        const items = keys.filter(key => key.indexOf(req.session.slug) === 0);\n\n        items.forEach(key => cache.del(key));\n\n        handleResponse(req, res, `${items.length} items removed from cache`);\n      });\n    })\n  );\n\n};\n","module.exports = ({\n  Auth,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/auth/:provider/config',\n    authMiddleware,\n    permissionMiddleware.bind(null, ['settings', 'userSettings']),\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      if (!config.provider[req.params.provider]) {\n        res.status(404);\n        res.send({});\n        return;\n      }\n\n      res.status(200);\n      res.send({ clientId: config.provider[req.params.provider].clientId });\n    })\n  );\n\n  router.get(\n    '/auth/:provider',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    (req, res) => {\n      res.status(req.query.error ? 500 : 200);\n      res.send(`${req.params.provider}: ${(req.query.error_description ? req.query.error_description : 'successfully authenticated')}`);\n    }\n  );\n\n  router.post(\n    '/auth/:provider',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/auth/:provider/refresh',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, null, true));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/auth/:provider/:userId',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'userSettings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, req.params.userId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/auth/:provider/:userId/refresh',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, req.params.userId, true));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Analytics,\n  router,\n  authMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/analytics.:ext?',\n    authMiddleware,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const analytics = Analytics(await getConfig());\n\n      try {\n        handleResponse(req, res, await analytics.get(req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass User {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.users.push(user);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async update(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.users, { id: user.id });\n\n    if (index === -1) {\n      throw Error(`User not found: ${user.id}`);\n    }\n\n    clientConfig.users.splice(index, 1, user);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    userId = _.isArray(userId) ? userId : [userId];\n\n    clientConfig.users = clientConfig.users.filter(user => userId.indexOf(user.id) === -1);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = User;\n","const Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst Cloudant = require('@cloudant/cloudant');\nconst Db = require('./db');\n\nclass Tools {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getDb() {\n    const result = await Db.connect(this.config).fetch({\n      include_docs: true,\n    });\n\n    return result;\n  }\n\n  async getChanges() {\n    const result = await Db.connect(this.config).changes({\n      limit: 50,\n      include_docs: true,\n      filter: 'tools/changesEntity',\n    });\n\n    return result;\n  }\n\n  async importDb(dbBackupFile) {\n    const dbName = this.config.db.name;\n\n    const fileConents = await fs.readFileAsync(dbBackupFile.path);\n\n    const docs = JSON.parse(fileConents).rows.map((row) => {\n      const { doc } = row;\n      delete doc._rev;\n      return doc;\n    });\n\n    await fs.unlinkAsync(dbBackupFile.path);\n\n    const cloudant = new Cloudant({\n      url: this.config.db.url,\n      plugins: ['promises', 'retry'],\n    }).db;\n\n    try {\n      await cloudant.destroy(dbName);\n    } catch (error) {\n      //\n    }\n\n    await cloudant.create(dbName);\n\n    const result = await Db.connect(this.config, dbName).bulk({ docs });\n\n    return result;\n  }\n\n}\n\nmodule.exports = Tools;\n","const _ = require('lodash');\nconst Db = require('./db');\nconst ClientConfig = require('./client-config');\n\nclass Taxonomy {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async create(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.taxonomies.push(taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const taxonomy = _.find(clientConfig.taxonomies, { slug: taxonomySlug });\n\n    if (!taxonomy) {\n      throw Error(`Taxonomy not found: ${taxonomySlug}`);\n    }\n\n    return taxonomy;\n  }\n\n  async update(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.taxonomies, { slug: taxonomy.slug });\n\n    if (index === -1) {\n      throw Error(`Taxonomy not found: ${taxonomy.slug}`);\n    }\n\n    clientConfig.taxonomies.splice(index, 1, taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    taxonomySlug = _.isArray(taxonomySlug) ? taxonomySlug : [taxonomySlug];\n\n    clientConfig.taxonomies = clientConfig.taxonomies.filter(taxonomy => taxonomySlug.indexOf(taxonomy.slug) === -1);\n\n    return cc.set(clientConfig);\n  }\n\n  async entitiesByTerm(term) {\n    const db = Db.connect(this.config);\n\n    const entityGroups = (await db.view('entity', 'byTaxonomyTerm', { keys: [term.id], group: true })).rows.map(row => row.value)[0];\n\n    if (!entityGroups) {\n      return [];\n    }\n\n    let entityIds = [];\n\n    _.forEach(entityGroups, (entities) => {\n      entityIds = entityIds.concat(entities);\n    });\n\n    entityIds = _.uniq(entityIds);\n\n    const entities = (await db.fetch({ keys: entityIds, include_docs: true })).rows\n      .filter(row => row.doc)\n      .map(row => row.doc);\n\n    return entities;\n  }\n\n  async createTerm(taxonomySlug, term) {\n    const taxonomy = await this.read(taxonomySlug);\n\n    taxonomy.terms.push(term);\n\n    return this.update(taxonomy);\n  }\n\n  async updateTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.map((_term) => {\n            if (_term.id === term.id) {\n              _term.title = term.title;\n              _term.slug = term.slug;\n            }\n\n            if (!_term.parents) {\n              _term.parents = [];\n            }\n\n            _term.parents = _term.parents.map((parent) => {\n              if (parent.id === term.id) {\n                parent.title = term.title;\n                parent.slug = term.slug;\n              }\n              return parent;\n            });\n\n            return _term;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n\n  async deleteTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.filter((_term) => {\n            if (_term.id === term.id) {\n              return false;\n            }\n\n            if ((_term.parents || []).filter(parent => parent.id === term.id).length) {\n              return false;\n            }\n\n            return true;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n}\n\nmodule.exports = Taxonomy;\n","module.exports = require(\"hashids\");","module.exports = require(\"stripe\");","const _ = require('lodash');\nconst Stripe = require('stripe');\nconst Promise = require('bluebird');\nconst Hashids = require('hashids');\n\nconst ClientConfig = require('./client-config');\nconst Email = require('./email');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass StripeClass {\n  constructor(config) {\n    this.config = config;\n\n    this.stripe = Stripe(this.config.stripe.apiKey);\n    this.email = new Email(this.config);\n\n    this.hashids = new Hashids(this.config.slug, 6, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n  }\n\n  async getSettings() {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    let settings;\n\n    try {\n      settings = clientConfig.module.ecommerce;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    try {\n      settings.clientStripeAccountId = clientConfig.provider.stripe.stripe_user_id;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    settings.client = clientConfig.client;\n    settings.assets = clientConfig.assets;\n\n    return settings;\n  }\n\n  checkout(token, order) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n\n          const listId = _.get(settings, 'createsend.checkoutSubscriberListId');\n\n          if (order.subscribe && listId) {\n            this.email.subscribe(order.customerDetails, 'createsend', listId)\n              .then((result) => {\n                console.log(result);\n              }, (error) => {\n                console.error(error);\n              });\n          }\n\n          // lookup customer by email, create if not found\n          this.findOrCreateCustomer(order.customerDetails.email, order)\n            .then((customer) => {\n\n              // store order data (customer, items, address)\n              this.createOrder(order, customer)\n                .then((order) => {\n\n                  this.updateOrCreateStripeCustomer(settings.clientStripeAccountId, customer, token, order)\n                    .then((stripeCustomer) => {\n\n                      // update customer, append order to customer, update metadata\n                      this.updateCustomer(customer, stripeCustomer, order)\n                        .then((customer) => {\n\n                          // create charge, take fee\n                          this.createCharge(settings, stripeCustomer, customer, order)\n                            .then((updatedOrder) => {\n\n                              this.sendReceipt(settings, customer, order)\n                                .then((orderReceipt) => {\n\n                                  updatedOrder.messages.orderReceipt = orderReceipt;\n\n                                  this.sendNotification(settings, customer, order)\n                                    .then((orderNotification) => {\n\n                                      updatedOrder.messages.orderNotification = orderNotification;\n\n                                      // update order charge status, charge id\n                                      this.updateOrder(updatedOrder)\n                                        .then((finalOrder) => {\n\n                                          resolve(finalOrder);\n\n                                        }, reject);\n                                    }, reject);\n                                }, reject);\n                            }, reject);\n                        }, reject);\n                    }, reject);\n                }, reject);\n            }, reject);\n        }, reject)\n        .catch(reject);\n    });\n  }\n\n  retrieveAccount() {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.accounts.retrieve(settings.clientStripeAccountId)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  refund(order, amount) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.refunds.create({\n            refund_application_fee: true,\n            charge: order.charge.id,\n            amount,\n          }, {\n            stripe_account: settings.clientStripeAccountId,\n          })\n            .then((refund) => {\n              this.stripe.charges.retrieve(order.charge.id, {\n                stripe_account: settings.clientStripeAccountId,\n              })\n                .then((charge) => {\n                  order.charge.status = charge.status;\n                  order.charge.amount = charge.amount;\n                  order.charge.amountRefunded = charge.amount_refunded;\n\n                  Helpers.createOrUpdate(this.config, order)\n                    .then(resolve, reject);\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  findOrCreateCustomer(email, order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'customerByEmail', {\n        keys: [email],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            resolve(body.rows[0].doc);\n\n          } else {\n            const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n            const newCustomer = {\n              type: 'customer',\n              createdAt: now,\n              modifiedAt: now,\n              email: order.customerDetails.email,\n              name: order.customerDetails.name,\n              phone: order.customerDetails.phone,\n              billingAddress: order.billingAddress,\n              shippingAddress: order.shippingAddress,\n              orders: [],\n            };\n\n            Db.connect(this.config).insert(newCustomer)\n              .then((body) => {\n                newCustomer._id = body.id;\n                newCustomer._rev = body.rev;\n\n                resolve(newCustomer);\n              }, reject);\n          }\n        }, reject);\n    });\n  }\n\n  updateOrCreateStripeCustomer(clientStripeAccountId, customer, token, order) {\n    return new Promise((resolve, reject) => {\n      const stripeCustomer = {\n        source: token,\n        email: order.customer.email,\n        description: order.customer.name,\n        metadata: {\n          customer_id: customer._id,\n        // billingAddress: JSON.stringify(order.billingAddress),\n        // shippingAddress: JSON.stringify(order.shippingAddress)\n        },\n      };\n\n      if (customer.stripe && customer.stripe.customer.id) {\n        this.stripe.customers.update(customer.stripe.customer.id, stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        })\n          .then(resolve, (error) => {\n            if (error.type === 'StripeInvalidRequestError' && error.param === 'id') {\n              this.stripe.customers.create(stripeCustomer, {\n                stripe_account: clientStripeAccountId,\n              }).then(resolve, reject);\n\n            } else {\n              reject(error);\n            }\n          });\n\n      } else {\n        this.stripe.customers.create(stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        }).then(resolve, reject);\n      }\n    });\n  }\n\n  createOrder(order, customer) {\n    return new Promise((resolve, reject) => {\n      const items = order.items.map(item => ({\n        id: item.id,\n        title: item.title.replace(/<br\\s?>/ig, ' ').replace(/<\\/?p>|<\\/?span>/ig, ''),\n        price: item.price,\n        quantity: item.quantity,\n        metadata: item.metadata || {},\n      }));\n\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      const newOrder = {\n        type: 'order',\n        orderId: this.hashids.encode(new Date().getTime()),\n        createdAt: now,\n        modifiedAt: now,\n        customer: {\n          id: customer._id,\n          email: customer.email,\n          name: customer.name,\n        },\n        items,\n        shippingMethod: {\n          name: order.shippingMethod.name,\n          amount: Number(order.shippingMethod.amount),\n        },\n        subtotal: Number(order.subtotal),\n        tax: {\n          rate: order.tax.rate || 0,\n          includedInPrice: order.tax.includedInPrice || false,\n          total: order.tax.total || 0,\n          show: order.tax.show || false,\n        },\n        discount: {\n          code: order.discount.code || '',\n          name: order.discount.name || '',\n          total: order.discount.total || 0,\n        },\n        total: Number(order.total),\n        billingAddress: order.billingAddress,\n        shippingAddress: order.shippingAddress,\n        messages: {},\n        status: 'pending',\n        test: true,\n      };\n\n      Db.connect(this.config).insert(newOrder)\n        .then((body) => {\n          newOrder._id = body.id;\n          newOrder._rev = body.rev;\n\n          resolve(newOrder);\n        }, reject);\n    });\n  }\n\n  updateOrder(order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).insert(order)\n        .then((body) => {\n          order._rev = body.rev;\n\n          resolve(order);\n        }, reject);\n    });\n  }\n\n  updateCustomer(customer, stripeCustomer, order) {\n    return new Promise((resolve, reject) => {\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      customer.modifiedAt = now;\n\n      if (!customer.orders) {\n        customer.orders = [];\n      }\n\n      customer.orders.push(order._id);\n\n      if (!customer.stripe) {\n        customer.stripe = {\n          customer: {\n            id: null,\n          },\n        };\n      }\n\n      customer.stripe.customer.id = stripeCustomer.id;\n\n      Db.connect(this.config).insert(customer)\n        .then((body) => {\n          customer._rev = body.rev;\n\n          resolve(customer);\n        }, reject);\n    });\n  }\n\n  createCharge(settings, stripeCustomer, customer, order) {\n    return new Promise((resolve, reject) => {\n      const amount = Number(order.total) * 100;\n\n      const charge = {\n        amount,\n        currency: settings.currency.iso.toLowerCase(),\n        customer: stripeCustomer.id,\n        capture: true,\n        description: order.orderId,\n        // shipping: order.shippingAddress, // fraud prevention, must follow expected schema\n        metadata: {\n          customer_id: customer._id,\n          order_id: order._id,\n        },\n        statement_descriptor: _.kebabCase(settings.storeName).toUpperCase(),\n        application_fee: Math.ceil(amount * 0.02),\n      };\n\n      this.stripe.charges.create(charge, {\n        stripe_account: settings.clientStripeAccountId,\n      })\n        .then((charge) => {\n\n          order.charge = {\n            paymentGateway: 'stripe',\n            id: charge.id,\n            status: charge.status,\n            currency: charge.currency.toUpperCase(),\n            amount: charge.amount,\n            amountRefunded: charge.amount_refunded,\n          };\n\n          order.test = !charge.livemode;\n\n          resolve(order);\n\n        }, reject);\n    });\n  }\n\n  sendReceipt(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: customer.email,\n        subject: `Your order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-receipt`, templateData).then(resolve, reject);\n    });\n  }\n\n  sendNotification(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: settings.emailSenderAddress,\n        subject: `New order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-notification`, templateData).then(resolve, reject);\n    });\n  }\n\n}\n\nmodule.exports = StripeClass;\n","module.exports = require(\"jsontoxml\");","module.exports = require(\"handlebars\");","module.exports = require(\"he\");","const axios = require('axios');\nconst he = require('he');\nconst Handlebars = require('handlebars');\nconst jsontoxml = require('jsontoxml');\n\nconst ClientConfig = require('./client-config');\n\nclass Shopify {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getCatalog({ shopLink, productLinkTemplate }) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const result = (await axios({\n      url: `https://${clientConfig.provider.shopify.domain}.myshopify.com/api/graphql`,\n      method: 'post',\n      headers: {\n        'X-Shopify-Storefront-Access-Token': clientConfig.provider.shopify.storefrontAccessToken,\n      },\n      data: {\n        query: `\n          query {\n            shop {\n              name\n              primaryDomain {\n                url\n              }\n              description\n              products(first: 250) {\n                edges {\n                  node {\n                    id\n                    handle\n                    title\n                    description\n                    onlineStoreUrl\n                    images(first: 1) {\n                      edges {\n                        node {\n                          originalSrc\n                          transformedSrc\n                        }\n                      }\n                    }\n                    productType\n                    vendor\n                    availableForSale\n                    priceRange {\n                      minVariantPrice {\n                        amount\n                        currencyCode\n                      }\n                      maxVariantPrice {\n                        amount\n                        currencyCode\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `,\n      },\n    })).data.data;\n\n    const template = Handlebars.compile(productLinkTemplate);\n\n    const products = result.shop.products.edges.map(edge => ({\n      'g:id': edge.node.handle,\n      'g:title': he.encode(edge.node.title),\n      'g:description': he.encode(edge.node.description),\n      // 'g:link': edge.node.onlineStoreUrl,\n      'g:link': template({ handle: edge.node.handle }),\n      'g:image_link': edge.node.images.edges[0].node.originalSrc,\n      'g:brand': edge.node.vendor,\n      'g:condition': 'new',\n      'g:availability': edge.node.availableForSale ? 'in stock' : 'out of stock',\n      'g:price': `${edge.node.priceRange.minVariantPrice.amount} ${edge.node.priceRange.minVariantPrice.currencyCode}`,\n      // 'g:google_product_category': he.encode(edge.node.productType),\n    }));\n\n    const channel = [\n      { name: 'title', text: result.shop.name },\n      // { name: 'link', text: result.shop.primaryDomain.url },\n      { name: 'link', text: shopLink },\n      { name: 'description', text: result.shop.description },\n    ];\n\n    products.forEach((product) => {\n      channel.push({\n        name: 'item',\n        children: product,\n      });\n    });\n\n    return `<?xml version=\"1.0\"?>\n    <rss xmlns:g=\"http://base.google.com/ns/1.0\" version=\"2.0\">\n      ${jsontoxml({ channel })}\n    </rss>`;\n  }\n}\n\nmodule.exports = Shopify;\n","module.exports = require(\"shippo\");","const Promise = require('bluebird');\nconst shippo = require('shippo');\n\nclass Shippo {\n  constructor(config) {\n    this.config = config;\n\n    this.shippo = shippo(config.shippo.token);\n  }\n\n  getQuote(address, parcel) {\n    return new Promise((resolve, reject) => {\n\n      const addressFrom = {\n        object_purpose: 'QUOTE',\n        zip: this.config.shippo.fromZip,\n        country: this.config.shippo.fromCountry,\n      };\n\n      const addressTo = {\n        object_purpose: 'QUOTE',\n        // 'name': address.name,\n        // 'company': '',\n        // 'street1': address.street1,\n        // 'street2': address.street2,\n        // 'city': address.city,\n        // 'state': '',\n        zip: address.zip,\n        country: address.country,\n        // 'phone': address.phone,\n        // 'email': address.email,\n        metadata: '',\n      };\n\n      parcel.distance_unit = 'cm';\n      parcel.mass_unit = 'kg';\n\n      this.shippo.shipment.create({\n        object_purpose: 'QUOTE',\n        address_from: addressFrom,\n        address_to: addressTo,\n        parcel,\n      })\n        .then((shipment) => {\n          const ratesReady = (shipment, attempts) => {\n            if ((shipment.object_status === 'QUEUED' || shipment.object_status === 'WAITING') && attempts < 10) {\n              this.shippo.shipment.retrieve(shipment.object_id).then((val) => {\n                ratesReady(val, attempts + 1);\n              });\n\n            } else {\n              this.shippo.shipment.rates(shipment.object_id)\n                .then((rates) => {\n                  resolve(rates);\n\n                }, (error) => {\n                  console.error('There was an error retrieving rates : %s', error);\n                  reject(error);\n                });\n            }\n          };\n\n          ratesReady(shipment, 0);\n\n        }, (error) => {\n          console.error('There was an error creating shipment: %s', error);\n          reject(error);\n        });\n\n    });\n  }\n\n}\n\nmodule.exports = Shippo;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass Settings {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async update(settings) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.client = _.merge({}, clientConfig.client, settings);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = Settings;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 64;","module.exports = require(\"recursive-readdir\");","module.exports = require(\"eval\");","const fs = require('fs');\nconst path = require('path');\nconst _ = require('lodash');\nconst _eval = require('eval');\nconst request = require('request-promise');\nconst readdir = require('recursive-readdir');\nconst Entity = require('./entity');\nconst ClientConfig = require('./client-config');\n\nclass Pdf {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getTemplates() {\n    const templates = {};\n\n    const files = await readdir(this.config.pdf.templatesPath);\n\n    files.forEach((file) => {\n      if (!/\\.js$/.test(file)) {\n        return;\n      }\n\n      const id = file\n        .replace(`${this.config.pdf.templatesPath}/`, '')\n        .replace('.js', '');\n\n      // eslint-disable-next-line\n      templates[id] = require(file);\n    });\n\n    return templates;\n  }\n\n  async getPayload(templateId, entityId, role) {\n    // if (!this.templates) {\n    //   this.templates = await this.getTemplates();\n    // }\n\n    // if (!this.templates[templateId]) {\n    //   throw new Error('Template not found');\n    // }\n\n    const template = _eval(fs.readFileSync(path.join(this.config.pdf.templatesPath, `${templateId}.js`), 'utf-8'), `${templateId}.js`, {}, true);\n\n    const entity = new Entity(this.config);\n\n    const entities = (await entity.entityList([entityId], { children: 2, role })).map(row => row.doc);\n\n    if (entities.length === 0) {\n      throw new Error('Entity not found');\n    }\n\n    const payload = template(Entity.flattenValues(entities)[0]);\n\n    return payload;\n  }\n\n  async getPdf(payload) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n    const assistPdfUrl = `${this.config.assist.url}/${assetSlug}/pdf/download`;\n\n    payload = typeof payload === 'object' ? JSON.stringify(payload).replace(/'/gi, '’') : payload;\n\n    const response = await request({\n      method: 'POST',\n      uri: assistPdfUrl,\n      encoding: null,\n      form: {\n        payload,\n      },\n    });\n\n    return response;\n  }\n\n}\n\nmodule.exports = Pdf;\n","module.exports = require(\"jsonwebtoken\");","const jwt = require('jsonwebtoken');\n\nclass Jwt {\n  constructor(config) {\n    this.config = config;\n  }\n\n  signToken(payload, options = {}) {\n    return jwt.sign(payload, this.config.auth.tokenSecret, options);\n  }\n\n  verifyToken(token) {\n    return jwt.verify(token, this.config.auth.tokenSecret);\n  }\n}\n\nmodule.exports = Jwt;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst request = require('request-promise');\n\nmodule.exports = function (options) {\n  const defaultOptions = {\n    client_id: null,\n    access_token: null,\n    version: 'v1',\n    host: 'https://api.instagram.com',\n  };\n\n  options = _.merge({}, defaultOptions, options || {});\n\n  const _request = (method, endpoint, query) => new Promise((resolve, reject) => {\n    const requestOptions = {\n      method,\n      url: [options.host, options.version, endpoint].join('/'),\n      qs: {\n        access_token: query.access_token || options.access_token,\n        client_id: query.client_id || options.client_id,\n      },\n    };\n\n    requestOptions.qs = _.extend({}, requestOptions.qs, query);\n\n    request(requestOptions)\n      .then((response) => {\n        resolve(JSON.parse(response));\n      }, reject);\n  });\n\n  this.get = (endpoint, query) => _request('GET', endpoint, query);\n};\n","module.exports = require(\"deep-diff\");","module.exports = require(\"json-query\");","module.exports = require(\"embedly\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst EmbedlyApi = require('embedly');\n\nclass Embedly {\n  constructor(config) {\n    this.config = config;\n  }\n\n  oembed(urls) {\n    return new Promise((resolve, reject) => {\n      const embedly = new EmbedlyApi({\n        key: this.config.embedly.apiKey,\n      });\n\n      const opts = {\n        urls: _.isArray(urls) ? urls : [urls],\n        format: 'json',\n      };\n\n      embedly.oembed(opts, (error, result) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(result);\n      });\n    });\n  }\n\n}\n\nmodule.exports = Embedly;\n","module.exports = require(\"node-sass\");","module.exports = require(\"i18n-iso-countries\");","module.exports = require(\"moment\");","module.exports = require(\"html-to-text\");","module.exports = require(\"mjml-mailchimp\");","module.exports = require(\"mjml-validator\");","module.exports = require(\"mjml-core\");","module.exports = require(\"mjml\");","module.exports = require(\"inky\");","module.exports = require(\"email-templates\");","module.exports = require(\"nodemailer-mailgun-transport\");","module.exports = require(\"createsend-node\");","module.exports = require(\"nodemailer\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass Ecommerce {\n  constructor(config) {\n    this.config = config;\n  }\n\n  getType(type, query) {\n    return new Promise((resolve, reject) => {\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      Db.connect(this.config).search('ecommerce', type, query)\n        .then(resolve, reject);\n    });\n  }\n\n  setType(type, item) {\n    return new Promise((resolve, reject) => {\n      item.type = type;\n\n      Helpers.createOrUpdate(this.config, item)\n        .then(resolve, reject);\n    });\n  }\n\n  deleteType(items) {\n    return new Promise((resolve, reject) => {\n      items = items.map(item => ({\n        _id: item._id,\n        _rev: item._rev,\n        _deleted: true,\n      }));\n\n      Helpers.chunkUpdate(this.config, items, 1000)\n        .then(resolve, reject);\n    });\n  }\n\n  getOrder(orderId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'orderByOrderId', {\n        key: orderId,\n        include_docs: true,\n      })\n        .then((body) => {\n          if (!body.rows.length) {\n            reject(new Error('Order not found'));\n            return;\n          }\n\n          resolve(body.rows[0].doc);\n        }, reject);\n    });\n  }\n\n  verifyDiscount(code) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'discountByCode', {\n        keys: [code],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            const discount = body.rows[0].doc;\n\n            const now = new Date().getTime();\n\n            const dateStart = new Date(Date.parse(discount.dateStart)).getTime();\n            const dateEnd = new Date(Date.parse(discount.dateEnd)).getTime();\n\n            if (dateStart > now) {\n              reject(new Error('Discount not valid (not begun)'));\n              return;\n\n            }\n\n            if (dateEnd < now) {\n              reject(new Error('Discount not valid (expired)'));\n              return;\n            }\n\n            resolve(discount);\n\n          } else {\n            reject(new Error({\n              statusCode: 404,\n              message: `Discount code not found (${code})`,\n            }));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Ecommerce;\n","module.exports = require(\"querystring\");","const _ = require('lodash');\nconst querystring = require('querystring');\nconst axios = require('axios');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\n\nconst providerTokenUri = {\n  google: 'https://www.googleapis.com/oauth2/v4/token',\n  instagram: 'https://api.instagram.com/oauth/access_token',\n  stripe: 'https://connect.stripe.com/oauth/token',\n  vimeo: 'https://api.vimeo.com/oauth/access_token',\n  spotify: 'https://accounts.spotify.com/api/token',\n};\n\nclass Auth {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async authoriseUser(slug, userId) {\n    const isSuperUser = this.config.auth.superUserId.split(',').map(superUser => superUser.trim()).indexOf(userId) > -1;\n\n    if (isSuperUser) {\n      return {\n        id: userId,\n        role: 'super',\n      };\n    }\n\n    const clientConfig = await Db.connect(this.config, slug).get('config');\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    if (!user.active) {\n      throw Error(`User not active: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async authProvider(provider, params = {}, userId = null, refresh = false) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const providerConfig = _.merge({}, this.config.provider[provider], params || {});\n\n    let providerClientConfig;\n\n    if (userId) {\n      providerClientConfig = _.get(clientConfig, ['userSettings', userId, 'provider', provider], {});\n    } else {\n      providerClientConfig = _.get(clientConfig, ['provider', provider], {});\n    }\n\n    const data = {\n      grant_type: refresh ? 'refresh_token' : 'authorization_code',\n      code: params && params.code ? params.code : undefined,\n      client_id: providerConfig.clientId,\n      client_secret: providerConfig.clientSecret,\n      redirect_uri: providerConfig.redirectUri,\n      refresh_token: providerClientConfig.refresh_token,\n    };\n\n    const uri = providerTokenUri[provider];\n\n    let providerAuth;\n\n    try {\n      providerAuth = (await axios.post(uri, querystring.stringify(data))).data;\n    } catch (error) {\n      throw new Error(JSON.stringify(error.response.data));\n    }\n\n    providerClientConfig = _.merge({}, providerClientConfig, providerAuth);\n    providerClientConfig.begins = Math.floor(new Date().getTime() / 1000);\n\n    if (provider === 'google') {\n      try {\n        providerClientConfig.user = (await axios.get(`https://www.googleapis.com/plus/v1/people/me?access_token=${providerClientConfig.access_token}`)).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (provider === 'spotify') {\n      try {\n        providerClientConfig.user = (await axios.get(`https://api.spotify.com/v1/me?access_token=${providerClientConfig.access_token}`)).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (userId) {\n      _.set(clientConfig, ['userSettings', userId, 'provider', provider], providerClientConfig);\n    } else {\n      _.set(clientConfig, ['provider', provider], providerClientConfig);\n    }\n\n    return cc.set(clientConfig);\n  }\n\n}\n\nmodule.exports = Auth;\n","module.exports = require(\"password-hash\");","const path = require('path');\n\nconst config = {\n  environment: process.env.ENVIRONMENT || 'development',\n  debug: process.env.DEBUG || false,\n\n  slug: process.env.SLUG,\n  baseUrl: process.env.BASE_URL || '',\n\n  db: {\n    url: process.env.DB_URL,\n    host: process.env.DB_HOST,\n    name: process.env.DB_NAME,\n    requestPlugin: process.env.DB_REQUEST_PLUGIN,\n    meterType: process.env.DB_METER_TYPE,\n  },\n\n  auth: {\n    superUserId: process.env.AUTH_SUPER_USER_ID,\n    tokenSecret: process.env.AUTH_TOKEN_SECRET || 'change_this_secret',\n  },\n\n  dev: {\n    userId: process.env.DEV_USER_ID || 'dev',\n    role: process.env.DEV_ROLE || 'super',\n  },\n\n  cms: {\n    title: process.env.CMS_TITLE,\n    url: process.env.CMS_URL,\n  },\n\n  assist: {\n    url: process.env.ASSIST_URL,\n    username: process.env.ASSIST_USERNAME,\n    password: process.env.ASSIST_PASSWORD,\n  },\n\n  mailgun: {\n    apiKey: process.env.MAILGUN_API_KEY,\n    domain: process.env.MAILGUN_DOMAIN,\n  },\n\n  embedly: {\n    apiKey: process.env.EMBEDLY_API_KEY,\n  },\n\n  pdf: {\n    templatesPath: path.resolve(__dirname, 'pdf'),\n  },\n\n  email: {\n    templatesPath: path.resolve(__dirname, 'email'),\n  },\n\n  provider: {\n    google: {\n      clientId: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    },\n\n    instagram: {\n      clientId: process.env.INSTAGRAM_CLIENT_ID,\n      clientSecret: process.env.INSTAGRAM_CLIENT_SECRET,\n    },\n\n    spotify: {\n      clientId: process.env.SPOTIFY_CLIENT_ID,\n      clientSecret: process.env.SPOTIFY_CLIENT_SECRET,\n    },\n\n    stripe: {\n      clientId: process.env.STRIPE_CLIENT_ID,\n      clientSecret: process.env.STRIPE_CLIENT_SECRET,\n      apiKey: process.env.STRIPE_API_KEY,\n    },\n\n    twitter: {\n      consumerKey: process.env.TWITTER_CONSUMER_KEY,\n      consumerSecret: process.env.TWITTER_CONSUMER_SECRET,\n      accessTokenKey: process.env.TWITTER_ACCESS_TOKEN_KEY,\n      accessTokenSecret: process.env.TWITTER_ACCESS_TOKEN_SECRET,\n    },\n\n    vimeo: {\n      clientId: process.env.VIMEO_CLIENT_ID,\n      clientSecret: process.env.VIMEO_CLIENT_SECRET,\n    },\n  },\n};\n\nmodule.exports = config;\n","function Api() { }\n\nApi.defaultConfig = require('./config.default');\n\nApi.Assist = (...args) => new (require('./lib/assist'))(...args);\nApi.Auth = (...args) => new (require('./lib/auth'))(...args);\nApi.ClientConfig = (...args) => new (require('./lib/client-config'))(...args);\nApi.Db = (...args) => new (require('./lib/db'))(...args);\nApi.Ecommerce = (...args) => new (require('./lib/ecommerce'))(...args);\nApi.Email = (...args) => new (require('./lib/email'))(...args);\nApi.Embedly = (...args) => new (require('./lib/embedly'))(...args);\nApi.Entity = (...args) => new (require('./lib/entity'))(...args);\nApi.Fields = (...args) => new (require('./lib/fields'))(...args);\nApi.Helpers = (...args) => new (require('./lib/helpers'))(...args);\nApi.Instagram = (...args) => new (require('./lib/instagram'))(...args);\nApi.Jwt = (...args) => new (require('./lib/jwt'))(...args);\nApi.Pdf = (...args) => new (require('./lib/pdf'))(...args);\nApi.Roles = (...args) => new (require('./lib/roles'))(...args);\nApi.Schema = (...args) => new (require('./lib/schema'))(...args);\nApi.Settings = (...args) => new (require('./lib/settings'))(...args);\nApi.Shippo = (...args) => new (require('./lib/shippo'))(...args);\nApi.Shopify = (...args) => new (require('./lib/shopify'))(...args);\nApi.Stripe = (...args) => new (require('./lib/stripe'))(...args);\nApi.Taxonomy = (...args) => new (require('./lib/taxonomy'))(...args);\nApi.Tools = (...args) => new (require('./lib/tools'))(...args);\nApi.User = (...args) => new (require('./lib/user'))(...args);\n\nmodule.exports = Api;\n","module.exports = require(\"xxhashjs\");","module.exports = require(\"deep-freeze\");","module.exports = require(\"object-sizeof\");","module.exports = require(\"circular-json-es6\");","module.exports = require(\"le_node\");","module.exports = require(\"zlib\");","module.exports = require(\"url-parse\");","module.exports = require(\"cache-manager-redis-store\");","module.exports = require(\"cache-manager\");","process.on('unhandledRejection', result => console.error(result));\n\nconst _ = require('lodash');\nconst express = require('express');\nconst cacheManager = require('cache-manager');\nconst redisStore = require('cache-manager-redis-store');\nconst Promise = require('bluebird');\nconst URL = require('url-parse');\nconst zlib = Promise.promisifyAll(require('zlib'));\nconst Logger = require('le_node');\nconst CircularJSON = require('circular-json-es6');\nconst sizeof = require('object-sizeof');\nconst deepFreeze = require('deep-freeze');\nconst XXH = require('xxhashjs');\n\nconst Api = require('../index');\n\nconst HASH_SEED = 0xABCD;\n\nconst defaultConfig = require('./config.default');\n\nfunction AceApiServer (app, customConfig = {}, customAuthMiddleware = null) {\n  const config = deepFreeze(_.merge({}, Api.defaultConfig, defaultConfig, customConfig));\n\n  // Async middleware\n\n  const asyncMiddleware = fn => (req, res, next) => {\n    Promise.resolve(fn(req, res, next))\n      .catch(next);\n  };\n\n  // Skip authorisation\n\n  const skipAuth = (req) => {\n    if (config.environment !== 'development') {\n      return false;\n    }\n    const allowedRoutes = [\n      '/token',\n      '/email',\n    ];\n    return _.find(allowedRoutes, route => new RegExp(`^${route}`).test(req.path));\n  };\n\n  // Default auth middleware\n\n  const defaultAuthMiddleware = (req, res, next) => {\n    if (skipAuth(req)) {\n      next();\n      return;\n    }\n\n    if (!req.session.userId) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  const authMiddleware = customAuthMiddleware || defaultAuthMiddleware;\n\n  // Permissions middleware\n\n  const permissionMiddleware = (permissions, req, res, next) => {\n    if (!req.session.role) {\n      res.status(401);\n      res.send({\n        permissions,\n        message: 'Error: role not defined in session.',\n      });\n      return;\n    }\n\n    if (req.session.role === 'super') {\n      next();\n      return;\n    }\n\n    const roles = Api.Roles();\n\n    if (_.isString(permissions)) {\n      permissions = permissions.split(',');\n    }\n\n    let authorised = false;\n\n    permissions.forEach((permission) => {\n      if (roles.role(req.session.role).permissions[permission.trim()]) {\n        authorised = true;\n      }\n    });\n\n    if (!roles.role(req.session.role) || !authorised) {\n      res.status(401);\n      res.send({\n        permissions,\n        message: 'Sorry, you\\'re not authorised to do this.',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  // Clone and extend config per request/session\n\n  const omitUndefined = (obj) => {\n    _.forIn(obj, (value, key, obj) => {\n      if (_.isPlainObject(value)) {\n        value = omitUndefined(value);\n\n        if (_.keys(value).length === 0) {\n          delete obj[key];\n        }\n      }\n\n      if (_.isUndefined(value)) {\n        delete obj[key];\n      }\n    });\n\n    return obj;\n  };\n\n  const cloneConfig = config => _.mergeWith({}, JSON.parse(JSON.stringify(config)), omitUndefined(_.cloneDeep(config)));\n\n  const getConfig = async (slug) => {\n    const configClone = cloneConfig(config);\n\n    configClone.slug = slug;\n    configClone.db.name = slug;\n\n    return configClone;\n  };\n\n  // Cache\n\n  let cache;\n\n  if (config.cache.enabled) {\n    if (config.redis.url || config.redis.host) {\n      const redisOptions = {\n        ttl: config.cache.ttl,\n      };\n\n      if (config.redis.url) {\n        redisOptions.url = config.redis.url;\n      } else {\n        redisOptions.host = config.redis.host;\n        redisOptions.port = config.redis.port;\n        redisOptions.password = config.redis.password;\n        redisOptions.db = config.redis.db;\n      }\n\n      cache = cacheManager.caching(_.merge({ store: redisStore }, redisOptions));\n\n      const redisClient = cache.store.getClient();\n      redisClient.on('ready', () => {\n        console.log('redis: ready');\n      });\n      redisClient.on('error', (error) => {\n        console.error('redis: error:', error);\n      });\n\n    } else {\n      cache = cacheManager.caching({\n        store: 'memory',\n        ttl: config.cache.ttl,\n        max: config.cache.memory.max,\n        length: (item) => {\n          // const length = Buffer.byteLength(item, 'utf8')\n          const length = sizeof(item);\n          return length;\n        },\n      });\n    }\n  }\n\n  // Cache middleware\n\n  const hash = (req) => {\n    const obj = {\n      path: req.path,\n      query: req.query,\n      body: req.body,\n    };\n    return `${req.session.slug}:${XXH.h64(JSON.stringify(obj), HASH_SEED).toString(16)}`;\n  };\n\n  const cacheMiddleware = asyncMiddleware(async (req, res, next) => {\n    const useCachedResponse = (\n      config.cache.enabled\n      && req.session.role === 'guest' // TODO: Replace 'guest' with constant\n      && (req.query.__cache && JSON.parse(req.query.__cache)) !== false\n    );\n\n    if (useCachedResponse) {\n      try {\n        const key = hash(req);\n\n        let response = await cache.get(key);\n\n        if (typeof response === 'string') {\n          if (config.cache.compress) {\n            response = (await zlib.gunzipAsync(Buffer.from(response, 'base64'))).toString();\n          }\n\n          try {\n            response = JSON.parse(response);\n          } catch (error) {\n            //\n          }\n\n          res.set('X-Cached-Response', true);\n          res.status(response ? 200 : 204);\n          res.send(response);\n\n          return;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    res.set('X-Cached-Response', false);\n    next();\n  });\n\n  // Response helpers\n\n  const handleError = (req, res, error) => {\n    if (Object.prototype.toString.call(error) === '[object Object]') {\n      error = CircularJSON.parse(CircularJSON.stringify(error));\n    }\n\n    error = error.response || error;\n\n    console.error(error);\n\n    const code = error.statusCode || error.status || error.code || 500;\n    const message = error.stack || error.error || error.message || error.body || error.data || error.statusText;\n\n    res.status(typeof code === 'string' ? 500 : code);\n    res.send({\n      code,\n      message,\n    });\n  };\n\n  const handleResponse = async (req, res, response, cacheResponse = false) => {\n    if (response === undefined || response === null) {\n      response = '';\n      res.status(204);\n      res.send(response);\n\n    } else {\n      response = CircularJSON.stringify(response);\n      res.status(200);\n      res.send(JSON.parse(response));\n    }\n\n    if (cacheResponse && config.cache.enabled && req.session.role === 'guest') { // TODO: Replace 'guest' with constant\n      const key = hash(req);\n\n      if (config.cache.compress) {\n        response = (await zlib.gzipAsync(Buffer.from(response))).toString('base64');\n      }\n\n      const ttl = req.query.__cache ? parseInt(req.query.__cache, 10) : config.cache.ttl;\n\n      cache.set(key, response, { ttl });\n    }\n  };\n\n  // Header middleware\n\n  const headerMiddleware = (req, res, next) => {\n    const headers = {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,OPTIONS',\n      'Access-Control-Expose-Headers': 'X-Slug, X-Role, X-User-Id',\n      Vary: 'Accept-Encoding, X-Api-Token',\n    };\n\n    if (req.headers['access-control-request-headers']) {\n      headers['Access-Control-Allow-Headers'] = req.headers['access-control-request-headers'];\n    }\n\n    res.set(headers);\n\n    if (req.method === 'OPTIONS') {\n      res.sendStatus(200);\n      return;\n    }\n\n    next();\n  };\n\n  // Session middleware\n\n  const jwt = Api.Jwt(config);\n\n  const sessionMiddleware = (req, res, next) => {\n    if (skipAuth(req)) {\n      next();\n      return;\n    }\n\n    const referrer = req.headers.referrer || req.headers.referer;\n\n    if (referrer) {\n      const referrerHostname = new URL(referrer)\n        .hostname.split('.').slice(-2).join('.');\n\n      if (config.api.blacklistReferrer.indexOf(referrerHostname) > -1) {\n        res.status(401);\n        res.send({\n          code: 401,\n          message: 'Not authorised, referrer blacklisted',\n        });\n        return;\n      }\n    }\n\n    const token = req.headers['x-api-token'] || req.query.apiToken || req.session.apiToken;\n\n    if (!token) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing token',\n      });\n      return;\n    }\n\n    if (config.api.blacklistToken.indexOf(token) > -1) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, token blacklisted',\n      });\n      return;\n    }\n\n    try {\n      const payload = jwt.verifyToken(token);\n\n      req.session.userId = payload.userId;\n      req.session.slug = payload.slug;\n      req.session.role = payload.role || 'guest'; // TODO: Replace 'guest' with constant\n\n    } catch (error) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: `Not authorised, token verification failed (${error.message})`,\n        error,\n      });\n      return;\n    }\n\n    if (!req.session.slug) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing slug',\n      });\n      return;\n    }\n\n    if (!req.session.role) {\n      req.session.role = 'guest';\n    }\n\n    if (req.session.userId) {\n      res.set('X-User-Id', req.session.userId);\n    }\n\n    res.set('X-Environment', config.environment);\n    res.set('X-Slug', req.session.slug);\n    res.set('X-Role', req.session.role);\n\n    next();\n  };\n\n  // Router\n\n  const router = express.Router();\n\n  const forceHttps = (req, res, next) => {\n    if (\n      (req.headers['x-forwarded-proto'] && req.headers['x-forwarded-proto'] !== 'https') &&\n      (req.headers['cf-visitor'] && JSON.parse(req.headers['cf-visitor']).scheme !== 'https') // Fix for Cloudflare/Heroku flexible SSL\n    ) {\n      res.redirect(301, `https://${req.headers.host}${req.path}`);\n      return;\n    }\n    next();\n  };\n\n  if (config.environment === 'production' && config.api.forceHttps === true) {\n    if (app.enable) {\n      app.enable('trust proxy');\n    }\n    app.use(forceHttps);\n  }\n\n  app.use(`/${config.api.prefix}`, headerMiddleware, sessionMiddleware, router);\n\n  app.get(`/${config.api.prefix}`, (req, res) => {\n    res.send('<pre> ______\\n|A     |\\n|  /\\\\  |\\n| /  \\\\ |\\n|(    )|\\n|  )(  |\\n|______|</pre>');\n  });\n\n  // Context\n\n  const context = {\n    app,\n    router,\n    cache,\n    authMiddleware,\n    permissionMiddleware,\n    cacheMiddleware,\n    asyncMiddleware,\n    getConfig,\n    handleResponse,\n    handleError,\n  };\n\n  // Inject API into context\n\n  Object.keys(Api).forEach((key) => {\n    context[key] = Api[key];\n  });\n\n  if (config.logentriesToken) {\n    context.log = new Logger({\n      token: config.logentriesToken,\n    });\n  }\n\n  const afterResponse = (req, res) => {\n    res.removeListener('finish', afterResponse);\n    res.removeListener('close', afterResponse);\n  };\n\n  if (config.environment !== 'production') {\n    app.use((req, res, next) => {\n      res.on('finish', afterResponse.bind(null, req, res));\n      res.on('close', afterResponse.bind(null, req, res));\n      next();\n    });\n  }\n\n  // Bootstrap Routes\n\n  require('./routes/analytics')(context, config);\n  require('./routes/auth')(context, config);\n  require('./routes/cache')(context, config);\n  require('./routes/config')(context, config);\n  require('./routes/debug')(context, config);\n  require('./routes/ecommerce')(context, config);\n  require('./routes/email')(context, config);\n  require('./routes/embedly')(context, config);\n  require('./routes/entity')(context, config);\n  require('./routes/metadata')(context, config);\n  require('./routes/pdf')(context, config);\n  require('./routes/provider')(context, config);\n  require('./routes/schema')(context, config);\n  require('./routes/settings')(context, config);\n  require('./routes/shippo')(context, config);\n  require('./routes/shopify')(context, config);\n  require('./routes/social')(context, config);\n  require('./routes/stripe')(context, config);\n  require('./routes/taxonomy')(context, config);\n  require('./routes/token')(context, config);\n  require('./routes/tools')(context, config);\n  require('./routes/user')(context, config);\n\n  return app;\n}\n\nmodule.exports = AceApiServer;\n","module.exports = require(\"connect-redis\");","module.exports = require(\"express-session\");","module.exports = require(\"method-override\");","module.exports = require(\"body-parser\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"helmet\");","module.exports = require(\"morgan\");","module.exports = require(\"http\");","const PORT = process.env.PORT || 5000;\nconst HOST = process.env.HOST || 'localhost';\n\nconst _ = require('lodash');\nconst express = require('express');\nconst http = require('http');\nconst logger = require('morgan');\nconst helmet = require('helmet');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst methodOverride = require('method-override');\nconst session = require('express-session');\nconst RedisStore = require('connect-redis')(session);\n\nconst AceApiServer = require('./index');\n\nconst defaultConfig = require('./config.default');\n\nfunction Serve (customConfig = {}, listen = true) {\n  const config = _.merge({}, defaultConfig, customConfig);\n\n  const app = express();\n\n  const sessionOptions = {\n    secret: config.session.secret,\n    resave: true,\n    saveUninitialized: true,\n  };\n\n  if (config.redis.url || config.redis.host) {\n    const redisOptions = {\n      ttl: config.session.ttl,\n    };\n\n    if (config.redis.url) {\n      redisOptions.url = config.redis.url;\n    } else {\n      redisOptions.host = config.redis.host;\n      redisOptions.port = config.redis.port;\n      redisOptions.password = config.redis.password;\n      redisOptions.db = config.redis.db;\n    }\n\n    sessionOptions.store = new RedisStore(redisOptions);\n  } else {\n    sessionOptions.cookie = {\n      maxAge: config.session.ttl,\n    };\n  }\n\n  app.use(helmet());\n  app.use(logger('tiny'));\n  app.use(cookieParser());\n  app.use(bodyParser.json({\n    limit: '50mb',\n  }));\n  app.use(bodyParser.urlencoded({\n    extended: true,\n    limit: '50mb',\n  }));\n  app.use(methodOverride());\n  app.use(session(sessionOptions));\n\n  AceApiServer(app, config);\n\n  if (listen) {\n    const server = http.createServer(app);\n    server.on('listening', () => {\n      console.log(`listening: http://${HOST}:${PORT}`);\n    });\n    server.listen(PORT);\n  }\n\n  return app;\n}\n\nmodule.exports = Serve;\n"],"sourceRoot":""}