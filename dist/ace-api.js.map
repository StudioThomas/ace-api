{"version":3,"sources":["webpack://AceApi/webpack/universalModuleDefinition","webpack://AceApi/webpack/bootstrap","webpack://AceApi/external \"babel-runtime/helpers/createClass\"","webpack://AceApi/external \"babel-runtime/helpers/classCallCheck\"","webpack://AceApi/external \"lodash\"","webpack://AceApi/external \"bluebird\"","webpack://AceApi/./lib/db.js","webpack://AceApi/./lib/client-config.js","webpack://AceApi/external \"babel-runtime/helpers/asyncToGenerator\"","webpack://AceApi/external \"babel-runtime/regenerator\"","webpack://AceApi/./lib/helpers.js","webpack://AceApi/external \"fs\"","webpack://AceApi/external \"babel-runtime/core-js/json/stringify\"","webpack://AceApi/external \"path\"","webpack://AceApi/./lib/s3.js","webpack://AceApi/external \"babel-runtime/helpers/typeof\"","webpack://AceApi/external \"babel-runtime/core-js/object/get-prototype-of\"","webpack://AceApi/external \"request-promise\"","webpack://AceApi/external \"mime\"","webpack://AceApi/./lib/fields.js","webpack://AceApi/./lib/schema.js","webpack://AceApi/./lib/entity.js","webpack://AceApi/external \"react\"","webpack://AceApi/external \"lodash/merge\"","webpack://AceApi/external \"mjml-core\"","webpack://AceApi/external \"babel-runtime/core-js/object/define-property\"","webpack://AceApi/external \"babel-runtime/core-js/object/create\"","webpack://AceApi/external \"babel-runtime/core-js/object/set-prototype-of\"","webpack://AceApi/external \"mjml\"","webpack://AceApi/./lib/email.js","webpack://AceApi/external \"babel-runtime/core-js/object/freeze\"","webpack://AceApi/./lib/roles.js","webpack://AceApi/./lib/assist.js","webpack://AceApi/external \"zencoder\"","webpack://AceApi/./lib/zencode.js","webpack://AceApi/./lib/user.js","webpack://AceApi/external \"cloudant\"","webpack://AceApi/./lib/tools.js","webpack://AceApi/./lib/taxonomy.js","webpack://AceApi/external \"hashids\"","webpack://AceApi/external \"stripe\"","webpack://AceApi/./lib/stripe.js","webpack://AceApi/external \"shippo\"","webpack://AceApi/./lib/shippo.js","webpack://AceApi/./lib/settings.js","webpack://AceApi/./lib/pdf.js","webpack://AceApi/external \"jsonwebtoken\"","webpack://AceApi/./lib/jwt.js","webpack://AceApi/./lib/instagram.js","webpack://AceApi/./lib/flow.js","webpack://AceApi/external \"aws-sdk\"","webpack://AceApi/external \"uuid\"","webpack://AceApi/./lib/file.js","webpack://AceApi/external \"deep-diff\"","webpack://AceApi/external \"embedly\"","webpack://AceApi/./lib/embedly.js","webpack://AceApi/external \"lodash/min\"","webpack://AceApi/./mjml/components/mc-image/lib/index.js","webpack://AceApi/external \"mjml-raw\"","webpack://AceApi/external \"mjml-group\"","webpack://AceApi/external \"mjml-column\"","webpack://AceApi/external \"lodash/cloneDeep\"","webpack://AceApi/./mjml/components/mc-section/lib/index.js","webpack://AceApi/external \"node-sass\"","webpack://AceApi/external \"i18n-iso-countries\"","webpack://AceApi/external \"moment\"","webpack://AceApi/external \"html-to-text\"","webpack://AceApi/external \"inky\"","webpack://AceApi/external \"email-templates\"","webpack://AceApi/external \"nodemailer-mailgun-transport\"","webpack://AceApi/external \"createsend-node\"","webpack://AceApi/external \"nodemailer\"","webpack://AceApi/./lib/ecommerce.js","webpack://AceApi/external \"@cloudant/cloudant\"","webpack://AceApi/external \"axios\"","webpack://AceApi/external \"querystring\"","webpack://AceApi/./lib/auth.js","webpack://AceApi/external \"password-hash\"","webpack://AceApi/./config.default.js","webpack://AceApi/./index.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","w","s","require","Cloudant","Db","config","dbName","_classCallCheck3","default","this","connect","url","db","maxAttempt","plugins","retry","retryDelayMultiplier","retryInitialDelayMsecs","use","_","Helpers","DEFAULT_CLIENT_CONFIG","_id","client","schemas","taxonomies","users","roles","ClientConfig","clientConfig","merge","slug","createOrUpdate","Promise","assistUrl","assist","thumbnail","settings","cropSlug","cropDefault","settingsArray","split","forEach","setting","crop","crops","x","y","x2","y2","g","key","push","join","settingsString","test","thumbnailType","fileName","pop","toLowerCase","thumbnailUrl","replace","doc","resolve","reject","insert","then","response","id","_rev","rev","error","statusCode","docs","chunkSize","arguments","length","undefined","promises","chunk","bulk","all","entities","groupSize","Infinity","grouped","group","entity","groupBefore","groupAfter","ratio","groupRatio","_stringify2","Date","array","replacementObject","map","path","fs","promisifyAll","mime","uuid","AWS","S3","s3","accessKeyId","aws","iamAccessKeyId","secretAccessKey","iamAccessKeySecret","_getPrototypeOf2","bucket","statAsync","stats","fileSize","size","mimeType","getType","base","v1","ext","extname","src","uploadOptions","Bucket","Key","ACL","StorageClass","Metadata","Expires","CacheControl","ContentType","ContentLength","metadata","original","basename","_this","Body","createReadStream","upload","send","data","filename","getSignedUrlAsync","ResponseContentDisposition","getObjectAsync","files","_this2","buckets","uniq","file","filter","bucketMap","listObjectsAsync","Prefix","console","log","results","result","Contents","Name","bucketName","deleteObjectsAsync","Delete","Objects","fields","type","dataType","Fields","field","_freeze2","find","Schema","schema","cc","updateEntityIndex","set","schemaSlug","Error","index","findIndex","splice","schemaSlugs","isArray","indexOf","concat","uniqBy","ddoc","default_field","enabled","analyzer","selector","$and","fieldRef","diff","Entity","flattenValues","fieldSlug","searchTerm","viewWithList","startkey","endkey","ids","children","parents","role","view","keys","include_docs","consolidateResult","docMap","childDepth","rowOrDoc","obj","entitiesById","_docs","_getDocMap","_mergeDocs","fileIds","_fileIds","fetch","rows","row","deleted","chunkUpdate","_this3","updatedEntities","mapValues","remove","_this4","entityMap","title","published","_this5","fileMap","oldId","newId","isString","query","_this6","total_rows","_extendDocs","_this7","limit","Math","min","parseInt","sort","search","groups","hits","_this8","_entitySearch","__entitySearch","bookmark","_this9","_query","clone","_context4","t0","entityId","_this10","revs_info","revisionIds","_revs_info","revision","status","open_revs","revisions","childrenIds","ok","childrenMap","_consolidateChildren","_this11","fileId","_updateFiles","_this12","restore","_this13","entityIds","entityOrEntityId","isObject","oldEntity","newEntity","oldField","newField","rhs","mergeWith","a","b","trashed","_updateChildren","_this14","forever","getEntities","_removeChildren","_detachFiles","_deleted","omitBy","startsWith","filterEntityFields","isRow","nodemailer","Createsend","nodemailerMailgunTransport","EmailTemplate","Inky","mjml2html","registerMJElement","htmlToText","moment","countries","sass","mcSection","mcImage","Email","inky","templateSlug","templateData","options","preview","mjml","skipValidation","templatePath","email","templatesPath","extension","existsSync","style","renderSync","sourceMapContents","sourceMapEmbed","css","toString","emailTemplate","views","juice","juiceResources","preserveMediaQueries","preserveFontFaces","removeStyleTags","removeLinkTags","preserveImportant","webResources","links","scripts","transport","jsonTransport","helpers","pick","template","render","html","convertMjmlResult","level","errors","releaseTheKraken","text","fromString","nodemailerMailgun","createTransport","auth","api_key","mailgun","apiKey","domain","getTemplate","sendMail","details","provider","listId","createsend","cs","clientApiKey","subscribers","addSubscriberAsync","EmailAddress","Resubscribe","RestartSubscriptionBasedAutoresponders","emailAddress","catch","Message","permissions","entityGrid","entityCreate","entityRead","entityUpdate","entityDelete","taxonomyCreate","taxonomyRead","taxonomyUpdate","taxonomyDelete","fileCreate","fileRead","fileUpdate","fileDelete","user","tools","ecommerce","Roles","request","passwordHash","Assist","fileNames","method","json","username","pass","generate","password","sendImmediately","zencoder","Zencode","s3Credentials","credentials","jobId","getJob","job","jobState","setTimeout","checkJob","_updateFile","zencoderJob","body","Job","state","outputs","thumbnails","defaultThumbnail","group_label","width","height","output_media_files","output","file_size_bytes","label","duration","duration_in_ms","s3Upload","mediaType","maxWidth","maxHeight","_outputs","baseUrl","format","video","audio","_output","rrs","public","quality","audio_quality","audioQuality","audioPreNormalize","audio_pre_normalize","audioCompressionRatio","audio_compression_ratio","unshift","times","_thumbnail","zencoderS3Credentials","base_url","prefix","start_at_first_frame","number","interval","create","input","User","userId","Tools","changes","dbBackupFile","readFileAsync","fileConents","JSON","parse","unlinkAsync","cloudant","destroy","Taxonomy","taxonomy","taxonomySlug","term","entityGroups","read","terms","update","entitiesByTerm","_term","parent","Stripe","Hashids","StripeClass","stripe","hashids","_context","clientStripeAccountId","stripe_user_id","t1","assets","token","order","getSettings","subscribe","customerDetails","findOrCreateCustomer","customer","createOrder","updateOrCreateStripeCustomer","stripeCustomer","updateCustomer","createCharge","updatedOrder","sendReceipt","orderReceipt","messages","sendNotification","orderNotification","updateOrder","finalOrder","accounts","retrieve","amount","refunds","refund_application_fee","charge","stripe_account","refund","charges","amountRefunded","amount_refunded","now","newCustomer","createdAt","modifiedAt","phone","billingAddress","shippingAddress","orders","source","description","customer_id","customers","param","items","item","price","quantity","newOrder","orderId","encode","getTime","shippingMethod","Number","subtotal","tax","rate","includedInPrice","total","show","discount","code","currency","iso","capture","order_id","statement_descriptor","kebabCase","storeName","toUpperCase","application_fee","ceil","paymentGateway","livemode","emailOptions","from","emailSenderName","emailSenderAddress","to","subject","assetSlug","sendEmail","shippo","Shippo","address","parcel","addressFrom","object_purpose","zip","fromZip","country","fromCountry","addressTo","distance_unit","mass_unit","shipment","address_from","address_to","ratesReady","attempts","object_status","object_id","val","rates","Settings","Pdf","templates","pdf","templateId","payload","assistPdfUrl","_typeof3","uri","encoding","form","jwt","Jwt","sign","tokenSecret","verify","client_id","access_token","version","host","endpoint","requestOptions","qs","extend","_request","Flow","temporaryFolder","maxFileSize","fileParameterName","mkdirSync","event","chunkNumber","identifier","cleanIdentifier","totalSize","numberOfChunks","max","floor","validation","validate","chunkFilename","getChunkFilename","chunks","writeFileAsync","Buffer","removeChunk","num","stat","unlink","totalChunks","originalFilename","filesize","rename","testChunkExists","testChunk","mergeChunks","removeChunks","writableStream","end","pipeChunk","onDone","sourceStream","pipe","on","File","assistFiles","s3Files","location","assistPromise","deleteFiles","s3Promise","settle","failures","isRejected","reason","EmbedlyApi","Embedly","urls","embedly","opts","oembed","_class","_createClass","defineProperties","target","props","descriptor","writable","_defineProperty2","Constructor","protoProps","staticProps","_mjmlCore","_merge2","_interopRequireDefault","_min2","_react","_react2","_possibleConstructorReturn","self","ReferenceError","baseStyles","table","borderCollapse","borderSpacing","img","border","borderRadius","display","outline","textDecoration","Image","MJMLElement","_Component","_ref","_temp","instance","TypeError","_classCallCheck","_len","args","Array","_key","__proto__","apply","styles","getStyles","subClass","superClass","_create2","constructor","_setPrototypeOf2","_inherits","Component","_props","mjAttribute","getPadding","parentWidth","paddingRight","widthOverflow","_props2","defaultUnit","td","getContentWidth","createElement","data-mc-edit","alt","href","className","cellPadding","cellSpacing","data-legacy-align","data-legacy-border","renderImage","tagName","parentTag","defaultMJMLDefinition","attributes","mc:edit","align","border-radius","container-background-color","padding-bottom","padding-left","padding-right","padding-top","padding","vertical-align","endingTag","postRender","$","each","attr","removeAttr","_cloneDeep2","_mjmlColumn2","_mjmlGroup2","_mjmlRaw2","div","margin","fontSize","textAlign","verticalAlign","Section","background","trim","paddingBottom","paddingLeft","paddingTop","isFullWidth","tableFullwidth","data-legacy-background","data-mc-hideable","data-mc-repeatable","data-mc-variant","renderSection","renderWrappedOutlookChildren","fullWidth","data-url","data-width","renderFullWidthSection","mc:hideable","mc:repeatable","mc:variant","background-color","background-url","background-repeat","background-size","border-bottom","border-left","border-right","border-top","direction","full-width","text-align","before","startConditionalTag","endConditionalTag","after","$columnDiv","next","replaceWith","Ecommerce","dateStart","dateEnd","message","querystring","axios","providerTokenUri","google","instagram","vimeo","Auth","superUserId","superUser","active","params","refresh","providerConfig","grant_type","clientId","client_secret","clientSecret","redirect_uri","redirectUri","refresh_token","post","stringify","_context2","environment","process","env","ENVIRONMENT","debug","DEBUG","SLUG","BASE_URL","DB_URL","DB_HOST","DB_NAME","requestPlugin","DB_REQUEST_PLUGIN","meterType","DB_METER_TYPE","AUTH_SUPER_USER_ID","AUTH_TOKEN_SECRET","dev","DEV_USER_ID","DEV_ROLE","ASSIST_URL","ASSIST_USERNAME","ASSIST_PASSWORD","INSTAGRAM_CLIENT_ID","INSTAGRAM_CLIENT_SECRET","twitter","consumerKey","TWITTER_CONSUMER_KEY","consumerSecret","TWITTER_CONSUMER_SECRET","accessTokenKey","TWITTER_ACCESS_TOKEN_KEY","accessTokenSecret","TWITTER_ACCESS_TOKEN_SECRET","GOOGLE_CLIENT_ID","GOOGLE_CLIENT_SECRET","MAILGUN_API_KEY","MAILGUN_DOMAIN","EMBEDLY_API_KEY","AWS_IAM_ACCESS_KEY_ID","AWS_IAM_ACCESS_KEY_SECRET","AWS_S3_BUCKET","SHIPPO_TOKEN","SHIPPO_FROM_ZIP","SHIPPO_FROM_COUNTRY","STRIPE_CLIENT_ID","STRIPE_CLIENT_SECRET","STRIPE_API_KEY","VIMEO_CLIENT_ID","VIMEO_CLIENT_SECRET","ZENCODER_API_KEY","ZENCODER_S3_BUCKET","ZENCODER_S3_CREDENTIALS","__dirname","Api","defaultConfig","Function","bind","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","_len6","_key6","_len7","_key7","_len8","_key8","_len9","_key9","_len10","_key10","_len11","_key11","_len12","_key12","Instagram","_len13","_key13","_len14","_key14","_len15","_key15","_len16","_key16","_len17","_key17","_len18","_key18","_len19","_key19","_len20","_key20","_len21","_key21","_len22","_key22","_len23","_key23","_len24","_key24","_len25","_key25"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,UAAAH,GACA,iBAAAC,QACAA,QAAA,OAAAD,IAEAD,EAAA,OAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,KAMA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAT,YAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA8CA,OAzCAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAvB,GACAkB,OAAAC,eAAAnB,EAAA,cAAiDwB,OAAA,KAIjDlB,EAAAmB,EAAA,SAAAxB,GACA,IAAAe,EAAAf,KAAAyB,WACA,WAA2B,OAAAzB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDtB,EAAAyB,EAAA,GAGAzB,EAAA0B,KAIA1B,IAAA2B,EAAA,oBCzEAhC,EAAAD,QAAAkC,QAAA,oDCAAjC,EAAAD,QAAAkC,QAAA,uDCAAjC,EAAAD,QAAAkC,QAAA,yBCAAjC,EAAAD,QAAAkC,QAAA,qHCAA,IAAMC,EAAW7B,EAAQ,IAEnB8B,aACJ,SAAAA,EAAaC,EAAQC,GAGnB,OAH2B,EAAAC,EAAAC,SAAAC,KAAAL,GAC3BK,KAAKJ,OAASA,EAEPD,EAAGM,QAAQL,EAAQC,6DAGZD,EAAQC,GAetB,OAdiB,IAAIH,GACnBQ,IAAKN,EAAOO,GAAGD,IACfE,WAAY,EACZC,SACE,YAEEC,OACEC,qBAAsB,EACtBC,uBAAwB,SAMhBL,GAAGM,IAAIZ,GAAUD,EAAOO,GAAG7B,eAI/Cd,EAAOD,QAAUoC,+HC5BjB,IAAMe,EAAI7C,EAAQ,GACZ8B,EAAK9B,EAAQ,GACb8C,EAAU9C,EAAQ,GAKlB+C,GACJC,IAAK,SACLC,UACAC,WACAC,cACAC,SACAC,OARY,IAFArD,EAAQ,MAUPqD,SAGTC,aACJ,SAAAA,EAAYvB,IAAQ,EAAAE,EAAAC,SAAAC,KAAAmB,GAClBnB,KAAKJ,OAASA,wLAIVwB,EAAeR,oBAGIjB,EAAGM,QAAQD,KAAKJ,QAAQf,IAAI,iBAAjDuC,SAEAA,EAAeV,EAAEW,SAAUT,EAAuBQ,kEAKpDA,EAAaE,KAAOtB,KAAKJ,OAAO0B,uBAEzBF,0LAGCA,gFACRA,EAAaP,IAAM,gBAEZO,EAAaF,eAECP,EAAQY,eAAevB,KAAKJ,OAAQwB,iBAAzDA,SAEAA,EAAeV,EAAEW,SAAUT,EAAuBQ,qBAE3CA,+GAKX5D,EAAOD,QAAU4D,iBCnDjB3D,EAAAD,QAAAkC,QAAA,yDCAAjC,EAAAD,QAAAkC,QAAA,iJCAA,IAAMiB,EAAI7C,EAAQ,GACZ2D,EAAU3D,EAAQ,GAClB8B,EAAK9B,EAAQ,GAEb8C,aACJ,SAAAA,EAAYf,IAAQ,EAAAE,EAAAC,SAAAC,KAAAW,GAClBX,KAAKJ,OAASA,EACdI,KAAKyB,UAAY7B,EAAO8B,OAAOxB,IAC/BF,KAAKsB,KAAO1B,EAAO0B,+DA8FPK,EAAWC,EAAUC,EAAUC,GAC3C,IAAKH,EACH,MAAO,GAGT,IAAII,SAEoB,iBAAbH,IACTG,EAAgBH,EAASI,MAAM,OAE/BJ,KAEAG,EAAcE,QAAQ,SAACC,GACrBA,EAAUA,EAAQF,MAAM,OAExBJ,EAASM,EAAQ,IAAMA,EAAQ,MAInC,IAAMC,IAAOR,EAAUS,OAAQT,EAAUS,MAAMP,GAE3CM,GACFP,EAASS,EAAIF,EAAK,GAClBP,EAASU,EAAIH,EAAK,GAClBP,EAASW,GAAKJ,EAAK,GACnBP,EAASY,GAAKL,EAAK,IACVL,IACTF,EAASa,EAAIX,GAGfC,KAEArB,EAAEuB,QAAQL,EAAU,SAAC7C,EAAO2D,GAC1BX,EAAcY,MAAMD,EAAK3D,GAAO6D,KAAK,QAGvC,IAAMC,EAAiBd,EAAca,KAAK,KAE1C,GAAI,QAAQE,KAAKnB,EAAUoB,eAAgB,CACzC,IAAMC,EAAWrB,EAAUqB,SAG3B,MAAY,QAFAA,EAAShB,MAAM,KAAKiB,MAAMC,eAG5BlD,KAAKyB,UAAWzB,KAAKsB,KAAM0B,GAAUJ,KAAK,MAG5C5C,KAAKyB,UAAWzB,KAAKsB,KAAM,YAAauB,EAAgBG,GAAUJ,KAAK,KAGjF,GAAI,qBAAqBE,KAAKnB,EAAUoB,eAAgB,CACtD,IAAMI,EAAexB,EAAUwB,aAAaC,QAAQ,cAAe,IAEnE,OAAQpD,KAAKyB,UAAWzB,KAAKsB,KAAM,QAAS,YAAauB,EAAgBM,GAAcP,KAAK,KAG9F,MAAO,4CAlJchD,EAAQyD,GAC7B,OAAO,IAAI7B,EAAQ,SAAC8B,EAASC,GAC3B5D,EAAGM,QAAQL,GAAQ4D,OAAOH,GACvBI,KAAK,SAACC,GACLL,EAAIxC,IAAM6C,EAASC,GACnBN,EAAIO,KAAOF,EAASG,IACpBP,EAAQD,IACP,SAACS,GACuB,MAArBA,EAAMC,WAKVpE,EAAGM,QAAQL,GAAQf,IAAIwE,EAAIxC,KACxB4C,KAAK,SAACC,GACLL,EAAIO,KAAOF,EAASE,KAEpBjE,EAAGM,QAAQL,GAAQ4D,OAAOH,GACvBI,KAAK,SAACC,GACLL,EAAIO,KAAOF,EAASG,IACpBP,EAAQD,IACPE,IACJA,GAbHA,EAAOO,2CAkBGlE,EAAQoE,GAAwB,IAAlBC,EAAkBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,IAC5C,OAAO,IAAI1C,EAAQ,SAAC8B,EAASC,GAC3B,IACMc,KADS3D,EAAE4D,MAAMN,EAAMC,GAGtBhC,QAAQ,SAACqC,GACdD,EAAS1B,KAAK,IAAInB,EAAQ,SAAC8B,EAASC,GAClC5D,EAAGM,QAAQL,GAAQ2E,MACjBP,KAAMM,IACLb,KAAKH,EAASC,QAIrB/B,EAAQgD,IAAIH,GAAUZ,KAAKH,EAASC,2CAIlBkB,GAAgC,IAAtBC,EAAsBR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAVS,IACpCC,KAEFC,GACFJ,aA2BF,OAxBAA,EAASxC,QAAQ,SAAC6C,KACXA,EAAOC,aAAeF,EAAMJ,SAASN,QAAUO,KAClDG,GACEJ,cAIJI,EAAMJ,SAAS9B,KAAKmC,KAEfA,EAAOE,YAAcH,EAAMJ,SAASN,QAAUO,KACjDG,EAAMI,MAAQ,EAEdJ,EAAMJ,SAASxC,QAAQ,SAAC6C,GACtBD,EAAMI,QAAUH,EAAOnD,WAAamD,GAAQG,QAG9CJ,EAAMJ,SAASxC,QAAQ,SAAC6C,GACtBA,EAAOI,YAAcJ,EAAOnD,WAAamD,GAAQG,MAAQJ,EAAMI,QAGjEL,EAAQjC,KAAKkC,MAIVD,gCAIP,OAAO,EAAAO,EAAApF,SAAe,IAAIqF,MAAQhC,QAAQ,KAAM,oCAGlCiC,EAAOC,EAAmB5C,GACxC,OAAO2C,EAAME,IAAI,SAACrG,GAChB,OAAIA,EAAOwD,KAAS4C,EAAkB5C,GAC7B4C,EAEFpG,aAgEb1B,EAAOD,QAAUoD,iBClKjBnD,EAAAD,QAAAkC,QAAA,qBCAAjC,EAAAD,QAAAkC,QAAA,uDCAAjC,EAAAD,QAAAkC,QAAA,4HCAA,IAAMiB,EAAI7C,EAAQ,GACZ2D,EAAU3D,EAAQ,GAClB2H,EAAO3H,EAAQ,IACf4H,EAAKjE,EAAQkE,aAAa7H,EAAQ,IAClC8H,EAAO9H,EAAQ,IACf+H,EAAO/H,EAAQ,IACfgI,EAAMhI,EAAQ,IAEdiI,aACJ,SAAAA,EAAYlG,IAAQ,EAAAE,EAAAC,SAAAC,KAAA8F,GAClB9F,KAAKJ,OAASA,EAEdI,KAAK+F,GAAK,IAAIF,EAAIC,IAChBE,YAAapG,EAAOqG,IAAIC,eACxBC,gBAAiBvG,EAAOqG,IAAIG,qBAG9B5E,EAAQkE,cAAa,EAAAW,EAAAtG,SAAsBC,KAAK+F,gEAGpCO,EAAQtD,GAAqB,IAAX1B,EAAW4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACrC,OAAO,IAAI1C,EAAQ,SAAC8B,EAASC,GAC3BkC,EAAGc,UAAUvD,GACVS,KAAK,SAAC+C,GACL,IAAMC,EAAWD,EAAME,KACjBC,EAAWhB,EAAKiB,QAAQ5D,GAExB6D,EAAOjB,EAAKkB,KACZC,EAAMvB,EAAKwB,QAAQhE,GAEnBiE,GAAO3F,EAAD,GAAUuF,EAAOE,GAAOnE,KAAK,KAEnCsE,GACJC,OAAQb,EACRc,IAAKH,EAELI,IAAK,cACLC,aAAc,qBACdC,YACAC,QAAS,IAAIpC,KAAK,cAClBqC,aAAc,mBACdC,YAAaf,EACbgB,cAAelB,GAGjBnD,GACEN,WACAkE,gBACAU,UACEtB,SACAW,MACAJ,OACAE,OAEFc,UACE7E,SAAUwC,EAAKsC,SAAS9E,GACxByD,WACAE,eAGHpD,oCAIFP,EAAUkE,GAAe,IAAAa,EAAA/H,KAC9B,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B2D,EAAcc,KAAOvC,EAAGwC,iBAAiBjF,GAEzC+E,EAAKhC,GAAGmC,OAAOhB,GAMZiB,KAAK,SAACrE,EAAOsE,GACRtE,EACFP,EAAOO,GAITR,EAAQ8E,4CAKH9B,EAAQ5D,EAAK2F,GACxB,OAAOrI,KAAK+F,GAAGuC,kBAAkB,aAC/BnB,OAAQb,EACRc,IAAK1E,EACL6F,oDAAqDF,EAArD,wCAIM/B,EAAQ5D,GAChB,OAAO1C,KAAK+F,GAAGyC,gBACbrB,OAAQb,EACRc,IAAK1E,wCAIGpB,EAAMmH,GAAO,IAAAC,EAAA1I,KACvB,OAAO,IAAIwB,EAAQ,SAAC+B,EAAQD,GAC1B,GAAqB,IAAjBmF,EAAMtE,OAAV,CAKA,IAAMwE,EAAUjI,EAAEkI,KAAKH,EAAMlD,IAAI,SAACsD,GAChC,IACE,OAAOA,EAAKjB,SAAS7B,GAAGO,OACxB,MAAOxC,GACP,OAAO,QAERgF,OAAO,SAAAxC,GAAA,OAAUA,KAEdyC,KAEA1E,KAGNoE,EAAMxG,QAAQ,SAAC4G,GACbF,EAAQ1G,QAAQ,SAACqE,GACf,IACEjC,EAAS1B,KAAK+F,EAAK3C,GAAGiD,kBACpB7B,OAAQb,EACR2C,OAAW3H,EAAX,IAAmBuH,EAAKjB,SAAS7B,GAAGc,QAEtC,MAAO/C,GACPoF,QAAQC,IAAIrF,QAKlBtC,EAAQgD,IAAIH,GAAUZ,KAAK,SAAC2F,GAC1BA,EAAQnH,QAAQ,SAACoH,GACfA,EAAOC,SAASrH,QAAQ,SAAC4G,GAClBE,EAAUM,EAAOE,QACpBR,EAAUM,EAAOE,UAGnBR,EAAUM,EAAOE,MAAM5G,MACrByE,IAAKyB,EAAKzB,UAKhB,IAAM/C,KAEN3D,EAAEuB,QAAQ8G,EAAW,SAACN,EAAOe,GAC3BnF,EAAS1B,KAAK+F,EAAK3C,GAAG0D,oBACpBtC,OAAQqC,EACRE,QACEC,QAASlB,QAKS,IAApBpE,EAASF,OAKb3C,EAAQgD,IAAIH,GAAUZ,KAAKH,EAASC,GAJlCD,KAKDC,QA5DDD,eAkER9F,EAAOD,QAAUuI,iBCzKjBtI,EAAAD,QAAAkC,QAAA,+CCAAjC,EAAAD,QAAAkC,QAAA,gECAAjC,EAAAD,QAAAkC,QAAA,kCCAAjC,EAAAD,QAAAkC,QAAA,4HCAA,IAAMiB,EAAI7C,EAAQ,GAEZ+L,IAEFC,KAAM,aACNvL,KAAM,aACNwL,SAAU,OAGVD,KAAM,QACNvL,KAAM,QACNwL,SAAU,OAGVD,KAAM,WACNvL,KAAM,WACNwL,SAAU,YAGVD,KAAM,QACNvL,KAAM,QACNwL,SAAU,WAGVD,KAAM,OACNvL,KAAM,OACNwL,SAAU,WAGVD,KAAM,UACNvL,KAAM,UACNwL,SAAU,OAGVD,KAAM,SACNvL,KAAM,SACNwL,SAAU,UAGVD,KAAM,aACNvL,KAAM,cACNwL,SAAU,UAGVD,KAAM,aACNvL,KAAM,cACNwL,SAAU,UAGVD,KAAM,QACNvL,KAAM,QACNwL,SAAU,OAGVD,KAAM,WACNvL,KAAM,YACNwL,SAAU,OAGVD,KAAM,SACNvL,KAAM,SACNwL,SAAU,WAGVD,KAAM,WACNvL,KAAM,YACNwL,SAAU,OAGVD,KAAM,SACNvL,KAAM,SACNwL,SAAU,UAGVD,KAAM,WACNvL,KAAM,WACNwL,SAAU,OAGVD,KAAM,OACNvL,KAAM,OACNwL,SAAU,WAGVD,KAAM,WACNvL,KAAM,YACNwL,SAAU,WAGVD,KAAM,QACNvL,KAAM,QACNwL,SAAU,OAGVD,KAAM,QACNvL,KAAM,QACNwL,SAAU,OAIRC,2GAEF,OAAOH,EAAOrE,IAAI,SAAAyE,GAAA,OAAS,EAAAC,EAAAlK,SAAciK,mCAE9BH,GACX,OAAOnJ,EAAEwJ,KAAKH,EAAOH,UAAYC,kBAIrCrM,EAAOD,QAAUwM,+HC7GjB,IAAMrJ,EAAI7C,EAAQ,GACZsD,EAAetD,EAAQ,GACvB8B,EAAK9B,EAAQ,GACbkM,EAASlM,EAAQ,IAEjBsM,aACJ,SAAAA,EAAYvK,GAGV,OAHkB,EAAAE,EAAAC,SAAAC,KAAAmK,GAClBnK,KAAKJ,OAASA,EAEPI,yGAGIoK,wFACLC,EAAK,IAAIlJ,EAAanB,KAAKJ,iBAENyK,EAAGxL,oBAAxBuC,UAEOL,QAAQ4B,KAAKyH,YAEpBpK,KAAKsK,kBAAkBlJ,EAAaL,yCAEnCsJ,EAAGE,IAAInJ,oLAGLoJ,0FACHH,EAAK,IAAIlJ,EAAanB,KAAKJ,iBAENyK,EAAGxL,gBAAxBuC,SAEAgJ,EAAS1J,EAAEwJ,KAAK9I,EAAaL,SAAWO,KAAMkJ,0BAG5CC,2BAA2BD,mCAG5BJ,qLAGIA,0FACLC,EAAK,IAAIlJ,EAAanB,KAAKJ,iBAENyK,EAAGxL,gBAAxBuC,UAIS,KAFTsJ,EAAQhK,EAAEiK,UAAUvJ,EAAaL,SAAWO,KAAM8I,EAAO9I,8BAGvDmJ,2BAA2BL,EAAO9I,oBAG1CF,EAAaL,QAAQ6J,OAAOF,EAAO,EAAGN,aAEhCpK,KAAKsK,kBAAkBlJ,EAAaL,0CAEnCsJ,EAAGE,IAAInJ,uLAGHyJ,wFACLR,EAAK,IAAIlJ,EAAanB,KAAKJ,iBAENyK,EAAGxL,oBAAxBuC,SAENyJ,EAAcnK,EAAEoK,QAAQD,GAAeA,GAAeA,GAEtDzJ,EAAaL,QAAUK,EAAaL,QAAQ+H,OAAO,SAAAsB,GAAA,OAAgD,IAAtCS,EAAYE,QAAQX,EAAO9I,QAExFF,EAAaL,QAAUK,EAAaL,QAAQwE,IAAI,SAAC6E,GAC/C,OAAKA,EAAOR,QAGZQ,EAAOR,OAASQ,EAAOR,OAAOrE,IAAI,SAACyE,GACjC,OAAKA,EAAMpI,UAGPoI,EAAMpI,SAASb,UACjBiJ,EAAMpI,SAASb,QAAUiJ,EAAMpI,SAASb,QAAQ+H,OAAO,SAAAsB,GAAA,OAA2C,IAAjCS,EAAYE,QAAQX,MAEhFJ,GALEA,IAOJI,GAXEA,aAcLpK,KAAKsK,kBAAkBlJ,EAAaL,yCAEnCsJ,EAAGE,IAAInJ,0LAGAL,wFACRsJ,EAAK,IAAIlJ,EAAanB,KAAKJ,iBAENyK,EAAGxL,oBAAxBuC,UAEOL,QAAUA,oBAIhBsJ,EAAGE,IAAInJ,iMAGQL,0FAClB6I,KAEJ7I,EAAQkB,QAAQ,SAACmI,GACfR,EAASA,EAAOoB,OAAOZ,EAAOR,UAGhCA,EAASlJ,EAAEuK,OAAOrB,EAAQ,QAEpBc,GACJpM,KAAM,SACNuL,KAAM,OACNqB,KAAM,cACNR,OACES,eACEC,SAAS,EACTC,SAAU,YAEZC,UACEC,OAEI1B,KAAM,YAIZD,SAEItL,KAAM,YACNuL,KAAM,YAGNvL,KAAM,UACNuL,KAAM,YAGNvL,KAAM,QACNuL,KAAM,WAGNvL,KAAM,OACNuL,KAAM,WAGNvL,KAAM,SACNuL,KAAM,WAGNvL,KAAM,aACNuL,KAAM,WAGNvL,KAAM,cACNuL,KAAM,aAMdD,EAAO3H,QAAQ,SAAC+H,GACd,IAAMwB,EAAWzB,EAAOC,MAAMA,EAAMH,MAEhC,wBAAwB/G,KAAK0I,EAAS1B,WACxCY,EAAMA,MAAMd,OAAOjH,MACjBrE,eAAgB0L,EAAM1I,KAAtB,SACAuI,KAAM2B,EAAS1B,WAIf,QAAQhH,KAAK0I,EAAS1B,WACxBY,EAAMA,MAAMd,OAAOjH,MACjBrE,eAAgB0L,EAAM1I,KAAtB,iBACAuI,KAAM,WAIN,WAAW/G,KAAKkH,EAAMH,OACxBa,EAAMA,MAAMd,OAAOjH,MACjBrE,eAAgB0L,EAAM1I,KAAtB,uBACAuI,KAAM,sBAKSlK,EAAGM,QAAQD,KAAKJ,QAAQ8K,MAAMA,iBAA7CrB,2BAECA,+GAKX7L,EAAOD,QAAU4M,0IC5LjB,IAAMzJ,EAAI7C,EAAQ,GACZ2D,EAAU3D,EAAQ,GAClB4N,EAAO5N,EAAQ,IAAa4N,KAC5BtK,EAAetD,EAAQ,GACvB8B,EAAK9B,EAAQ,GACb8C,EAAU9C,EAAQ,GAClBsM,EAAStM,EAAQ,IAIjB6N,aACJ,SAAAA,EAAa9L,IAAQ,EAAAE,EAAAC,SAAAC,KAAA0L,GACnB1L,KAAKJ,OAASA,EAGdI,KAAK2L,cAAgBD,EAAOC,uHAsJXC,EAAWC,+FACPlM,EAAGM,QAAQD,KAAKJ,QAAQkM,aAAa,SAAU,UAAW,UAC7EC,UAAWH,GACXI,QAASJ,MACT/G,OAAO,EACPgH,6BAJIxC,2BAMCA,6IAGK4C,GAAsD,IAAjDC,EAAiDhI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtC,KAAsC6D,EAAA/H,KAAhCmM,EAAgCjI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB,KAAMkI,EAAgBlI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,QACzD,OAAO,IAAI1C,EAAQ,SAAC8B,EAASC,GACR,IAAf0I,EAAI9H,OAIRxE,EAAGM,QAAQ8H,EAAKnI,QAAQyM,KAAK,SAAUF,EAAU,eAAiB,QAChEG,KAAML,EACNM,cAAc,IAEb9I,KAAK,SAAC4F,GACL,IAAMrF,EAAO0H,EAAOc,kBAAkBnD,EAAQ6C,EAAUC,EAASC,GACjE9I,EAAQU,IACPT,GAVHD,2FAcYU,EAAMkI,EAAUC,EAASC,WAAMK,4DAAaC,yDAAa,2EACnEP,GAAYD,2CACTO,iBAGHR,KAENjI,EAAK/B,QAAQ,SAAC0K,GACZ,IAEMtJ,IAFUsJ,EAAStJ,IAELsJ,EAAStJ,IAAMsJ,EAE/BT,GAAYxL,EAAEgG,KAAKrD,EAAIuG,QACzBlJ,EAAEuB,QAAQoB,EAAIuG,OAAQ,SAACI,GACjBtJ,EAAEoK,QAAQd,EAAMjL,QAClBiL,EAAMjL,MAAMkD,QAAQ,SAAC2K,GACfA,EAAIjJ,KAAO8I,EAAOG,EAAIjJ,KAIxBsI,EAAItJ,KAAKiK,EAAIjJ,QAOrBsI,EAAItJ,KAAKU,EAAIM,IAAMN,EAAIxC,gBAITb,KAAK6M,aAAaZ,EAAKC,EAAUC,EAASC,cAAxDU,UAEE7K,QAAQ,SAACoB,GACboJ,EAAOpJ,EAAIxC,KAAOwC,IAGpBqJ,GAAc,EAETR,KAAaA,GAAYQ,GAAcR,6CACnCO,4BAGMzM,KAAK+M,WAAWD,EAAOZ,EAAUC,EAASC,EAAMK,EAAQC,kBAAvED,SAEAK,EAAQ,uBAEDL,iMA4CUzI,EAAMkI,EAAUC,EAASC,+FACvBpM,KAAK+M,WAAW/I,EAAMkI,EAAUC,EAASC,iBAAxDK,SAEJzI,EAAO0H,EAAOsB,WAAWhJ,EAAMyI,EAAQP,GAEvCO,EAAS,uBAEFzI,iJAGKS,GAAU,IAAAiE,EAAA1I,KACtB,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B,IAAM0J,EAAUvB,EAAOwB,SAASzI,GAET,IAAnBwI,EAAQ9I,OAKZxE,EAAGM,QAAQyI,EAAK9I,QAAQuN,OACtBb,KAAMW,EACNV,cAAc,IAEb9I,KAAK,SAACC,GACL,IAAI+E,EAAQ/E,EAAS0J,KAAKtE,OAAO,SAAAuE,GAAA,OAAQA,EAAItO,QAAUsO,EAAItO,MAAMuO,UAE5C,IAAjB7E,EAAMtE,QAKVsE,EAAQA,EAAMlD,IAAI,SAAC8H,GAEjB,cADOA,EAAIhK,IAAIyB,OACRuI,EAAIhK,MAGb1C,EAAQ4M,YAAY7E,EAAK9I,OAAQ6I,EAvTjB,KAwTbhF,KAAKH,EAASC,IAVfD,OAWDC,GAvBHD,gDA2BWmB,GAAU,IAAA+I,EAAAxN,KACzB,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GACH,IAApBkB,EAASN,QAKbM,EAAWA,EAASc,IAAI,SAAAT,GAAA,OAAUA,EAAOjE,MAEzClB,EAAGM,QAAQuN,EAAK5N,QAAQyM,KAAK,SAAU,cACrCC,KAAM7H,EACN8H,cAAc,IAEb9I,KAAK,SAACC,GACL,IAAM+J,EAAkB/M,EAAEuK,OAAOvH,EAAS0J,KAAM,SAAAC,GAAA,OAAOA,EAAIhK,IAAIxC,MAAK0E,IAAI,SAAC8H,GAQvE,OAPAA,EAAIhK,IAAIuG,OAASlJ,EAAEgN,UAAUL,EAAIhK,IAAIuG,OAAQ,SAACI,GAI5C,OAHItJ,EAAEoK,QAAQd,EAAMjL,SAClBiL,EAAMjL,MAAQ2B,EAAEiN,OAAO3D,EAAMjL,MAAO,SAAA6N,GAAA,MAAoB,WAAbA,EAAI/C,OAAmD,IAA9BpF,EAASsG,QAAQ6B,EAAIjJ,OAEpFqG,IAGFqD,EAAIhK,MAGkB,IAA3BoK,EAAgBtJ,OAKpBxD,EAAQ4M,YAAYC,EAAK5N,OAAQ6N,EA3VjB,KA4VbhK,KAAKH,EAASC,GALfD,OAMDC,IA7BHD,gDAiCWmB,GAAU,IAAAmJ,EAAA5N,KACzB,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B,GAAwB,IAApBkB,EAASN,OAAb,CAKA,IAAM0J,KAENpJ,EAAWA,EAASc,IAAI,SAACT,GAGvB,OAFA+I,EAAU/I,EAAOjE,KAAOiE,EAEjBA,EAAOjE,MAGhBlB,EAAGM,QAAQ2N,EAAKhO,QAAQyM,KAAK,SAAU,cACrCC,KAAM7H,EACN8H,cAAc,IAEb9I,KAAK,SAACC,GACL,IAAMe,EAAWf,EAAS0J,KAAK7H,IAAI,SAAC8H,GAClC,IAAMvI,EAASuI,EAAIhK,IAuBnB,OArBA3C,EAAEuB,QAAQ6C,EAAO8E,OAAQ,SAACI,EAAO4B,GAC3BlL,EAAEoK,QAAQd,EAAMjL,SAClB+F,EAAO8E,OAAOgC,GAAW7M,MAAQiL,EAAMjL,MAAMwG,IAAI,SAACqH,GAchD,MAbiB,WAAbA,EAAI/C,MAAqBgE,EAAUjB,EAAIjJ,MACzCiJ,EAAItL,KAAOuM,EAAUjB,EAAIjJ,IAAIrC,KAC7BsL,EAAIkB,MAAQD,EAAUjB,EAAIjJ,IAAImK,MAC9BlB,EAAIxC,OAASyD,EAAUjB,EAAIjJ,IAAIyG,OAC/BwC,EAAImB,UAAYF,EAAUjB,EAAIjJ,IAAIoK,UAE9BF,EAAUjB,EAAIjJ,IAAIhC,UACpBiL,EAAIjL,UAAYkM,EAAUjB,EAAIjJ,IAAIhC,UAElCiL,EAAIjL,UAAY,MAIbiL,OAKN9H,IAGTnE,EAAQ4M,YAAYK,EAAKhO,OAAQ6E,EAhZjB,KAiZbhB,KAAKH,EAASC,IAChBA,QA9CHD,6CAkDQmF,GAAO,IAAAuF,EAAAhO,KACnB,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B,GAAqB,IAAjBkF,EAAMtE,OAAV,CAKA,IAAI8I,KACEgB,KAENxF,EAAMxG,QAAQ,SAAC4G,GACTA,EAAKqF,QACPD,EAAQpF,EAAKqF,OAAS,KACtBjB,EAAQtK,KAAKkG,EAAKqF,QAGhBrF,EAAKsF,QACPF,EAAQpF,EAAKsF,OAAStF,EAAK/D,OAC3BmI,EAAQtK,KAAKkG,EAAKsF,UAItBlB,EAAUA,EAAQnE,OAAO,SAAAnF,GAAA,OAAMjD,EAAE0N,SAASzK,KAE1ChE,EAAGM,QAAQ+N,EAAKpO,QAAQuN,OACtBb,KAAMW,EACNV,cAAc,IAEb9I,KAAK,SAACC,GACL,IAAI+E,EAAQ/E,EAAS0J,KAAKtE,OAAO,SAAAuE,GAAA,OAAQA,EAAItO,QAAUsO,EAAItO,MAAMuO,UAE5C,IAAjB7E,EAAMtE,QAKVsE,EAAQA,EAAMlD,IAAI,SAAC8H,GASjB,OARIY,EAAQZ,EAAIhK,IAAIxC,KAClBwM,EAAIhK,IAAIyB,QACNnB,GAAIsK,EAAQZ,EAAIhK,IAAIxC,aAGfwM,EAAIhK,IAAIyB,OAGVuI,EAAIhK,MAGb1C,EAAQ4M,YAAYS,EAAKpO,OAAQ6I,EAtcjB,KAucbhF,KAAKH,EAASC,IAjBfD,OAkBDC,QA/CHD,2CAmDM+K,GAAwD,IAAjDnC,EAAiDhI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtC,KAAsCoK,EAAAtO,KAAhCmM,EAAgCjI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB,KAAMkI,EAAgBlI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,QACzD,OAAO,IAAI1C,EAAQ,SAAC8B,EAASC,GAC3B5D,EAAGM,QAAQqO,EAAK1O,QAAQyM,KAAK,SAAU,OAAQgC,GAC5C5K,KAAK,SAAC4F,GACLA,EAAO+D,KAAO1B,EAAOc,kBAAkBnD,EAAQ6C,EAAUC,EAASC,IAE5DF,GAAaC,IAAkC,IAAtB9C,EAAOkF,WAKtCD,EAAKE,YAAYnF,EAAO+D,KAAMlB,EAAUC,EAASC,GAC9C3I,KAAK,SAACO,GACLqF,EAAO+D,KAAOpJ,EAEdV,EAAQ+F,EAAO+D,OACd7J,GATHD,EAAQ+F,EAAO+D,OAWhB7J,2CAIM8K,GAAwD,IAAjDnC,EAAiDhI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtC,KAAsCuK,EAAAzO,KAAhCmM,EAAgCjI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB,KAAMkI,EAAgBlI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,QAC5D,OAAO,IAAI1C,EAAQ,SAAC8B,EAASC,GAC3B8K,EAAMK,MAAQC,KAAKC,IAAIP,EAAMK,MAAQG,SAASR,EAAMK,MAAO,IAAM,IAAK,KACtEL,EAAMS,KAAOpO,EAAE0N,SAASC,EAAMS,MAAjB,IAA6BT,EAAMS,KAAnC,IAA6CT,EAAMS,KAE5D5C,IACFmC,EAAM9B,cAAe,GAGvB5M,EAAGM,QAAQwO,EAAK7O,QAAQmP,OAAO,SAAUV,EAAM3D,OAAS,MAAO2D,GAC5D5K,KAAK,SAAC4F,GAEL,GAAIA,EAAO2F,OAAQ,CACjB,IAAM3K,KAwBN,OAtBAgF,EAAO2F,OAAS3F,EAAO2F,OAAOzJ,IAAI,SAACV,GAcjC,OAbAR,EAAS1B,KAAK,IAAInB,EAAQ,SAAC8B,EAASC,IAC5B2I,GAAaC,IAAiC,IAArBtH,EAAM0J,WAKrCE,EAAKD,YAAY3J,EAAMoK,KAAM/C,EAAUC,EAASC,GAC7C3I,KAAK,SAACO,GACLa,EAAMoK,KAAOjL,EAEbV,KACCC,GATHD,OAWGuB,SAGTrD,EAAQgD,IAAIH,GACTZ,KAAK,WACJH,EAAQ+F,IACP9F,IAKD2I,GAAaC,IAAkC,IAAtB9C,EAAOkF,WAKtCE,EAAKD,YAAYnF,EAAO+D,KAAMlB,EAAUC,EAASC,GAC9C3I,KAAK,SAACO,GACLqF,EAAO+D,KAAOpJ,EAEdV,EAAQ+F,IACP9F,GATHD,EAAQ+F,IAUT9F,0CAIK8K,GAAwD,IAAjDnC,EAAiDhI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtC,KAAsCgL,EAAAlP,KAAhCmM,EAAgCjI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB,KAAMkI,EAAgBlI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,QAC3D,OAAO,IAAI1C,EAAQ,SAAC8B,EAASC,GAC3B,IAAMmL,EAAQL,EAAMK,MAAQG,SAASR,EAAMK,MAAO,IAAM,GAExD,GAAIA,GAAS,IACXQ,EAAKC,cAAcd,EAAOnC,EAAUC,EAASC,GAC1C3I,KAAKH,EAASC,OAFnB,CAMA,IAAI6J,KACA4B,MAEJ,SAASI,EAAgBC,GAAU,IAAAC,EAAAtP,KAC3BuP,EAAS7O,EAAE8O,MAAMnB,GAEnBgB,IACFE,EAAOF,SAAWA,GAGpBrP,KAAKmP,cAAcI,EAAQrD,EAAUC,EAASC,GAC3C3I,KAAK,SAAC4F,GACDA,EAAO+D,OACTA,EAAOA,EAAKpC,OAAO3B,EAAO+D,OAExB/D,EAAO2F,SACTA,EAASA,EAAOhE,OAAO3B,EAAO2F,SAG5B5B,EAAKjJ,OAASkF,EAAOkF,YAAcnB,EAAKjJ,OAASuK,EACnDU,EAAelR,KAAfoR,EAA0BjG,EAAOgG,WAInChG,EAAO+D,KAAOA,EACd/D,EAAO2F,OAASA,EAEhB1L,EAAQ+F,KACP9F,KAGQrF,KAAfgR,yFAIcb,eAAOnC,yDAAW,KAAMC,yDAAU,KAAMC,yDAAO,qFAC3D/C,2BAGa1J,EAAGM,QAAQD,KAAKJ,QAAQsK,KAAKmE,UAA5ChF,4DAEoB,oBAAhBoG,EAAAC,GAAM5L,8BACFuG,EAAK,IAAIlJ,EAAanB,KAAKJ,kBACNyK,EAAGxL,qBAAxBuC,SAEAgJ,EAAS,IAAID,EAAOnK,KAAKJ,kBACzBwK,EAAOE,kBAAkBlJ,EAAaL,kCAE7BpB,EAAGM,QAAQD,KAAKJ,QAAQsK,KAAKmE,WAA5ChF,qBAIa,IAAb6C,4CACK7C,eAGLgF,EAAMzE,SAA2C,IAAjCyE,EAAMzE,OAAOmB,QAAQ,8BACjC,IAAIN,MAAM,8DAGEzK,KAAKwO,YAAYnF,EAAOrF,KAAMkI,EAAUC,EAASC,kBAArE/C,EAAOrF,8BAEAqF,uJAGQsG,GAAU,IAAAC,EAAA5P,KACzB,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B5D,EAAGM,QAAQ2P,EAAKhQ,QAAQf,IAAI8Q,GAC1BE,WAAW,IAEVpM,KAAK,SAACC,GACL,IAAMoM,KAENpM,EAASqM,WAAW9N,QAAQ,SAAC+N,GACH,cAApBA,EAASC,QACXH,EAAYnN,KAAKqN,EAASnM,OAI9BlE,EAAGM,QAAQ2P,EAAKhQ,QAAQf,IAAI8Q,GAC1BO,WAAW,EAAA/K,EAAApF,SAAe+P,KAEzBrM,KAAK,SAACC,GACL,IAAMyM,KACAC,KAEN1M,EAASzB,QAAQ,SAAC+N,GACZA,EAASK,KACXF,EAAUxN,KAAKqN,EAASK,IAExB3P,EAAEuB,QAAQ+N,EAASK,GAAGzG,OAAQ,SAACI,GACzB,SAASlH,KAAKkH,EAAMH,OACtBnJ,EAAEuB,QAAQ+H,EAAMjL,MAAO,SAAC6N,GAClBA,EAAIjJ,IACNyM,EAAYzN,KAAKiK,EAAIjJ,MAKvB,QAAQb,KAAKkH,EAAMH,OAASG,EAAMjL,MAAM4E,IAC1CyM,EAAYzN,KAAKqH,EAAMjL,MAAM4E,SAMrChE,EAAGM,QAAQ2P,EAAKhQ,QAAQuN,OACtBb,KAAM5L,EAAEkI,KAAKwH,GACb7D,cAAc,IAEb9I,KAAK,SAAC4F,GACL,IAAMiH,KAENjH,EAAO+D,KAAKnL,QAAQ,SAACoL,GACnB,IACEiD,EAAYjD,EAAIhK,IAAIxC,KAAOwM,EAAIhK,IAC/B,MAAOS,GACPoF,QAAQpF,MAAM,oCAIlBR,EAAQoI,EAAO6E,qBAAqBJ,EAAWG,KAC9C/M,IACJA,IACJA,0CAIKuB,GAAQ,IAAA0L,EAAAxQ,KACpB,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3BuB,EAAO+E,KAAO,SAEdlK,EAAGM,QAAQuQ,EAAK5Q,QAAQ4D,OAAOsB,GAC5BrB,KAAK,SAACC,GACLoB,EAAOjE,IAAM6C,EAASC,GACtBmB,EAAOlB,KAAOF,EAASG,IAEvB,IAAMoJ,EAAUvB,EAAOwB,UAAUpI,IAEjC,GAAuB,IAAnBmI,EAAQ9I,OAAZ,CAKA,IAAMsE,KAENwE,EAAQhL,QAAQ,SAACwO,GACfhI,EAAM9F,MACJuL,MAAO,KACPC,MAAOsC,EACP3L,OAAQA,EAAOjE,QAInB2P,EAAKE,aAAajI,GACfhF,KAAK,WACJH,EAAQwB,IACPvB,QAjBHD,EAAQwB,IAkBTvB,wCAIGoM,GAAU,IAAAgB,EAAA3Q,KACpB,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B5D,EAAGM,QAAQ0Q,EAAK/Q,QAAQf,IAAI8Q,GACzBlM,KAAKH,EAASC,0CAIPkB,EAAUmM,GAAS,IAAAC,EAAA7Q,KAC/B,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAG3B,IAAMsK,KAEAiD,GAJNrM,EAAW/D,EAAEoK,QAAQrG,GAAYA,GAAYA,IAIlBc,IAAI,SAACwL,GAC9B,IAAIpB,SAUJ,OARIjP,EAAEsQ,SAASD,KACbpB,EAAWoB,EAAiBlQ,IAC5BgN,EAAU8B,GAAYoB,GAEpBrQ,EAAE0N,SAAS2C,KACbpB,EAAWoB,GAGNpB,IAGThQ,EAAGM,QAAQ4Q,EAAKjR,QAAQuN,OACtBb,KAAMwE,EACNvE,cAAc,IAEb9I,KAAK,SAACC,GACL,IAAMwI,KACAzD,KAEAhE,EAAWf,EAAS0J,KAAK7H,IAAI,SAAC8H,GAClC,IAAM4D,EAAY5D,EAAIhK,IAChB6N,EAAYrD,EAAUoD,EAAUpQ,KAElCiE,EAASmM,EAETC,WACKA,EAAUtN,KAEH6H,EAAKwF,EAAWC,GAExBjP,QAAQ,SAACwJ,GACb,GAAqB,WAAjBA,EAAKjG,KAAK,GAAiB,CAC7B,IAAM2L,EAAWF,EAAUrH,OAAO6B,EAAKjG,KAAK,IACtC4L,EAAWF,EAAUtH,OAAO6B,EAAKjG,KAAK,IAExC4L,GAAYA,EAASrS,OACK,SAAxBqS,EAASrS,MAAM8K,OAAqC,OAAjB4B,EAAKjG,KAAK,IAAgBiG,EAAK4F,KAAO5F,EAAK4F,IAAItS,QACpF0J,EAAM9F,MACJuL,MAAOiD,EAAWA,EAASpS,MAAM4E,GAAK,KACtCwK,MAAOiD,EAASrS,MAAM4E,GACtBmB,OAAQoM,EAAUrQ,MAMtB,uBAAuBiC,KAAK2I,EAAKjG,KAAK,MACH,IAAjC0G,EAASnB,QAAQmG,KAA2D,IAAtCJ,EAAU/F,QAAQmG,EAAUrQ,MACpEqL,EAASvJ,KAAKuO,KAKpBpM,EAASpE,EAAE4Q,aAAcL,EAAWC,EAAW,SAACK,EAAGC,GACjD,GAAI9Q,EAAEoK,QAAQyG,IAAM7Q,EAAEoK,QAAQ0G,GAC5B,OAAOA,KAUb,OAJIZ,IACF9L,EAAO2M,SAAU,GAGZ3M,IAGT+L,EAAKa,gBAAgBxF,GAClBzI,KAAK,WACJoN,EAAKH,aAAajI,GACfhF,KAAK,WACJ9C,EAAQ4M,YAAYsD,EAAKjR,OAAQ6E,EA7xBzB,KA8xBLhB,KAAKH,EAASC,IAChBA,IACJA,IACJA,0CAIKuN,GAA4B,IAAAa,EAAA3R,KAAjB4R,EAAiB1N,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACxC,OAAO,IAAI1C,EAAQ,SAAC8B,EAASC,GAC3B,IAAIsO,SAEc,YAAdf,GACFc,GAAU,EAEVC,EAAclS,EAAGM,QAAQ0R,EAAK/R,QAAQyM,KAAK,SAAU,WACnDE,cAAc,KAIhBsF,EAAclS,EAAGM,QAAQ0R,EAAK/R,QAAQuN,OACpCb,KAAM5L,EAAEoK,QAAQgG,GAAaA,GAAaA,GAC1CvE,cAAc,IAIlBsF,EAAYpO,KAAK,SAACC,GAChB,IAAIe,EAAWf,EAAS0J,KAAKtE,OAAO,SAAAhE,GAAA,OAAWA,EAAO/F,QAAU+F,EAAO/F,MAAMuO,UAE7E7I,EAAWA,EAASc,IAAI,SAAAT,GAAA,OAAUA,EAAOzB,MAErCuO,EACFD,EAAKG,gBAAgBrN,GAClBhB,KAAK,WACJkO,EAAKI,aAAatN,GACfhB,KAAK,WACJgB,EAAWA,EAASc,IAAI,SAAAT,GAAA,OACtBjE,IAAKiE,EAAOjE,IACZ+C,KAAMkB,EAAOlB,KACboO,UAAU,KAGZrR,EAAQ4M,YAAYoE,EAAK/R,OAAQ6E,EAv0BzB,KAw0BLhB,KAAKH,EAASC,IAChBA,IACJA,IAELkB,EAAWA,EAASc,IAAI,SAACT,GAEvB,OADAA,EAAO2M,SAAU,EACV3M,IAGTnE,EAAQ4M,YAAYoE,EAAK/R,OAAQ6E,EAj1BjB,KAk1BbhB,KAAKH,EAASC,KAElBA,6CA10BeS,GACpB,OAAOA,EAAKuB,IAAI,SAAClC,GACf,OAAKA,EAAIuG,QAAWlJ,EAAEgG,KAAKrD,EAAIuG,SAI/BvG,EAAIuG,OAASlJ,EAAEgN,UAAUrK,EAAIuG,OAAQ,SAACI,GAIpC,MAHI,SAASlH,KAAKkH,EAAMH,OAASnJ,EAAEoK,QAAQd,EAAMjL,SAC/CiL,EAAMjL,MAAQ2M,EAAOC,cAAc3B,EAAMjL,QAEpCiL,EAAMjL,QAGRsE,GAVEA,+CAccW,GAAsB,IAAhBoI,EAAgBlI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,QAChC4G,EAAUpK,EAAEoK,QAAQ9G,GAsB1B,OApBAA,GAAQ8G,EAAU9G,GAAQA,IAAOuB,IAAI,SAAClC,GAiBpC,OAhBI3C,EAAEgG,KAAKrD,EAAIuG,UACbvG,EAAIuG,OAASlJ,EAAEgN,UAAUrK,EAAIuG,OAAQ,SAACI,GAYpC,OAXItJ,EAAEoK,QAAQd,EAAMjL,SAClBiL,EAAMjL,MAAQiL,EAAMjL,MAAM+J,OAAO,SAAC8D,GAChC,QAAKA,KAGDA,EAAI/C,MAAqB,WAAb+C,EAAI/C,MAA8B,UAATuC,SACdhI,IAAlBwI,EAAImB,WAA0BnB,EAAImB,eAKxC/D,KAGJ3G,IAGFyH,EAAU9G,EAAOA,EAAK,gDAGFA,EAAMsM,GACjC,OAAOtM,EAAKuB,IAAI,SAAClC,GACf,OAAK3C,EAAEgG,KAAKrD,EAAIuG,SAIhBvG,EAAIuG,OAASlJ,EAAEgN,UAAUrK,EAAIuG,OAAQ,SAACI,GA4BpC,OA3BItJ,EAAEoK,QAAQd,EAAMjL,SAClBiL,EAAMjL,MAAQiL,EAAMjL,MAAM+J,OAAO,SAAC8D,GAChC,QAAKA,IAGY,WAAbA,EAAI/C,WACyBzF,IAAxBkM,EAAY1D,EAAIjJ,OAK3BqG,EAAMjL,MAAQiL,EAAMjL,MAAMwG,IAAI,SAACqH,GAK7B,MAJiB,WAAbA,EAAI/C,OACN+C,EAAMlM,EAAEW,MAAMuL,EAAK0D,EAAY1D,EAAIjJ,MAErCiJ,EAAMlM,EAAEuR,OAAOrF,EAAK,SAAC7N,EAAO2D,GAAR,OAAgBA,EAAIwP,WAAW,UAKnDxR,EAAEsQ,SAAShH,EAAMjL,QACM,SAArBiL,EAAMjL,MAAM8K,MAAmByG,EAAYtG,EAAMjL,MAAM4E,MACzDqG,EAAMjL,MAAQ2B,EAAEW,MAAM2I,EAAMjL,MAAOuR,EAAYtG,EAAMjL,MAAM4E,KAC3DqG,EAAMjL,MAAQ2B,EAAEuR,OAAOjI,EAAMjL,MAAO,SAACA,EAAO2D,GAAR,OAAgBA,EAAIwP,WAAW,QAIhElI,IAGF3G,GAlCEA,8CAsCagG,GAAyD,IAAjD6C,EAAiDhI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtC,KAAMiI,EAAgCjI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB,KAAMkI,EAAgBlI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,QACpEF,KACA6J,KACAyC,KAyCJ,OAvCAjH,EAAO+D,KAAKnL,QAAQ,SAACoL,GACdA,EAAIhK,MAIL6I,GAA+B,UAAnBmB,EAAItO,MAAM8K,OACxByG,EAAYjD,EAAIhK,IAAIxC,KAAO6K,EAAOyG,mBAAmB9E,EAAIhK,IAAK+I,IAG5DD,GAA8B,WAAnBkB,EAAItO,MAAM8K,OACvBwD,EAAIhK,IAAI8I,WACR0B,EAAUR,EAAI3K,KAAO2K,EAAIhK,KAGJ,WAAnBgK,EAAItO,MAAM8K,MACZ7F,EAAKrB,KAAK0K,EAAIhK,QAId6I,IACFlI,EAAO0H,EAAO6E,qBAAqBvM,EAAMsM,IAGvCnE,IACF9C,EAAO+D,KAAKnL,QAAQ,SAACoL,GACfA,EAAIhK,KAA0B,WAAnBgK,EAAItO,MAAM8K,MACvBgE,EAAUR,EAAI3K,KAAKyJ,QAAQxJ,KAAK+I,EAAOyG,mBAAmB9E,EAAIhK,IAAK+I,MAIvEyB,EAAYnN,EAAEgN,UAAUG,EAAW,SAAC/I,GAElC,OADAA,EAAOqH,QAAUzL,EAAEuK,OAAOnG,EAAOqH,QAAS,SAAArH,GAAA,OAAUA,EAAOjE,MACpDiE,KAIX+I,EAAY,KACZyC,EAAc,KAEPtM,mCAGQS,GACf,IAAMwI,KAYN,OAVAxI,EAASxC,QAAQ,SAAC6C,GAChBpE,EAAEuB,QAAQ6C,EAAO8E,OAAQ,SAACI,GACpBA,EAAMjL,OACiB,SAArBiL,EAAMjL,MAAM8K,MACdoD,EAAQtK,KAAKqH,EAAMjL,MAAM4E,QAM1BjD,EAAEkI,KAAKqE,sCAgFEjJ,EAAMyI,EAAQP,GAA0B,IAAhBQ,EAAgBxI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EAGrD,OAFAwI,GAAc,EAEVR,GAAYQ,GAAcR,EACrBlI,EAGTA,EAAOA,EAAKuB,IAAI,SAACoH,GACf,IAAMyF,IAAUzF,EAAStJ,IAEnBA,EAAMoJ,EAAOE,EAAShJ,IAAMgJ,EAAS9L,OAASuR,EAAQzF,EAAStJ,IAAMsJ,GAyB3E,OAvBIT,GAAY7I,EAAIuG,SAClBvG,EAAIuG,OAASlJ,EAAEgN,UAAUrK,EAAIuG,OAAQ,SAACI,GAYpC,OAXItJ,EAAEoK,QAAQd,EAAMjL,SAClBiL,EAAMjL,MAAQiL,EAAMjL,MAAMwG,IAAI,SAACqH,GAK7B,OAJIA,EAAIjJ,IAAM8I,EAAOG,EAAIjJ,MACvBiJ,EAAMlM,EAAEW,MAAMuL,EAAKH,EAAOG,EAAIjJ,SAC9BiJ,EAAMlM,EAAEuR,OAAOrF,EAAK,SAAC7N,EAAO2D,GAAR,OAAgBA,EAAIwP,WAAW,QAE9CtF,IAET5C,EAAMjL,MAAQ2M,EAAOsB,WAAWhD,EAAMjL,MAAO0N,EAAQP,EAAUQ,IAG1D1C,KAIPoI,EACFzF,EAAStJ,IAAMA,EAEfsJ,EAAWtJ,EAGNsJ,aA6kBbnP,EAAOD,QAAUmO,iBCl2BjBlO,EAAAD,QAAAkC,QAAA,wBCAAjC,EAAAD,QAAAkC,QAAA,+BCAAjC,EAAAD,QAAAkC,QAAA,4BCAAjC,EAAAD,QAAAkC,QAAA,+DCAAjC,EAAAD,QAAAkC,QAAA,sDCAAjC,EAAAD,QAAAkC,QAAA,gECAAjC,EAAAD,QAAAkC,QAAA,iHCAA,IAAM+F,EAAO3H,EAAQ,IACf4H,EAAK5H,EAAQ,GACb6C,EAAI7C,EAAQ,GACZ2D,EAAU3D,EAAQ,GAClBwU,EAAaxU,EAAQ,IACrByU,EAAa9Q,EAAQkE,aAAa7H,EAAQ,KAC1C0U,EAA6B1U,EAAQ,IACrC2U,EAAgB3U,EAAQ,IACxB4U,EAAO5U,EAAQ,IAAQ4U,KACvBC,EAAY7U,EAAQ,IAAQ6U,UAC5BC,EAAoB9U,EAAQ,IAAQ8U,kBACpCC,EAAa/U,EAAQ,IACrBgV,EAAShV,EAAQ,IACjBiV,EAAYjV,EAAQ,IACpBkV,EAAOlV,EAAQ,IAEfsD,EAAetD,EAAQ,GACvB8C,EAAU9C,EAAQ,GAElBmV,EAAYnV,EAAQ,IAAqCkC,QACzDkT,EAAUpV,EAAQ,IAAmCkC,QAErDmT,aACJ,SAAAA,EAAYtT,IAAQ,EAAAE,EAAAC,SAAAC,KAAAkT,GAClBlT,KAAKJ,OAASA,EAEdI,KAAKmT,KAAO,IAAIV,EAEhBE,EAAkBK,GAClBL,EAAkBM,4DAGRG,EAAcC,GAA4B,IAAAtL,EAAA/H,KAAdsT,EAAcpP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MACpD,OAAO,IAAI1C,EAAQ,SAAC8B,EAASC,GAC3B+P,EAAU5S,EAAEW,UACVkS,SAAS,EACTJ,MAAM,EACNK,MAAM,EACNC,gBAAgB,GACfH,GAEH,IAAMI,EAAelO,EAAKlC,QAAQyE,EAAKnI,OAAO+T,MAAMC,cAAeR,GAI/DS,EAAY,MACZpO,EAAGqO,WAAcJ,EAAjB,eACFG,EAAY,OAGd,IAAME,EAAQhB,EAAKiB,YACjBnL,KAAMrD,EAAKlC,QAAQoQ,EAAc,cACjCO,kBAAmBX,EAAQC,QAC3BW,eAAgBZ,EAAQC,UACvBY,IAAIC,WAAWhR,QAAQ,KAAM,KAE1BiR,EAAgB,IAAI7B,GACxB8B,OACEjX,KAAM0K,EAAKnI,OAAO+T,MAAMC,cACxBN,SACEO,cAGJU,OAAQjB,EAAQC,QAChBiB,gBACEC,sBAAsB,EACtBC,mBAAmB,EACnBC,iBAAiB,EACjBC,gBAAgB,EAChBC,mBAAmB,EACnBC,cACEC,OAAO,EACPC,SAAS,IAIbC,WACEC,eAAe,KAIb7K,EAAK,IAAIlJ,EAAa4G,EAAKnI,QAC3BuV,EAAU,IAAIxU,EAAQoH,EAAKnI,QAEjCyK,EAAGxL,MACA4E,KAAK,SAACrC,GACLiS,EAAe3S,EAAEW,SAAUgS,GACzBzT,OAAQc,EAAE0U,KAAKhU,GAAe,SAAU,WACxC+T,UACApB,QACAlB,SACAC,YACAuC,SAAUjC,EACVG,QAASD,EAAQC,UAGnBc,EAAciB,OAAUlC,EAAxB,QAA6CC,GAC1C5P,KAAK,SAAC8R,GAEL,GAAIjC,EAAQE,KAAM,CAChB,IAAMgC,EAAoB9C,EAAU6C,GAClCE,MAAOnC,EAAQG,eAAiB,OAAS,SAG3C,GAAI+B,EAAkBE,QAAUF,EAAkBE,OAAOvR,OAEvD,YADAZ,EAAOiS,EAAkBE,QAI3BH,EAAOC,EAAkBD,KAGvBjC,EAAQH,OACVoC,EAAOxN,EAAKoL,KAAKwC,iBAAiBJ,IAGpCjS,GACEiS,OACAK,KAAMhD,EAAWiD,WAAWN,MAE7BhS,IACJA,uCAICoQ,EAAO0B,EAAUhC,EAAcC,GAAS,IAAA5K,EAAA1I,KAChD,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B,IAAMuS,EAAoBzD,EAAW0D,gBAAgBxD,GACnDyD,MACEC,QAASvN,EAAK9I,OAAOsW,QAAQC,OAC7BC,OAAQ1N,EAAK9I,OAAOsW,QAAQE,WAIhC1N,EAAK2N,YAAYhB,EAAUhC,EAAcC,GACtC7P,KAAK,SAAC4Q,GACLV,EAAM4B,KAAOlB,EAAckB,KAC3B5B,EAAMiC,KAAOvB,EAAcuB,KAE3BE,EAAkBQ,SAAS3C,EAAO,SAAC7P,EAAO8D,GACpC9D,EACFP,EAAOO,GAITR,GACEsE,WACA+L,aAGHpQ,uCAICgT,EAASC,EAAUC,GAAQ,IAAAjJ,EAAAxN,KACnC,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAChB,IAAIpC,EAAaqM,EAAK5N,QAE9Bf,MACA4E,KAAK,SAACrC,GACL,GAAiB,eAAboV,EAA2B,CAC7B,GAAIpV,EAAaoV,SAASE,WAAY,CACpC,IAAMC,EAAK,IAAIrE,GACb6D,OAAQ/U,EAAaoV,SAASE,WAAWE,eAkB3C,YAfoBpV,EAAQkE,aAAaiR,EAAGE,aAEhCC,mBAAmBL,GAC7BM,aAAcR,EAAQ5C,MACtBpK,KAAMgN,EAAQjY,KACd0Y,aAAa,EACbC,wCAAwC,IAEvCxT,KAAK,SAAC4F,GACL/F,wBAA8B+F,EAAO6N,gBAEtCC,MAAM,SAACrT,GACNP,EAAOO,EAAMsT,WAKnB7T,EAAO,IAAIkH,MAAM,qCAElBlH,cAMX/F,EAAOD,QAAU2V,iBC/LjB1V,EAAAD,QAAAkC,QAAA,2JCAA,IAAMiB,EAAI7C,EAAQ,GAEZqD,IAEF5C,KAAM,QACNgD,KAAM,QACN+V,aACEC,YAAY,EAEZC,cAAc,EACdC,YAAY,EACZC,cAAc,EACdC,cAAc,EAEdC,gBAAgB,EAChBC,cAAc,EACdC,gBAAgB,EAChBC,gBAAgB,EAEhBC,YAAY,EACZC,UAAU,EACVC,YAAY,EACZC,YAAY,EAEZtY,QAAQ,EACRwK,QAAQ,EACR+N,MAAM,EACNvW,UAAU,EACVwW,OAAO,EACPC,WAAW,KAIb/Z,KAAM,SACNgD,KAAM,SACN+V,aACEC,YAAY,EAEZC,cAAc,EACdC,YAAY,EACZC,cAAc,EACdC,cAAc,EAEdC,gBAAgB,EAChBC,cAAc,EACdC,gBAAgB,EAChBC,gBAAgB,EAEhBC,YAAY,EACZC,UAAU,EACVC,YAAY,EACZC,YAAY,EAEZtY,QAAQ,EACRwK,QAAQ,EACR+N,MAAM,EACNvW,UAAU,EACVwW,OAAO,EACPC,WAAW,KAIb/Z,KAAM,QACNgD,KAAM,QACN+V,aACEC,YAAY,EAEZC,cAAc,EACdC,YAAY,EACZC,cAAc,EACdC,cAAc,EAEdC,gBAAgB,EAChBC,cAAc,EACdC,gBAAgB,EAChBC,gBAAgB,EAEhBC,YAAY,EACZC,UAAU,EACVC,YAAY,EACZC,YAAY,EAEZtY,QAAQ,EACRwK,QAAQ,EACR+N,MAAM,EACNvW,UAAU,EACVwW,OAAO,EACPC,WAAW,KAKXC,qGAEF,OAAOpX,EAAMqE,IAAI,SAAA6G,GAAA,OAAQ,EAAAnC,EAAAlK,SAAcqM,kCAEpC9K,GACH,OAAOZ,EAAEwJ,KAAKoO,EAAMpX,SAAWI,kBAInC9D,EAAOD,QAAU+a,2GCrGjB,IAAM9W,EAAU3D,EAAQ,GAClB0a,EAAU1a,EAAQ,IAClB2a,EAAe3a,EAAQ,IAEvB4a,aACJ,SAAAA,EAAY7Y,IAAQ,EAAAE,EAAAC,SAAAC,KAAAyY,GAClBzY,KAAKJ,OAASA,2DAGJ0B,EAAMoX,GAAW,IAAA3Q,EAAA/H,KAC3B,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAEF,IAArBmV,EAAUvU,OAKdoU,GACEI,OAAQ,SACRzY,IAAQ6H,EAAKnI,OAAO8B,OAAOxB,IAA3B,IAAkCoB,EAAlC,eACAsX,MACEnQ,MAAOiQ,GAET1C,MACEmC,KAAMpQ,EAAKnI,OAAO8B,OAAOmX,SACzBC,KAAMN,EAAaO,SAAShR,EAAKnI,OAAO8B,OAAOsX,UAC/CC,iBAAiB,KAGlBxV,KAAK,SAACC,GACuB,MAAxBA,EAASK,WAKbR,EAAOG,GAJLJ,EAAQI,IAKTH,GAvBHD,eA8BR9F,EAAOD,QAAUkb,iBC3CjBjb,EAAAD,QAAAkC,QAAA,qHCAA,IAAMiB,EAAI7C,EAAQ,GACZ2D,EAAU3D,EAAQ,GAClB8H,EAAO9H,EAAQ,IACfqb,EAAWrb,EAAQ,IAEnBiI,EAAKjI,EAAQ,IACb8B,EAAK9B,EAAQ,GACb8C,EAAU9C,EAAQ,GAElBsb,aACJ,SAAAA,EAAYvZ,IAAQ,EAAAE,EAAAC,SAAAC,KAAAmZ,GAClBnZ,KAAKJ,OAASA,EAEdI,KAAKkZ,SAAWA,EAAStZ,EAAOsZ,SAAS/C,QAEzCnW,KAAK+F,GAAK,IAAID,EAAGlG,GAEjBI,KAAKoZ,cAAgBxZ,EAAOsZ,SAASnT,GAAGsT,aAAe,2DAGhDC,EAAO7I,GAAQ,IAAA1I,EAAA/H,KACtBA,KAAKuZ,OAAOD,GACT7V,KAAK,SAAC+V,GACLtQ,QAAQC,IAAI,oBAAqBqQ,EAAIC,SAAUH,EAAO7I,GAElD,6BAA6B3N,KAAK0W,EAAIC,UACxCC,WAAW,WACT3R,EAAK4R,SAASH,EAAIF,MAAO7I,IACxB,KAIL1I,EAAK6R,YAAYnJ,EAAQ+I,yCAInB/I,EAAQoJ,GAAa,IAAAnR,EAAA1I,KAC/BL,EAAGM,QAAQD,KAAKJ,QAAQyM,KAAK,SAAU,UACrCC,MAAOmE,GACPlE,cAAc,IAEb9I,KAAK,SAACqW,GACL,GAAyB,IAArBA,EAAK1M,KAAKjJ,OAAd,CAIA,IAAMW,EAASgV,EAAK1M,KAAK,GAAG/J,IAE5ByB,EAAO8E,OAASlJ,EAAEgN,UAAU5I,EAAO8E,OAAQ,SAACI,GAI1C,OAHIA,EAAMjL,OAASiL,EAAMjL,MAAM4E,KAAO8M,IACpCzG,EAAMjL,MAAM6I,SAASsR,SAAWW,GAE3B7P,IAGTrJ,EAAQY,eAAemH,EAAK9I,OAAQkF,MAGxCnF,EAAGM,QAAQD,KAAKJ,QAAQf,IAAI4R,GACzBhN,KAAK,SAACoF,GACLA,EAAKjB,SAASsR,SAAWW,EAEzBlZ,EAAQY,eAAemH,EAAK9I,OAAQiJ,oCAInCyQ,GAAO,IAAA9L,EAAAxN,KACZ,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3BiK,EAAK0L,SAASa,IAAIxD,QAAQ+C,EAAO,SAACxV,EAAOuF,GACvC,GAAIvF,EACFP,EAAOO,OADT,CAKA,IAAM0V,GACJF,MAAOjQ,EAAOmQ,IAAI7V,GAClB8V,SAAUpQ,EAAOmQ,IAAIQ,MACrBvT,SAAU,EACVwT,YAGF,GAAI5Q,EAAOmQ,IAAIU,YAAc7Q,EAAOmQ,IAAIU,WAAW/V,OAAQ,CACzD,IAAMgW,EAAmB9Q,EAAOmQ,IAAIU,WAAWpR,OAAO,SAACnH,GACrD,MAAiC,WAA1BA,EAAUyY,cAChB,GAECD,IACFX,EAAI7X,WACFzB,IAAKia,EAAiBja,IAAIkD,QAAQ,UAAW,YAC7CiX,MAAOF,EAAiBE,MACxBC,OAAQH,EAAiBG,OACzBrV,MAAO4J,SAASsL,EAAiBE,MAAO,IAAMxL,SAASsL,EAAiBG,OAAQ,MAKtFjR,EAAOmQ,IAAIe,mBAAmBtY,QAAQ,SAACuY,GACrChB,EAAI/S,UAAY+T,EAAOC,gBAEvBjB,EAAIS,QAAQO,EAAOE,QACjBxa,IAAKsa,EAAOta,IAAIkD,QAAQ,UAAW,YACnCiX,MAAOG,EAAOH,OAAS,KACvBC,OAAQE,EAAOF,QAAU,KACzBK,SAAUH,EAAOI,eACjBnU,SAAU+T,EAAOC,gBACjB9T,SAAUhB,EAAKiB,QAAQ4T,EAAOta,QAIlCmJ,EAAOmQ,IAAIU,WAAWjY,QAAQ,SAACN,GAC7B6X,EAAI/S,UAAY9E,EAAU8Y,kBAG5BnX,EAAQkW,0CAKJxW,EAAUsQ,EAAShS,GAAM,IAAAsM,EAAA5N,KACjC,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3BqK,EAAK7H,GAAGmC,OAAOlF,EAAUsQ,EAAQpM,eAC9BzD,KAAK,SAACoX,GAEqB,UAAtBvH,EAAQwH,YAEVxH,EAAQ2G,QAAU3G,EAAQ2G,QAAQnL,KAAK,SAACyC,EAAGC,GACzC,OAAID,EAAEwJ,SAAWvJ,EAAEuJ,UACT,EAENxJ,EAAEwJ,SAAWvJ,EAAEuJ,SACV,EAEF,IAGTzH,EAAQ2G,QAAU3G,EAAQ2G,QAAQnL,KAAK,SAACyC,EAAGC,GACzC,OAAID,EAAEyJ,UAAYxJ,EAAEwJ,WACV,EAENzJ,EAAEyJ,UAAYxJ,EAAEwJ,UACX,EAEF,KAIX,IAAMC,EAAW3H,EAAQ2G,QAAQ1U,IAAI,SAACiV,EAAQ9P,GAC5C,IAAMwQ,EAAa5H,EAAQ1L,SAAStB,OAA9B,IAAwChF,EAAxC,IAAgDgS,EAAQ1L,SAASf,KAKjEsU,EAASX,EAAOW,SAHpBC,MAAO,MACPC,MAAO,OAEsC/H,EAAQwH,WAEjDQ,GACJjC,YAAazL,EAAKwL,cAClBmC,KAAK,EACLC,QAAQ,EACRtb,YAAagb,EAAb,IAAwBV,EAAOlZ,KAA/B,IAAuC6Z,EACvCT,MAAOF,EAAOlZ,KACdma,QAASjB,EAAOiB,SAAW,EAC3BC,cAAelB,EAAOmB,cAAgB,GA8DxC,OA3DInB,EAAOoB,oBACTN,EAAQO,qBAAsB,GAG5BrB,EAAOsB,wBACTR,EAAQS,wBAA0BvB,EAAOsB,uBAGjB,UAAtBxI,EAAQwH,YACNN,EAAOO,WACTO,EAAQjB,MAAQG,EAAOO,UAGrBP,EAAOQ,YACTM,EAAQhB,OAASE,EAAOQ,WAGrBR,EAAON,aACVM,EAAON,eAGK,IAAVxP,GAEF8P,EAAON,WAAW8B,SAChB1d,KAAM,SACNgD,KAAM,SACN6Z,OAAQ,MACRc,OAAQ,KAIZX,EAAQpB,WAAaM,EAAON,WAAW3U,IAAI,SAAC5D,GAC1C,IAAMua,GACJ7C,YAAazL,EAAKuO,sBAClBZ,KAAK,EACLC,QAAQ,EACRY,iBAAkBlB,EAClBR,MAAO/Y,EAAUL,KACjB+a,OAAQ1a,EAAUL,KAClB6Z,OAAQxZ,EAAUwZ,OAClBmB,sBAAsB,GAexB,OAZI3a,EAAU4a,SACZL,EAAWK,OAAS5a,EAAU4a,QAG5B5a,EAAUsa,QACZC,EAAWD,MAAQta,EAAUsa,OAG3Bta,EAAU6a,WACZN,EAAWM,SAAW7a,EAAU6a,UAG3BN,KAIJZ,IAGT1N,EAAKsL,SAASa,IAAI0C,QAChBC,gBAAiBpJ,EAAQ1L,SAAStB,OAAlC,qBAA6DgN,EAAQ1L,SAASX,IAC9EgT,QAASgB,GACR,SAACnX,EAAO+V,GACL/V,EACFP,EAAOO,EAAM4R,OAAO9S,KAAK,MAI3BU,GACEuX,WACAhB,+BASdrc,EAAOD,QAAU4b,+HCtPjB,IAAMzY,EAAI7C,EAAQ,GACZsD,EAAetD,EAAQ,GAEvB8e,aACJ,SAAAA,EAAY/c,GAGV,OAHkB,EAAAE,EAAAC,SAAAC,KAAA2c,GAClB3c,KAAKJ,OAASA,EAEPI,yGAGImY,wFACL9N,EAAK,IAAIlJ,EAAanB,KAAKJ,iBAENyK,EAAGxL,oBAAxBuC,UAEOH,MAAM0B,KAAKwV,qBAEjB9N,EAAGE,IAAInJ,oLAGLwb,0FACHvS,EAAK,IAAIlJ,EAAanB,KAAKJ,iBAENyK,EAAGxL,gBAAxBuC,SAEA+W,EAAOzX,EAAEwJ,KAAK9I,EAAaH,OAAS0C,GAAIiZ,0BAGtCnS,yBAAyBmS,mCAG1BzE,qLAGIA,0FACL9N,EAAK,IAAIlJ,EAAanB,KAAKJ,iBAENyK,EAAGxL,gBAAxBuC,UAIS,KAFTsJ,EAAQhK,EAAEiK,UAAUvJ,EAAaH,OAAS0C,GAAIwU,EAAKxU,4BAGjD8G,yBAAyB0N,EAAKxU,kBAGtCvC,EAAaH,MAAM2J,OAAOF,EAAO,EAAGyN,qBAE7B9N,EAAGE,IAAInJ,sLAGHwb,wFACLvS,EAAK,IAAIlJ,EAAanB,KAAKJ,iBAENyK,EAAGxL,oBAAxBuC,SAENwb,EAASlc,EAAEoK,QAAQ8R,GAAUA,GAAUA,GAEvCxb,EAAaH,MAAQG,EAAaH,MAAM6H,OAAO,SAAAqP,GAAA,OAAqC,IAA7ByE,EAAO7R,QAAQoN,EAAKxU,wBAEpE0G,EAAGE,IAAInJ,gHAIlB5D,EAAOD,QAAUof,iBC/DjBnf,EAAAD,QAAAkC,QAAA,yICAA,IACMgG,EADU5H,EAAQ,GACL6H,aAAa7H,EAAQ,IAClC6B,EAAW7B,EAAQ,IACnB8B,EAAK9B,EAAQ,GAEbgf,aACJ,SAAAA,EAAYjd,IAAQ,EAAAE,EAAAC,SAAAC,KAAA6c,GAClB7c,KAAKJ,OAASA,mMAIOD,EAAGM,QAAQD,KAAKJ,QAAQuN,OAC3CZ,cAAc,kBADVlD,2BAICA,sRAIc1J,EAAGM,QAAQD,KAAKJ,QAAQkd,SAC3CpO,MAAO,GACPnC,cAAc,EACdzD,OAAQ,sCAHJO,2BAMCA,sLAGM0T,8FACPld,EAASG,KAAKJ,OAAOO,GAAG7B,cAEJmH,EAAGuX,cAAcD,EAAavX,oBAAlDyX,SAEAjZ,EAAOkZ,KAAKC,MAAMF,GAAa7P,KAAK7H,IAAI,SAAC8H,GAAQ,IAC7ChK,EAAQgK,EAARhK,IAER,cADOA,EAAIO,KACJP,aAGHoC,EAAG2X,YAAYL,EAAavX,oBAE5B6X,EAAW,IAAI3d,GACnBQ,IAAKF,KAAKJ,OAAOO,GAAGD,IACpBG,SAAU,WAAY,cACrBF,sBAGKkd,EAASC,QAAQzd,sFAKnBwd,EAASZ,OAAO5c,4BAEDF,EAAGM,QAAQD,KAAKJ,OAAQC,GAAQ0E,MAAOP,wBAAtDqF,2BAECA,yHAKX7L,EAAOD,QAAUsf,+HC7DjB,IAAMnc,EAAI7C,EAAQ,GACZ8B,EAAK9B,EAAQ,GACbsD,EAAetD,EAAQ,GAEvB0f,aACJ,SAAAA,EAAY3d,IAAQ,EAAAE,EAAAC,SAAAC,KAAAud,GAClBvd,KAAKJ,OAASA,sGAGH4d,wFACLnT,EAAK,IAAIlJ,EAAanB,KAAKJ,iBAENyK,EAAGxL,oBAAxBuC,UAEOJ,WAAW2B,KAAK6a,qBAEtBnT,EAAGE,IAAInJ,oLAGLqc,0FACHpT,EAAK,IAAIlJ,EAAanB,KAAKJ,iBAENyK,EAAGxL,gBAAxBuC,SAEAoc,EAAW9c,EAAEwJ,KAAK9I,EAAaJ,YAAcM,KAAMmc,0BAGjDhT,6BAA6BgT,mCAG9BD,qLAGIA,0FACLnT,EAAK,IAAIlJ,EAAanB,KAAKJ,iBAENyK,EAAGxL,gBAAxBuC,UAIS,KAFTsJ,EAAQhK,EAAEiK,UAAUvJ,EAAaJ,YAAcM,KAAMkc,EAASlc,8BAG5DmJ,6BAA6B+S,EAASlc,oBAG9CF,EAAaJ,WAAW4J,OAAOF,EAAO,EAAG8S,qBAElCnT,EAAGE,IAAInJ,sLAGHqc,wFACLpT,EAAK,IAAIlJ,EAAanB,KAAKJ,iBAENyK,EAAGxL,oBAAxBuC,SAENqc,EAAe/c,EAAEoK,QAAQ2S,GAAgBA,GAAgBA,GAEzDrc,EAAaJ,WAAaI,EAAaJ,WAAW8H,OAAO,SAAA0U,GAAA,OAAqD,IAAzCC,EAAa1S,QAAQyS,EAASlc,0BAE5F+I,EAAGE,IAAInJ,8LAGKsc,0FACbvd,EAAKR,EAAGM,QAAQD,KAAKJ,iBAECO,EAAGkM,KAAK,SAAU,kBAAoBC,MAAOoR,EAAK/Z,IAAKkB,OAAO,mBAAkB,SAAAwI,GAAA,OAAOA,EAAItO,OAAjH4e,SAA6FvQ,KAAK7H,UAAsB,8DAM1HuL,KAEJpQ,EAAEuB,QAAQ0b,EAAc,SAAClZ,GACvBqM,EAAYA,EAAU9F,OAAOvG,KAG/BqM,EAAYpQ,EAAEkI,KAAKkI,aAEL3Q,EAAGgN,OAAQb,KAAMwE,EAAWvE,cAAc,wBAAkB,SAAAc,GAAA,OAAOA,EAAIhK,8BAApB+J,KAAK7H,kMAGvDkY,EAAcC,+FACN1d,KAAK4d,KAAKH,iBAA3BD,UAEGK,MAAMlb,KAAK+a,qBAEb1d,KAAK8d,OAAON,4LAGJE,+FACM1d,KAAK+d,eAAeL,iBAEzCjZ,GAFIA,UAEgBc,IAAI,SAACT,GA+BvB,OA9BAA,EAAO8E,OAASlJ,EAAEgN,UAAU5I,EAAO8E,OAAQ,SAACI,GA4B1C,MA3BmB,aAAfA,EAAMH,MAAuBG,EAAMjL,QAChCiL,EAAMjL,MAAM8e,QACf7T,EAAMjL,MAAM8e,UAGd7T,EAAMjL,MAAM8e,MAAQ7T,EAAMjL,MAAM8e,MAAMtY,IAAI,SAACyY,GAkBzC,OAjBIA,EAAMra,KAAO+Z,EAAK/Z,KACpBqa,EAAMlQ,MAAQ4P,EAAK5P,MACnBkQ,EAAM1c,KAAOoc,EAAKpc,MAGf0c,EAAM7R,UACT6R,EAAM7R,YAGR6R,EAAM7R,QAAU6R,EAAM7R,QAAQ5G,IAAI,SAAC0Y,GAKjC,OAJIA,EAAOta,KAAO+Z,EAAK/Z,KACrBsa,EAAOnQ,MAAQ4P,EAAK5P,MACpBmQ,EAAO3c,KAAOoc,EAAKpc,MAEd2c,IAGFD,KAIJhU,IAEFlF,sBAGFnF,EAAGM,QAAQD,KAAKJ,QAAQ2E,MAAOP,KAAMS,2LAG7BiZ,+FACM1d,KAAK+d,eAAeL,iBAEzCjZ,GAFIA,UAEgBc,IAAI,SAACT,GAsBvB,OArBAA,EAAO8E,OAASlJ,EAAEgN,UAAU5I,EAAO8E,OAAQ,SAACI,GAmB1C,MAlBmB,aAAfA,EAAMH,MAAuBG,EAAMjL,QAChCiL,EAAMjL,MAAM8e,QACf7T,EAAMjL,MAAM8e,UAGd7T,EAAMjL,MAAM8e,MAAQ7T,EAAMjL,MAAM8e,MAAM/U,OAAO,SAACkV,GAC5C,OAAIA,EAAMra,KAAO+Z,EAAK/Z,MAIjBqa,EAAM7R,aAAerD,OAAO,SAAAmV,GAAA,OAAUA,EAAOta,KAAO+Z,EAAK/Z,KAAIQ,UAQ/D6F,IAEFlF,sBAGFnF,EAAGM,QAAQD,KAAKJ,QAAQ2E,MAAOP,KAAMS,iHAIhDjH,EAAOD,QAAUggB,iBCjKjB/f,EAAAD,QAAAkC,QAAA,0BCAAjC,EAAAD,QAAAkC,QAAA,kJCAA,IAAMiB,EAAI7C,EAAQ,GACZqgB,EAASrgB,EAAQ,IACjB2D,EAAU3D,EAAQ,GAClBsgB,EAAUtgB,EAAQ,IAElBsD,EAAetD,EAAQ,GACvBqV,EAAQrV,EAAQ,IAChB8B,EAAK9B,EAAQ,GACb8C,EAAU9C,EAAQ,GAElBugB,aACJ,SAAAA,EAAYxe,IAAQ,EAAAE,EAAAC,SAAAC,KAAAoe,GAClBpe,KAAKJ,OAASA,EAEdI,KAAKqe,OAASH,EAAOle,KAAKJ,OAAOye,OAAOlI,QACxCnW,KAAK2T,MAAQ,IAAIT,EAAMlT,KAAKJ,QAE5BI,KAAKse,QAAU,IAAIH,EAAQne,KAAKJ,OAAO0B,KAAM,EAAG,0OAI1C+I,EAAK,IAAIlJ,EAAanB,KAAKJ,iBAENyK,EAAGxL,aAAxBuC,SAEFQ,kBAGFA,EAAWR,EAAa5D,OAAO6a,gEAEzB,IAAI5N,MAAJ8T,EAAA7O,sBAIN9N,EAAS4c,sBAAwBpd,EAAaoV,SAAS6H,OAAOI,wEAExD,IAAIhU,MAAJ8T,EAAAG,mBAGR9c,EAASd,OAASM,EAAaN,OAC/Bc,EAAS+c,OAASvd,EAAaud,yBAExB/c,uJAGAgd,EAAOC,GAAO,IAAA9W,EAAA/H,KACrB,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3BwE,EAAK+W,cACFrb,KAAK,SAAC7B,GAEL,IAAM6U,EAAS/V,EAAE7B,IAAI+C,EAAU,uCAE3Bid,EAAME,WAAatI,GACrB1O,EAAK4L,MAAMoL,UAAUF,EAAMG,gBAAiB,aAAcvI,GACvDhT,KAAK,SAAC4F,GACLH,QAAQC,IAAIE,IACX,SAACvF,GACFoF,QAAQpF,MAAMA,KAKpBiE,EAAKkX,qBAAqBJ,EAAMG,gBAAgBrL,MAAOkL,GACpDpb,KAAK,SAACyb,GAGLnX,EAAKoX,YAAYN,EAAOK,GACrBzb,KAAK,SAACob,GAEL9W,EAAKqX,6BAA6Bxd,EAAS4c,sBAAuBU,EAAUN,EAAOC,GAChFpb,KAAK,SAAC4b,GAGLtX,EAAKuX,eAAeJ,EAAUG,EAAgBR,GAC3Cpb,KAAK,SAACyb,GAGLnX,EAAKwX,aAAa3d,EAAUyd,EAAgBH,EAAUL,GACnDpb,KAAK,SAAC+b,GAELzX,EAAK0X,YAAY7d,EAAUsd,EAAUL,GAClCpb,KAAK,SAACic,GAELF,EAAaG,SAASD,aAAeA,EAErC3X,EAAK6X,iBAAiBhe,EAAUsd,EAAUL,GACvCpb,KAAK,SAACoc,GAELL,EAAaG,SAASE,kBAAoBA,EAG1C9X,EAAK+X,YAAYN,GACd/b,KAAK,SAACsc,GAELzc,EAAQyc,IAEPxc,IACJA,IACJA,IACJA,IACJA,IACJA,IACJA,IACJA,IACJA,GACF4T,MAAM5T,+CAIK,IAAAmF,EAAA1I,KAChB,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3BmF,EAAKoW,cACFrb,KAAK,SAAC7B,GACL8G,EAAK2V,OAAO2B,SAASC,SAASre,EAAS4c,uBACpC/a,KAAKH,EAASC,IAChBA,oCAIFsb,EAAOqB,GAAQ,IAAA1S,EAAAxN,KACpB,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3BiK,EAAKsR,cACFrb,KAAK,SAAC7B,GACL4L,EAAK6Q,OAAO8B,QAAQ1D,QAClB2D,wBAAwB,EACxBC,OAAQxB,EAAMwB,OAAO1c,GACrBuc,WAEAI,eAAgB1e,EAAS4c,wBAExB/a,KAAK,SAAC8c,GACL/S,EAAK6Q,OAAOmC,QAAQP,SAASpB,EAAMwB,OAAO1c,IACxC2c,eAAgB1e,EAAS4c,wBAExB/a,KAAK,SAAC4c,GACLxB,EAAMwB,OAAOpQ,OAASoQ,EAAOpQ,OAC7B4O,EAAMwB,OAAOH,OAASG,EAAOH,OAC7BrB,EAAMwB,OAAOI,eAAiBJ,EAAOK,gBAErC/f,EAAQY,eAAeiM,EAAK5N,OAAQif,GACjCpb,KAAKH,EAASC,IAChBA,IACJA,IACJA,kDAIYoQ,EAAOkL,GAAO,IAAAjR,EAAA5N,KACjC,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B5D,EAAGM,QAAQ2N,EAAKhO,QAAQyM,KAAK,YAAa,mBACxCC,MAAOqH,GACPpH,cAAc,IAEb9I,KAAK,SAACqW,GACL,GAAIA,EAAK1M,KAAKjJ,OACZb,EAAQwW,EAAK1M,KAAK,GAAG/J,SAEhB,CACL,IAAMsd,GAAM,EAAAxb,EAAApF,SAAe,IAAIqF,MAAQhC,QAAQ,KAAM,IAE/Cwd,GACJ/W,KAAM,WACNgX,UAAWF,EACXG,WAAYH,EACZhN,MAAOkL,EAAMG,gBAAgBrL,MAC7BrV,KAAMugB,EAAMG,gBAAgB1gB,KAC5ByiB,MAAOlC,EAAMG,gBAAgB+B,MAC7BC,eAAgBnC,EAAMmC,eACtBC,gBAAiBpC,EAAMoC,gBACvBC,WAGFvhB,EAAGM,QAAQ2N,EAAKhO,QAAQ4D,OAAOod,GAC5Bnd,KAAK,SAACqW,GACL8G,EAAY/f,IAAMiZ,EAAKnW,GACvBid,EAAYhd,KAAOkW,EAAKjW,IAExBP,EAAQsd,IACPrd,KAENA,0DAIoBib,EAAuBU,EAAUN,EAAOC,GAAO,IAAA7Q,EAAAhO,KAC1E,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B,IAAM8b,GACJ8B,OAAQvC,EACRjL,MAAOkL,EAAMK,SAASvL,MACtByN,YAAavC,EAAMK,SAAS5gB,KAC5BsJ,UACEyZ,YAAanC,EAASre,MAMtBqe,EAASb,QAAUa,EAASb,OAAOa,SAASvb,GAC9CqK,EAAKqQ,OAAOiD,UAAUxD,OAAOoB,EAASb,OAAOa,SAASvb,GAAI0b,GACxDiB,eAAgB9B,IAEf/a,KAAKH,EAAS,SAACQ,GACK,8BAAfA,EAAM+F,MAAwD,OAAhB/F,EAAMyd,MACtDvT,EAAKqQ,OAAOiD,UAAU7E,OAAO4C,GAC3BiB,eAAgB9B,IACf/a,KAAKH,EAASC,GAGjBA,EAAOO,KAKbkK,EAAKqQ,OAAOiD,UAAU7E,OAAO4C,GAC3BiB,eAAgB9B,IACf/a,KAAKH,EAASC,yCAKXsb,EAAOK,GAAU,IAAA5Q,EAAAtO,KAC3B,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B,IAAMie,EAAQ3C,EAAM2C,MAAMjc,IAAI,SAAAkc,GAAA,OAC5B9d,GAAI8d,EAAK9d,GACTmK,MAAO2T,EAAK3T,MAAM1K,QAAQ,YAAa,KAAKA,QAAQ,qBAAsB,IAC1Ese,MAAOD,EAAKC,MACZC,SAAUF,EAAKE,SACf/Z,SAAU6Z,EAAK7Z,gBAGX+Y,GAAM,EAAAxb,EAAApF,SAAe,IAAIqF,MAAQhC,QAAQ,KAAM,IAE/Cwe,GACJ/X,KAAM,QACNgY,QAASvT,EAAKgQ,QAAQwD,QAAO,IAAI1c,MAAO2c,WACxClB,UAAWF,EACXG,WAAYH,EACZzB,UACEvb,GAAIub,EAASre,IACb8S,MAAOuL,EAASvL,MAChBrV,KAAM4gB,EAAS5gB,MAEjBkjB,QACAQ,gBACE1jB,KAAMugB,EAAMmD,eAAe1jB,KAC3B4hB,OAAQ+B,OAAOpD,EAAMmD,eAAe9B,SAEtCgC,SAAUD,OAAOpD,EAAMqD,UACvBC,KACEC,KAAMvD,EAAMsD,IAAIC,MAAQ,EACxBC,gBAAiBxD,EAAMsD,IAAIE,kBAAmB,EAC9CC,MAAOzD,EAAMsD,IAAIG,OAAS,EAC1BC,KAAM1D,EAAMsD,IAAII,OAAQ,GAE1BC,UACEC,KAAM5D,EAAM2D,SAASC,MAAQ,GAC7BnkB,KAAMugB,EAAM2D,SAASlkB,MAAQ,GAC7BgkB,MAAOzD,EAAM2D,SAASF,OAAS,GAEjCA,MAAOL,OAAOpD,EAAMyD,OACpBtB,eAAgBnC,EAAMmC,eACtBC,gBAAiBpC,EAAMoC,gBACvBtB,YACA1P,OAAQ,UACRnN,MAAM,GAGRnD,EAAGM,QAAQqO,EAAK1O,QAAQ4D,OAAOoe,GAC5Bne,KAAK,SAACqW,GACL8H,EAAS/gB,IAAMiZ,EAAKnW,GACpBie,EAAShe,KAAOkW,EAAKjW,IAErBP,EAAQse,IACPre,yCAIGsb,GAAO,IAAApQ,EAAAzO,KACjB,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B5D,EAAGM,QAAQwO,EAAK7O,QAAQ4D,OAAOqb,GAC5Bpb,KAAK,SAACqW,GACL+E,EAAMjb,KAAOkW,EAAKjW,IAElBP,EAAQub,IACPtb,4CAIM2b,EAAUG,EAAgBR,GAAO,IAAA3P,EAAAlP,KAC9C,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B,IAAMod,GAAM,EAAAxb,EAAApF,SAAe,IAAIqF,MAAQhC,QAAQ,KAAM,IAErD8b,EAAS4B,WAAaH,EAEjBzB,EAASgC,SACZhC,EAASgC,WAGXhC,EAASgC,OAAOve,KAAKkc,EAAMhe,KAEtBqe,EAASb,SACZa,EAASb,QACPa,UACEvb,GAAI,QAKVub,EAASb,OAAOa,SAASvb,GAAK0b,EAAe1b,GAE7ChE,EAAGM,QAAQiP,EAAKtP,QAAQ4D,OAAO0b,GAC5Bzb,KAAK,SAACqW,GACLoF,EAAStb,KAAOkW,EAAKjW,IAErBP,EAAQ4b,IACP3b,0CAII3B,EAAUyd,EAAgBH,EAAUL,GAAO,IAAAvP,EAAAtP,KACtD,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B,IAAM2c,EAA+B,IAAtB+B,OAAOpD,EAAMyD,OAEtBjC,GACJH,SACAwC,SAAU9gB,EAAS8gB,SAASC,IAAIzf,cAChCgc,SAAUG,EAAe1b,GACzBif,SAAS,EACTxB,YAAavC,EAAMgD,QAEnBja,UACEyZ,YAAanC,EAASre,IACtBgiB,SAAUhE,EAAMhe,KAElBiiB,qBAAsBpiB,EAAEqiB,UAAUnhB,EAASohB,WAAWC,cACtDC,gBAAiBvU,KAAKwU,KAAc,IAATjD,IAG7B5Q,EAAK+O,OAAOmC,QAAQ/D,OAAO4D,GACzBC,eAAgB1e,EAAS4c,wBAExB/a,KAAK,SAAC4c,GAELxB,EAAMwB,QACJ+C,eAAgB,SAChBzf,GAAI0c,EAAO1c,GACXsM,OAAQoQ,EAAOpQ,OACfyS,SAAUrC,EAAOqC,SAASO,cAC1B/C,OAAQG,EAAOH,OACfO,eAAgBJ,EAAOK,iBAGzB7B,EAAM/b,MAAQud,EAAOgD,SAErB/f,EAAQub,IAEPtb,yCAIG3B,EAAUsd,EAAUL,GAAO,IAAAjP,EAAA5P,KACrC,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B,IAAM8P,GACJzR,WACAid,SAGIyE,GACJC,KAAS3hB,EAAS4hB,gBAAlB,KAAsC5hB,EAAS6hB,mBAA/C,IACAC,GAAIxE,EAASvL,MACbgQ,yBAA0B/hB,EAASohB,UAAnC,KAAiDnE,EAAMgD,QAAvD,KAGI+B,EAAYljB,EAAE7B,IAAI+C,EAAU,cAAegO,EAAKhQ,OAAO0B,MAE7DsO,EAAK+D,MAAMkQ,UAAUP,EAAiBM,EAAtC,iBAAiEvQ,GAAc5P,KAAKH,EAASC,8CAIhF3B,EAAUsd,EAAUL,GAAO,IAAArO,EAAAxQ,KAC1C,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B,IAAM8P,GACJzR,WACAid,SAGIyE,GACJC,KAAS3hB,EAAS4hB,gBAAlB,KAAsC5hB,EAAS6hB,mBAA/C,IACAC,GAAI9hB,EAAS6hB,mBACbE,wBAAyB/hB,EAASohB,UAAlC,KAAgDnE,EAAMgD,QAAtD,KAGI+B,EAAYljB,EAAE7B,IAAI+C,EAAU,cAAe4O,EAAK5Q,OAAO0B,MAE7DkP,EAAKmD,MAAMkQ,UAAUP,EAAiBM,EAAtC,sBAAsEvQ,GAAc5P,KAAKH,EAASC,cAMxG/F,EAAOD,QAAU6gB,iBChZjB5gB,EAAAD,QAAAkC,QAAA,mHCAA,IAAM+B,EAAU3D,EAAQ,GAClBimB,EAASjmB,EAAQ,IAEjBkmB,aACJ,SAAAA,EAAYnkB,IAAQ,EAAAE,EAAAC,SAAAC,KAAA+jB,GAClB/jB,KAAKJ,OAASA,EAEdI,KAAK8jB,OAASA,EAAOlkB,EAAOkkB,OAAOlF,6DAG5BoF,EAASC,GAAQ,IAAAlc,EAAA/H,KACxB,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAE3B,IAAM2gB,GACJC,eAAgB,QAChBC,IAAKrc,EAAKnI,OAAOkkB,OAAOO,QACxBC,QAASvc,EAAKnI,OAAOkkB,OAAOS,aAGxBC,GACJL,eAAgB,QAOhBC,IAAKJ,EAAQI,IACbE,QAASN,EAAQM,QAGjB1c,SAAU,IAGZqc,EAAOQ,cAAgB,KACvBR,EAAOS,UAAY,KAEnB3c,EAAK+b,OAAOa,SAASlI,QACnB0H,eAAgB,QAChBS,aAAcV,EACdW,WAAYL,EACZP,WAECxgB,KAAK,SAACkhB,IACc,SAAbG,EAAcH,EAAUI,IACI,WAA3BJ,EAASK,eAAyD,YAA3BL,EAASK,gBAAgCD,EAAW,GAC9Fhd,EAAK+b,OAAOa,SAAS1E,SAAS0E,EAASM,WAAWxhB,KAAK,SAACyhB,GACtDJ,EAAWI,EAAKH,EAAW,KAI7Bhd,EAAK+b,OAAOa,SAASQ,MAAMR,EAASM,WACjCxhB,KAAK,SAAC0hB,GACL7hB,EAAQ6hB,IAEP,SAACrhB,GACFoF,QAAQpF,MAAM,2CAA4CA,GAC1DP,EAAOO,KAKfghB,CAAWH,EAAU,IAEpB,SAAC7gB,GACFoF,QAAQpF,MAAM,2CAA4CA,GAC1DP,EAAOO,gBAQjBtG,EAAOD,QAAUwmB,+HC1EjB,IAAMrjB,EAAI7C,EAAQ,GACZsD,EAAetD,EAAQ,GAEvBunB,aACJ,SAAAA,EAAYxlB,GAGV,OAHkB,EAAAE,EAAAC,SAAAC,KAAAolB,GAClBplB,KAAKJ,OAASA,EAEPI,yGAGI4B,wFACLyI,EAAK,IAAIlJ,EAAanB,KAAKJ,iBAENyK,EAAGxL,oBAAxBuC,UAEON,OAASJ,EAAEW,SAAUD,EAAaN,OAAQc,qBAEhDyI,EAAGE,IAAInJ,gHAIlB5D,EAAOD,QAAU6nB,qJCrBjB,IAAM1kB,EAAI7C,EAAQ,GACZ2D,EAAU3D,EAAQ,GAClB0a,EAAU1a,EAAQ,IAClB6N,EAAS7N,EAAQ,IACjBsD,EAAetD,EAAQ,GAEvBwnB,aACJ,SAAAA,EAAazlB,IAAQ,EAAAE,EAAAC,SAAAC,KAAAqlB,GACnBrlB,KAAKJ,OAASA,EACdI,KAAKslB,UAAYtlB,KAAKJ,OAAO2lB,IAAID,kEAGvBE,EAAY7V,EAAUvD,GAAM,IAAArE,EAAA/H,KACtC,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GACtBwE,EAAKud,UAAUE,GAKL,IAAI9Z,EAAO3D,EAAKnI,QAExBiN,cAAc8C,IAAW,GAAM,EAAOvD,GAC1C3I,KAAK,SAACgB,GACL,GAAwB,IAApBA,EAASN,OAAb,CAKAM,EAAWiH,EAAOC,cAAclH,GAEhC,IAAMghB,EAAU1d,EAAKud,UAAUE,GAAY/gB,EAAS,IAEpD,IACEnB,EAAQmiB,GACR,MAAO3hB,GACPP,EAAOO,SAXPP,EAAO,IAAIkH,MAAM,uBATrBlH,EAAO,IAAIkH,MAAM,wGA0BTgb,8FACNpb,EAAK,IAAIlJ,EAAanB,KAAKJ,iBACNyK,EAAGxL,oBAAxBuC,SAEAwiB,EAAYljB,EAAE7B,IAAIuC,EAAc,cAAepB,KAAKJ,OAAO0B,MAC3DokB,EAAkB1lB,KAAKJ,OAAO8B,OAAOxB,QAAO0jB,kBAElD6B,EAA6B,iBAAnB,IAAOA,EAAP,eAAAE,EAAA5lB,SAAO0lB,KAAuB,EAAAtgB,EAAApF,SAAe0lB,GAASriB,QAAQ,MAAO,KAAOqiB,WAE/DlN,GACrBI,OAAQ,OACRiN,IAAKF,EACLG,SAAU,KACVC,MACEL,2BALE/hB,2BASCA,gHAKXlG,EAAOD,QAAU8nB,iBChEjB7nB,EAAAD,QAAAkC,QAAA,yHCAA,IAAMsmB,EAAMloB,EAAQ,IAEdmoB,aACJ,SAAAA,EAAYpmB,IAAQ,EAAAE,EAAAC,SAAAC,KAAAgmB,GAClBhmB,KAAKJ,OAASA,yDAGN6lB,GAAuB,IAAdnS,EAAcpP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAC/B,OAAO6hB,EAAIE,KAAKR,EAASzlB,KAAKJ,OAAOoW,KAAKkQ,YAAa5S,uCAG7CsL,GACV,OAAOmH,EAAII,OAAOvH,EAAO5e,KAAKJ,OAAOoW,KAAKkQ,sBAI9C1oB,EAAOD,QAAUyoB,gCChBjB,IAAMtlB,EAAI7C,EAAQ,GACZ2D,EAAU3D,EAAQ,GAClB0a,EAAU1a,EAAQ,IAExBL,EAAOD,QAAU,SAAU+V,GAQzBA,EAAU5S,EAAEW,UANV+kB,UAAW,KACXC,aAAc,KACdC,QAAS,KACTC,KAAM,6BAG8BjT,OAoBtCtT,KAAKnB,IAAM,SAAC2nB,EAAUnY,GAAX,OAlBM,SAACsK,EAAQ6N,EAAUnY,GAAnB,OAA6B,IAAI7M,EAAQ,SAAC8B,EAASC,GAClE,IAAMkjB,GACJ9N,SACAzY,KAAMoT,EAAQiT,KAAMjT,EAAQgT,QAASE,GAAU5jB,KAAK,KACpD8jB,IACEL,aAAchY,EAAMgY,cAAgB/S,EAAQ+S,aAC5CD,UAAW/X,EAAM+X,WAAa9S,EAAQ8S,YAI1CK,EAAeC,GAAKhmB,EAAEimB,UAAWF,EAAeC,GAAIrY,GAEpDkK,EAAQkO,GACLhjB,KAAK,SAACC,GACLJ,EAAQ4Z,KAAKC,MAAMzZ,KAClBH,KAGyBqjB,CAAS,MAAOJ,EAAUnY,8GC9B5D,IAAM7M,EAAU3D,EAAQ,GAClB4H,EAAKjE,EAAQkE,aAAa7H,EAAQ,IAClC2H,EAAO3H,EAAQ,IAEfgpB,aACJ,SAAAA,IAAuD,IAA3CC,EAA2C5iB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB,OAAQ6iB,EAAiB7iB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,GAAG,EAAApE,EAAAC,SAAAC,KAAA6mB,GACrD7mB,KAAK8mB,gBAAkBA,EACvB9mB,KAAK+mB,YAAcA,EACnB/mB,KAAKgnB,kBAAoB,OAEzB,IACEvhB,EAAGwhB,UAAUjnB,KAAK8mB,iBAClB,MAAOI,mEASMC,EAAaC,GAG5B,OAFAA,EAAaP,EAAKQ,gBAAgBD,GAE3B5hB,EAAKlC,QAAQtD,KAAK8mB,gBAAlB,UAA6CM,EAA7C,IAA2DD,oCAG3DA,EAAaljB,EAAWqjB,EAAWF,EAAY/e,EAAU5B,GAQhE,GAPA0gB,EAAqC,iBAAhBA,EAA2BtY,SAASsY,EAAa,IAAMA,EAC5EljB,EAAiC,iBAAdA,EAAyB4K,SAAS5K,EAAW,IAAMA,EACtEqjB,EAAiC,iBAAdA,EAAyBzY,SAASyY,EAAW,IAAMA,EAEtEF,EAAaP,EAAKQ,gBAAgBD,GAGd,IAAhBD,GAAmC,IAAdljB,GAAiC,IAAdqjB,GAAyC,IAAtBF,EAAWjjB,QAAoC,IAApBkE,EAASlE,OACjG,MAAO,mBAGT,IAAMojB,EAAiB5Y,KAAK6Y,IAAI7Y,KAAK8Y,MAAMH,EAAYrjB,GAAY,GAEnE,GAAIkjB,EAAcI,EAChB,MAAO,wBAIT,GAAIvnB,KAAK+mB,aAAeO,EAAYtnB,KAAK+mB,YACvC,MAAO,wBAGT,QAAwB,IAAbtgB,EAA0B,CAGnC,GAFAA,EAA+B,iBAAbA,EAAwBoI,SAASpI,EAAU,IAAMA,EAE/D0gB,EAAcI,GAAkB9gB,IAAaxC,EAE/C,MAAO,wBAGT,GAAIsjB,EAAiB,GAAKJ,IAAgBI,GAAkB9gB,IAAe6gB,EAAYrjB,EAAa4K,SAAS5K,EAAW,IAEtH,MAAO,wBAGT,GAAuB,IAAnBsjB,GAAwB9gB,IAAa6gB,EAEvC,MAAO,wBAIX,MAAO,6CAGiF,IAA/EH,EAA+EjjB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjE,EAAGD,EAA8DC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlD,EAAGojB,EAA+CpjB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnC,EAAmC6D,EAAA/H,KAAhConB,EAAgCljB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnB,GAAImE,EAAenE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAKpF,OAJAijB,EAAqC,iBAAhBA,EAA2BtY,SAASsY,EAAa,IAAMA,EAC5EljB,EAAiC,iBAAdA,EAAyB4K,SAAS5K,EAAW,IAAMA,EACtEqjB,EAAiC,iBAAdA,EAAyBzY,SAASyY,EAAW,IAAMA,EAE/D,IAAI9lB,EAAQ,SAAC8B,EAASC,GAC3B,IAAMmkB,EAAa3f,EAAK4f,SAASR,EAAaljB,EAAWqjB,EAAWF,EAAY/e,GAEhF,GAAmB,UAAfqf,EAAJ,CAKA,IAAME,EAAgB7f,EAAK8f,iBAAiBV,EAAaC,GAEzD3hB,EAAGc,UAAUqhB,GACVnkB,KAAKH,EAASC,QAPfA,EAAOmkB,yCAWDH,EAAgBH,EAAY/e,GAAU,IAAAK,EAAA1I,KAChD,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAG3B,IAFA,IAAMukB,KAEG/pB,EAAI,EAAGA,GAAKwpB,EAAgBxpB,IACnC+pB,EAAOnlB,KAAK8C,EAAGuX,cAActU,EAAKmf,iBAAiB9pB,EAAGqpB,KAGxD5lB,EAAQgD,IAAIsjB,GACTrkB,KAAK,SAAC2F,GACL3D,EAAGsiB,eAAeviB,EAAK5C,KAAK8F,EAAKoe,gBAAiBze,GAAW2f,OAAOhd,OAAO5B,IACxE3F,KAAKH,EAASC,IAChBA,wCAIE8E,GACT,OAAO5C,EAAG2X,YAAY5X,EAAK5C,KAAK5C,KAAK8mB,gBAAiBze,yCAG3C+e,GAAY,IAAA5Z,EAAAxN,KACvB,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,IACP,SAAd0kB,EAAeC,GACnB,IAAMN,EAAgBpa,EAAKqa,iBAAiBK,EAAKd,GAEjD3hB,EAAG0iB,KAAKP,EAAe,SAAC9jB,GACjBA,EAUHR,KATAmC,EAAG2iB,OAAOR,EAAe,SAAC9jB,GACpBA,GACFP,EAAOO,KAIXmkB,EAAYC,EAAM,MAQxBD,CAAY,uCAINxf,EAAO0e,EAAaljB,EAAWokB,EAAaf,EAAWF,EAAY/e,GAAU,IAAAuF,EAAA5N,KAMrF,OALAmnB,EAAqC,iBAAhBA,EAA2BtY,SAASsY,EAAa,IAAMA,EAC5EljB,EAAiC,iBAAdA,EAAyB4K,SAAS5K,EAAW,IAAMA,EACtEokB,EAAqC,iBAAhBA,EAA2BxZ,SAASwZ,EAAa,IAAMA,EAC5Ef,EAAiC,iBAAdA,EAAyBzY,SAASyY,EAAW,IAAMA,EAE/D,IAAI9lB,EAAQ,SAAC8B,EAASC,GAC3B,GAAKkF,EAAMmF,EAAKoZ,oBAAuBve,EAAMmF,EAAKoZ,mBAAmBtgB,KAArE,CAKA,IAAM4hB,EAAmB7f,EAAMmF,EAAKoZ,mBAAmBsB,iBAEnDC,EAAW9f,EAAMmF,EAAKoZ,mBAAmBtgB,KAC7C6hB,EAA+B,iBAAbA,EAAwB1Z,SAAS0Z,EAAU,IAAMA,EAEnE,IAAMb,EAAa9Z,EAAK+Z,SAASR,EAAaljB,EAAWqjB,EAAWF,EAAY/e,EAAUkgB,GAE1F,GAAmB,UAAfb,EAAwB,CAC1B,IAAME,EAAgBha,EAAKia,iBAAiBV,EAAaC,GACnDG,EAAiB5Y,KAAK6Y,IAAI7Y,KAAK8Y,MAAMH,EAAYrjB,GAAY,GAEnEwB,EAAG+iB,OAAO/f,EAAMmF,EAAKoZ,mBAAmBxhB,KAAMoiB,EAAe,YACnC,SAAlBa,EAAmBC,GACvBjjB,EAAG0iB,KAAKva,EAAKia,iBAAiBa,EAAWtB,GAAa,SAACtjB,GAChDA,EAoBHR,GACE2M,OAAQ,aACR5H,WACAigB,mBACAlB,eAvBEsB,IAAcnB,GAAkBJ,IAAgBI,EAClD3Z,EAAK+a,YAAYpB,EAAgBH,EAAY/e,GAC1C5E,KAAK,WACJmK,EAAKgb,aAAaxB,GACf3jB,KAAK,WACJH,GACE2M,OAAQ,WACR5H,WACAigB,mBACAlB,gBAED7jB,IACJA,GAGLklB,EAAgBC,EAAY,KAcpCD,CAAgB,UAIlBllB,EAAO,IAAIkH,MAASid,EAAb,KAA4Brf,EAA5B,IAAwCigB,EAAxC,IAA4DlB,SApDnE7jB,EAAO,IAAIkH,MAAM,yDAiEjB2c,EAAYyB,GAA8B,IAAA7a,EAAAhO,KAAdsT,EAAcpP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAC9CoP,EAAQwV,SAA8B,IAAhBxV,EAAQwV,KAA6BxV,EAAQwV,KAGjD,SAAZC,EAAab,GACjB,IAAMN,EAAgB5Z,EAAK6Z,iBAAiBK,EAAKd,GAEjD3hB,EAAG0iB,KAAKP,EAAe,SAAC9jB,GACtB,GAAKA,EAkBCwP,EAAQwV,KACVD,EAAeC,MAGbxV,EAAQ0V,QACV1V,EAAQ0V,aAvBA,CAIV,IAAMC,EAAexjB,EAAGwC,iBAAiB2f,GAEzCqB,EAAaC,KAAKL,GAChBC,KAAK,IAGPG,EAAaE,GAAG,MAAO,WAGrBJ,EAAUb,EAAM,QAgBxBa,CAAU,6CAtOW3B,GACrB,OAAOA,EAAWhkB,QAAQ,kBAAmB,aA0OjD5F,EAAOD,QAAUspB,iBC9PjBrpB,EAAAD,QAAAkC,QAAA,0BCAAjC,EAAAD,QAAAkC,QAAA,iHCAA,IAAMiB,EAAI7C,EAAQ,GACZ2D,EAAU3D,EAAQ,GAClB4a,EAAS5a,EAAQ,IACjBiI,EAAKjI,EAAQ,IACb8B,EAAK9B,EAAQ,GACb8C,EAAU9C,EAAQ,GAElBurB,aACJ,SAAAA,EAAYxpB,IAAQ,EAAAE,EAAAC,SAAAC,KAAAopB,GAClBppB,KAAKJ,OAASA,EACdI,KAAK0B,OAAS,IAAI+W,EAAO7Y,GACzBI,KAAK+F,GAAK,IAAID,EAAGlG,uDAGZyO,GAAO,IAAAtG,EAAA/H,KACZ,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B8K,EAAMS,KAAOpO,EAAE0N,SAASC,EAAMS,MAAjB,IAA6BT,EAAMS,KAAnC,IAA6CT,EAAMS,KAEhEnP,EAAGM,QAAQ8H,EAAKnI,QAAQmP,OAAO,OAAQ,MAAOV,GAC3C5K,KAAKH,EAASC,oCAIdsF,GAAM,IAAAH,EAAA1I,KACX,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3BsF,EAAKgB,KAAO,OAEZlK,EAAGM,QAAQyI,EAAK9I,QAAQ4D,OAAOqF,GAC5BpF,KAAKH,EAASC,oCAId0J,EAAS3L,GAAM,IAAAkM,EAAAxN,KACpB,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,IAGX,YAAZ0J,EACStN,EAAGM,QAAQuN,EAAK5N,QAAQyM,KAAK,OAAQ,WAC9CE,cAAc,IAIL5M,EAAGM,QAAQuN,EAAK5N,QAAQuN,OACjCb,KAAM5L,EAAEoK,QAAQmC,GAAWA,GAAWA,GACtCV,cAAc,KAIT9I,KAAK,SAACC,GACb,IAAI+E,EAAQ/E,EAAS0J,KAAKtE,OAAO,SAAAD,GAAA,OAASA,EAAK9J,QAAU8J,EAAK9J,MAAMuO,UAI9D+b,KACAC,MAHN7gB,EAAQA,EAAMlD,IAAI,SAAAsD,GAAA,OAAQA,EAAKxF,OAKzBpB,QAAQ,SAAC4G,GACS,WAAlBA,EAAK0gB,UACPF,EAAY1mB,KAAKkG,EAAK7F,UAGF,OAAlB6F,EAAK0gB,UACPD,EAAQ3mB,KAAKkG,KAIjB,IAAM2gB,EAAgBhc,EAAK9L,OAAO+nB,YAAYnoB,EAAM+nB,GAC9CK,EAAYlc,EAAKzH,GAAG0jB,YAAYnoB,EAAMgoB,GAE5C9nB,EAAQmoB,QAAQH,EAAeE,IAC5BjmB,KAAK,SAAC2F,GACL,IAAMwgB,KAENxgB,EAAQnH,QAAQ,SAACoH,GACXA,EAAOwgB,cACTD,EAASjnB,KAAK0G,EAAOygB,YAIrBF,EAASzlB,OAMb,IAAMH,EAAOyE,EAAMlD,IAAI,SAAAsD,GAAA,OACrBhI,IAAKgI,EAAKhI,IACV+C,KAAMiF,EAAKjF,KACXoO,UAAU,KAGZrR,EAAQ4M,YAAYC,EAAK5N,OAAQoE,EAAM,KACpCP,KAAKH,EAASC,kBAQ7B/F,EAAOD,QAAU6rB,iBCpGjB5rB,EAAAD,QAAAkC,QAAA,4BCAAjC,EAAAD,QAAAkC,QAAA,oHCAA,IAAMiB,EAAI7C,EAAQ,GACZ2D,EAAU3D,EAAQ,GAClBksB,EAAalsB,EAAQ,IAErBmsB,aACJ,SAAAA,EAAYpqB,IAAQ,EAAAE,EAAAC,SAAAC,KAAAgqB,GAClBhqB,KAAKJ,OAASA,sDAGTqqB,GAAM,IAAAliB,EAAA/H,KACX,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B,IAAM2mB,EAAU,IAAIH,GAClBrnB,IAAKqF,EAAKnI,OAAOsqB,QAAQ/T,SAGrBgU,GACJF,KAAMvpB,EAAEoK,QAAQmf,GAAQA,GAAQA,GAChC9O,OAAQ,QAGV+O,EAAQE,OAAOD,EAAM,SAACrmB,EAAOuF,GACvBvF,EACFP,EAAOO,GAITR,EAAQ+F,gBAOhB7L,EAAOD,QAAUysB,iBCjCjBxsB,EAAAD,QAAAkC,QAAA,0JCEAhB,OAAOC,eAAenB,EAAS,cAC7BwB,OAAO,IAGT,IAEIsrB,EAFAC,EAAe,WAAc,SAASC,EAAiBC,EAAQC,GAAS,IAAK,IAAI1sB,EAAI,EAAGA,EAAI0sB,EAAMtmB,OAAQpG,IAAK,CAAE,IAAI2sB,EAAaD,EAAM1sB,GAAI2sB,EAAW9rB,WAAa8rB,EAAW9rB,aAAc,EAAO8rB,EAAW/rB,cAAe,EAAU,UAAW+rB,IAAYA,EAAWC,UAAW,IAAM,EAAAC,EAAA7qB,SAAsByqB,EAAQE,EAAWhoB,IAAKgoB,IAAiB,OAAO,SAAUG,EAAaC,EAAYC,GAAiJ,OAA9HD,GAAYP,EAAiBM,EAAYzrB,UAAW0rB,GAAiBC,GAAaR,EAAiBM,EAAaE,GAAqBF,GAA7gB,GAIfG,EAAYntB,EAAQ,IAIpBotB,EAAUC,EAFDrtB,EAAQ,KAMjBstB,EAAQD,EAFDrtB,EAAQ,KAIfutB,EAASvtB,EAAQ,IAEjBwtB,EAAUH,EAAuBE,GAErC,SAASF,EAAuBte,GAAO,OAAOA,GAAOA,EAAI3N,WAAa2N,GAAQ7M,QAAS6M,GAIvF,SAAS0e,EAA2BC,EAAMrtB,GAAQ,IAAKqtB,EAAQ,MAAM,IAAIC,eAAe,6DAAgE,OAAOttB,GAAyB,iBAAhB,IAAOA,EAAP,eAAAynB,EAAA5lB,SAAO7B,KAAqC,mBAATA,EAA8BqtB,EAAPrtB,EAIlO,IAyBIutB,GACFC,OACEC,eAAgB,WAChBC,cAAe,KAEjBC,KACEC,OAAQ,OACRC,aAAc,GACdC,QAAS,QACTC,QAAS,OACTC,eAAgB,OAChB7R,MAAO,SAWP8R,GAAQ,EAAInB,EAAUoB,aAAa/B,EAAS,SAAUgC,GAGxD,SAASF,IACP,IAAIG,EAEAC,EAAOxkB,GA3Df,SAAyBykB,EAAU3B,GAAe,KAAM2B,aAAoB3B,GAAgB,MAAM,IAAI4B,UAAU,qCA6D5GC,CAAgB1sB,KAAMmsB,GAEtB,IAAK,IAAIQ,EAAOzoB,UAAUC,OAAQyoB,EAAOC,MAAMF,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAC3EF,EAAKE,GAAQ5oB,UAAU4oB,GAGzB,OAAeP,EAASxkB,EAAQujB,EAA2BtrB,MAAOssB,EAAOH,EAAMY,YAAa,EAAA1mB,EAAAtG,SAAsBosB,IAAQjuB,KAAK8uB,MAAMV,GAAOtsB,MAAMgL,OAAO4hB,KAAiB7kB,EAAMklB,OAASllB,EAAMmlB,YAAqB5B,EAA2BvjB,EAAnCwkB,GAkG9M,OAjKF,SAAmBY,EAAUC,GAAc,GAA0B,mBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAIX,UAAU,qEAAoEW,EAApE,eAAAzH,EAAA5lB,SAAoEqtB,KAAeD,EAAS/tB,WAAY,EAAAiuB,EAAAttB,SAAcqtB,GAAcA,EAAWhuB,WAAakuB,aAAevuB,MAAOouB,EAAUvuB,YAAY,EAAO+rB,UAAU,EAAMhsB,cAAc,KAAeyuB,IAAYG,EAAAxtB,SAAwB,EAAAwtB,EAAAxtB,SAAsBotB,EAAUC,GAAcD,EAASJ,UAAYK,GAkD/dI,CAAUrB,EAgHVf,EAAOqC,WAhGPnD,EAAa6B,IACXzpB,IAAK,kBACL3D,MAAO,WACL,IAAI2uB,EAAS1tB,KAAKyqB,MACdkD,EAAcD,EAAOC,YACrBC,EAAaF,EAAOE,WAEpBC,EAAcF,EAAY,eAE1BtT,GAAQ,EAAI8Q,EAAMprB,UAAU8O,SAAS8e,EAAY,UAAW9e,SAASgf,KAErEC,EAAeF,EAAW,SAE1BG,EADcH,EAAW,QACKE,EAAezT,EAAQxL,SAASgf,GAElE,OAAOE,EAAgB,EAAI1T,EAAQ0T,EAAgB1T,KAGrD3X,IAAK,YACL3D,MAAO,WACL,IAAIivB,EAAUhuB,KAAKyqB,MACfkD,EAAcK,EAAQL,YACtBM,EAAcD,EAAQC,YAG1B,OAAO,EAAIhD,EAAQlrB,YAAa0rB,GAC9ByC,IACE7T,MAAOra,KAAKmuB,mBAEdtC,KACEC,OAAQ6B,EAAY,UACpBrT,OAAQqT,EAAY,UACpB5B,aAAckC,EAAYN,EAAY,iBAAkB,YAK9DjrB,IAAK,cACL3D,MAAO,WACL,IAAI4uB,EAAc3tB,KAAKyqB,MAAMkD,YAGzB9B,EAAMR,EAAQtrB,QAAQquB,cAAc,OACtCC,eAAgBV,EAAY,WAC5BW,IAAKX,EAAY,OACjB7f,MAAO6f,EAAY,SACnBrT,OAAQqT,EAAY,UACpB1mB,IAAK0mB,EAAY,OACjB5Z,MAAO/T,KAAKitB,OAAOpB,IACnBxR,MAAOra,KAAKmuB,oBAEd,MAA2B,IAAvBR,EAAY,QACPtC,EAAQtrB,QAAQquB,cACrB,KAEEG,KAAMZ,EAAY,QAClBnD,OAAQmD,EAAY,WACtB9B,GAIGA,KAGTnpB,IAAK,SACL3D,MAAO,WACL,IAAI4uB,EAAc3tB,KAAKyqB,MAAMkD,YAG7B,OAAOtC,EAAQtrB,QAAQquB,cACrB,SAEEI,UAAW,WACXC,YAAa,IACbC,YAAa,IACbC,oBAAqBhB,EAAY,SACjCiB,qBAAsB,IACtB7a,MAAO/T,KAAKitB,OAAOvB,OACrBL,EAAQtrB,QAAQquB,cACd,QACA,KACA/C,EAAQtrB,QAAQquB,cACd,KACA,KACA/C,EAAQtrB,QAAQquB,cACd,MACEra,MAAO/T,KAAKitB,OAAOiB,IACrBluB,KAAK6uB,sBAQV1C,EAhHuC,KAiHxB9B,EAExB8B,EAAM2C,QAlKQ,WAmKd3C,EAAM4C,WAlKW,YAAa,mBAmK9B5C,EAAM6C,uBAjKJC,YACEC,UAAW,KACXC,MAAS,SACTb,IAAO,GACPxC,OAAU,OACVsD,gBAAiB,KACjBC,6BAA8B,KAC9B/U,OAAU,OACViU,KAAQ,GACRe,iBAAkB,KAClBC,eAAgB,KAChBC,gBAAiB,KACjBC,cAAe,KACfC,QAAW,YACXzoB,IAAO,GACPujB,OAAU,SACV1c,MAAS,GACT6hB,iBAAkB,KAClBtV,MAAS,OAgJb8R,EAAMyD,WA7IU,EA8IhBzD,EAAMV,WAAaA,EACnBU,EAAM0D,WAhIW,SAAoBC,GAKnC,OAJAA,EAAE,kBAAkBC,KAAK,WACvBD,EAAE9vB,MAAMgwB,KAAK,UAAWF,EAAE9vB,MAAMgwB,KAAK,iBAAiBC,WAAW,kBAG5DH,GA6HTvyB,EAAQwC,QAAUosB,iBCzMlB3uB,EAAAD,QAAAkC,QAAA,2BCAAjC,EAAAD,QAAAkC,QAAA,6BCAAjC,EAAAD,QAAAkC,QAAA,8BCAAjC,EAAAD,QAAAkC,QAAA,gKCEAhB,OAAOC,eAAenB,EAAS,cAC7BwB,OAAO,IAGT,IAEIsrB,EAFAC,EAAe,WAAc,SAASC,EAAiBC,EAAQC,GAAS,IAAK,IAAI1sB,EAAI,EAAGA,EAAI0sB,EAAMtmB,OAAQpG,IAAK,CAAE,IAAI2sB,EAAaD,EAAM1sB,GAAI2sB,EAAW9rB,WAAa8rB,EAAW9rB,aAAc,EAAO8rB,EAAW/rB,cAAe,EAAU,UAAW+rB,IAAYA,EAAWC,UAAW,IAAM,EAAAC,EAAA7qB,SAAsByqB,EAAQE,EAAWhoB,IAAKgoB,IAAiB,OAAO,SAAUG,EAAaC,EAAYC,GAAiJ,OAA9HD,GAAYP,EAAiBM,EAAYzrB,UAAW0rB,GAAiBC,GAAaR,EAAiBM,EAAaE,GAAqBF,GAA7gB,GAIfG,EAAYntB,EAAQ,IAIpBqyB,EAAchF,EAFDrtB,EAAQ,KAMrBotB,EAAUC,EAFDrtB,EAAQ,KAIjButB,EAASvtB,EAAQ,IAEjBwtB,EAAUH,EAAuBE,GAIjC+E,EAAejF,EAFDrtB,EAAQ,KAMtBuyB,EAAclF,EAFDrtB,EAAQ,KAMrBwyB,EAAYnF,EAFDrtB,EAAQ,KAIvB,SAASqtB,EAAuBte,GAAO,OAAOA,GAAOA,EAAI3N,WAAa2N,GAAQ7M,QAAS6M,GAIvF,SAAS0e,EAA2BC,EAAMrtB,GAAQ,IAAKqtB,EAAQ,MAAM,IAAIC,eAAe,6DAAgE,OAAOttB,GAAyB,iBAAhB,IAAOA,EAAP,eAAAynB,EAAA5lB,SAAO7B,KAAqC,mBAATA,EAA8BqtB,EAAPrtB,EAIlO,IA6BIutB,GACF6E,KACEC,OAAQ,UAEV7E,OACE8E,SAAU,MACVnW,MAAO,QAET6T,IACEuC,UAAW,SACXC,cAAe,QA4DfC,GAAU,EAAI3F,EAAUoB,aAAa/B,EAAS,SAAUgC,GAG1D,SAASsE,IACP,IAAIrE,EAEAC,EAAOxkB,GA/Gf,SAAyBykB,EAAU3B,GAAe,KAAM2B,aAAoB3B,GAAgB,MAAM,IAAI4B,UAAU,qCAiH5GC,CAAgB1sB,KAAM2wB,GAEtB,IAAK,IAAIhE,EAAOzoB,UAAUC,OAAQyoB,EAAOC,MAAMF,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAC3EF,EAAKE,GAAQ5oB,UAAU4oB,GAGzB,OAAeP,EAASxkB,EAAQujB,EAA2BtrB,MAAOssB,EAAOqE,EAAQ5D,YAAa,EAAA1mB,EAAAtG,SAAsB4wB,IAAUzyB,KAAK8uB,MAAMV,GAAOtsB,MAAMgL,OAAO4hB,KAAiB7kB,EAAMklB,OAASllB,EAAMmlB,YAAqB5B,EAA2BvjB,EAAnCwkB,GAqIlN,OAxPF,SAAmBY,EAAUC,GAAc,GAA0B,mBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAIX,UAAU,qEAAoEW,EAApE,eAAAzH,EAAA5lB,SAAoEqtB,KAAeD,EAAS/tB,WAAY,EAAAiuB,EAAAttB,SAAcqtB,GAAcA,EAAWhuB,WAAakuB,aAAevuB,MAAOouB,EAAUvuB,YAAY,EAAO+rB,UAAU,EAAMhsB,cAAc,KAAeyuB,IAAYG,EAAAxtB,SAAwB,EAAAwtB,EAAAxtB,SAAsBotB,EAAUC,GAAcD,EAASJ,UAAYK,GAsG/dI,CAAUmD,EAmJVvF,EAAOqC,WAnIPnD,EAAaqG,IACXjuB,IAAK,cACL3D,MAAO,WAIL,MAAoC,eAA7B4uB,EAHW3tB,KAAKyqB,MAAMkD,aAGV,iBAGrBjrB,IAAK,YACL3D,MAAO,WACL,IAAI2uB,EAAS1tB,KAAKyqB,MACdkD,EAAcD,EAAOC,YACrBE,EAAcH,EAAOG,YACrBI,EAAcP,EAAOO,YAGrB2C,EAAajD,EAAY,mBAC3BiD,aAAcjD,EAAY,qBAAuB,IAAM,QAAUA,EAAY,kBAAoB,mBAAqBA,EAAY,oBAAsB,IAAM,KAAOA,EAAY,sBAAwB,KAAKkD,SAE9MD,WAAYjD,EAAY,qBAG1B,OAAO,EAAI1C,EAAQlrB,YAAa0rB,GAC9ByC,IACEsC,SAAU,MACVd,QAASzB,EAAYN,EAAY,WAAY,MAC7CmD,cAAe7C,EAAYN,EAAY,kBAAmB,MAC1DoD,YAAa9C,EAAYN,EAAY,gBAAiB,MACtDG,aAAcG,EAAYN,EAAY,iBAAkB,MACxDqD,WAAY/C,EAAYN,EAAY,eAAgB,MACpD8C,UAAW9C,EAAY,cACvB+C,cAAe/C,EAAY,mBAE7B2C,KACEvV,SAAUkT,EAAYJ,MAGxByC,IAAKtwB,KAAKixB,kBAAqB,EAAIf,EAAYnwB,SAAS6wB,GACxDlF,MAAO1rB,KAAKixB,kBAAqB,EAAIf,EAAYnwB,SAAS6wB,GAC1DM,eAAgBlxB,KAAKixB,eAAgB,EAAIf,EAAYnwB,SAAS6wB,WAIlEluB,IAAK,yBACL3D,MAAO,WACL,IAAI4uB,EAAc3tB,KAAKyqB,MAAMkD,YAG7B,OAAOtC,EAAQtrB,QAAQquB,cACrB,SAEEK,YAAa,IACbC,YAAa,IACbyC,yBAA0BxD,EAAY,kBACtCiB,qBAAsB,IACtBwC,mBAAoBzD,EAAY,eAChC0D,qBAAsB1D,EAAY,iBAClC2D,kBAAmB3D,EAAY,cAC/BU,eAAgBV,EAAY,WAC5B5Z,OAAO,EAAIkX,EAAQlrB,YAAaC,KAAKitB,OAAOiE,eAAgBlxB,KAAKitB,OAAOvB,QAC1EL,EAAQtrB,QAAQquB,cACd,QACA,KACA/C,EAAQtrB,QAAQquB,cACd,KACA,KACA/C,EAAQtrB,QAAQquB,cACd,KACA,KACApuB,KAAKuxB,uBAOf7uB,IAAK,gBACL3D,MAAO,WACL,IAAIivB,EAAUhuB,KAAKyqB,MACf+G,EAA+BxD,EAAQwD,6BACvC7D,EAAcK,EAAQL,YACtBzhB,EAAW8hB,EAAQ9hB,SACnB2hB,EAAcG,EAAQH,YAEtB4D,EAAYzxB,KAAKixB,cAErB,OAAO5F,EAAQtrB,QAAQquB,cACrB,OAEEgD,mBAAoBzD,EAAY,eAChC0D,qBAAsB1D,EAAY,iBAClC2D,kBAAmB3D,EAAY,cAC/BU,eAAgBV,EAAY,WAC5B5Z,MAAO/T,KAAKitB,OAAOqD,KACrBjF,EAAQtrB,QAAQquB,cACd,SAEEK,YAAa,IACbC,YAAa,IACbF,UAAW,gCACXG,oBAAqB,SACrBwC,yBAA0BM,OAAYrtB,EAAYupB,EAAY,kBAC9DiB,qBAAsB,IACtB8C,WAAY/D,EAAY,mBAAqB,GAC7CgE,aAAc9D,EACd9Z,MAAO/T,KAAKitB,OAAOvB,OACrBL,EAAQtrB,QAAQquB,cACd,QACA,KACA/C,EAAQtrB,QAAQquB,cACd,KACA,KACA/C,EAAQtrB,QAAQquB,cACd,MACEra,MAAO/T,KAAKitB,OAAOiB,IACrBsD,EAA6BtlB,WAQzCxJ,IAAK,SACL3D,MAAO,WACL,OAAOiB,KAAKixB,cAAgBjxB,KAAK4xB,yBAA2B5xB,KAAKuxB,oBAI9DZ,EAnJyC,KAoJ1BtG,EAExBsG,EAAQ7B,QAzPM,aA0Pd6B,EAAQ5B,WAzPS,gBA0PjB4B,EAAQ3B,uBAxPNC,YACE4C,cAAe,KACfC,gBAAiB,KACjBC,aAAc,KACd7C,UAAW,KACX8C,mBAAoB,KACpBC,iBAAkB,KAClBC,oBAAqB,SACrBC,kBAAmB,OACnBrG,OAAU,KACVsG,gBAAiB,KACjBC,cAAe,KACfjD,gBAAiB,KACjBkD,eAAgB,KAChBC,aAAc,KACdC,UAAa,MACbC,aAAc,KACd/C,QAAW,SACXD,cAAe,KACfH,iBAAkB,KAClBC,eAAgB,KAChBC,gBAAiB,KACjBkD,aAAc,SACd/C,iBAAkB,QAkOtBgB,EAAQlF,WAAaA,EACrBkF,EAAQd,WAnNS,SAAoBC,GAsDnC,OArDAA,EAAE,kCAAkCC,KAAK,WACvC,IAAI7vB,EAAM4vB,EAAE9vB,MAAMoI,KAAK,OACnBiS,EAAQyV,EAAE9vB,MAAMoI,KAAK,SAEzB0nB,EAAE9vB,MAAMiwB,WAAW,SAASA,WAAW,YAAYA,WAAW,cAEzD/vB,IAIL4vB,EAAE9vB,MAAM2yB,OAAO3H,EAAU7V,QAAQyd,oBAAsB,mGAAqGvY,EAAQ,4EAA8Ena,EAAM,uFAAyF8qB,EAAU7V,QAAQ0d,mBAEnW/C,EAAE9vB,MAAM8yB,MAAM9H,EAAU7V,QAAQyd,oBAAsB,kDAAoD5H,EAAU7V,QAAQ0d,sBAG9H/C,EAAE,4BAA4BC,KAAK,WACjC,IAAIgD,EAAajD,EAAE9vB,MAAMgzB,OAEzBlD,EAAE9vB,MAAMizB,YAAYjI,EAAU7V,QAAQyd,oBAAsB,2FAA6FG,EAAW3qB,KAAK,kBAAoB,UAAYyG,SAASihB,EAAE9vB,MAAMoI,KAAK,UAAY,gBAAkB4iB,EAAU7V,QAAQ0d,mBAE/QE,EAAW9C,WAAW,yBAGxBH,EAAE,4BAA4BC,KAAK,WACjC,IAAIgD,EAAajD,EAAE9vB,MAAMgzB,OAEzBlD,EAAE9vB,MAAMizB,YAAYjI,EAAU7V,QAAQyd,oBAAsB,0CAA4CG,EAAW3qB,KAAK,kBAAoB,UAAYyG,SAASihB,EAAE9vB,MAAMoI,KAAK,UAAY,gBAAkB4iB,EAAU7V,QAAQ0d,mBAE9NE,EAAW9C,WAAW,yBAGxBH,EAAE,6BAA6BC,KAAK,WAClCD,EAAE9vB,MAAMizB,YAAYjI,EAAU7V,QAAQyd,oBAAsB,qCAAuC5H,EAAU7V,QAAQ0d,qBAGvH/C,EAAE,sBAAsBC,KAAK,WAC3BD,EAAE9vB,MAAMgwB,KAAK,cAAe,IAAIC,WAAW,sBAG7CH,EAAE,wBAAwBC,KAAK,WAC7BD,EAAE9vB,MAAMgwB,KAAK,gBAAiBF,EAAE9vB,MAAMgwB,KAAK,yBAI7CF,EAAE,qBAAqBC,KAAK,WAC1BD,EAAE9vB,MAAMgwB,KAAK,aAAcF,EAAE9vB,MAAMgwB,KAAK,sBAI1CF,EAAE,kBAAkBC,KAAK,WACvBD,EAAE9vB,MAAMgwB,KAAK,UAAWF,EAAE9vB,MAAMgwB,KAAK,iBAAiBC,WAAW,kBAG5DH,GA+JTK,EAAapwB,QAAQgvB,UAAUpsB,KA/PjB,cAiQdytB,EAAYrwB,QAAQgvB,UAAUpsB,KAjQhB,cAmQd0tB,EAAUtwB,QAAQgvB,UAAUpsB,KAnQd,cAqQdpF,EAAQwC,QAAU4wB,iBCjTlBnzB,EAAAD,QAAAkC,QAAA,4BCAAjC,EAAAD,QAAAkC,QAAA,qCCAAjC,EAAAD,QAAAkC,QAAA,yBCAAjC,EAAAD,QAAAkC,QAAA,+BCAAjC,EAAAD,QAAAkC,QAAA,uBCAAjC,EAAAD,QAAAkC,QAAA,kCCAAjC,EAAAD,QAAAkC,QAAA,+CCAAjC,EAAAD,QAAAkC,QAAA,kCCAAjC,EAAAD,QAAAkC,QAAA,uHCAA,IAAMiB,EAAI7C,EAAQ,GACZ2D,EAAU3D,EAAQ,GAClB8B,EAAK9B,EAAQ,GACb8C,EAAU9C,EAAQ,GAElBq1B,aACJ,SAAAA,EAAYtzB,IAAQ,EAAAE,EAAAC,SAAAC,KAAAkzB,GAClBlzB,KAAKJ,OAASA,uDAGRiK,EAAMwE,GAAO,IAAAtG,EAAA/H,KACnB,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B8K,EAAMS,KAAOpO,EAAE0N,SAASC,EAAMS,MAAjB,IAA6BT,EAAMS,KAAnC,IAA6CT,EAAMS,KAEhEnP,EAAGM,QAAQ8H,EAAKnI,QAAQmP,OAAO,YAAalF,EAAMwE,GAC/C5K,KAAKH,EAASC,qCAIbsG,EAAM4X,GAAM,IAAA/Y,EAAA1I,KAClB,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3Bke,EAAK5X,KAAOA,EAEZlJ,EAAQY,eAAemH,EAAK9I,OAAQ6hB,GACjChe,KAAKH,EAASC,wCAIVie,GAAO,IAAAhU,EAAAxN,KAChB,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3Bie,EAAQA,EAAMjc,IAAI,SAAAkc,GAAA,OAChB5gB,IAAK4gB,EAAK5gB,IACV+C,KAAM6d,EAAK7d,KACXoO,UAAU,KAGZrR,EAAQ4M,YAAYC,EAAK5N,OAAQ4hB,EAAO,KACrC/d,KAAKH,EAASC,sCAIZse,GAAS,IAAAjU,EAAA5N,KAChB,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B5D,EAAGM,QAAQ2N,EAAKhO,QAAQyM,KAAK,YAAa,kBACxC3J,IAAKmf,EACLtV,cAAc,IAEb9I,KAAK,SAACqW,GACAA,EAAK1M,KAAKjJ,OAKfb,EAAQwW,EAAK1M,KAAK,GAAG/J,KAJnBE,EAAO,IAAIkH,MAAM,qBAKlBlH,4CAIMkf,GAAM,IAAAzU,EAAAhO,KACnB,OAAO,IAAIwB,EAAQ,SAAC8B,EAASC,GAC3B5D,EAAGM,QAAQ+N,EAAKpO,QAAQyM,KAAK,YAAa,kBACxCC,MAAOmW,GACPlW,cAAc,IAEb9I,KAAK,SAACqW,GACL,GAAIA,EAAK1M,KAAKjJ,OAAQ,CACpB,IAAMqe,EAAW1I,EAAK1M,KAAK,GAAG/J,IAExBsd,GAAM,IAAIvb,MAAO2c,UAEjBoR,EAAY,IAAI/tB,KAAKA,KAAK+X,MAAMqF,EAAS2Q,YAAYpR,UACrDqR,EAAU,IAAIhuB,KAAKA,KAAK+X,MAAMqF,EAAS4Q,UAAUrR,UAEvD,GAAIoR,EAAYxS,EAEd,YADApd,EAAO,IAAIkH,MAAM,mCAKnB,GAAI2oB,EAAUzS,EAEZ,YADApd,EAAO,IAAIkH,MAAM,iCAInBnH,EAAQkf,QAGRjf,EAAO,IAAIkH,OACT1G,WAAY,IACZsvB,oCAAqC5Q,EAArC,QAGHlf,cAMX/F,EAAOD,QAAU21B,iBClGjB11B,EAAAD,QAAAkC,QAAA,qCCAAjC,EAAAD,QAAAkC,QAAA,wBCAAjC,EAAAD,QAAAkC,QAAA,4ICAA,IAAMiB,EAAI7C,EAAQ,GACZy1B,EAAcz1B,EAAQ,IACtB01B,EAAQ11B,EAAQ,IAChBsD,EAAetD,EAAQ,GACvB8B,EAAK9B,EAAQ,GAEb21B,GACJC,OAAQ,6CACRC,UAAW,+CACXrV,OAAQ,yCACRsV,MAAO,4CAGHC,aACJ,SAAAA,EAAYh0B,IAAQ,EAAAE,EAAAC,SAAAC,KAAA4zB,GAClB5zB,KAAKJ,OAASA,6GAGI0B,EAAMsb,sFACJ5c,KAAKJ,OAAOoW,KAAK6d,YAAY7xB,MAAM,KAAKuD,IAAI,SAAAuuB,GAAA,OAAaA,EAAUjD,SAAQ9lB,QAAQ6R,IAAW,6CAI9GjZ,GAAIiZ,EACJxQ,KAAM,iCAIiBzM,EAAGM,QAAQD,KAAKJ,OAAQ0B,GAAMzC,IAAI,oBAAvDuC,SAEA+W,EAAOzX,EAAEwJ,KAAK9I,EAAaH,OAAS0C,GAAIiZ,0BAGtCnS,yBAAyBmS,aAG5BzE,EAAK4b,8BACFtpB,0BAA0BmS,oCAG3BzE,0MAGsB3B,EAAUwd,mBAAQC,uIACzCC,EAAiBxzB,EAAEW,SAAUrB,KAAKJ,OAAO4W,GAAWwd,GAEpD5rB,GACJ+rB,WAAYF,EAAU,gBAAkB,qBACxC7N,UAAW8N,EAAeE,SAC1BC,cAAeH,EAAeI,aAC9BC,aAAcL,EAAeM,YAC7B/R,KAAMuR,EAAOvR,KACbgS,cAAeT,EAAOS,eAGlB7O,EAAM4N,EAAiBhd,GAEzB9S,2BAEe6vB,EAAMmB,KAAK9O,EAAK0N,EAAYqB,UAAUvsB,WAAvD1E,iEAEM,IAAI+G,MAAJmqB,EAAAllB,mBAGFrF,EAAK,IAAIlJ,EAAanB,KAAKJ,kBAENyK,EAAGxL,qBAAxBuC,UAEYoV,WAChBpV,EAAaoV,aAGfpV,EAAaoV,SAASA,GAAY9V,EAAEW,SAAUD,EAAaoV,SAASA,OAAiB9S,EAAS0E,wBAEvFiC,EAAGE,IAAInJ,4HAKlB5D,EAAOD,QAAUq2B,iBC/EjBp2B,EAAAD,QAAAkC,QAAA,4DCAA,IAAM+F,EAAO3H,EAAQ,IAEf+B,GACJi1B,YAAaC,QAAQC,IAAIC,aAAe,cACxCC,MAAOH,QAAQC,IAAIG,QAAS,EAE5B5zB,KAAMwzB,QAAQC,IAAII,KAClBja,QAAS4Z,QAAQC,IAAIK,UAAY,GAEjCj1B,IACED,IAAK40B,QAAQC,IAAIM,OACjB9O,KAAMuO,QAAQC,IAAIO,QAClBh3B,KAAMw2B,QAAQC,IAAIQ,QAClBC,cAAeV,QAAQC,IAAIU,kBAC3BC,UAAWZ,QAAQC,IAAIY,eAGzB3f,MACE6d,YAAaiB,QAAQC,IAAIa,mBACzB1P,YAAa4O,QAAQC,IAAIc,mBAAqB,sBAGhDC,KACElZ,OAAQkY,QAAQC,IAAIgB,aAAe,MACnC3pB,KAAM0oB,QAAQC,IAAIiB,UAAY,SAGhCt0B,QACExB,IAAK40B,QAAQC,IAAIkB,WACjBpd,SAAUic,QAAQC,IAAImB,gBACtBld,SAAU8b,QAAQC,IAAIoB,iBAGxBzC,WACEU,SAAUU,QAAQC,IAAIqB,oBACtB9B,aAAcQ,QAAQC,IAAIsB,yBAG5BC,SACEC,YAAazB,QAAQC,IAAIyB,qBACzBC,eAAgB3B,QAAQC,IAAI2B,wBAC5BC,eAAgB7B,QAAQC,IAAI6B,yBAC5BC,kBAAmB/B,QAAQC,IAAI+B,6BAGjCrD,QACEW,SAAUU,QAAQC,IAAIgC,iBACtBzC,aAAcQ,QAAQC,IAAIiC,sBAG5B9gB,SACEC,OAAQ2e,QAAQC,IAAIkC,gBACpB7gB,OAAQ0e,QAAQC,IAAImC,gBAGtBhN,SACE/T,OAAQ2e,QAAQC,IAAIoC,iBAGtBlxB,KACEC,eAAgB4uB,QAAQC,IAAIqC,sBAC5BhxB,mBAAoB0uB,QAAQC,IAAIsC,0BAEhCtxB,IACEO,OAAQwuB,QAAQC,IAAIuC,gBAWxBxT,QACElF,MAAOkW,QAAQC,IAAIwC,aACnBlT,QAASyQ,QAAQC,IAAIyC,gBACrBjT,YAAauQ,QAAQC,IAAI0C,qBAG3BpZ,QACE+V,SAAUU,QAAQC,IAAI2C,iBACtBpD,aAAcQ,QAAQC,IAAI4C,qBAC1BxhB,OAAQ2e,QAAQC,IAAI6C,gBAGtBjE,OACES,SAAUU,QAAQC,IAAI8C,gBACtBvD,aAAcQ,QAAQC,IAAI+C,qBAG5B5e,UACE/C,OAAQ2e,QAAQC,IAAIgD,iBACpBhyB,IACEO,OAAQwuB,QAAQC,IAAIiD,mBACpB3e,YAAayb,QAAQC,IAAIkD,0BAI7B1S,KACED,cAGF3R,OACEC,cAAepO,EAAKlC,QAAQ40B,EAAW,WAI3C16B,EAAOD,QAAUqC,iDC7GjB,SAASu4B,KAETA,EAAIC,cAAgBv6B,EAAQ,IAE5Bs6B,EAAI1f,OAAS,mBAAAkU,EAAAzoB,UAAAC,OAAIyoB,EAAJC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAIF,EAAJE,GAAA5oB,UAAA4oB,GAAA,WAAAuL,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAA8C4hB,MAC3DuL,EAAIvE,KAAO,mBAAA2E,EAAAr0B,UAAAC,OAAIyoB,EAAJC,MAAA0L,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAI5L,EAAJ4L,GAAAt0B,UAAAs0B,GAAA,WAAAH,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAA4C4hB,MACvDuL,EAAIh3B,aAAe,mBAAAs3B,EAAAv0B,UAAAC,OAAIyoB,EAAJC,MAAA4L,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAI9L,EAAJ8L,GAAAx0B,UAAAw0B,GAAA,WAAAL,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,IAA1B,MAAAmN,OAAqD4hB,MACxEuL,EAAIx4B,GAAK,mBAAAg5B,EAAAz0B,UAAAC,OAAIyoB,EAAJC,MAAA8L,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAIhM,EAAJgM,GAAA10B,UAAA00B,GAAA,WAAAP,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,IAA1B,MAAAmN,OAA0C4hB,MACnDuL,EAAIjF,UAAY,mBAAA2F,EAAA30B,UAAAC,OAAIyoB,EAAJC,MAAAgM,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAIlM,EAAJkM,GAAA50B,UAAA40B,GAAA,WAAAT,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAAiD4hB,MACjEuL,EAAIjlB,MAAQ,mBAAA6lB,EAAA70B,UAAAC,OAAIyoB,EAAJC,MAAAkM,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAIpM,EAAJoM,GAAA90B,UAAA80B,GAAA,WAAAX,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAA6C4hB,MACzDuL,EAAInO,QAAU,mBAAAiP,EAAA/0B,UAAAC,OAAIyoB,EAAJC,MAAAoM,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAItM,EAAJsM,GAAAh1B,UAAAg1B,GAAA,WAAAb,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAA+C4hB,MAC7DuL,EAAIzsB,OAAS,mBAAAytB,EAAAj1B,UAAAC,OAAIyoB,EAAJC,MAAAsM,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAIxM,EAAJwM,GAAAl1B,UAAAk1B,GAAA,WAAAf,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAA8C4hB,MAC3DuL,EAAIpuB,OAAS,mBAAAsvB,EAAAn1B,UAAAC,OAAIyoB,EAAJC,MAAAwM,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAI1M,EAAJ0M,GAAAp1B,UAAAo1B,GAAA,WAAAjB,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAA8C4hB,MAC3DuL,EAAI/O,KAAO,mBAAAmQ,EAAAr1B,UAAAC,OAAIyoB,EAAJC,MAAA0M,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAI5M,EAAJ4M,GAAAt1B,UAAAs1B,GAAA,WAAAnB,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAA4C4hB,MACvDuL,EAAItR,KAAO,mBAAA4S,EAAAv1B,UAAAC,OAAIyoB,EAAJC,MAAA4M,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAI9M,EAAJ8M,GAAAx1B,UAAAw1B,GAAA,WAAArB,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAA4C4hB,MACvDuL,EAAIx3B,QAAU,mBAAAg5B,EAAAz1B,UAAAC,OAAIyoB,EAAJC,MAAA8M,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAIhN,EAAJgN,GAAA11B,UAAA01B,GAAA,WAAAvB,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,IAA1B,MAAAmN,OAA+C4hB,MAC7DuL,EAAI0B,UAAY,mBAAAC,EAAA51B,UAAAC,OAAIyoB,EAAJC,MAAAiN,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAInN,EAAJmN,GAAA71B,UAAA61B,GAAA,WAAA1B,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAAiD4hB,MACjEuL,EAAInS,IAAM,mBAAAgU,EAAA91B,UAAAC,OAAIyoB,EAAJC,MAAAmN,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAIrN,EAAJqN,GAAA/1B,UAAA+1B,GAAA,WAAA5B,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAA2C4hB,MACrDuL,EAAI9S,IAAM,mBAAA6U,EAAAh2B,UAAAC,OAAIyoB,EAAJC,MAAAqN,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAIvN,EAAJuN,GAAAj2B,UAAAi2B,GAAA,WAAA9B,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAA2C4hB,MACrDuL,EAAI7f,MAAQ,mBAAA8hB,EAAAl2B,UAAAC,OAAIyoB,EAAJC,MAAAuN,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAIzN,EAAJyN,GAAAn2B,UAAAm2B,GAAA,WAAAhC,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAA6C4hB,MACzDuL,EAAIryB,GAAK,mBAAAw0B,EAAAp2B,UAAAC,OAAIyoB,EAAJC,MAAAyN,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAI3N,EAAJ2N,GAAAr2B,UAAAq2B,GAAA,WAAAlC,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAA0C4hB,MACnDuL,EAAIhuB,OAAS,mBAAAqwB,EAAAt2B,UAAAC,OAAIyoB,EAAJC,MAAA2N,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAI7N,EAAJ6N,GAAAv2B,UAAAu2B,GAAA,WAAApC,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAA8C4hB,MAC3DuL,EAAI/S,SAAW,mBAAAsV,EAAAx2B,UAAAC,OAAIyoB,EAAJC,MAAA6N,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAI/N,EAAJ+N,GAAAz2B,UAAAy2B,GAAA,WAAAtC,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAAgD4hB,MAC/DuL,EAAIpU,OAAS,mBAAA6W,EAAA12B,UAAAC,OAAIyoB,EAAJC,MAAA+N,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAIjO,EAAJiO,GAAA32B,UAAA22B,GAAA,WAAAxC,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAA8C4hB,MAC3DuL,EAAIja,OAAS,mBAAA4c,EAAA52B,UAAAC,OAAIyoB,EAAJC,MAAAiO,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAInO,EAAJmO,GAAA72B,UAAA62B,GAAA,WAAA1C,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAA8C4hB,MAC3DuL,EAAI5a,SAAW,mBAAAyd,EAAA92B,UAAAC,OAAIyoB,EAAJC,MAAAmO,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAIrO,EAAJqO,GAAA/2B,UAAA+2B,GAAA,WAAA5C,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAAgD4hB,MAC/DuL,EAAItb,MAAQ,mBAAAqe,EAAAh3B,UAAAC,OAAIyoB,EAAJC,MAAAqO,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAIvO,EAAJuO,GAAAj3B,UAAAi3B,GAAA,WAAA9C,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAA6C4hB,MAEzDuL,EAAIxb,KAAO,mBAAAye,EAAAl3B,UAAAC,OAAIyoB,EAAJC,MAAAuO,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAIzO,EAAJyO,GAAAn3B,UAAAm3B,GAAA,WAAAhD,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAA4C4hB,MACvDuL,EAAIhf,QAAU,mBAAAmiB,EAAAp3B,UAAAC,OAAIyoB,EAAJC,MAAAyO,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAI3O,EAAJ2O,GAAAr3B,UAAAq3B,GAAA,WAAAlD,SAAAj5B,UAAAk5B,KAAAtL,MAAkBnvB,EAAQ,KAA1B,MAAAmN,OAA+C4hB,MAE7DpvB,EAAOD,QAAU46B","file":"ace-api.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AceApi\"] = factory();\n\telse\n\t\troot[\"AceApi\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssmbly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 77);\n","module.exports = require(\"babel-runtime/helpers/createClass\");","module.exports = require(\"babel-runtime/helpers/classCallCheck\");","module.exports = require(\"lodash\");","module.exports = require(\"bluebird\");","const Cloudant = require('@cloudant/cloudant');\n\nclass Db {\n  constructor (config, dbName) {\n    this.config = config;\n\n    return Db.connect(config, dbName);\n  }\n\n  static connect (config, dbName) {\n    const cloudant = new Cloudant({\n      url: config.db.url,\n      maxAttempt: 5,\n      plugins: [\n        'promises',\n        {\n          retry: {\n            retryDelayMultiplier: 2,\n            retryInitialDelayMsecs: 500,\n          },\n        },\n      ],\n    });\n\n    return cloudant.db.use(dbName || config.db.name);\n  }\n}\n\nmodule.exports = Db;\n","const _ = require('lodash');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Roles = require('./roles');\n\nconst roles = new Roles();\n\nconst DEFAULT_CLIENT_CONFIG = {\n  _id: 'config',\n  client: {},\n  schemas: [],\n  taxonomies: [],\n  users: [],\n  roles: roles.roles(),\n};\n\nclass ClientConfig {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async get() {\n    let clientConfig = DEFAULT_CLIENT_CONFIG;\n\n    try {\n      clientConfig = await Db.connect(this.config).get('config');\n\n      clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n    } catch (error) {\n      //\n    }\n\n    clientConfig.slug = this.config.slug;\n\n    return clientConfig;\n  }\n\n  async set(clientConfig) {\n    clientConfig._id = 'config';\n\n    delete clientConfig.roles;\n\n    clientConfig = await Helpers.createOrUpdate(this.config, clientConfig);\n\n    clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n\n    return clientConfig;\n  }\n}\n\n\nmodule.exports = ClientConfig;\n","module.exports = require(\"babel-runtime/helpers/asyncToGenerator\");","module.exports = require(\"babel-runtime/regenerator\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\n\nclass Helpers {\n  constructor(config) {\n    this.config = config;\n    this.assistUrl = config.assist.url;\n    this.slug = config.slug;\n  }\n\n  static createOrUpdate (config, doc) {\n    return new Promise((resolve, reject) => {\n      Db.connect(config).insert(doc)\n        .then((response) => {\n          doc._id = response.id;\n          doc._rev = response.rev;\n          resolve(doc);\n        }, (error) => {\n          if (error.statusCode !== 409) {\n            reject(error);\n            return;\n          }\n\n          Db.connect(config).get(doc._id)\n            .then((response) => {\n              doc._rev = response._rev;\n\n              Db.connect(config).insert(doc)\n                .then((response) => {\n                  doc._rev = response.rev;\n                  resolve(doc);\n                }, reject);\n            }, reject);\n        });\n    });\n  }\n\n  static chunkUpdate (config, docs, chunkSize = 1000) {\n    return new Promise((resolve, reject) => {\n      const chunks = _.chunk(docs, chunkSize);\n      const promises = [];\n\n      chunks.forEach((chunk) => {\n        promises.push(new Promise((resolve, reject) => {\n          Db.connect(config).bulk({\n            docs: chunk,\n          }).then(resolve, reject);\n        }));\n      });\n\n      Promise.all(promises).then(resolve, reject);\n    });\n  }\n\n  static groupEntities (entities, groupSize = Infinity) {\n    const grouped = [];\n\n    let group = {\n      entities: [],\n    };\n\n    entities.forEach((entity) => {\n      if (!entity.groupBefore || group.entities.length >= groupSize) {\n        group = {\n          entities: [],\n        };\n      }\n\n      group.entities.push(entity);\n\n      if (!entity.groupAfter || group.entities.length >= groupSize) {\n        group.ratio = 0;\n\n        group.entities.forEach((entity) => {\n          group.ratio += (entity.thumbnail || entity).ratio;\n        });\n\n        group.entities.forEach((entity) => {\n          entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n        });\n\n        grouped.push(group);\n      }\n    });\n\n    return grouped;\n  }\n\n  static now () {\n    return JSON.stringify(new Date()).replace(/\"/g, '');\n  }\n\n  static replace (array, replacementObject, key) {\n    return array.map((object) => {\n      if (object[key] === replacementObject[key]) {\n        return replacementObject;\n      }\n      return object;\n    });\n  }\n\n  thumbnailSrc (thumbnail, settings, cropSlug, cropDefault) {\n    if (!thumbnail) {\n      return '';\n    }\n\n    let settingsArray;\n\n    if (typeof settings === 'string') {\n      settingsArray = settings.split(/,|;/);\n\n      settings = {};\n\n      settingsArray.forEach((setting) => {\n        setting = setting.split(/_|:/);\n\n        settings[setting[0]] = setting[1];\n      });\n    }\n\n    const crop = thumbnail.crops ? thumbnail.crops[cropSlug] : false;\n\n    if (crop) {\n      settings.x = crop[0];\n      settings.y = crop[1];\n      settings.x2 = crop[2];\n      settings.y2 = crop[3];\n    } else if (cropDefault) {\n      settings.g = cropDefault;\n    }\n\n    settingsArray = [];\n\n    _.forEach(settings, (value, key) => {\n      settingsArray.push([key, value].join(':'));\n    });\n\n    const settingsString = settingsArray.join(';');\n\n    if (/image/.test(thumbnail.thumbnailType)) {\n      const fileName = thumbnail.fileName;\n      const ext = fileName.split('.').pop().toLowerCase();\n\n      if (ext === 'svg') {\n        return [this.assistUrl, this.slug, fileName].join('/');\n      }\n\n      return [this.assistUrl, this.slug, 'transform', settingsString, fileName].join('/');\n    }\n\n    if (/video|oembed|proxy/.test(thumbnail.thumbnailType)) {\n      const thumbnailUrl = thumbnail.thumbnailUrl.replace(/https?:\\/\\//, '');\n\n      return [this.assistUrl, this.slug, 'proxy', 'transform', settingsString, thumbnailUrl].join('/');\n    }\n\n    return '';\n  }\n\n}\n\nmodule.exports = Helpers;\n","module.exports = require(\"fs\");","module.exports = require(\"babel-runtime/core-js/json/stringify\");","module.exports = require(\"path\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst path = require('path');\nconst fs = Promise.promisifyAll(require('fs'));\nconst mime = require('mime');\nconst uuid = require('uuid');\nconst AWS = require('aws-sdk');\n\nclass S3 {\n  constructor(config) {\n    this.config = config;\n\n    this.s3 = new AWS.S3({\n      accessKeyId: config.aws.iamAccessKeyId,\n      secretAccessKey: config.aws.iamAccessKeySecret,\n    });\n\n    Promise.promisifyAll(Object.getPrototypeOf(this.s3));\n  }\n\n  prepareUpload(bucket, fileName, slug = '') {\n    return new Promise((resolve, reject) => {\n      fs.statAsync(fileName)\n        .then((stats) => {\n          const fileSize = stats.size;\n          const mimeType = mime.getType(fileName);\n\n          const base = uuid.v1();\n          const ext = path.extname(fileName);\n\n          const src = [slug, `${base}${ext}`].join('/');\n\n          const uploadOptions = {\n            Bucket: bucket,\n            Key: src,\n            // Body: file,\n            ACL: 'public-read',\n            StorageClass: 'REDUCED_REDUNDANCY',\n            Metadata: {},\n            Expires: new Date('2099-01-01'),\n            CacheControl: 'max-age=31536000',\n            ContentType: mimeType,\n            ContentLength: fileSize,\n          };\n\n          resolve({\n            fileName,\n            uploadOptions,\n            metadata: {\n              bucket,\n              src,\n              base,\n              ext,\n            },\n            original: {\n              fileName: path.basename(fileName),\n              fileSize,\n              mimeType,\n            },\n          });\n        }, reject);\n    });\n  }\n\n  upload(fileName, uploadOptions) {\n    return new Promise((resolve, reject) => {\n      uploadOptions.Body = fs.createReadStream(fileName);\n\n      this.s3.upload(uploadOptions)\n\n        // .on('httpUploadProgress', (event) => {\n        //   // console.log(event);\n        // })\n\n        .send((error, data) => {\n          if (error) {\n            reject(error);\n            return;\n          }\n\n          resolve(data);\n        });\n    });\n  }\n\n  getSignedUrl(bucket, key, filename) {\n    return this.s3.getSignedUrlAsync('getObject', {\n      Bucket: bucket,\n      Key: key,\n      ResponseContentDisposition: `attachment; filename=\"${filename}\"`,\n    });\n  }\n\n  getObject(bucket, key) {\n    return this.s3.getObjectAsync({\n      Bucket: bucket,\n      Key: key,\n    });\n  }\n\n  deleteFiles(slug, files) {\n    return new Promise((reject, resolve) => {\n      if (files.length === 0) {\n        resolve();\n        return;\n      }\n\n      const buckets = _.uniq(files.map((file) => {\n        try {\n          return file.metadata.s3.bucket;\n        } catch (error) {\n          return null;\n        }\n      }).filter(bucket => bucket));\n\n      const bucketMap = {};\n\n      const promises = [];\n\n\n      files.forEach((file) => {\n        buckets.forEach((bucket) => {\n          try {\n            promises.push(this.s3.listObjectsAsync({\n              Bucket: bucket,\n              Prefix: `${slug}/${file.metadata.s3.base}`,\n            }));\n          } catch (error) {\n            console.log(error);\n          }\n        });\n      });\n\n      Promise.all(promises).then((results) => {\n        results.forEach((result) => {\n          result.Contents.forEach((file) => {\n            if (!bucketMap[result.Name]) {\n              bucketMap[result.Name] = [];\n            }\n\n            bucketMap[result.Name].push({\n              Key: file.Key,\n            });\n          });\n        });\n\n        const promises = [];\n\n        _.forEach(bucketMap, (files, bucketName) => {\n          promises.push(this.s3.deleteObjectsAsync({\n            Bucket: bucketName,\n            Delete: {\n              Objects: files,\n            },\n          }));\n        });\n\n        if (promises.length === 0) {\n          resolve();\n          return;\n        }\n\n        Promise.all(promises).then(resolve, reject);\n      }, reject);\n    });\n  }\n\n}\n\nmodule.exports = S3;\n","module.exports = require(\"babel-runtime/helpers/typeof\");","module.exports = require(\"babel-runtime/core-js/object/get-prototype-of\");","module.exports = require(\"request-promise\");","module.exports = require(\"mime\");","const _ = require('lodash');\n\nconst fields = [\n  {\n    type: 'attachment',\n    name: 'Attachment',\n    dataType: null,\n  },\n  {\n    type: 'audio',\n    name: 'Audio',\n    dataType: null,\n  },\n  {\n    type: 'checkbox',\n    name: 'Checkbox',\n    dataType: 'boolean',\n  },\n  {\n    type: 'color',\n    name: 'Color',\n    dataType: 'string',\n  },\n  {\n    type: 'date',\n    name: 'Date',\n    dataType: 'string',\n  },\n  {\n    type: 'embedly',\n    name: 'Embedly',\n    dataType: null,\n  },\n  {\n    type: 'entity',\n    name: 'Entity',\n    dataType: 'array',\n  },\n  {\n    type: 'entityGrid',\n    name: 'Entity Grid',\n    dataType: 'array',\n  },\n  {\n    type: 'entityTile',\n    name: 'Entity Tile',\n    dataType: 'array',\n  },\n  {\n    type: 'image',\n    name: 'Image',\n    dataType: null,\n  },\n  {\n    type: 'keyValue',\n    name: 'Key Value',\n    dataType: null,\n  },\n  {\n    type: 'number',\n    name: 'Number',\n    dataType: 'number',\n  },\n  {\n    type: 'richText',\n    name: 'Rich Text',\n    dataType: null,\n  },\n  {\n    type: 'select',\n    name: 'Select',\n    dataType: 'array',\n  },\n  {\n    type: 'taxonomy',\n    name: 'Taxonomy',\n    dataType: null,\n  },\n  {\n    type: 'text',\n    name: 'Text',\n    dataType: 'string',\n  },\n  {\n    type: 'textArea',\n    name: 'Text Area',\n    dataType: 'string',\n  },\n  {\n    type: 'video',\n    name: 'Video',\n    dataType: null,\n  },\n  {\n    type: 'vimeo',\n    name: 'Vimeo',\n    dataType: null,\n  },\n];\n\nclass Fields {\n  static fields() {\n    return fields.map(field => Object.freeze(field));\n  }\n  static field(type) {\n    return _.find(Fields.fields(), { type });\n  }\n}\n\nmodule.exports = Fields;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Fields = require('./fields');\n\nclass Schema {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas.push(schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(schemaSlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const schema = _.find(clientConfig.schemas, { slug: schemaSlug });\n\n    if (!schema) {\n      throw Error(`Schema not found: ${schemaSlug}`);\n    }\n\n    return schema;\n  }\n\n  async update(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.schemas, { slug: schema.slug });\n\n    if (index === -1) {\n      throw Error(`Schema not found: ${schema.slug}`);\n    }\n\n    clientConfig.schemas.splice(index, 1, schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(schemaSlugs) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    schemaSlugs = _.isArray(schemaSlugs) ? schemaSlugs : [schemaSlugs];\n\n    clientConfig.schemas = clientConfig.schemas.filter(schema => schemaSlugs.indexOf(schema.slug) === -1);\n\n    clientConfig.schemas = clientConfig.schemas.map((schema) => {\n      if (!schema.fields) {\n        return schema;\n      }\n      schema.fields = schema.fields.map((field) => {\n        if (!field.settings) {\n          return field;\n        }\n        if (field.settings.schemas) {\n          field.settings.schemas = field.settings.schemas.filter(schema => schemaSlugs.indexOf(schema) === -1);\n        }\n        return field;\n      });\n      return schema;\n    });\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateAll(schemas) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas = schemas;\n\n    // await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateEntityIndex(schemas) {\n    let fields = [];\n\n    schemas.forEach((schema) => {\n      fields = fields.concat(schema.fields);\n    });\n\n    fields = _.uniqBy(fields, 'slug');\n\n    const index = {\n      name: 'entity',\n      type: 'text',\n      ddoc: 'entityIndex',\n      index: {\n        default_field: {\n          enabled: true,\n          analyzer: 'standard',\n        },\n        selector: {\n          $and: [\n            {\n              type: 'entity',\n            },\n          ],\n        },\n        fields: [\n          {\n            name: 'published',\n            type: 'boolean',\n          },\n          {\n            name: 'trashed',\n            type: 'boolean',\n          },\n          {\n            name: 'title',\n            type: 'string',\n          },\n          {\n            name: 'slug',\n            type: 'string',\n          },\n          {\n            name: 'schema',\n            type: 'string',\n          },\n          {\n            name: 'modifiedAt',\n            type: 'string',\n          },\n          {\n            name: 'publishedAt',\n            type: 'string',\n          },\n        ],\n      },\n    };\n\n    fields.forEach((field) => {\n      const fieldRef = Fields.field(field.type);\n\n      if (/number|string|boolean/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value`,\n          type: fieldRef.dataType,\n        });\n      }\n\n      if (/array/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.[].slug`,\n          type: 'string',\n        });\n      }\n\n      if (/taxonomy/.test(field.type)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.terms.[].slug`,\n          type: 'string',\n        });\n      }\n    });\n\n    const result = await Db.connect(this.config).index(index);\n\n    return result;\n  }\n\n}\n\nmodule.exports = Schema;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst diff = require('deep-diff').diff;\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Schema = require('./schema');\n\nconst CHUNK_UPDATE_SIZE = 1000;\n\nclass Entity {\n  constructor (config) {\n    this.config = config;\n\n    // Expose helpers\n    this.flattenValues = Entity.flattenValues;\n  }\n\n  static flattenValues (docs) {\n    return docs.map((doc) => {\n      if (!doc.fields || !_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (/entity/.test(field.type) && _.isArray(field.value)) { // entity / entityTile / entityGrid\n          field.value = Entity.flattenValues(field.value);\n        }\n        return field.value;\n      });\n\n      return doc;\n    });\n  }\n\n  static filterEntityFields (docs, role = 'guest') {\n    const isArray = _.isArray(docs);\n\n    docs = (isArray ? docs : [docs]).map((doc) => {\n      if (_.size(doc.fields)) {\n        doc.fields = _.mapValues(doc.fields, (field) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter((obj) => {\n              if (!obj) {\n                return false;\n              }\n              if (obj.type && obj.type === 'entity' && role === 'guest') {\n                return obj.published !== undefined ? obj.published : true;\n              }\n              return true;\n            });\n          }\n          return field;\n        });\n      }\n      return doc;\n    });\n\n    return isArray ? docs : docs[0];\n  }\n\n  static _consolidateChildren (docs, childrenMap) {\n    return docs.map((doc) => {\n      if (!_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (_.isArray(field.value)) {\n          field.value = field.value.filter((obj) => {\n            if (!obj) {\n              return false;\n            }\n            if (obj.type === 'entity') {\n              return childrenMap[obj.id] !== undefined;\n            }\n            return true;\n          });\n\n          field.value = field.value.map((obj) => {\n            if (obj.type === 'entity') {\n              obj = _.merge(obj, childrenMap[obj.id]);\n            }\n            obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n            return obj;\n          });\n        }\n\n        if (_.isObject(field.value)) {\n          if (field.value.type === 'file' && childrenMap[field.value.id]) {\n            field.value = _.merge(field.value, childrenMap[field.value.id]);\n            field.value = _.omitBy(field.value, (value, key) => key.startsWith('_'));\n          }\n        }\n\n        return field;\n      });\n\n      return doc;\n    });\n  }\n\n  static consolidateResult (result, children = null, parents = null, role = 'guest') {\n    let docs = [];\n    let entityMap = {};\n    let childrenMap = {};\n\n    result.rows.forEach((row) => {\n      if (!row.doc) {\n        return;\n      }\n\n      if (children && row.value.type === 'field') {\n        childrenMap[row.doc._id] = Entity.filterEntityFields(row.doc, role);\n      }\n\n      if (parents && row.value.type === 'entity') {\n        row.doc.parents = [];\n        entityMap[row.key] = row.doc;\n      }\n\n      if (row.value.type === 'entity') {\n        docs.push(row.doc);\n      }\n    });\n\n    if (children) {\n      docs = Entity._consolidateChildren(docs, childrenMap);\n    }\n\n    if (parents) {\n      result.rows.forEach((row) => {\n        if (row.doc && row.value.type === 'parent') {\n          entityMap[row.key].parents.push(Entity.filterEntityFields(row.doc, role));\n        }\n      });\n\n      entityMap = _.mapValues(entityMap, (entity) => {\n        entity.parents = _.uniqBy(entity.parents, entity => entity._id);\n        return entity;\n      });\n    }\n\n    entityMap = null;\n    childrenMap = null;\n\n    return docs;\n  }\n\n  static _fileIds (entities) {\n    const fileIds = [];\n\n    entities.forEach((entity) => {\n      _.forEach(entity.fields, (field) => {\n        if (field.value) {\n          if (field.value.type === 'file') {\n            fileIds.push(field.value.id);\n          }\n        }\n      });\n    });\n\n    return _.uniq(fileIds);\n  }\n\n  async fieldValues (fieldSlug, searchTerm) {\n    const result = await Db.connect(this.config).viewWithList('entity', 'byField', 'search', {\n      startkey: [fieldSlug],\n      endkey: [fieldSlug, {}],\n      group: true,\n      searchTerm,\n    });\n    return result;\n  }\n\n  entitiesById (ids, children = null, parents = null, role = 'guest') {\n    return new Promise((resolve, reject) => {\n      if (ids.length === 0) {\n        resolve([]);\n        return;\n      }\n      Db.connect(this.config).view('entity', parents ? 'byIdExtended' : 'byId', {\n        keys: ids,\n        include_docs: true,\n      })\n        .then((result) => {\n          const docs = Entity.consolidateResult(result, children, parents, role);\n          resolve(docs);\n        }, reject);\n    });\n  }\n\n  async _getDocMap (docs, children, parents, role, docMap = {}, childDepth = 0) {\n    if ((!parents && !children)) {\n      return docMap;\n    }\n\n    const ids = [];\n\n    docs.forEach((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      const doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (children && _.size(doc.fields)) {\n        _.forEach(doc.fields, (field) => {\n          if (_.isArray(field.value)) {\n            field.value.forEach((obj) => {\n              if (obj.id && !docMap[obj.id]) {\n                // if (/^(entity|file)$/.test(obj.type)) {\n                //   ids.push(obj.id);\n                // }\n                ids.push(obj.id);\n              }\n            });\n          }\n        });\n\n      } else {\n        ids.push(doc.id || doc._id);\n      }\n    });\n\n    let _docs = await this.entitiesById(ids, children, parents, role);\n\n    _docs.forEach((doc) => {\n      docMap[doc._id] = doc;\n    });\n\n    childDepth += 1;\n\n    if (!children || (children && childDepth >= children)) {\n      return docMap;\n    }\n\n    docMap = await this._getDocMap(_docs, children, parents, role, docMap, childDepth);\n\n    _docs = null;\n\n    return docMap;\n  }\n\n  static _mergeDocs(docs, docMap, children, childDepth = 0) {\n    childDepth += 1;\n\n    if (children && childDepth >= children) {\n      return docs;\n    }\n\n    docs = docs.map((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      const doc = docMap[rowOrDoc.id || rowOrDoc._id] || (isRow ? rowOrDoc.doc : rowOrDoc);\n\n      if (children && doc.fields) {\n        doc.fields = _.mapValues(doc.fields, (field) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.map((obj) => {\n              if (obj.id && docMap[obj.id]) {\n                obj = _.merge(obj, docMap[obj.id] || {});\n                obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n              }\n              return obj;\n            });\n            field.value = Entity._mergeDocs(field.value, docMap, children, childDepth);\n          }\n\n          return field;\n        });\n      }\n\n      if (isRow) {\n        rowOrDoc.doc = doc;\n      } else {\n        rowOrDoc = doc;\n      }\n\n      return rowOrDoc;\n    });\n\n    return docs;\n  }\n\n  async _extendDocs (docs, children, parents, role) {\n    let docMap = await this._getDocMap(docs, children, parents, role);\n\n    docs = Entity._mergeDocs(docs, docMap, children);\n\n    docMap = null;\n\n    return docs;\n  }\n\n  _detachFiles (entities) {\n    return new Promise((resolve, reject) => {\n      const fileIds = Entity._fileIds(entities);\n\n      if (fileIds.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      Db.connect(this.config).fetch({\n        keys: fileIds,\n        include_docs: true,\n      })\n        .then((response) => {\n          let files = response.rows.filter(row => !row.value || !row.value.deleted);\n\n          if (files.length === 0) {\n            resolve([]);\n            return;\n          }\n\n          files = files.map((row) => {\n            delete row.doc.entity;\n            return row.doc;\n          });\n\n          Helpers.chunkUpdate(this.config, files, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  _removeChildren (entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      entities = entities.map(entity => entity._id);\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const updatedEntities = _.uniqBy(response.rows, row => row.doc._id).map((row) => {\n            row.doc.fields = _.mapValues(row.doc.fields, (field) => {\n              if (_.isArray(field.value)) {\n                field.value = _.remove(field.value, obj => obj.type === 'entity' && entities.indexOf(obj.id) !== -1);\n              }\n              return field;\n            });\n\n            return row.doc;\n          });\n\n          if (updatedEntities.length === 0) {\n            resolve([]);\n            return;\n          }\n\n          Helpers.chunkUpdate(this.config, updatedEntities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  _updateChildren (entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      const entityMap = {};\n\n      entities = entities.map((entity) => {\n        entityMap[entity._id] = entity;\n\n        return entity._id;\n      });\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const entities = response.rows.map((row) => {\n            const entity = row.doc;\n\n            _.forEach(entity.fields, (field, fieldSlug) => {\n              if (_.isArray(field.value)) {\n                entity.fields[fieldSlug].value = field.value.map((obj) => {\n                  if (obj.type === 'entity' && entityMap[obj.id]) {\n                    obj.slug = entityMap[obj.id].slug;\n                    obj.title = entityMap[obj.id].title;\n                    obj.schema = entityMap[obj.id].schema;\n                    obj.published = entityMap[obj.id].published;\n\n                    if (entityMap[obj.id].thumbnail) {\n                      obj.thumbnail = entityMap[obj.id].thumbnail;\n                    } else {\n                      obj.thumbnail = null;\n                    }\n                  }\n\n                  return obj;\n                });\n              }\n            });\n\n            return entity;\n          });\n\n          Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  _updateFiles (files) {\n    return new Promise((resolve, reject) => {\n      if (files.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      let fileIds = [];\n      const fileMap = {};\n\n      files.forEach((file) => {\n        if (file.oldId) {\n          fileMap[file.oldId] = null;\n          fileIds.push(file.oldId);\n        }\n\n        if (file.newId) {\n          fileMap[file.newId] = file.entity;\n          fileIds.push(file.newId);\n        }\n      });\n\n      fileIds = fileIds.filter(id => _.isString(id));\n\n      Db.connect(this.config).fetch({\n        keys: fileIds,\n        include_docs: true,\n      })\n        .then((response) => {\n          let files = response.rows.filter(row => !row.value || !row.value.deleted);\n\n          if (files.length === 0) {\n            resolve([]);\n            return;\n          }\n\n          files = files.map((row) => {\n            if (fileMap[row.doc._id]) {\n              row.doc.entity = {\n                id: fileMap[row.doc._id],\n              };\n            } else {\n              delete row.doc.entity;\n            }\n\n            return row.doc;\n          });\n\n          Helpers.chunkUpdate(this.config, files, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  entityList (query, children = null, parents = null, role = 'guest') {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('entity', 'byId', query)\n        .then((result) => {\n          result.rows = Entity.consolidateResult(result, children, parents, role);\n\n          if ((!children && !parents) || result.total_rows === 0) {\n            resolve(result.rows);\n            return;\n          }\n\n          this._extendDocs(result.rows, children, parents, role)\n            .then((docs) => {\n              result.rows = docs;\n\n              resolve(result.rows);\n            }, reject);\n\n        }, reject);\n    });\n  }\n\n  _entitySearch (query, children = null, parents = null, role = 'guest') {\n    return new Promise((resolve, reject) => {\n      query.limit = Math.min(query.limit ? parseInt(query.limit, 10) : 200, 200);\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      if (children) {\n        query.include_docs = true;\n      }\n\n      Db.connect(this.config).search('entity', query.index || 'all', query)\n        .then((result) => {\n\n          if (result.groups) {\n            const promises = [];\n\n            result.groups = result.groups.map((group) => {\n              promises.push(new Promise((resolve, reject) => {\n                if ((!children && !parents) || group.total_rows === 0) {\n                  resolve();\n                  return;\n                }\n\n                this._extendDocs(group.hits, children, parents, role)\n                  .then((docs) => {\n                    group.hits = docs;\n\n                    resolve();\n                  }, reject);\n              }));\n              return group;\n            });\n\n            Promise.all(promises)\n              .then(() => {\n                resolve(result);\n              }, reject);\n\n            return;\n          }\n\n          if ((!children && !parents) || result.total_rows === 0) {\n            resolve(result);\n            return;\n          }\n\n          this._extendDocs(result.rows, children, parents, role)\n            .then((docs) => {\n              result.rows = docs;\n\n              resolve(result);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entitySearch (query, children = null, parents = null, role = 'guest') {\n    return new Promise((resolve, reject) => {\n      const limit = query.limit ? parseInt(query.limit, 10) : 25;\n\n      if (limit <= 200) {\n        this._entitySearch(query, children, parents, role)\n          .then(resolve, reject);\n        return;\n      }\n\n      let rows = [];\n      let groups = [];\n\n      function __entitySearch (bookmark) {\n        const _query = _.clone(query);\n\n        if (bookmark) {\n          _query.bookmark = bookmark;\n        }\n\n        this._entitySearch(_query, children, parents, role)\n          .then((result) => {\n            if (result.rows) {\n              rows = rows.concat(result.rows);\n            }\n            if (result.groups) {\n              groups = groups.concat(result.groups);\n            }\n\n            if (rows.length < result.total_rows && rows.length < limit) {\n              __entitySearch.call(this, result.bookmark);\n              return;\n            }\n\n            result.rows = rows;\n            result.groups = groups;\n\n            resolve(result);\n          }, reject);\n      }\n\n      __entitySearch.call(this);\n    });\n  }\n\n  async entityFind (query, children = null, parents = null, role = 'guest') {\n    let result;\n\n    try {\n      result = await Db.connect(this.config).find(query);\n    } catch (error) {\n      if (error.error === 'no_usable_index') {\n        const cc = new ClientConfig(this.config);\n        const clientConfig = await cc.get();\n\n        const schema = new Schema(this.config);\n        await schema.updateEntityIndex(clientConfig.schemas);\n\n        result = await Db.connect(this.config).find(query);\n      }\n    }\n\n    if (children === false) {\n      return result;\n    }\n\n    if (query.fields && query.fields.indexOf('_id') === -1) {\n      throw new Error('_id field required for `children`');\n    }\n\n    result.docs = await this._extendDocs(result.docs, children, parents, role);\n\n    return result;\n  }\n\n  entityRevisions (entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId, {\n        revs_info: true,\n      })\n        .then((response) => {\n          const revisionIds = [];\n\n          response._revs_info.forEach((revision) => {\n            if (revision.status === 'available') {\n              revisionIds.push(revision.rev);\n            }\n          });\n\n          Db.connect(this.config).get(entityId, {\n            open_revs: JSON.stringify(revisionIds),\n          })\n            .then((response) => {\n              const revisions = [];\n              const childrenIds = [];\n\n              response.forEach((revision) => {\n                if (revision.ok) {\n                  revisions.push(revision.ok);\n\n                  _.forEach(revision.ok.fields, (field) => {\n                    if (/entity/.test(field.type)) {\n                      _.forEach(field.value, (obj) => {\n                        if (obj.id) {\n                          childrenIds.push(obj.id);\n                        }\n                      });\n                    }\n\n                    if (/image/.test(field.type) && field.value.id) {\n                      childrenIds.push(field.value.id);\n                    }\n                  });\n                }\n              });\n\n              Db.connect(this.config).fetch({\n                keys: _.uniq(childrenIds),\n                include_docs: true,\n              })\n                .then((result) => {\n                  const childrenMap = {};\n\n                  result.rows.forEach((row) => {\n                    try {\n                      childrenMap[row.doc._id] = row.doc;\n                    } catch (error) {\n                      console.error('Error: child no longer exists');\n                    }\n                  });\n\n                  resolve(Entity._consolidateChildren(revisions, childrenMap));\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entityCreate (entity) {\n    return new Promise((resolve, reject) => {\n      entity.type = 'entity';\n\n      Db.connect(this.config).insert(entity)\n        .then((response) => {\n          entity._id = response.id;\n          entity._rev = response.rev;\n\n          const fileIds = Entity._fileIds([entity]);\n\n          if (fileIds.length === 0) {\n            resolve(entity);\n            return;\n          }\n\n          const files = [];\n\n          fileIds.forEach((fileId) => {\n            files.push({\n              oldId: null,\n              newId: fileId,\n              entity: entity._id,\n            });\n          });\n\n          this._updateFiles(files)\n            .then(() => {\n              resolve(entity);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entityRead (entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId)\n        .then(resolve, reject);\n    });\n  }\n\n  entityUpdate (entities, restore) {\n    return new Promise((resolve, reject) => {\n      entities = _.isArray(entities) ? entities : [entities];\n\n      const entityMap = {};\n\n      const entityIds = entities.map((entityOrEntityId) => {\n        let entityId;\n\n        if (_.isObject(entityOrEntityId)) {\n          entityId = entityOrEntityId._id;\n          entityMap[entityId] = entityOrEntityId;\n        }\n        if (_.isString(entityOrEntityId)) {\n          entityId = entityOrEntityId;\n        }\n\n        return entityId;\n      });\n\n      Db.connect(this.config).fetch({\n        keys: entityIds,\n        include_docs: true,\n      })\n        .then((response) => {\n          const children = [];\n          const files = [];\n\n          const entities = response.rows.map((row) => {\n            const oldEntity = row.doc;\n            const newEntity = entityMap[oldEntity._id];\n\n            let entity = oldEntity;\n\n            if (newEntity) {\n              delete newEntity._rev;\n\n              const diffs = diff(oldEntity, newEntity);\n\n              diffs.forEach((diff) => {\n                if (diff.path[0] === 'fields') {\n                  const oldField = oldEntity.fields[diff.path[1]];\n                  const newField = newEntity.fields[diff.path[1]];\n\n                  if (newField && newField.value) {\n                    if (newField.value.type === 'file' && (diff.path[3] === 'id' || (diff.rhs && diff.rhs.value))) {\n                      files.push({\n                        oldId: oldField ? oldField.value.id : null,\n                        newId: newField.value.id,\n                        entity: newEntity._id,\n                      });\n                    }\n                  }\n                }\n\n                if (/slug|title|thumbnail/.test(diff.path[0])) {\n                  if (children.indexOf(newEntity) === -1 && entityIds.indexOf(newEntity._id) !== -1) {\n                    children.push(newEntity);\n                  }\n                }\n              });\n\n              entity = _.mergeWith({}, oldEntity, newEntity, (a, b) => {\n                if (_.isArray(a) && _.isArray(b)) {\n                  return b;\n                }\n                return undefined;\n              });\n            }\n\n            if (restore) {\n              entity.trashed = false;\n            }\n\n            return entity;\n          });\n\n          this._updateChildren(children)\n            .then(() => {\n              this._updateFiles(files)\n                .then(() => {\n                  Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n                    .then(resolve, reject);\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entityDelete (entityIds, forever = false) {\n    return new Promise((resolve, reject) => {\n      let getEntities;\n\n      if (entityIds === 'trashed') {\n        forever = true;\n\n        getEntities = Db.connect(this.config).view('entity', 'trashed', {\n          include_docs: true,\n        });\n\n      } else {\n        getEntities = Db.connect(this.config).fetch({\n          keys: _.isArray(entityIds) ? entityIds : [entityIds],\n          include_docs: true,\n        });\n      }\n\n      getEntities.then((response) => {\n        let entities = response.rows.filter(entity => !entity.value || !entity.value.deleted);\n\n        entities = entities.map(entity => entity.doc);\n\n        if (forever) {\n          this._removeChildren(entities)\n            .then(() => {\n              this._detachFiles(entities)\n                .then(() => {\n                  entities = entities.map(entity => ({\n                    _id: entity._id,\n                    _rev: entity._rev,\n                    _deleted: true,\n                  }));\n\n                  Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n                    .then(resolve, reject);\n                }, reject);\n            }, reject);\n        } else {\n          entities = entities.map((entity) => {\n            entity.trashed = true;\n            return entity;\n          });\n\n          Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }\n      }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Entity;\n","module.exports = require(\"react\");","module.exports = require(\"lodash/merge\");","module.exports = require(\"mjml-core\");","module.exports = require(\"babel-runtime/core-js/object/define-property\");","module.exports = require(\"babel-runtime/core-js/object/create\");","module.exports = require(\"babel-runtime/core-js/object/set-prototype-of\");","module.exports = require(\"mjml\");","const path = require('path');\nconst fs = require('fs');\nconst _ = require('lodash');\nconst Promise = require('bluebird');\nconst nodemailer = require('nodemailer');\nconst Createsend = Promise.promisifyAll(require('createsend-node'));\nconst nodemailerMailgunTransport = require('nodemailer-mailgun-transport');\nconst EmailTemplate = require('email-templates');\nconst Inky = require('inky').Inky;\nconst mjml2html = require('mjml').mjml2html;\nconst registerMJElement = require('mjml').registerMJElement;\nconst htmlToText = require('html-to-text');\nconst moment = require('moment');\nconst countries = require('i18n-iso-countries');\nconst sass = require('node-sass');\n\nconst ClientConfig = require('./client-config');\nconst Helpers = require('./helpers');\n\nconst mcSection = require('../mjml/components/mc-section/lib').default;\nconst mcImage = require('../mjml/components/mc-image/lib').default;\n\nclass Email {\n  constructor(config) {\n    this.config = config;\n\n    this.inky = new Inky();\n\n    registerMJElement(mcSection);\n    registerMJElement(mcImage);\n  }\n\n  getTemplate(templateSlug, templateData, options = {}) {\n    return new Promise((resolve, reject) => {\n      options = _.merge({}, {\n        preview: false,\n        inky: false,\n        mjml: false,\n        skipValidation: false,\n      }, options);\n\n      const templatePath = path.resolve(this.config.email.templatesPath, templateSlug);\n\n      // Support ejs for backwards compatibility\n      // TODO: convert ejs templates to pug and remove\n      let extension = 'pug';\n      if (fs.existsSync(`${templatePath}/html.ejs`)) {\n        extension = 'ejs';\n      }\n\n      const style = sass.renderSync({\n        file: path.resolve(templatePath, 'style.scss'),\n        sourceMapContents: options.preview,\n        sourceMapEmbed: options.preview,\n      }).css.toString().replace(/\"/g, '\\'');\n\n      const emailTemplate = new EmailTemplate({\n        views: {\n          root: this.config.email.templatesPath,\n          options: {\n            extension,\n          },\n        },\n        juice: !options.preview,\n        juiceResources: {\n          preserveMediaQueries: true,\n          preserveFontFaces: true,\n          removeStyleTags: false,\n          removeLinkTags: false,\n          preserveImportant: true,\n          webResources: {\n            links: false,\n            scripts: false,\n            // relativeTo: '',\n          },\n        },\n        transport: {\n          jsonTransport: true,\n        },\n      });\n\n      const cc = new ClientConfig(this.config);\n      const helpers = new Helpers(this.config);\n\n      cc.get()\n        .then((clientConfig) => {\n          templateData = _.merge({}, templateData, {\n            config: _.pick(clientConfig, ['client', 'assets']),\n            helpers,\n            style,\n            moment,\n            countries,\n            template: templateSlug,\n            preview: options.preview,\n          });\n\n          emailTemplate.render(`${templateSlug}/html`, templateData)\n            .then((html) => {\n\n              if (options.mjml) {\n                const convertMjmlResult = mjml2html(html, {\n                  level: options.skipValidation ? 'skip' : 'soft',\n                });\n\n                if (convertMjmlResult.errors && convertMjmlResult.errors.length) {\n                  reject(convertMjmlResult.errors);\n                  return;\n                }\n\n                html = convertMjmlResult.html;\n              }\n\n              if (options.inky) {\n                html = this.inky.releaseTheKraken(html);\n              }\n\n              resolve({\n                html,\n                text: htmlToText.fromString(html),\n              });\n            }, reject);\n        }, reject);\n    });\n  }\n\n  sendEmail(email, template, templateData, options) {\n    return new Promise((resolve, reject) => {\n      const nodemailerMailgun = nodemailer.createTransport(nodemailerMailgunTransport({\n        auth: {\n          api_key: this.config.mailgun.apiKey,\n          domain: this.config.mailgun.domain,\n        },\n      }));\n\n      this.getTemplate(template, templateData, options)\n        .then((emailTemplate) => {\n          email.html = emailTemplate.html;\n          email.text = emailTemplate.text;\n\n          nodemailerMailgun.sendMail(email, (error, metadata) => {\n            if (error) {\n              reject(error);\n              return;\n            }\n\n            resolve({\n              metadata,\n              email,\n            });\n          });\n        }, reject);\n    });\n  }\n\n  subscribe(details, provider, listId) {\n    return new Promise((resolve, reject) => {\n      const cc = new ClientConfig(this.config);\n\n      cc.get()\n        .then((clientConfig) => {\n          if (provider === 'createsend') {\n            if (clientConfig.provider.createsend) {\n              const cs = new Createsend({\n                apiKey: clientConfig.provider.createsend.clientApiKey,\n              });\n\n              const subscribers = Promise.promisifyAll(cs.subscribers);\n\n              subscribers.addSubscriberAsync(listId, {\n                EmailAddress: details.email,\n                Name: details.name,\n                Resubscribe: true,\n                RestartSubscriptionBasedAutoresponders: true,\n              })\n                .then((result) => {\n                  resolve(`Email.subscribe(): ${result.emailAddress}`);\n                })\n                .catch((error) => {\n                  reject(error.Message);\n                });\n\n              return;\n            }\n            reject(new Error('Subscriber list not configured'));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Email;\n","module.exports = require(\"babel-runtime/core-js/object/freeze\");","const _ = require('lodash');\n\nconst roles = [\n  {\n    name: 'Admin',\n    slug: 'admin',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: true,\n      settings: true,\n      tools: true,\n      ecommerce: true,\n    },\n  },\n  {\n    name: 'Editor',\n    slug: 'editor',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n  {\n    name: 'Guest',\n    slug: 'guest',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: false,\n      entityRead: true,\n      entityUpdate: false,\n      entityDelete: false,\n\n      taxonomyCreate: false,\n      taxonomyRead: true,\n      taxonomyUpdate: false,\n      taxonomyDelete: false,\n\n      fileCreate: false,\n      fileRead: true,\n      fileUpdate: false,\n      fileDelete: false,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n];\n\nclass Roles {\n  roles() {\n    return roles.map(role => Object.freeze(role));\n  }\n  role(slug) {\n    return _.find(Roles.roles(), { slug });\n  }\n}\n\nmodule.exports = Roles;\n","const Promise = require('bluebird');\nconst request = require('request-promise');\nconst passwordHash = require('password-hash');\n\nclass Assist {\n  constructor(config) {\n    this.config = config;\n  }\n\n  deleteFiles(slug, fileNames) {\n    return new Promise((resolve, reject) => {\n\n      if (fileNames.length === 0) {\n        resolve();\n        return;\n      }\n\n      request({\n        method: 'DELETE',\n        url: `${this.config.assist.url}/${slug}/file/delete`,\n        json: {\n          files: fileNames,\n        },\n        auth: {\n          user: this.config.assist.username,\n          pass: passwordHash.generate(this.config.assist.password),\n          sendImmediately: false,\n        },\n      })\n        .then((response) => {\n          if (response.statusCode === 200) {\n            resolve(response);\n            return;\n          }\n\n          reject(response);\n        }, reject);\n\n    });\n  }\n\n}\n\nmodule.exports = Assist;\n","module.exports = require(\"zencoder\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst mime = require('mime');\nconst zencoder = require('zencoder');\n\nconst S3 = require('./s3');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass Zencode {\n  constructor(config) {\n    this.config = config;\n\n    this.zencoder = zencoder(config.zencoder.apiKey);\n\n    this.s3 = new S3(config);\n\n    this.s3Credentials = config.zencoder.s3.credentials || 's3';\n  }\n\n  checkJob(jobId, fileId) {\n    this.getJob(jobId)\n      .then((job) => {\n        console.log('Zencode.checkJob:', job.jobState, jobId, fileId);\n\n        if (/pending|waiting|processing/.test(job.jobState)) {\n          setTimeout(() => {\n            this.checkJob(job.jobId, fileId);\n          }, 10000);\n          return;\n        }\n\n        this._updateFile(fileId, job);\n      });\n  }\n\n  _updateFile(fileId, zencoderJob) {\n    Db.connect(this.config).view('entity', 'byFile', {\n      keys: [fileId],\n      include_docs: true,\n    })\n      .then((body) => {\n        if (body.rows.length === 0) {\n          return;\n        }\n\n        const entity = body.rows[0].doc;\n\n        entity.fields = _.mapValues(entity.fields, (field) => {\n          if (field.value && field.value.id === fileId) {\n            field.value.metadata.zencoder = zencoderJob;\n          }\n          return field;\n        });\n\n        Helpers.createOrUpdate(this.config, entity);\n      });\n\n    Db.connect(this.config).get(fileId)\n      .then((file) => {\n        file.metadata.zencoder = zencoderJob;\n\n        Helpers.createOrUpdate(this.config, file);\n      });\n  }\n\n  getJob(jobId) {\n    return new Promise((resolve, reject) => {\n      this.zencoder.Job.details(jobId, (error, result) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        const job = {\n          jobId: result.job.id,\n          jobState: result.job.state,\n          fileSize: 0,\n          outputs: {},\n        };\n\n        if (result.job.thumbnails && result.job.thumbnails.length) {\n          const defaultThumbnail = result.job.thumbnails.filter((thumbnail) => {\n            return thumbnail.group_label === '_thumb';\n          })[0];\n\n          if (defaultThumbnail) {\n            job.thumbnail = {\n              url: defaultThumbnail.url.replace('http://', 'https://'),\n              width: defaultThumbnail.width,\n              height: defaultThumbnail.height,\n              ratio: parseInt(defaultThumbnail.width, 10) / parseInt(defaultThumbnail.height, 10),\n            };\n          }\n        }\n\n        result.job.output_media_files.forEach((output) => {\n          job.fileSize += output.file_size_bytes;\n\n          job.outputs[output.label] = {\n            url: output.url.replace('http://', 'https://'),\n            width: output.width || null,\n            height: output.height || null,\n            duration: output.duration_in_ms,\n            fileSize: output.file_size_bytes,\n            mimeType: mime.getType(output.url),\n          };\n        });\n\n        result.job.thumbnails.forEach((thumbnail) => {\n          job.fileSize += thumbnail.file_size_bytes;\n        });\n\n        resolve(job);\n      });\n    });\n  }\n\n  createJob(fileName, options, slug) {\n    return new Promise((resolve, reject) => {\n      this.s3.upload(fileName, options.uploadOptions)\n        .then((s3Upload) => {\n\n          if (options.mediaType === 'video') {\n            // Sort outputs by size to create largest default thumbnail\n            options.outputs = options.outputs.sort((a, b) => {\n              if (a.maxWidth > b.maxWidth) {\n                return -1;\n              }\n              if (a.maxWidth < b.maxWidth) {\n                return 1;\n              }\n              return 0;\n            });\n\n            options.outputs = options.outputs.sort((a, b) => {\n              if (a.maxHeight > b.maxHeight) {\n                return -1;\n              }\n              if (a.maxHeight < b.maxHeight) {\n                return 1;\n              }\n              return 0;\n            });\n          }\n\n          const _outputs = options.outputs.map((output, index) => {\n            const baseUrl = `${options.metadata.bucket}/${slug}/${options.metadata.base}`;\n            const defaultFormats = {\n              video: 'mp4',\n              audio: 'mp3',\n            };\n            const format = output.format || defaultFormats[options.mediaType];\n\n            const _output = {\n              credentials: this.s3Credentials,\n              rrs: true,\n              public: true,\n              url: `s3://${baseUrl}/${output.slug}.${format}`,\n              label: output.slug,\n              quality: output.quality || 3,\n              audio_quality: output.audioQuality || 3,\n            };\n\n            if (output.audioPreNormalize) {\n              _output.audio_pre_normalize = true;\n            }\n\n            if (output.audioCompressionRatio) {\n              _output.audio_compression_ratio = output.audioCompressionRatio;\n            }\n\n            if (options.mediaType === 'video') {\n              if (output.maxWidth) {\n                _output.width = output.maxWidth;\n              }\n\n              if (output.maxHeight) {\n                _output.height = output.maxHeight;\n              }\n\n              if (!output.thumbnails) {\n                output.thumbnails = [];\n              }\n\n              if (index === 0) {\n                // Default thumbnail\n                output.thumbnails.unshift({\n                  name: '_thumb',\n                  slug: '_thumb',\n                  format: 'jpg',\n                  times: [0],\n                });\n              }\n\n              _output.thumbnails = output.thumbnails.map((thumbnail) => {\n                const _thumbnail = {\n                  credentials: this.zencoderS3Credentials,\n                  rrs: true,\n                  public: true,\n                  base_url: `s3://${baseUrl}`,\n                  label: thumbnail.slug,\n                  prefix: thumbnail.slug,\n                  format: thumbnail.format,\n                  start_at_first_frame: true,\n                };\n\n                if (thumbnail.number) {\n                  _thumbnail.number = thumbnail.number;\n                }\n\n                if (thumbnail.times) {\n                  _thumbnail.times = thumbnail.times;\n                }\n\n                if (thumbnail.interval) {\n                  _thumbnail.interval = thumbnail.interval;\n                }\n\n                return _thumbnail;\n              });\n            }\n\n            return _output;\n          });\n\n          this.zencoder.Job.create({\n            input: `http://${options.metadata.bucket}.s3.amazonaws.com/${options.metadata.src}`,\n            outputs: _outputs,\n          }, (error, zencoderJob) => {\n            if (error) {\n              reject(error.errors.join(' '));\n              return;\n            }\n\n            resolve({\n              s3Upload,\n              zencoderJob,\n            });\n          });\n        });\n    });\n  }\n\n}\n\nmodule.exports = Zencode;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass User {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.users.push(user);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async update(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.users, { id: user.id });\n\n    if (index === -1) {\n      throw Error(`User not found: ${user.id}`);\n    }\n\n    clientConfig.users.splice(index, 1, user);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    userId = _.isArray(userId) ? userId : [userId];\n\n    clientConfig.users = clientConfig.users.filter(user => userId.indexOf(user.id) === -1);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = User;\n","module.exports = require(\"cloudant\");","const Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst Cloudant = require('cloudant');\nconst Db = require('./db');\n\nclass Tools {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getDb() {\n    const result = await Db.connect(this.config).fetch({\n      include_docs: true,\n    });\n\n    return result;\n  }\n\n  async getChanges() {\n    const result = await Db.connect(this.config).changes({\n      limit: 50,\n      include_docs: true,\n      filter: 'tools/changesEntity',\n    });\n\n    return result;\n  }\n\n  async importDb(dbBackupFile) {\n    const dbName = this.config.db.name;\n\n    const fileConents = await fs.readFileAsync(dbBackupFile.path);\n\n    const docs = JSON.parse(fileConents).rows.map((row) => {\n      const { doc } = row;\n      delete doc._rev;\n      return doc;\n    });\n\n    await fs.unlinkAsync(dbBackupFile.path);\n\n    const cloudant = new Cloudant({\n      url: this.config.db.url,\n      plugins: ['promises', 'retry429'],\n    }).db;\n\n    try {\n      await cloudant.destroy(dbName);\n    } catch (error) {\n      //\n    }\n\n    await cloudant.create(dbName);\n\n    const result = await Db.connect(this.config, dbName).bulk({ docs });\n\n    return result;\n  }\n\n}\n\nmodule.exports = Tools;\n","const _ = require('lodash');\nconst Db = require('./db');\nconst ClientConfig = require('./client-config');\n\nclass Taxonomy {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async create(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.taxonomies.push(taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const taxonomy = _.find(clientConfig.taxonomies, { slug: taxonomySlug });\n\n    if (!taxonomy) {\n      throw Error(`Taxonomy not found: ${taxonomySlug}`);\n    }\n\n    return taxonomy;\n  }\n\n  async update(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.taxonomies, { slug: taxonomy.slug });\n\n    if (index === -1) {\n      throw Error(`Taxonomy not found: ${taxonomy.slug}`);\n    }\n\n    clientConfig.taxonomies.splice(index, 1, taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    taxonomySlug = _.isArray(taxonomySlug) ? taxonomySlug : [taxonomySlug];\n\n    clientConfig.taxonomies = clientConfig.taxonomies.filter(taxonomy => taxonomySlug.indexOf(taxonomy.slug) === -1);\n\n    return cc.set(clientConfig);\n  }\n\n  async entitiesByTerm(term) {\n    const db = Db.connect(this.config);\n\n    const entityGroups = (await db.view('entity', 'byTaxonomyTerm', { keys: [term.id], group: true })).rows.map(row => row.value)[0];\n\n    if (!entityGroups) {\n      return [];\n    }\n\n    let entityIds = [];\n\n    _.forEach(entityGroups, (entities) => {\n      entityIds = entityIds.concat(entities);\n    });\n\n    entityIds = _.uniq(entityIds);\n\n    return (await db.fetch({ keys: entityIds, include_docs: true })).rows.map(row => row.doc);\n  }\n\n  async createTerm(taxonomySlug, term) {\n    const taxonomy = await this.read(taxonomySlug);\n\n    taxonomy.terms.push(term);\n\n    return this.update(taxonomy);\n  }\n\n  async updateTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.map((_term) => {\n            if (_term.id === term.id) {\n              _term.title = term.title;\n              _term.slug = term.slug;\n            }\n\n            if (!_term.parents) {\n              _term.parents = [];\n            }\n\n            _term.parents = _term.parents.map((parent) => {\n              if (parent.id === term.id) {\n                parent.title = term.title;\n                parent.slug = term.slug;\n              }\n              return parent;\n            });\n\n            return _term;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n\n  async deleteTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.filter((_term) => {\n            if (_term.id === term.id) {\n              return false;\n            }\n\n            if ((_term.parents || []).filter(parent => parent.id === term.id).length) {\n              return false;\n            }\n\n            return true;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n}\n\nmodule.exports = Taxonomy;\n","module.exports = require(\"hashids\");","module.exports = require(\"stripe\");","const _ = require('lodash');\nconst Stripe = require('stripe');\nconst Promise = require('bluebird');\nconst Hashids = require('hashids');\n\nconst ClientConfig = require('./client-config');\nconst Email = require('./email');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass StripeClass {\n  constructor(config) {\n    this.config = config;\n\n    this.stripe = Stripe(this.config.stripe.apiKey);\n    this.email = new Email(this.config);\n\n    this.hashids = new Hashids(this.config.slug, 6, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n  }\n\n  async getSettings() {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    let settings;\n\n    try {\n      settings = clientConfig.module.ecommerce;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    try {\n      settings.clientStripeAccountId = clientConfig.provider.stripe.stripe_user_id;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    settings.client = clientConfig.client;\n    settings.assets = clientConfig.assets;\n\n    return settings;\n  }\n\n  checkout(token, order) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n\n          const listId = _.get(settings, 'createsend.checkoutSubscriberListId');\n\n          if (order.subscribe && listId) {\n            this.email.subscribe(order.customerDetails, 'createsend', listId)\n              .then((result) => {\n                console.log(result);\n              }, (error) => {\n                console.error(error);\n              });\n          }\n\n          // lookup customer by email, create if not found\n          this.findOrCreateCustomer(order.customerDetails.email, order)\n            .then((customer) => {\n\n              // store order data (customer, items, address)\n              this.createOrder(order, customer)\n                .then((order) => {\n\n                  this.updateOrCreateStripeCustomer(settings.clientStripeAccountId, customer, token, order)\n                    .then((stripeCustomer) => {\n\n                      // update customer, append order to customer, update metadata\n                      this.updateCustomer(customer, stripeCustomer, order)\n                        .then((customer) => {\n\n                          // create charge, take fee\n                          this.createCharge(settings, stripeCustomer, customer, order)\n                            .then((updatedOrder) => {\n\n                              this.sendReceipt(settings, customer, order)\n                                .then((orderReceipt) => {\n\n                                  updatedOrder.messages.orderReceipt = orderReceipt;\n\n                                  this.sendNotification(settings, customer, order)\n                                    .then((orderNotification) => {\n\n                                      updatedOrder.messages.orderNotification = orderNotification;\n\n                                      // update order charge status, charge id\n                                      this.updateOrder(updatedOrder)\n                                        .then((finalOrder) => {\n\n                                          resolve(finalOrder);\n\n                                        }, reject);\n                                    }, reject);\n                                }, reject);\n                            }, reject);\n                        }, reject);\n                    }, reject);\n                }, reject);\n            }, reject);\n        }, reject)\n        .catch(reject);\n    });\n  }\n\n  retrieveAccount() {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.accounts.retrieve(settings.clientStripeAccountId)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  refund(order, amount) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.refunds.create({\n            refund_application_fee: true,\n            charge: order.charge.id,\n            amount,\n          }, {\n            stripe_account: settings.clientStripeAccountId,\n          })\n            .then((refund) => {\n              this.stripe.charges.retrieve(order.charge.id, {\n                stripe_account: settings.clientStripeAccountId,\n              })\n                .then((charge) => {\n                  order.charge.status = charge.status;\n                  order.charge.amount = charge.amount;\n                  order.charge.amountRefunded = charge.amount_refunded;\n\n                  Helpers.createOrUpdate(this.config, order)\n                    .then(resolve, reject);\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  findOrCreateCustomer(email, order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'customerByEmail', {\n        keys: [email],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            resolve(body.rows[0].doc);\n\n          } else {\n            const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n            const newCustomer = {\n              type: 'customer',\n              createdAt: now,\n              modifiedAt: now,\n              email: order.customerDetails.email,\n              name: order.customerDetails.name,\n              phone: order.customerDetails.phone,\n              billingAddress: order.billingAddress,\n              shippingAddress: order.shippingAddress,\n              orders: [],\n            };\n\n            Db.connect(this.config).insert(newCustomer)\n              .then((body) => {\n                newCustomer._id = body.id;\n                newCustomer._rev = body.rev;\n\n                resolve(newCustomer);\n              }, reject);\n          }\n        }, reject);\n    });\n  }\n\n  updateOrCreateStripeCustomer(clientStripeAccountId, customer, token, order) {\n    return new Promise((resolve, reject) => {\n      const stripeCustomer = {\n        source: token,\n        email: order.customer.email,\n        description: order.customer.name,\n        metadata: {\n          customer_id: customer._id,\n        // billingAddress: JSON.stringify(order.billingAddress),\n        // shippingAddress: JSON.stringify(order.shippingAddress)\n        },\n      };\n\n      if (customer.stripe && customer.stripe.customer.id) {\n        this.stripe.customers.update(customer.stripe.customer.id, stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        })\n          .then(resolve, (error) => {\n            if (error.type === 'StripeInvalidRequestError' && error.param === 'id') {\n              this.stripe.customers.create(stripeCustomer, {\n                stripe_account: clientStripeAccountId,\n              }).then(resolve, reject);\n\n            } else {\n              reject(error);\n            }\n          });\n\n      } else {\n        this.stripe.customers.create(stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        }).then(resolve, reject);\n      }\n    });\n  }\n\n  createOrder(order, customer) {\n    return new Promise((resolve, reject) => {\n      const items = order.items.map(item => ({\n        id: item.id,\n        title: item.title.replace(/<br\\s?>/ig, ' ').replace(/<\\/?p>|<\\/?span>/ig, ''),\n        price: item.price,\n        quantity: item.quantity,\n        metadata: item.metadata || {},\n      }));\n\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      const newOrder = {\n        type: 'order',\n        orderId: this.hashids.encode(new Date().getTime()),\n        createdAt: now,\n        modifiedAt: now,\n        customer: {\n          id: customer._id,\n          email: customer.email,\n          name: customer.name,\n        },\n        items,\n        shippingMethod: {\n          name: order.shippingMethod.name,\n          amount: Number(order.shippingMethod.amount),\n        },\n        subtotal: Number(order.subtotal),\n        tax: {\n          rate: order.tax.rate || 0,\n          includedInPrice: order.tax.includedInPrice || false,\n          total: order.tax.total || 0,\n          show: order.tax.show || false,\n        },\n        discount: {\n          code: order.discount.code || '',\n          name: order.discount.name || '',\n          total: order.discount.total || 0,\n        },\n        total: Number(order.total),\n        billingAddress: order.billingAddress,\n        shippingAddress: order.shippingAddress,\n        messages: {},\n        status: 'pending',\n        test: true,\n      };\n\n      Db.connect(this.config).insert(newOrder)\n        .then((body) => {\n          newOrder._id = body.id;\n          newOrder._rev = body.rev;\n\n          resolve(newOrder);\n        }, reject);\n    });\n  }\n\n  updateOrder(order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).insert(order)\n        .then((body) => {\n          order._rev = body.rev;\n\n          resolve(order);\n        }, reject);\n    });\n  }\n\n  updateCustomer(customer, stripeCustomer, order) {\n    return new Promise((resolve, reject) => {\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      customer.modifiedAt = now;\n\n      if (!customer.orders) {\n        customer.orders = [];\n      }\n\n      customer.orders.push(order._id);\n\n      if (!customer.stripe) {\n        customer.stripe = {\n          customer: {\n            id: null,\n          },\n        };\n      }\n\n      customer.stripe.customer.id = stripeCustomer.id;\n\n      Db.connect(this.config).insert(customer)\n        .then((body) => {\n          customer._rev = body.rev;\n\n          resolve(customer);\n        }, reject);\n    });\n  }\n\n  createCharge(settings, stripeCustomer, customer, order) {\n    return new Promise((resolve, reject) => {\n      const amount = Number(order.total) * 100;\n\n      const charge = {\n        amount,\n        currency: settings.currency.iso.toLowerCase(),\n        customer: stripeCustomer.id,\n        capture: true,\n        description: order.orderId,\n        // shipping: order.shippingAddress, // fraud prevention, must follow expected schema\n        metadata: {\n          customer_id: customer._id,\n          order_id: order._id,\n        },\n        statement_descriptor: _.kebabCase(settings.storeName).toUpperCase(),\n        application_fee: Math.ceil(amount * 0.02),\n      };\n\n      this.stripe.charges.create(charge, {\n        stripe_account: settings.clientStripeAccountId,\n      })\n        .then((charge) => {\n\n          order.charge = {\n            paymentGateway: 'stripe',\n            id: charge.id,\n            status: charge.status,\n            currency: charge.currency.toUpperCase(),\n            amount: charge.amount,\n            amountRefunded: charge.amount_refunded,\n          };\n\n          order.test = !charge.livemode;\n\n          resolve(order);\n\n        }, reject);\n    });\n  }\n\n  sendReceipt(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: customer.email,\n        subject: `Your order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-receipt`, templateData).then(resolve, reject);\n    });\n  }\n\n  sendNotification(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: settings.emailSenderAddress,\n        subject: `New order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-notification`, templateData).then(resolve, reject);\n    });\n  }\n\n}\n\nmodule.exports = StripeClass;\n","module.exports = require(\"shippo\");","const Promise = require('bluebird');\nconst shippo = require('shippo');\n\nclass Shippo {\n  constructor(config) {\n    this.config = config;\n\n    this.shippo = shippo(config.shippo.token);\n  }\n\n  getQuote(address, parcel) {\n    return new Promise((resolve, reject) => {\n\n      const addressFrom = {\n        object_purpose: 'QUOTE',\n        zip: this.config.shippo.fromZip,\n        country: this.config.shippo.fromCountry,\n      };\n\n      const addressTo = {\n        object_purpose: 'QUOTE',\n        // 'name': address.name,\n        // 'company': '',\n        // 'street1': address.street1,\n        // 'street2': address.street2,\n        // 'city': address.city,\n        // 'state': '',\n        zip: address.zip,\n        country: address.country,\n        // 'phone': address.phone,\n        // 'email': address.email,\n        metadata: '',\n      };\n\n      parcel.distance_unit = 'cm';\n      parcel.mass_unit = 'kg';\n\n      this.shippo.shipment.create({\n        object_purpose: 'QUOTE',\n        address_from: addressFrom,\n        address_to: addressTo,\n        parcel,\n      })\n        .then((shipment) => {\n          const ratesReady = (shipment, attempts) => {\n            if ((shipment.object_status === 'QUEUED' || shipment.object_status === 'WAITING') && attempts < 10) {\n              this.shippo.shipment.retrieve(shipment.object_id).then((val) => {\n                ratesReady(val, attempts + 1);\n              });\n\n            } else {\n              this.shippo.shipment.rates(shipment.object_id)\n                .then((rates) => {\n                  resolve(rates);\n\n                }, (error) => {\n                  console.error('There was an error retrieving rates : %s', error);\n                  reject(error);\n                });\n            }\n          };\n\n          ratesReady(shipment, 0);\n\n        }, (error) => {\n          console.error('There was an error creating shipment: %s', error);\n          reject(error);\n        });\n\n    });\n  }\n\n}\n\nmodule.exports = Shippo;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass Settings {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async update(settings) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.client = _.merge({}, clientConfig.client, settings);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = Settings;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst request = require('request-promise');\nconst Entity = require('./entity');\nconst ClientConfig = require('./client-config');\n\nclass Pdf {\n  constructor (config) {\n    this.config = config;\n    this.templates = this.config.pdf.templates;\n  }\n\n  getPayload (templateId, entityId, role) {\n    return new Promise((resolve, reject) => {\n      if (!this.templates[templateId]) {\n        reject(new Error('Template not found'));\n        return;\n      }\n\n      const entity = new Entity(this.config);\n\n      entity.entitiesById([entityId], true, false, role)\n        .then((entities) => {\n          if (entities.length === 0) {\n            reject(new Error('Entity not found'));\n            return;\n          }\n\n          entities = Entity.flattenValues(entities);\n\n          const payload = this.templates[templateId](entities[0]);\n\n          try {\n            resolve(payload);\n          } catch (error) {\n            reject(error);\n          }\n        });\n    });\n  }\n\n  async getPdf (payload) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n    const assistPdfUrl = `${this.config.assist.url}/${assetSlug}/pdf/download`;\n\n    payload = typeof payload === 'object' ? JSON.stringify(payload).replace(/'/gi, '’') : payload;\n\n    const response = await request({\n      method: 'POST',\n      uri: assistPdfUrl,\n      encoding: null,\n      form: {\n        payload,\n      },\n    });\n\n    return response;\n  }\n\n}\n\nmodule.exports = Pdf;\n","module.exports = require(\"jsonwebtoken\");","const jwt = require('jsonwebtoken');\n\nclass Jwt {\n  constructor(config) {\n    this.config = config;\n  }\n\n  signToken(payload, options = {}) {\n    return jwt.sign(payload, this.config.auth.tokenSecret, options);\n  }\n\n  verifyToken(token) {\n    return jwt.verify(token, this.config.auth.tokenSecret);\n  }\n}\n\nmodule.exports = Jwt;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst request = require('request-promise');\n\nmodule.exports = function (options) {\n  const defaultOptions = {\n    client_id: null,\n    access_token: null,\n    version: 'v1',\n    host: 'https://api.instagram.com',\n  };\n\n  options = _.merge({}, defaultOptions, options || {});\n\n  const _request = (method, endpoint, query) => new Promise((resolve, reject) => {\n    const requestOptions = {\n      method,\n      url: [options.host, options.version, endpoint].join('/'),\n      qs: {\n        access_token: query.access_token || options.access_token,\n        client_id: query.client_id || options.client_id,\n      },\n    };\n\n    requestOptions.qs = _.extend({}, requestOptions.qs, query);\n\n    request(requestOptions)\n      .then((response) => {\n        resolve(JSON.parse(response));\n      }, reject);\n  });\n\n  this.get = (endpoint, query) => _request('GET', endpoint, query);\n};\n","// process.env.TMPDIR = 'tmp'; // to avoid the EXDEV rename error, see http://stackoverflow.com/q/21071303/76173\n\nconst Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst path = require('path');\n\nclass Flow {\n  constructor(temporaryFolder = '/tmp', maxFileSize = 0) {\n    this.temporaryFolder = temporaryFolder;\n    this.maxFileSize = maxFileSize;\n    this.fileParameterName = 'file';\n\n    try {\n      fs.mkdirSync(this.temporaryFolder);\n    } catch (event) {\n      //\n    }\n  }\n\n  static cleanIdentifier(identifier) {\n    return identifier.replace(/[^0-9A-Za-z_-]/g, '');\n  }\n\n  getChunkFilename(chunkNumber, identifier) {\n    identifier = Flow.cleanIdentifier(identifier);\n\n    return path.resolve(this.temporaryFolder, `./flow-${identifier}.${chunkNumber}`);\n  }\n\n  validate(chunkNumber, chunkSize, totalSize, identifier, filename, fileSize) {\n    chunkNumber = typeof chunkNumber !== 'number' ? parseInt(chunkNumber, 10) : chunkNumber;\n    chunkSize = typeof chunkSize !== 'number' ? parseInt(chunkSize, 10) : chunkSize;\n    totalSize = typeof totalSize !== 'number' ? parseInt(totalSize, 10) : totalSize;\n\n    identifier = Flow.cleanIdentifier(identifier);\n\n    // Check if the request is sane\n    if (chunkNumber === 0 || chunkSize === 0 || totalSize === 0 || identifier.length === 0 || filename.length === 0) {\n      return 'non_flow_request';\n    }\n\n    const numberOfChunks = Math.max(Math.floor(totalSize / chunkSize), 1);\n\n    if (chunkNumber > numberOfChunks) {\n      return 'invalid_flow_request1';\n    }\n\n    // Is the file too big?\n    if (this.maxFileSize && totalSize > this.maxFileSize) {\n      return 'invalid_flow_request2';\n    }\n\n    if (typeof fileSize !== 'undefined') {\n      fileSize = typeof fileSize !== 'number' ? parseInt(fileSize, 10) : fileSize;\n\n      if (chunkNumber < numberOfChunks && fileSize !== chunkSize) {\n        // The chunk in the POST request isn't the correct size\n        return 'invalid_flow_request3';\n      }\n\n      if (numberOfChunks > 1 && chunkNumber === numberOfChunks && fileSize !== ((totalSize % chunkSize) + parseInt(chunkSize, 10))) {\n        // The chunks in the POST is the last one, and the file is not the correct size\n        return 'invalid_flow_request4';\n      }\n\n      if (numberOfChunks === 1 && fileSize !== totalSize) {\n        // The file is only a single chunk, and the data size does not fit\n        return 'invalid_flow_request5';\n      }\n    }\n\n    return 'valid';\n  }\n\n  checkChunk(chunkNumber = 0, chunkSize = 0, totalSize = 0, identifier = '', filename = '') {\n    chunkNumber = typeof chunkNumber !== 'number' ? parseInt(chunkNumber, 10) : chunkNumber;\n    chunkSize = typeof chunkSize !== 'number' ? parseInt(chunkSize, 10) : chunkSize;\n    totalSize = typeof totalSize !== 'number' ? parseInt(totalSize, 10) : totalSize;\n\n    return new Promise((resolve, reject) => {\n      const validation = this.validate(chunkNumber, chunkSize, totalSize, identifier, filename);\n\n      if (validation !== 'valid') {\n        reject(validation);\n        return;\n      }\n\n      const chunkFilename = this.getChunkFilename(chunkNumber, identifier);\n\n      fs.statAsync(chunkFilename)\n        .then(resolve, reject);\n    });\n  }\n\n  mergeChunks(numberOfChunks, identifier, filename) {\n    return new Promise((resolve, reject) => {\n      const chunks = [];\n\n      for (let i = 1; i <= numberOfChunks; i++) {\n        chunks.push(fs.readFileAsync(this.getChunkFilename(i, identifier)));\n      }\n\n      Promise.all(chunks)\n        .then((results) => {\n          fs.writeFileAsync(path.join(this.temporaryFolder, filename), Buffer.concat(results))\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  deleteFile(filename) {\n    return fs.unlinkAsync(path.join(this.temporaryFolder, filename));\n  }\n\n  removeChunks(identifier) {\n    return new Promise((resolve, reject) => {\n      const removeChunk = (num) => {\n        const chunkFilename = this.getChunkFilename(num, identifier);\n\n        fs.stat(chunkFilename, (error) => {\n          if (!error) {\n            fs.unlink(chunkFilename, (error) => {\n              if (error) {\n                reject(error);\n              }\n            });\n\n            removeChunk(num + 1);\n\n          } else {\n            resolve();\n          }\n        });\n      };\n\n      removeChunk(1);\n    });\n  }\n\n  saveChunk(files, chunkNumber, chunkSize, totalChunks, totalSize, identifier, filename) {\n    chunkNumber = typeof chunkNumber !== 'number' ? parseInt(chunkNumber, 10) : chunkNumber;\n    chunkSize = typeof chunkSize !== 'number' ? parseInt(chunkSize, 10) : chunkSize;\n    totalChunks = typeof totalChunks !== 'number' ? parseInt(totalChunks, 10) : totalChunks;\n    totalSize = typeof totalSize !== 'number' ? parseInt(totalSize, 10) : totalSize;\n\n    return new Promise((resolve, reject) => {\n      if (!files[this.fileParameterName] || !files[this.fileParameterName].size) {\n        reject(new Error('invalid_flow_request'));\n        return;\n      }\n\n      const originalFilename = files[this.fileParameterName].originalFilename;\n\n      let filesize = files[this.fileParameterName].size;\n      filesize = typeof filesize !== 'number' ? parseInt(filesize, 10) : filesize;\n\n      const validation = this.validate(chunkNumber, chunkSize, totalSize, identifier, filename, filesize);\n\n      if (validation === 'valid') {\n        const chunkFilename = this.getChunkFilename(chunkNumber, identifier);\n        const numberOfChunks = Math.max(Math.floor(totalSize / chunkSize), 1);\n\n        fs.rename(files[this.fileParameterName].path, chunkFilename, () => {\n          const testChunkExists = (testChunk) => {\n            fs.stat(this.getChunkFilename(testChunk, identifier), (error) => {\n              if (!error) {\n                if (testChunk === numberOfChunks && chunkNumber === numberOfChunks) {\n                  this.mergeChunks(numberOfChunks, identifier, filename)\n                    .then(() => {\n                      this.removeChunks(identifier)\n                        .then(() => {\n                          resolve({\n                            status: 'complete',\n                            filename,\n                            originalFilename,\n                            identifier,\n                          });\n                        }, reject);\n                    }, reject);\n\n                } else {\n                  testChunkExists(testChunk + 1);\n                }\n\n              } else {\n                resolve({\n                  status: 'incomplete',\n                  filename,\n                  originalFilename,\n                  identifier,\n                });\n              }\n            });\n          };\n\n          testChunkExists(1);\n        });\n\n      } else {\n        reject(new Error(`${validation}: ${filename} ${originalFilename} ${identifier}`));\n      }\n    });\n  }\n\n  // Pipe chunks directly in to an existsing WritableStream\n  //   flow.write(identifier, response);\n  //   flow.write(identifier, response, {end:false});\n  //\n  //   var stream = fs.createWriteStream(filename);\n  //   flow.write(identifier, stream);\n  //   stream.on('data', function(data){...});\n  //   stream.on('finish', function(){...});\n  write(identifier, writableStream, options = {}) {\n    options.end = (typeof options.end === 'undefined' ? true : options.end);\n\n    // Iterate over each chunk\n    const pipeChunk = (num) => {\n      const chunkFilename = this.getChunkFilename(num, identifier);\n\n      fs.stat(chunkFilename, (error) => {\n        if (!error) {\n          // If the chunk with the current num exists,\n          // then create a ReadStream from the file\n          // and pipe it to the specified writableStream.\n          const sourceStream = fs.createReadStream(chunkFilename);\n\n          sourceStream.pipe(writableStream, {\n            end: false,\n          });\n\n          sourceStream.on('end', () => {\n            // When the chunk is fully streamed,\n            // jump to the next one\n            pipeChunk(num + 1);\n          });\n\n        } else {\n          // When all the chunks have been piped, end the stream\n          if (options.end) {\n            writableStream.end();\n          }\n\n          if (options.onDone) {\n            options.onDone();\n          }\n        }\n      });\n    };\n\n    pipeChunk(1);\n  }\n\n}\n\nmodule.exports = Flow;\n","module.exports = require(\"aws-sdk\");","module.exports = require(\"uuid\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Assist = require('./assist');\nconst S3 = require('./s3');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass File {\n  constructor(config) {\n    this.config = config;\n    this.assist = new Assist(config);\n    this.s3 = new S3(config);\n  }\n\n  search(query) {\n    return new Promise((resolve, reject) => {\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      Db.connect(this.config).search('file', 'all', query)\n        .then(resolve, reject);\n    });\n  }\n\n  create(file) {\n    return new Promise((resolve, reject) => {\n      file.type = 'file';\n\n      Db.connect(this.config).insert(file)\n        .then(resolve, reject);\n    });\n  }\n\n  delete(fileIds, slug) {\n    return new Promise((resolve, reject) => {\n      let getFiles;\n\n      if (fileIds === 'trashed') {\n        getFiles = Db.connect(this.config).view('file', 'trashed', {\n          include_docs: true,\n        });\n\n      } else {\n        getFiles = Db.connect(this.config).fetch({\n          keys: _.isArray(fileIds) ? fileIds : [fileIds],\n          include_docs: true,\n        });\n      }\n\n      getFiles.then((response) => {\n        let files = response.rows.filter(file => !file.value || !file.value.deleted);\n\n        files = files.map(file => file.doc);\n\n        const assistFiles = [];\n        const s3Files = [];\n\n        files.forEach((file) => {\n          if (file.location === 'assist') {\n            assistFiles.push(file.fileName);\n          }\n\n          if (file.location === 's3') {\n            s3Files.push(file);\n          }\n        });\n\n        const assistPromise = this.assist.deleteFiles(slug, assistFiles);\n        const s3Promise = this.s3.deleteFiles(slug, s3Files);\n\n        Promise.settle([assistPromise, s3Promise])\n          .then((results) => {\n            const failures = [];\n\n            results.forEach((result) => {\n              if (result.isRejected()) {\n                failures.push(result.reason());\n              }\n            });\n\n            if (failures.length) {\n              // console.error('failures', failures);\n\n              // reject(failures);\n            }\n\n            const docs = files.map(file => ({\n              _id: file._id,\n              _rev: file._rev,\n              _deleted: true,\n            }));\n\n            Helpers.chunkUpdate(this.config, docs, 1000)\n              .then(resolve, reject);\n          });\n      });\n    });\n  }\n\n}\n\nmodule.exports = File;\n","module.exports = require(\"deep-diff\");","module.exports = require(\"embedly\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst EmbedlyApi = require('embedly');\n\nclass Embedly {\n  constructor(config) {\n    this.config = config;\n  }\n\n  oembed(urls) {\n    return new Promise((resolve, reject) => {\n      const embedly = new EmbedlyApi({\n        key: this.config.embedly.apiKey,\n      });\n\n      const opts = {\n        urls: _.isArray(urls) ? urls : [urls],\n        format: 'json',\n      };\n\n      embedly.oembed(opts, (error, result) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(result);\n      });\n    });\n  }\n\n}\n\nmodule.exports = Embedly;\n","module.exports = require(\"lodash/min\");","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class;\n\nvar _mjmlCore = require('mjml-core');\n\nvar _merge = require('lodash/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _min = require('lodash/min');\n\nvar _min2 = _interopRequireDefault(_min);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar tagName = 'mc-image';\nvar parentTag = ['mj-column', 'mj-hero-content'];\nvar defaultMJMLDefinition = {\n  attributes: {\n    'mc:edit': null,\n    'align': 'center',\n    'alt': '',\n    'border': 'none',\n    'border-radius': null,\n    'container-background-color': null,\n    'height': 'auto',\n    'href': '',\n    'padding-bottom': null,\n    'padding-left': null,\n    'padding-right': null,\n    'padding-top': null,\n    'padding': '10px 25px',\n    'src': '',\n    'target': '_blank',\n    'title': '',\n    'vertical-align': null,\n    'width': null\n  }\n};\nvar endingTag = true;\nvar baseStyles = {\n  table: {\n    borderCollapse: 'collapse',\n    borderSpacing: '0'\n  },\n  img: {\n    border: 'none',\n    borderRadius: '',\n    display: 'block',\n    outline: 'none',\n    textDecoration: 'none',\n    width: '100%'\n  }\n};\nvar postRender = function postRender($) {\n  $('[data-mc-edit]').each(function () {\n    $(this).attr('mc:edit', $(this).attr('data-mc-edit')).removeAttr('data-mc-edit');\n  });\n\n  return $;\n};\n\nvar Image = (0, _mjmlCore.MJMLElement)(_class = function (_Component) {\n  _inherits(Image, _Component);\n\n  function Image() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Image);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Image.__proto__ || Object.getPrototypeOf(Image)).call.apply(_ref, [this].concat(args))), _this), _this.styles = _this.getStyles(), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Image, [{\n    key: 'getContentWidth',\n    value: function getContentWidth() {\n      var _props = this.props,\n          mjAttribute = _props.mjAttribute,\n          getPadding = _props.getPadding;\n\n      var parentWidth = mjAttribute('parentWidth');\n\n      var width = (0, _min2.default)([parseInt(mjAttribute('width')), parseInt(parentWidth)]);\n\n      var paddingRight = getPadding('right');\n      var paddingLeft = getPadding('left');\n      var widthOverflow = paddingLeft + paddingRight + width - parseInt(parentWidth);\n\n      return widthOverflow > 0 ? width - widthOverflow : width;\n    }\n  }, {\n    key: 'getStyles',\n    value: function getStyles() {\n      var _props2 = this.props,\n          mjAttribute = _props2.mjAttribute,\n          defaultUnit = _props2.defaultUnit;\n\n\n      return (0, _merge2.default)({}, baseStyles, {\n        td: {\n          width: this.getContentWidth()\n        },\n        img: {\n          border: mjAttribute('border'),\n          height: mjAttribute('height'),\n          borderRadius: defaultUnit(mjAttribute('border-radius'), \"px\")\n        }\n      });\n    }\n  }, {\n    key: 'renderImage',\n    value: function renderImage() {\n      var mjAttribute = this.props.mjAttribute;\n\n\n      var img = _react2.default.createElement('img', {\n        'data-mc-edit': mjAttribute('mc:edit'),\n        alt: mjAttribute('alt'),\n        title: mjAttribute('title'),\n        height: mjAttribute('height'),\n        src: mjAttribute('src'),\n        style: this.styles.img,\n        width: this.getContentWidth() });\n\n      if (mjAttribute('href') != '') {\n        return _react2.default.createElement(\n          'a',\n          {\n            href: mjAttribute('href'),\n            target: mjAttribute('target') },\n          img\n        );\n      }\n\n      return img;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var mjAttribute = this.props.mjAttribute;\n\n\n      return _react2.default.createElement(\n        'table',\n        {\n          className: 'mc-image',\n          cellPadding: '0',\n          cellSpacing: '0',\n          'data-legacy-align': mjAttribute('align'),\n          'data-legacy-border': '0',\n          style: this.styles.table },\n        _react2.default.createElement(\n          'tbody',\n          null,\n          _react2.default.createElement(\n            'tr',\n            null,\n            _react2.default.createElement(\n              'td',\n              { style: this.styles.td },\n              this.renderImage()\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return Image;\n}(_react.Component)) || _class;\n\nImage.tagName = tagName;\nImage.parentTag = parentTag;\nImage.defaultMJMLDefinition = defaultMJMLDefinition;\nImage.endingTag = endingTag;\nImage.baseStyles = baseStyles;\nImage.postRender = postRender;\n\nexports.default = Image;\n","module.exports = require(\"mjml-raw\");","module.exports = require(\"mjml-group\");","module.exports = require(\"mjml-column\");","module.exports = require(\"lodash/cloneDeep\");","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _class;\n\nvar _mjmlCore = require('mjml-core');\n\nvar _cloneDeep = require('lodash/cloneDeep');\n\nvar _cloneDeep2 = _interopRequireDefault(_cloneDeep);\n\nvar _merge = require('lodash/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _mjmlColumn = require('mjml-column');\n\nvar _mjmlColumn2 = _interopRequireDefault(_mjmlColumn);\n\nvar _mjmlGroup = require('mjml-group');\n\nvar _mjmlGroup2 = _interopRequireDefault(_mjmlGroup);\n\nvar _mjmlRaw = require('mjml-raw');\n\nvar _mjmlRaw2 = _interopRequireDefault(_mjmlRaw);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar tagName = 'mc-section';\nvar parentTag = ['mj-container'];\nvar defaultMJMLDefinition = {\n  attributes: {\n    'mc:hideable': null,\n    'mc:repeatable': null,\n    'mc:variant': null,\n    'mc:edit': null,\n    'background-color': null,\n    'background-url': null,\n    'background-repeat': 'repeat',\n    'background-size': 'auto',\n    'border': null,\n    'border-bottom': null,\n    'border-left': null,\n    'border-radius': null,\n    'border-right': null,\n    'border-top': null,\n    'direction': 'ltr',\n    'full-width': null,\n    'padding': '20px 0',\n    'padding-top': null,\n    'padding-bottom': null,\n    'padding-left': null,\n    'padding-right': null,\n    'text-align': 'center',\n    'vertical-align': 'top'\n  }\n};\nvar baseStyles = {\n  div: {\n    margin: '0 auto'\n  },\n  table: {\n    fontSize: '0px',\n    width: '100%'\n  },\n  td: {\n    textAlign: 'center',\n    verticalAlign: 'top'\n  }\n};\nvar postRender = function postRender($) {\n  $('.mc-section-outlook-background').each(function () {\n    var url = $(this).data('url');\n    var width = $(this).data('width');\n\n    $(this).removeAttr('class').removeAttr('data-url').removeAttr('data-width');\n\n    if (!url) {\n      return;\n    }\n\n    $(this).before(_mjmlCore.helpers.startConditionalTag + '\\n      <v:rect xmlns:v=\"urn:schemas-microsoft-com:vml\" fill=\"true\" stroke=\"false\" style=\"width:' + width + 'px;\">\\n        <v:fill origin=\"0.5, 0\" position=\"0.5,0\" type=\"tile\" src=\"' + url + '\" />\\n        <v:textbox style=\"mso-fit-shape-to-text:true\" inset=\"0,0,0,0\">\\n      ' + _mjmlCore.helpers.endConditionalTag);\n\n    $(this).after(_mjmlCore.helpers.startConditionalTag + '\\n        </v:textbox>\\n      </v:rect>\\n      ' + _mjmlCore.helpers.endConditionalTag);\n  });\n\n  $('.mc-section-outlook-open').each(function () {\n    var $columnDiv = $(this).next();\n\n    $(this).replaceWith(_mjmlCore.helpers.startConditionalTag + '\\n      <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\"><tr><td style=\"vertical-align:' + $columnDiv.data('vertical-align') + ';width:' + parseInt($(this).data('width')) + 'px;\">\\n      ' + _mjmlCore.helpers.endConditionalTag);\n\n    $columnDiv.removeAttr('data-vertical-align');\n  });\n\n  $('.mc-section-outlook-line').each(function () {\n    var $columnDiv = $(this).next();\n\n    $(this).replaceWith(_mjmlCore.helpers.startConditionalTag + '\\n      </td><td style=\"vertical-align:' + $columnDiv.data('vertical-align') + ';width:' + parseInt($(this).data('width')) + 'px;\">\\n      ' + _mjmlCore.helpers.endConditionalTag);\n\n    $columnDiv.removeAttr('data-vertical-align');\n  });\n\n  $('.mc-section-outlook-close').each(function () {\n    $(this).replaceWith(_mjmlCore.helpers.startConditionalTag + '\\n      </td></tr></table>\\n      ' + _mjmlCore.helpers.endConditionalTag);\n  });\n\n  $('[data-mc-hideable]').each(function () {\n    $(this).attr('mc:hideable', '').removeAttr('data-mc-hideable');\n  });\n\n  $('[data-mc-repeatable]').each(function () {\n    $(this).attr('mc:repeatable', $(this).attr('data-mc-repeatable'));\n    // .removeAttr('data-mc-repeatable')\n  });\n\n  $('[data-mc-variant]').each(function () {\n    $(this).attr('mc:variant', $(this).attr('data-mc-variant'));\n    // .removeAttr('data-mc-variant')\n  });\n\n  $('[data-mc-edit]').each(function () {\n    $(this).attr('mc:edit', $(this).attr('data-mc-edit')).removeAttr('data-mc-edit');\n  });\n\n  return $;\n};\n\nvar Section = (0, _mjmlCore.MJMLElement)(_class = function (_Component) {\n  _inherits(Section, _Component);\n\n  function Section() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Section);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Section.__proto__ || Object.getPrototypeOf(Section)).call.apply(_ref, [this].concat(args))), _this), _this.styles = _this.getStyles(), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Section, [{\n    key: 'isFullWidth',\n    value: function isFullWidth() {\n      var mjAttribute = this.props.mjAttribute;\n\n\n      return mjAttribute('full-width') == 'full-width';\n    }\n  }, {\n    key: 'getStyles',\n    value: function getStyles() {\n      var _props = this.props,\n          mjAttribute = _props.mjAttribute,\n          parentWidth = _props.parentWidth,\n          defaultUnit = _props.defaultUnit;\n\n\n      var background = mjAttribute('background-url') ? {\n        background: ((mjAttribute('background-color') || '') + ' url(' + mjAttribute('background-url') + ') top center / ' + (mjAttribute('background-size') || '') + ' ' + (mjAttribute('background-repeat') || '')).trim()\n      } : {\n        background: mjAttribute('background-color')\n      };\n\n      return (0, _merge2.default)({}, baseStyles, {\n        td: {\n          fontSize: '0px',\n          padding: defaultUnit(mjAttribute('padding'), 'px'),\n          paddingBottom: defaultUnit(mjAttribute('padding-bottom'), 'px'),\n          paddingLeft: defaultUnit(mjAttribute('padding-left'), 'px'),\n          paddingRight: defaultUnit(mjAttribute('padding-right'), 'px'),\n          paddingTop: defaultUnit(mjAttribute('padding-top'), 'px'),\n          textAlign: mjAttribute('text-align'),\n          verticalAlign: mjAttribute('vertical-align')\n        },\n        div: {\n          maxWidth: defaultUnit(parentWidth)\n        }\n      }, {\n        div: this.isFullWidth() ? {} : (0, _cloneDeep2.default)(background),\n        table: this.isFullWidth() ? {} : (0, _cloneDeep2.default)(background),\n        tableFullwidth: this.isFullWidth() ? (0, _cloneDeep2.default)(background) : {}\n      });\n    }\n  }, {\n    key: 'renderFullWidthSection',\n    value: function renderFullWidthSection() {\n      var mjAttribute = this.props.mjAttribute;\n\n\n      return _react2.default.createElement(\n        'table',\n        {\n          cellPadding: '0',\n          cellSpacing: '0',\n          'data-legacy-background': mjAttribute('background-url'),\n          'data-legacy-border': '0',\n          'data-mc-hideable': mjAttribute('mc:hideable'),\n          'data-mc-repeatable': mjAttribute('mc:repeatable'),\n          'data-mc-variant': mjAttribute('mc:variant'),\n          'data-mc-edit': mjAttribute('mc:edit'),\n          style: (0, _merge2.default)({}, this.styles.tableFullwidth, this.styles.table) },\n        _react2.default.createElement(\n          'tbody',\n          null,\n          _react2.default.createElement(\n            'tr',\n            null,\n            _react2.default.createElement(\n              'td',\n              null,\n              this.renderSection()\n            )\n          )\n        )\n      );\n    }\n  }, {\n    key: 'renderSection',\n    value: function renderSection() {\n      var _props2 = this.props,\n          renderWrappedOutlookChildren = _props2.renderWrappedOutlookChildren,\n          mjAttribute = _props2.mjAttribute,\n          children = _props2.children,\n          parentWidth = _props2.parentWidth;\n\n      var fullWidth = this.isFullWidth();\n\n      return _react2.default.createElement(\n        'div',\n        {\n          'data-mc-hideable': mjAttribute('mc:hideable'),\n          'data-mc-repeatable': mjAttribute('mc:repeatable'),\n          'data-mc-variant': mjAttribute('mc:variant'),\n          'data-mc-edit': mjAttribute('mc:edit'),\n          style: this.styles.div },\n        _react2.default.createElement(\n          'table',\n          {\n            cellPadding: '0',\n            cellSpacing: '0',\n            className: 'mc-section-outlook-background',\n            'data-legacy-align': 'center',\n            'data-legacy-background': fullWidth ? undefined : mjAttribute('background-url'),\n            'data-legacy-border': '0',\n            'data-url': mjAttribute('background-url') || '',\n            'data-width': parentWidth,\n            style: this.styles.table },\n          _react2.default.createElement(\n            'tbody',\n            null,\n            _react2.default.createElement(\n              'tr',\n              null,\n              _react2.default.createElement(\n                'td',\n                { style: this.styles.td },\n                renderWrappedOutlookChildren(children)\n              )\n            )\n          )\n        )\n      );\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return this.isFullWidth() ? this.renderFullWidthSection() : this.renderSection();\n    }\n  }]);\n\n  return Section;\n}(_react.Component)) || _class;\n\nSection.tagName = tagName;\nSection.parentTag = parentTag;\nSection.defaultMJMLDefinition = defaultMJMLDefinition;\nSection.baseStyles = baseStyles;\nSection.postRender = postRender;\n\n_mjmlColumn2.default.parentTag.push(tagName);\n\n_mjmlGroup2.default.parentTag.push(tagName);\n\n_mjmlRaw2.default.parentTag.push(tagName);\n\nexports.default = Section;\n","module.exports = require(\"node-sass\");","module.exports = require(\"i18n-iso-countries\");","module.exports = require(\"moment\");","module.exports = require(\"html-to-text\");","module.exports = require(\"inky\");","module.exports = require(\"email-templates\");","module.exports = require(\"nodemailer-mailgun-transport\");","module.exports = require(\"createsend-node\");","module.exports = require(\"nodemailer\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass Ecommerce {\n  constructor(config) {\n    this.config = config;\n  }\n\n  getType(type, query) {\n    return new Promise((resolve, reject) => {\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      Db.connect(this.config).search('ecommerce', type, query)\n        .then(resolve, reject);\n    });\n  }\n\n  setType(type, item) {\n    return new Promise((resolve, reject) => {\n      item.type = type;\n\n      Helpers.createOrUpdate(this.config, item)\n        .then(resolve, reject);\n    });\n  }\n\n  deleteType(items) {\n    return new Promise((resolve, reject) => {\n      items = items.map(item => ({\n        _id: item._id,\n        _rev: item._rev,\n        _deleted: true,\n      }));\n\n      Helpers.chunkUpdate(this.config, items, 1000)\n        .then(resolve, reject);\n    });\n  }\n\n  getOrder(orderId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'orderByOrderId', {\n        key: orderId,\n        include_docs: true,\n      })\n        .then((body) => {\n          if (!body.rows.length) {\n            reject(new Error('Order not found'));\n            return;\n          }\n\n          resolve(body.rows[0].doc);\n        }, reject);\n    });\n  }\n\n  verifyDiscount(code) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'discountByCode', {\n        keys: [code],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            const discount = body.rows[0].doc;\n\n            const now = new Date().getTime();\n\n            const dateStart = new Date(Date.parse(discount.dateStart)).getTime();\n            const dateEnd = new Date(Date.parse(discount.dateEnd)).getTime();\n\n            if (dateStart > now) {\n              reject(new Error('Discount not valid (not begun)'));\n              return;\n\n            }\n\n            if (dateEnd < now) {\n              reject(new Error('Discount not valid (expired)'));\n              return;\n            }\n\n            resolve(discount);\n\n          } else {\n            reject(new Error({\n              statusCode: 404,\n              message: `Discount code not found (${code})`,\n            }));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Ecommerce;\n","module.exports = require(\"@cloudant/cloudant\");","module.exports = require(\"axios\");","module.exports = require(\"querystring\");","const _ = require('lodash');\nconst querystring = require('querystring');\nconst axios = require('axios');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\n\nconst providerTokenUri = {\n  google: 'https://www.googleapis.com/oauth2/v4/token',\n  instagram: 'https://api.instagram.com/oauth/access_token',\n  stripe: 'https://connect.stripe.com/oauth/token',\n  vimeo: 'https://api.vimeo.com/oauth/access_token',\n};\n\nclass Auth {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async authoriseUser(slug, userId) {\n    const isSuperUser = this.config.auth.superUserId.split(',').map(superUser => superUser.trim()).indexOf(userId) > -1;\n\n    if (isSuperUser) {\n      return {\n        id: userId,\n        role: 'super',\n      };\n    }\n\n    const clientConfig = await Db.connect(this.config, slug).get('config');\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    if (!user.active) {\n      throw Error(`User not active: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async authenticateWithProvider(provider, params, refresh = false) {\n    const providerConfig = _.merge({}, this.config[provider], params);\n\n    const data = {\n      grant_type: refresh ? 'refresh_token' : 'authorization_code',\n      client_id: providerConfig.clientId,\n      client_secret: providerConfig.clientSecret,\n      redirect_uri: providerConfig.redirectUri,\n      code: params.code,\n      refresh_token: params.refresh_token,\n    };\n\n    const uri = providerTokenUri[provider];\n\n    let response;\n    try {\n      response = await axios.post(uri, querystring.stringify(data));\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    if (!clientConfig.provider) {\n      clientConfig.provider = {};\n    }\n\n    clientConfig.provider[provider] = _.merge({}, clientConfig.provider[provider] || {}, response.data);\n\n    return cc.set(clientConfig);\n  }\n\n}\n\nmodule.exports = Auth;\n","module.exports = require(\"password-hash\");","const path = require('path');\n\nconst config = {\n  environment: process.env.ENVIRONMENT || 'development',\n  debug: process.env.DEBUG || false,\n\n  slug: process.env.SLUG,\n  baseUrl: process.env.BASE_URL || '',\n\n  db: {\n    url: process.env.DB_URL,\n    host: process.env.DB_HOST,\n    name: process.env.DB_NAME,\n    requestPlugin: process.env.DB_REQUEST_PLUGIN,\n    meterType: process.env.DB_METER_TYPE,\n  },\n\n  auth: {\n    superUserId: process.env.AUTH_SUPER_USER_ID,\n    tokenSecret: process.env.AUTH_TOKEN_SECRET || 'change_this_secret',\n  },\n\n  dev: {\n    userId: process.env.DEV_USER_ID || 'dev',\n    role: process.env.DEV_ROLE || 'super',\n  },\n\n  assist: {\n    url: process.env.ASSIST_URL,\n    username: process.env.ASSIST_USERNAME,\n    password: process.env.ASSIST_PASSWORD,\n  },\n\n  instagram: {\n    clientId: process.env.INSTAGRAM_CLIENT_ID,\n    clientSecret: process.env.INSTAGRAM_CLIENT_SECRET,\n  },\n\n  twitter: {\n    consumerKey: process.env.TWITTER_CONSUMER_KEY,\n    consumerSecret: process.env.TWITTER_CONSUMER_SECRET,\n    accessTokenKey: process.env.TWITTER_ACCESS_TOKEN_KEY,\n    accessTokenSecret: process.env.TWITTER_ACCESS_TOKEN_SECRET,\n  },\n\n  google: {\n    clientId: process.env.GOOGLE_CLIENT_ID,\n    clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n  },\n\n  mailgun: {\n    apiKey: process.env.MAILGUN_API_KEY,\n    domain: process.env.MAILGUN_DOMAIN,\n  },\n\n  embedly: {\n    apiKey: process.env.EMBEDLY_API_KEY,\n  },\n\n  aws: {\n    iamAccessKeyId: process.env.AWS_IAM_ACCESS_KEY_ID,\n    iamAccessKeySecret: process.env.AWS_IAM_ACCESS_KEY_SECRET,\n\n    s3: {\n      bucket: process.env.AWS_S3_BUCKET,\n    },\n\n    // tcode: {\n    //   region: process.env.AWS_TCODE_REGION,\n    //   pipelineId: process.env.AWS_TCODE_PIPELINE_ID,\n    //   bucketIn: process.env.AWS_TCODE_BUCKET_IN,\n    //   bucketOut: process.env.AWS_TCODE_BUCKET_OUT,\n    // },\n  },\n\n  shippo: {\n    token: process.env.SHIPPO_TOKEN,\n    fromZip: process.env.SHIPPO_FROM_ZIP,\n    fromCountry: process.env.SHIPPO_FROM_COUNTRY,\n  },\n\n  stripe: {\n    clientId: process.env.STRIPE_CLIENT_ID,\n    clientSecret: process.env.STRIPE_CLIENT_SECRET,\n    apiKey: process.env.STRIPE_API_KEY,\n  },\n\n  vimeo: {\n    clientId: process.env.VIMEO_CLIENT_ID,\n    clientSecret: process.env.VIMEO_CLIENT_SECRET,\n  },\n\n  zencoder: {\n    apiKey: process.env.ZENCODER_API_KEY,\n    s3: {\n      bucket: process.env.ZENCODER_S3_BUCKET,\n      credentials: process.env.ZENCODER_S3_CREDENTIALS,\n    },\n  },\n\n  pdf: {\n    templates: {},\n  },\n\n  email: {\n    templatesPath: path.resolve(__dirname, 'email'),\n  },\n};\n\nmodule.exports = config;\n","function Api() { }\n\nApi.defaultConfig = require('./config.default');\n\nApi.Assist = (...args) => new (require('./lib/assist'))(...args);\nApi.Auth = (...args) => new (require('./lib/auth'))(...args);\nApi.ClientConfig = (...args) => new (require('./lib/client-config'))(...args);\nApi.Db = (...args) => new (require('./lib/db'))(...args);\nApi.Ecommerce = (...args) => new (require('./lib/ecommerce'))(...args);\nApi.Email = (...args) => new (require('./lib/email'))(...args);\nApi.Embedly = (...args) => new (require('./lib/embedly'))(...args);\nApi.Entity = (...args) => new (require('./lib/entity'))(...args);\nApi.Fields = (...args) => new (require('./lib/fields'))(...args);\nApi.File = (...args) => new (require('./lib/file'))(...args);\nApi.Flow = (...args) => new (require('./lib/flow'))(...args);\nApi.Helpers = (...args) => new (require('./lib/helpers'))(...args);\nApi.Instagram = (...args) => new (require('./lib/instagram'))(...args);\nApi.Jwt = (...args) => new (require('./lib/jwt'))(...args);\nApi.Pdf = (...args) => new (require('./lib/pdf'))(...args);\nApi.Roles = (...args) => new (require('./lib/roles'))(...args);\nApi.S3 = (...args) => new (require('./lib/s3'))(...args);\nApi.Schema = (...args) => new (require('./lib/schema'))(...args);\nApi.Settings = (...args) => new (require('./lib/settings'))(...args);\nApi.Shippo = (...args) => new (require('./lib/shippo'))(...args);\nApi.Stripe = (...args) => new (require('./lib/stripe'))(...args);\nApi.Taxonomy = (...args) => new (require('./lib/taxonomy'))(...args);\nApi.Tools = (...args) => new (require('./lib/tools'))(...args);\n// Api.Transcode = (...args) => new (require('./lib/transcode'))(...args);\nApi.User = (...args) => new (require('./lib/user'))(...args);\nApi.Zencode = (...args) => new (require('./lib/zencode'))(...args);\n\nmodule.exports = Api;\n"],"sourceRoot":""}