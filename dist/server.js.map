{"version":3,"sources":["webpack://AceApiServer/webpack/universalModuleDefinition","webpack://AceApiServer/webpack/bootstrap","webpack://AceApiServer/external \"babel-runtime/helpers/asyncToGenerator\"","webpack://AceApiServer/external \"babel-runtime/regenerator\"","webpack://AceApiServer/external \"lodash\"","webpack://AceApiServer/external \"babel-runtime/helpers/createClass\"","webpack://AceApiServer/external \"babel-runtime/helpers/classCallCheck\"","webpack://AceApiServer/./lib/client-config.js","webpack://AceApiServer/external \"bluebird\"","webpack://AceApiServer/./lib/db.js","webpack://AceApiServer/external \"babel-runtime/core-js/json/stringify\"","webpack://AceApiServer/./lib/helpers.js","webpack://AceApiServer/external \"axios\"","webpack://AceApiServer/external \"fs\"","webpack://AceApiServer/external \"path\"","webpack://AceApiServer/external \"babel-runtime/core-js/object/keys\"","webpack://AceApiServer/external \"lodash/isArray\"","webpack://AceApiServer/./server/config.default.js","webpack://AceApiServer/external \"babel-runtime/helpers/typeof\"","webpack://AceApiServer/external \"request-promise\"","webpack://AceApiServer/./lib/fields.js","webpack://AceApiServer/./lib/schema.js","webpack://AceApiServer/./lib/entity.js","webpack://AceApiServer/./lib/email.js","webpack://AceApiServer/external \"babel-runtime/core-js/object/freeze\"","webpack://AceApiServer/./lib/roles.js","webpack://AceApiServer/external \"@cloudant/cloudant\"","webpack://AceApiServer/./lib/assist.js","webpack://AceApiServer/external \"express\"","webpack://AceApiServer/./server/routes/user.js","webpack://AceApiServer/./server/routes/tools.js","webpack://AceApiServer/./server/routes/token.js","webpack://AceApiServer/./server/routes/taxonomy.js","webpack://AceApiServer/./server/routes/stripe.js","webpack://AceApiServer/external \"twitter\"","webpack://AceApiServer/./server/routes/social.js","webpack://AceApiServer/./server/routes/shopify.js","webpack://AceApiServer/./server/routes/shippo.js","webpack://AceApiServer/./server/routes/settings.js","webpack://AceApiServer/./server/routes/schema.js","webpack://AceApiServer/./server/routes/provider.js","webpack://AceApiServer/./server/routes/pdf.js","webpack://AceApiServer/./server/routes/metadata.js","webpack://AceApiServer/./server/routes/entity.js","webpack://AceApiServer/./server/routes/embedly.js","webpack://AceApiServer/./server/routes/email.js","webpack://AceApiServer/./server/routes/ecommerce.js","webpack://AceApiServer/external \"express-useragent\"","webpack://AceApiServer/./server/routes/debug.js","webpack://AceApiServer/./server/routes/config.js","webpack://AceApiServer/./server/routes/cache.js","webpack://AceApiServer/./server/routes/auth.js","webpack://AceApiServer/./server/routes/analytics.js","webpack://AceApiServer/./lib/user.js","webpack://AceApiServer/./lib/tools.js","webpack://AceApiServer/./lib/taxonomy.js","webpack://AceApiServer/external \"hashids\"","webpack://AceApiServer/external \"stripe\"","webpack://AceApiServer/./lib/stripe.js","webpack://AceApiServer/external \"jsontoxml\"","webpack://AceApiServer/external \"handlebars\"","webpack://AceApiServer/external \"he\"","webpack://AceApiServer/./lib/shopify.js","webpack://AceApiServer/external \"shippo\"","webpack://AceApiServer/./lib/shippo.js","webpack://AceApiServer/./lib/settings.js","webpack://AceApiServer/./lib sync","webpack://AceApiServer/external \"recursive-readdir\"","webpack://AceApiServer/external \"eval\"","webpack://AceApiServer/./lib/pdf.js","webpack://AceApiServer/external \"jsonwebtoken\"","webpack://AceApiServer/./lib/jwt.js","webpack://AceApiServer/./lib/instagram.js","webpack://AceApiServer/external \"deep-diff\"","webpack://AceApiServer/external \"json-query\"","webpack://AceApiServer/external \"embedly\"","webpack://AceApiServer/./lib/embedly.js","webpack://AceApiServer/external \"node-sass\"","webpack://AceApiServer/external \"i18n-iso-countries\"","webpack://AceApiServer/external \"moment\"","webpack://AceApiServer/external \"html-to-text\"","webpack://AceApiServer/external \"mjml-mailchimp\"","webpack://AceApiServer/external \"mjml-validator\"","webpack://AceApiServer/external \"mjml-core\"","webpack://AceApiServer/external \"mjml\"","webpack://AceApiServer/external \"inky\"","webpack://AceApiServer/external \"email-templates\"","webpack://AceApiServer/external \"nodemailer-mailgun-transport\"","webpack://AceApiServer/external \"createsend-node\"","webpack://AceApiServer/external \"nodemailer\"","webpack://AceApiServer/./lib/ecommerce.js","webpack://AceApiServer/external \"querystring\"","webpack://AceApiServer/./lib/auth.js","webpack://AceApiServer/external \"password-hash\"","webpack://AceApiServer/./config.default.js","webpack://AceApiServer/./index.js","webpack://AceApiServer/external \"xxhashjs\"","webpack://AceApiServer/external \"deep-freeze\"","webpack://AceApiServer/external \"object-sizeof\"","webpack://AceApiServer/external \"circular-json-es6\"","webpack://AceApiServer/external \"le_node\"","webpack://AceApiServer/external \"zlib\"","webpack://AceApiServer/external \"url-parse\"","webpack://AceApiServer/external \"cache-manager-redis-store\"","webpack://AceApiServer/external \"cache-manager\"","webpack://AceApiServer/./server/index.js","webpack://AceApiServer/external \"connect-redis\"","webpack://AceApiServer/external \"express-session\"","webpack://AceApiServer/external \"method-override\"","webpack://AceApiServer/external \"body-parser\"","webpack://AceApiServer/external \"cookie-parser\"","webpack://AceApiServer/external \"helmet\"","webpack://AceApiServer/external \"morgan\"","webpack://AceApiServer/external \"http\"","webpack://AceApiServer/./server/server.js"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","_","Db","Helpers","DEFAULT_CLIENT_CONFIG","_id","client","assets","schemas","taxonomies","users","roles","provider","ClientConfig","config","_classCallCheck3","default","this","clientConfig","connect","merge","slug","createOrUpdate","Cloudant","dbName","url","db","maxAttempt","plugins","retry","retryDelayMultiplier","retryInitialDelayMsecs","use","Promise","assistUrl","assist","thumbnail","settings","cropSlug","cropDefault","settingsArray","split","forEach","setting","crop","crops","x","y","x2","y2","g","push","join","settingsString","test","thumbnailType","ext","thumbnailUrl","replace","doc","resolve","reject","insert","then","response","id","_rev","rev","error","statusCode","docs","chunkSize","arguments","length","undefined","promises","chunk","bulk","all","entities","groupSize","Infinity","grouped","group","entity","groupBefore","groupAfter","ratio","groupRatio","_stringify2","Date","array","replacementObject","map","environment","process","env","ENVIRONMENT","api","prefix","API_PREFIX","forceHttps","API_FORCE_HTTPS","JSON","parse","blacklistToken","API_BLACKLIST_TOKEN","blacklistReferrer","API_BLACKLIST_REFERRER","session","secret","SESSION_SECRET","ttl","parseInt","SESSION_TTL","cache","enabled","CACHE_ENABLED","CACHE_TTL","compress","CACHE_COMPRESS","memory","max","CACHE_MEMORY_MAX","redis","REDIS_URL","host","REDIS_HOST","port","REDIS_PORT","password","REDIS_PASSWORD","REDIS_DB","logentriesToken","LOGENTRIES_TOKEN","fields","type","dataType","Fields","field","_freeze2","find","Schema","schema","cc","updateEntityIndex","set","schemaSlug","Error","index","findIndex","splice","schemaSlugs","isArray","filter","indexOf","concat","uniqBy","ddoc","default_field","analyzer","selector","$and","fieldRef","result","jsonQuery","diff","Assist","Entity","flattenValues","fieldSlug","searchTerm","viewWithList","startkey","endkey","ids","parents","role","query","include_docs","keys","view","_appendParents","children","docMap","childDepth","rowOrDoc","isRow","size","queryString","_queriesFromString","flatten","_query","obj","uniq","_entitiesById","row","_docs","rows","_childDepthLimit","_getDocMap","_mergeDocs","_this","updatedEntities","mapValues","remove","chunkUpdate","_this2","entityMap","title","published","total_rows","_extendDocs","_this3","limit","Math","min","sort","isString","include_fields","bookmark","group_field","search","groups","hits","_this4","_entitySearch","__entitySearch","_this5","clone","_context6","t0","entityId","_this6","revs_info","revisionIds","_revs_info","revision","status","open_revs","revisions","childrenIds","ok","fetch","childrenMap","console","_appendChildren","_this7","_this8","restore","_this9","entityIds","entityOrEntityId","isObject","oldEntity","newEntity","path","mergeWith","a","b","trashed","_updateChildren","forever","filesResult","deleted","_removeChildren","fileNames","_fileNames","deleteFiles","_deleted","entitiesResult","files","omitBy","startsWith","filterEntityFields","file","forceId","queryParts","trim","modifier","slice","data","locals","input","start","end","sample","sampleSize","pick","_len","paths","Array","_key","copy","pathParts","match","pathFrom","pathTo","allowRegexp","methodArgs","queries","merging","isNumber","queryMap","queryField","fs","nodemailer","Createsend","promisifyAll","nodemailerMailgunTransport","EmailTemplate","Inky","mjml2html","registerComponent","registerDependencies","McSection","McImage","htmlToText","moment","countries","sass","Email","inky","mc-section","mj-column","mj-hero","templateSlug","templateData","templateOptions","options","inlineStyles","mjml","skipValidation","templatePath","email","templatesPath","existsSync","templateFiles","readdirSync","htmlPath","fileName","extension","style","renderSync","sourceMapContents","sourceMapEmbed","css","toString","emailTemplate","views","juice","juiceResources","preserveMediaQueries","preserveFontFaces","removeStyleTags","removeLinkTags","preserveImportant","webResources","links","scripts","images","transport","jsonTransport","helpers","render","html","convertMjmlResult","level","errors","releaseTheKraken","text","fromString","emailOptions","nodemailerMailgun","createTransport","auth","api_key","mailgun","apiKey","domain","getTemplate","sendMail","metadata","details","listId","createsend","cs","clientApiKey","subscribers","addSubscriberAsync","EmailAddress","Name","Resubscribe","RestartSubscriptionBasedAutoresponders","emailAddress","catch","Message","permissions","entityGrid","entityCreate","entityRead","entityUpdate","entityDelete","taxonomyCreate","taxonomyRead","taxonomyUpdate","taxonomyDelete","fileCreate","fileRead","fileUpdate","fileDelete","user","userSettings","tools","ecommerce","Roles","axios","passwordHash","assetsSlug","post","username","generate","_ref","_ref2","_ref3","_ref4","_ref5","User","router","authMiddleware","permissionMiddleware","asyncMiddleware","getConfig","handleResponse","handleError","_asyncToGenerator3","_regenerator2","mark","_callee","req","res","wrap","_context","prev","next","t1","sent","t2","t3","t4","body","t5","t6","stop","_x","_x2","apply","_callee2","_context2","read","userId","_x3","_x4","put","_callee3","_context3","update","_x5","_x6","delete","_callee4","_context4","userIds","_x7","_x8","Tools","getDb","setHeader","send","getChanges","Jwt","payload","jwt","token","dev","pickBy","isNaN","signToken","apiToken","_ref6","_ref7","_ref8","Taxonomy","cacheMiddleware","taxonomy","taxonomySlug","taxonomySlugs","_callee5","_context5","createTerm","term","_x9","_x10","_callee6","updateTerm","_x11","_x12","_callee7","_context7","deleteTerm","_x13","_x14","Ecommerce","Stripe","order","stripe","checkout","amount","Number","refund","retrieveAccount","template","getSettings","getOrder","orderId","Instagram","instagramAccessTokenMap","method","params","Twitter","twitter","param","consumer_key","consumerKey","consumer_secret","consumerSecret","access_token_key","accessTokenKey","access_token_secret","accessTokenSecret","instagram","access_token","abrupt","client_id","clientId","pagination","next_url","Shopify","shopify","getCatalog","Shippo","shippo","address","parcel","getQuote","Settings","schemaId","updateAll","Auth","providerApiBaseUrl","google","spotify","vimeo","providerApiHandler","endpoint","providerConfig","floor","getTime","begins","expires_in","authProvider","token_type","request","baseURL","headers","Authorization","Pdf","pdf","getPayload","getPdf","attachment","json","assetSlug","_ref9","_ref10","_ref11","_ref12","indexAsync","q","_keys2","_typeof3","entitySearch","use_index","$or","$exists","entityFind","fieldValues","entityList","entityRevisions","_callee8","_context8","_x15","_x16","_callee9","_context9","_x17","_x18","_callee10","_context10","_x19","_x20","_callee11","_context11","_x21","_x22","Embedly","embedly","oembed","urls","renderTemplate","fromName","fromEmail","toName","toEmail","from","to","subject","sendEmail","subscribe","messages","message","getType","setType","item","deleteType","verifyDiscount","code","useragent","source","pattern","store","items","del","error_description","Analytics","analytics","changes","dbBackupFile","readFileAsync","fileConents","unlinkAsync","cloudant","destroy","entityGroups","terms","entitiesByTerm","_term","parent","Hashids","StripeClass","hashids","clientStripeAccountId","stripe_user_id","customerDetails","log","findOrCreateCustomer","customer","createOrder","updateOrCreateStripeCustomer","stripeCustomer","updateCustomer","createCharge","updatedOrder","sendReceipt","orderReceipt","sendNotification","orderNotification","updateOrder","finalOrder","accounts","retrieve","refunds","refund_application_fee","charge","stripe_account","charges","amountRefunded","amount_refunded","now","newCustomer","createdAt","modifiedAt","phone","billingAddress","shippingAddress","orders","description","customer_id","customers","price","quantity","newOrder","encode","shippingMethod","subtotal","tax","rate","includedInPrice","total","show","discount","currency","iso","toLowerCase","capture","order_id","statement_descriptor","kebabCase","storeName","toUpperCase","application_fee","ceil","paymentGateway","livemode","_this10","emailSenderName","emailSenderAddress","_this11","he","Handlebars","jsontoxml","shopLink","productLinkTemplate","X-Shopify-Storefront-Access-Token","storefrontAccessToken","compile","products","shop","edges","edge","g:id","node","handle","g:title","g:description","g:link","g:image_link","originalSrc","g:brand","vendor","g:condition","g:availability","availableForSale","g:price","priceRange","minVariantPrice","currencyCode","channel","product","addressFrom","object_purpose","zip","fromZip","country","fromCountry","addressTo","distance_unit","mass_unit","shipment","address_from","address_to","ratesReady","attempts","object_status","object_id","val","rates","webpackEmptyContext","e","_eval","readdir","templates","templateId","readFileSync","assistPdfUrl","uri","encoding","form","sign","tokenSecret","verify","version","requestOptions","qs","extend","_request","EmbedlyApi","opts","format","dateStart","dateEnd","querystring","providerTokenUri","superUserId","superUser","active","refresh","providerClientConfig","grant_type","client_secret","clientSecret","redirect_uri","redirectUri","refresh_token","providerAuth","stringify","debug","DEBUG","SLUG","baseUrl","BASE_URL","DB_URL","DB_HOST","DB_NAME","requestPlugin","DB_REQUEST_PLUGIN","meterType","DB_METER_TYPE","AUTH_SUPER_USER_ID","AUTH_TOKEN_SECRET","DEV_USER_ID","DEV_ROLE","cms","CMS_TITLE","CMS_URL","ASSIST_URL","ASSIST_USERNAME","ASSIST_PASSWORD","MAILGUN_API_KEY","MAILGUN_DOMAIN","EMBEDLY_API_KEY","__dirname","GOOGLE_CLIENT_ID","GOOGLE_CLIENT_SECRET","INSTAGRAM_CLIENT_ID","INSTAGRAM_CLIENT_SECRET","SPOTIFY_CLIENT_ID","SPOTIFY_CLIENT_SECRET","STRIPE_CLIENT_ID","STRIPE_CLIENT_SECRET","STRIPE_API_KEY","TWITTER_CONSUMER_KEY","TWITTER_CONSUMER_SECRET","TWITTER_ACCESS_TOKEN_KEY","TWITTER_ACCESS_TOKEN_SECRET","VIMEO_CLIENT_ID","VIMEO_CLIENT_SECRET","Api","defaultConfig","args","Function","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","_len6","_key6","_len7","_key7","_len8","_key8","_len9","_key9","_len10","_key10","_len11","_key11","_len12","_key12","_len13","_key13","_len14","_key14","_len15","_key15","_len16","_key16","_len17","_key17","_len18","_key18","_len19","_key19","_len20","_key20","_len21","_key21","_len22","_key22","on","express","cacheManager","redisStore","URL","zlib","Logger","CircularJSON","sizeof","deepFreeze","XXH","HASH_SEED","app","customConfig","customAuthMiddleware","fn","skipAuth","route","RegExp","cloneConfig","omitUndefined","forIn","isPlainObject","isUndefined","cloneDeep","configClone","redisOptions","redisClient","caching","getClient","hash","h64","__cache","gunzipAsync","Buffer","cacheResponse","gzipAsync","Router","enable","scheme","redirect","Access-Control-Allow-Origin","Access-Control-Allow-Methods","Access-Control-Expose-Headers","Vary","sendStatus","referrer","referer","referrerHostname","hostname","verifyToken","context","authorised","permission","stack","statusText","afterResponse","removeListener","PORT","HOST","http","logger","helmet","cookieParser","bodyParser","methodOverride","RedisStore","AceApiServer","listen","sessionOptions","resave","saveUninitialized","cookie","maxAge","urlencoded","extended","server","createServer"],"mappings":"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","file":"server.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AceApiServer\"] = factory();\n\telse\n\t\troot[\"AceApiServer\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 112);\n","module.exports = require(\"babel-runtime/helpers/asyncToGenerator\");","module.exports = require(\"babel-runtime/regenerator\");","module.exports = require(\"lodash\");","module.exports = require(\"babel-runtime/helpers/createClass\");","module.exports = require(\"babel-runtime/helpers/classCallCheck\");","const _ = require('lodash');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Roles = require('./roles');\n\nconst roles = new Roles();\n\nconst DEFAULT_CLIENT_CONFIG = {\n  _id: 'config',\n  client: {},\n  assets: {},\n  schemas: [],\n  taxonomies: [],\n  users: [],\n  roles: roles.roles(),\n  provider: {},\n  module: {},\n};\n\nclass ClientConfig {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async get() {\n    let clientConfig = DEFAULT_CLIENT_CONFIG;\n\n    try {\n      clientConfig = await Db.connect(this.config).get('config');\n\n      clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n    } catch (error) {\n      //\n    }\n\n    clientConfig.slug = this.config.slug;\n\n    return clientConfig;\n  }\n\n  async set(clientConfig) {\n    clientConfig._id = 'config';\n\n    delete clientConfig.roles;\n\n    clientConfig = await Helpers.createOrUpdate(this.config, clientConfig);\n\n    clientConfig = _.merge({}, DEFAULT_CLIENT_CONFIG, clientConfig);\n\n    return clientConfig;\n  }\n}\n\n\nmodule.exports = ClientConfig;\n","module.exports = require(\"bluebird\");","const Cloudant = require('@cloudant/cloudant');\n\nclass Db {\n  constructor (config, dbName) {\n    this.config = config;\n\n    return Db.connect(config, dbName);\n  }\n\n  static connect (config, dbName) {\n    const cloudant = new Cloudant({\n      url: config.db.url,\n      maxAttempt: 5,\n      plugins: [\n        'promises',\n        {\n          retry: {\n            retryDelayMultiplier: 2,\n            retryInitialDelayMsecs: 500,\n          },\n        },\n      ],\n    });\n\n    return cloudant.db.use(dbName || config.db.name);\n  }\n}\n\nmodule.exports = Db;\n","module.exports = require(\"babel-runtime/core-js/json/stringify\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\n\nclass Helpers {\n  constructor(config) {\n    this.config = config;\n    this.assistUrl = config.assist.url;\n    this.slug = config.slug;\n  }\n\n  static createOrUpdate (config, doc) {\n    return new Promise((resolve, reject) => {\n      Db.connect(config).insert(doc)\n        .then((response) => {\n          doc._id = response.id;\n          doc._rev = response.rev;\n          resolve(doc);\n        }, (error) => {\n          if (error.statusCode !== 409) {\n            reject(error);\n            return;\n          }\n\n          Db.connect(config).get(doc._id)\n            .then((response) => {\n              doc._rev = response._rev;\n\n              Db.connect(config).insert(doc)\n                .then((response) => {\n                  doc._rev = response.rev;\n                  resolve(doc);\n                }, reject);\n            }, reject);\n        });\n    });\n  }\n\n  static chunkUpdate (config, docs, chunkSize = 1000) {\n    return new Promise((resolve, reject) => {\n      const chunks = _.chunk(docs, chunkSize);\n      const promises = [];\n\n      chunks.forEach((chunk) => {\n        promises.push(new Promise((resolve, reject) => {\n          Db.connect(config).bulk({\n            docs: chunk,\n          }).then(resolve, reject);\n        }));\n      });\n\n      Promise.all(promises).then(resolve, reject);\n    });\n  }\n\n  static groupEntities (entities, groupSize = Infinity) {\n    const grouped = [];\n\n    let group = {\n      entities: [],\n    };\n\n    entities.forEach((entity) => {\n      if (!entity.groupBefore || group.entities.length >= groupSize) {\n        group = {\n          entities: [],\n        };\n      }\n\n      group.entities.push(entity);\n\n      if (!entity.groupAfter || group.entities.length >= groupSize) {\n        group.ratio = 0;\n\n        group.entities.forEach((entity) => {\n          group.ratio += (entity.thumbnail || entity).ratio;\n        });\n\n        group.entities.forEach((entity) => {\n          entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n        });\n\n        grouped.push(group);\n      }\n    });\n\n    return grouped;\n  }\n\n  static now () {\n    return JSON.stringify(new Date()).replace(/\"/g, '');\n  }\n\n  static replace (array, replacementObject, key) {\n    return array.map((object) => {\n      if (object[key] === replacementObject[key]) {\n        return replacementObject;\n      }\n      return object;\n    });\n  }\n\n  thumbnailSrc (thumbnail, settings, cropSlug, cropDefault) {\n    if (!thumbnail) {\n      return '';\n    }\n\n    let settingsArray;\n\n    if (typeof settings === 'string') {\n      settingsArray = settings.split(/,|;/);\n\n      settings = {};\n\n      settingsArray.forEach((setting) => {\n        setting = setting.split(/_|:/);\n\n        settings[setting[0]] = setting[1];\n      });\n    }\n\n    const crop = thumbnail.crops ? thumbnail.crops[cropSlug] : false;\n\n    if (crop) {\n      settings.x = crop[0];\n      settings.y = crop[1];\n      settings.x2 = crop[2];\n      settings.y2 = crop[3];\n    } else if (cropDefault) {\n      settings.g = cropDefault;\n    }\n\n    settingsArray = [];\n\n    _.forEach(settings, (value, key) => {\n      settingsArray.push([key, value].join(':'));\n    });\n\n    const settingsString = settingsArray.join(';');\n\n    if (/(image)/.test(thumbnail.thumbnailType)) {\n      if (thumbnail.ext === 'svg') {\n        return [this.assistUrl, this.slug, thumbnail.name + thumbnail.ext].join('/');\n      }\n\n      return [this.assistUrl, this.slug, 'transform', settingsString, thumbnail.name + thumbnail.ext].join('/');\n    }\n\n    if (/(video)/.test(thumbnail.thumbnailType)) {\n      return [this.assistUrl, this.slug, 'transform', settingsString, thumbnail.name, 'thumb.jpg'].join('/');\n    }\n\n    if (/(oembed|proxy)/.test(thumbnail.thumbnailType)) {\n      const thumbnailUrl = thumbnail.thumbnailUrl.replace(/https?:\\/\\//, '');\n\n      return [this.assistUrl, this.slug, 'proxy', 'transform', settingsString, thumbnailUrl].join('/');\n    }\n\n    return '';\n  }\n\n}\n\nmodule.exports = Helpers;\n","module.exports = require(\"axios\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"babel-runtime/core-js/object/keys\");","module.exports = require(\"lodash/isArray\");","const config = {\n  environment: process.env.ENVIRONMENT || 'development',\n\n  api: {\n    prefix: process.env.API_PREFIX || '',\n    forceHttps: process.env.API_FORCE_HTTPS ? JSON.parse(process.env.API_FORCE_HTTPS) : false,\n    blacklistToken: (process.env.API_BLACKLIST_TOKEN || '').split(','),\n    blacklistReferrer: (process.env.API_BLACKLIST_REFERRER || '').split(','),\n  },\n\n  session: {\n    secret: process.env.SESSION_SECRET || 'change_me',\n    ttl: parseInt(process.env.SESSION_TTL || 7200, 10),\n  },\n\n  cache: {\n    enabled: process.env.CACHE_ENABLED ? JSON.parse(process.env.CACHE_ENABLED) : false,\n    ttl: parseInt(process.env.CACHE_TTL || 30, 10) * 60, // 30mins\n    compress: process.env.CACHE_COMPRESS ? JSON.parse(process.env.CACHE_COMPRESS) : false,\n    memory: {\n      max: parseInt(process.env.CACHE_MEMORY_MAX || 128, 10) * 1000 * 1000, // ~128mb\n    },\n  },\n\n  redis: {\n    url: process.env.REDIS_URL,\n    host: process.env.REDIS_HOST,\n    port: process.env.REDIS_PORT,\n    password: process.env.REDIS_PASSWORD,\n    db: parseInt(process.env.REDIS_DB || 0, 10),\n  },\n\n  logentriesToken: process.env.LOGENTRIES_TOKEN,\n};\n\nmodule.exports = config;\n","module.exports = require(\"babel-runtime/helpers/typeof\");","module.exports = require(\"request-promise\");","const _ = require('lodash');\n\nconst fields = [\n  {\n    type: 'attachment',\n    name: 'Attachment',\n    dataType: null,\n  },\n  {\n    type: 'audio',\n    name: 'Audio',\n    dataType: null,\n  },\n  {\n    type: 'checkbox',\n    name: 'Checkbox',\n    dataType: 'boolean',\n  },\n  {\n    type: 'color',\n    name: 'Color',\n    dataType: 'string',\n  },\n  {\n    type: 'date',\n    name: 'Date',\n    dataType: 'string',\n  },\n  {\n    type: 'embedly',\n    name: 'Embedly',\n    dataType: null,\n  },\n  {\n    type: 'entity',\n    name: 'Entity',\n    dataType: 'array',\n  },\n  {\n    type: 'entityGrid',\n    name: 'Entity Grid',\n    dataType: 'array',\n  },\n  {\n    type: 'entityTile',\n    name: 'Entity Tile',\n    dataType: 'array',\n  },\n  {\n    type: 'image',\n    name: 'Image',\n    dataType: null,\n  },\n  {\n    type: 'keyValue',\n    name: 'Key Value',\n    dataType: null,\n  },\n  {\n    type: 'number',\n    name: 'Number',\n    dataType: 'number',\n  },\n  {\n    type: 'richText',\n    name: 'Rich Text',\n    dataType: null,\n  },\n  {\n    type: 'select',\n    name: 'Select',\n    dataType: 'array',\n  },\n  {\n    type: 'taxonomy',\n    name: 'Taxonomy',\n    dataType: null,\n  },\n  {\n    type: 'text',\n    name: 'Text',\n    dataType: 'string',\n  },\n  {\n    type: 'textArea',\n    name: 'Text Area',\n    dataType: 'string',\n  },\n  {\n    type: 'user',\n    name: 'User',\n    dataType: 'array',\n  },\n  {\n    type: 'video',\n    name: 'Video',\n    dataType: null,\n  },\n  {\n    type: 'vimeo',\n    name: 'Vimeo',\n    dataType: null,\n  },\n];\n\nclass Fields {\n  static fields() {\n    return fields.map(field => Object.freeze(field));\n  }\n  static field(type) {\n    return _.find(Fields.fields(), { type });\n  }\n}\n\nmodule.exports = Fields;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Fields = require('./fields');\n\nclass Schema {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas.push(schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(schemaSlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const schema = _.find(clientConfig.schemas, { slug: schemaSlug });\n\n    if (!schema) {\n      throw Error(`Schema not found: ${schemaSlug}`);\n    }\n\n    return schema;\n  }\n\n  async update(schema) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.schemas, { slug: schema.slug });\n\n    if (index === -1) {\n      throw Error(`Schema not found: ${schema.slug}`);\n    }\n\n    clientConfig.schemas.splice(index, 1, schema);\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(schemaSlugs) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    schemaSlugs = _.isArray(schemaSlugs) ? schemaSlugs : [schemaSlugs];\n\n    clientConfig.schemas = clientConfig.schemas.filter(schema => schemaSlugs.indexOf(schema.slug) === -1);\n\n    clientConfig.schemas = clientConfig.schemas.map((schema) => {\n      if (!schema.fields) {\n        return schema;\n      }\n      schema.fields = schema.fields.map((field) => {\n        if (!field.settings) {\n          return field;\n        }\n        if (field.settings.schemas) {\n          field.settings.schemas = field.settings.schemas.filter(schema => schemaSlugs.indexOf(schema) === -1);\n        }\n        return field;\n      });\n      return schema;\n    });\n\n    await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateAll(schemas) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.schemas = schemas;\n\n    // await this.updateEntityIndex(clientConfig.schemas);\n\n    return cc.set(clientConfig);\n  }\n\n  async updateEntityIndex(schemas) {\n    let fields = [];\n\n    schemas.forEach((schema) => {\n      fields = fields.concat(schema.fields);\n    });\n\n    fields = _.uniqBy(fields, 'slug');\n\n    const index = {\n      name: 'entity',\n      type: 'text',\n      ddoc: 'entityIndex',\n      index: {\n        default_field: {\n          enabled: true,\n          analyzer: 'standard',\n        },\n        selector: {\n          $and: [\n            {\n              type: 'entity',\n            },\n          ],\n        },\n        fields: [\n          {\n            name: 'published',\n            type: 'boolean',\n          },\n          {\n            name: 'trashed',\n            type: 'boolean',\n          },\n          {\n            name: 'title',\n            type: 'string',\n          },\n          {\n            name: 'slug',\n            type: 'string',\n          },\n          {\n            name: 'schema',\n            type: 'string',\n          },\n          {\n            name: 'modifiedAt',\n            type: 'string',\n          },\n          {\n            name: 'publishedAt',\n            type: 'string',\n          },\n        ],\n      },\n    };\n\n    fields.forEach((field) => {\n      const fieldRef = Fields.field(field.type);\n\n      if (/number|string|boolean/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value`,\n          type: fieldRef.dataType,\n        });\n      }\n\n      if (/array/.test(fieldRef.dataType)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.[].slug`,\n          type: 'string',\n        });\n      }\n\n      if (/taxonomy/.test(field.type)) {\n        index.index.fields.push({\n          name: `fields.${field.slug}.value.terms.[].slug`,\n          type: 'string',\n        });\n      }\n    });\n\n    const result = await Db.connect(this.config).index(index);\n\n    return result;\n  }\n\n}\n\nmodule.exports = Schema;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst jsonQuery = require('json-query');\nconst diff = require('deep-diff').diff;\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\nconst Schema = require('./schema');\nconst Assist = require('./assist');\n\nconst CHUNK_UPDATE_SIZE = 1000;\n\nclass Entity {\n  constructor (config) {\n    this.config = config;\n\n    // Expose helpers\n    this.flattenValues = Entity.flattenValues;\n  }\n\n  static flattenValues (docs) {\n    return docs.map((doc) => {\n      if (!doc.fields || !_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (/entity/.test(field.type) && _.isArray(field.value)) { // entity / entityTile / entityGrid\n          field.value = Entity.flattenValues(field.value);\n        }\n        return field.value;\n      });\n\n      return doc;\n    });\n  }\n\n  static filterEntityFields (docs, role = 'guest') {\n    const isArray = _.isArray(docs);\n\n    docs = (isArray ? docs : [docs]).map((doc) => {\n      if (_.size(doc.fields)) {\n        doc.fields = _.mapValues(doc.fields, (field) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter((obj) => {\n              if (!obj) {\n                return false;\n              }\n              if (obj.type && obj.type === 'entity' && role === 'guest') {\n                return obj.published !== undefined ? obj.published : true;\n              }\n              return true;\n            });\n          }\n          return field;\n        });\n      }\n      return doc;\n    });\n\n    return isArray ? docs : docs[0];\n  }\n\n  static _appendChildren (docs, childrenMap) {\n    return docs.map((doc) => {\n      if (!_.size(doc.fields)) {\n        return doc;\n      }\n\n      doc.fields = _.mapValues(doc.fields, (field) => {\n        if (_.isArray(field.value)) {\n          field.value = field.value.filter((obj) => {\n            if (!obj) {\n              return false;\n            }\n            if (obj.type === 'entity') {\n              return childrenMap[obj.id] !== undefined;\n            }\n            return true;\n          });\n\n          field.value = field.value.map((obj) => {\n            if (obj.type === 'entity') {\n              obj = _.merge(obj, childrenMap[obj.id]);\n            }\n            obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n            return obj;\n          });\n        }\n\n        return field;\n      });\n\n      return doc;\n    });\n  }\n\n  static _appendParents (result, parents = null, role = 'guest') {\n    let entityMap = {};\n\n    result.rows.forEach((row) => {\n      if (!row.doc) {\n        return;\n      }\n\n      if (row.value.type === 'entity') {\n        if (parents) {\n          row.doc.parents = [];\n        }\n        entityMap[row.id] = row.doc;\n      }\n    });\n\n    if (parents) {\n      result.rows.forEach((row) => {\n        if (row.doc && row.value.type === 'parent') {\n          entityMap[row.key].parents.push(Entity.filterEntityFields(row.doc, role));\n        }\n      });\n\n      entityMap = _.mapValues(entityMap, (entity) => {\n        entity.parents = _.uniqBy(entity.parents, entity => entity._id);\n        return entity;\n      });\n    }\n\n    entityMap = null;\n\n    return result;\n  }\n\n  static _fileNames (entities) {\n    const fileNames = [];\n\n    entities.forEach((entity) => {\n      _.forEach(entity.fields, (field) => {\n        if (field.value && field.value.file) {\n          fileNames.push(field.value.file.name);\n        }\n      });\n    });\n\n    return _.uniq(fileNames);\n  }\n\n  async fieldValues (fieldSlug, searchTerm) {\n    const result = await Db.connect(this.config).viewWithList('entity', 'byField', 'search', {\n      startkey: [fieldSlug],\n      endkey: [fieldSlug, {}],\n      group: true,\n      searchTerm,\n    });\n    return result;\n  }\n\n  static _query(doc, query, forceId = false) {\n    const queryParts = query.trim().split(/\\[|\\]/);\n    const selector = `fields.${queryParts[0]}.value[${queryParts[1] || '*'}]`;\n    const modifier = /\\]:/.test(query) ? `:${query.split(/\\]:/).slice(-1)[0].trim()}` : '';\n\n    const result = jsonQuery(`${selector}${modifier}`, {\n      data: doc,\n      locals: {\n        slice: (input, start, end) => _.slice(input, start, end),\n        sample: (input, size = 1) => _.sampleSize(input, size),\n        group: (entities, groupSize = Infinity) => {\n          const grouped = [];\n\n          let group = [];\n\n          entities.forEach((entity) => {\n            if (!entity.groupBefore || group.length >= groupSize) {\n              group = [];\n            }\n\n            group.push(entity);\n\n            if (!entity.groupAfter || group.length >= groupSize) {\n              group.ratio = 0;\n\n              group.forEach((entity) => {\n                group.ratio += (entity.thumbnail || entity).ratio;\n              });\n\n              group.forEach((entity) => {\n                entity.groupRatio = (entity.thumbnail || entity).ratio / group.ratio;\n              });\n\n              grouped.push(group);\n            }\n          });\n\n          return grouped;\n        },\n        pick: (input, ...paths) => _.map(input, (obj) => {\n          const copy = {};\n          if (forceId && obj.id) {\n            copy.id = obj.id;\n          }\n          paths.forEach((path) => {\n            const pathParts = path.match(/([^\\s]+)/g);\n            const pathFrom = pathParts[0];\n            const pathTo = pathParts[pathParts.length - 1];\n            _.set(copy, pathTo, _.get(obj, pathFrom));\n          });\n          return copy;\n        }),\n      },\n      allowRegexp: true,\n    });\n\n    return result;\n  }\n\n  static _queriesFromString(queryString) {\n    // Match and store (...args) from query so we can split by comma\n    const methodArgs = queryString.match(/\\(([^)]+)\\)/g);\n\n    // Replace (...args) with empty ()\n    queryString = queryString.replace(/\\(.*?\\)/g, '()');\n\n    // Extract queries\n    let queries = queryString.split(/,(?![^([]*[\\])])/g);\n\n    queries = queries.map((query) => {\n      // Replace () with original (...args)\n      if (/\\(\\)/.test(query)) {\n        query = query.replace('()', methodArgs.splice(0, 1));\n      }\n      return query.trim();\n    });\n\n    return queries;\n  }\n\n  async _entitiesById (ids = [], parents = null, role = 'guest') {\n    const query = {\n      include_docs: true,\n    };\n\n    if (ids.length) {\n      query.keys = ids;\n    }\n\n    let result = await Db.connect(this.config)\n      .view('entity', parents ? 'byIdExtended' : 'byId', query);\n\n    result = Entity._appendParents(result, parents, role);\n\n    return result;\n  }\n\n  static _childDepthLimit (children, merging = false) {\n    if (_.isNumber(children)) {\n      return children;\n    }\n    if (_.isArray(children)) {\n      if (merging) {\n        return children.length + 1;\n      }\n      return children.length;\n    }\n    return 1;\n  }\n\n  async _getDocMap (docs, children, parents, role, docMap = {}, childDepth = 0) {\n    if (!parents && !children) {\n      return docMap;\n    }\n\n    let ids = [];\n\n    docs.forEach((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      const doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (children && doc.fields && _.size(doc.fields)) {\n        if (_.isArray(children)) {\n          const queryString = children[childDepth];\n          const queries = Entity._queriesFromString(queryString);\n\n          queries.forEach((query) => {\n            ids = ids.concat(_.flatten(Entity._query(doc, query, true).value).map(obj => obj && obj.id));\n          });\n\n        } else {\n          _.forEach(doc.fields, (field) => {\n            if (_.isArray(field.value)) {\n              field.value = field.value.filter(obj => obj);\n\n              field.value.forEach((obj) => {\n                if (obj.id) {\n                  ids.push(obj.id);\n                }\n              });\n            }\n          });\n        }\n      }\n\n      const id = isRow ? rowOrDoc.id : doc._id || doc.id;\n      if (!docMap[id]) {\n        ids.push(id);\n      }\n    });\n\n    ids = _.uniq(ids);\n\n    ids = ids.filter(id => !docMap[id]);\n\n    if (ids.length === 0) {\n      return docMap;\n    }\n\n    let _docs = (await this._entitiesById(ids, parents, role)).rows.map(row => row.doc);\n\n    _docs.forEach((doc) => {\n      docMap[doc._id] = doc;\n    });\n\n    childDepth += 1;\n\n    if (!children || (childDepth >= Entity._childDepthLimit(children))) {\n      return docMap;\n    }\n\n    docMap = await this._getDocMap(_docs, children, parents, role, docMap, childDepth);\n\n    _docs = null;\n\n    return docMap;\n  }\n\n  static _mergeDocs(docs, docMap, children, childDepth = 0) {\n    if (children && (childDepth + 1 >= Entity._childDepthLimit(children, true))) {\n      return docs;\n    }\n\n    docs = docs.map((rowOrDoc) => {\n      const isRow = !!rowOrDoc.doc;\n\n      let doc = isRow ? rowOrDoc.doc : rowOrDoc;\n\n      if (!doc.fields && docMap[rowOrDoc.id || rowOrDoc._id]) {\n        doc = docMap[rowOrDoc.id || rowOrDoc._id];\n      }\n\n      if (children && doc.fields && _.size(doc.fields)) {\n\n        let queryMap;\n\n        if (_.isArray(children)) {\n          queryMap = {};\n\n          const queryString = children[childDepth];\n          const queries = Entity._queriesFromString(queryString);\n\n          queries.forEach((query) => {\n            const queryField = query.split(/\\[|\\]/)[0];\n            queryMap[queryField] = query;\n          });\n        }\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            field.value = field.value.filter(obj => obj);\n\n            if (!queryMap || (queryMap && queryMap[fieldSlug])) {\n              if (queryMap && queryMap[fieldSlug]) {\n                field.value = field.value.filter(obj => obj.id && docMap[obj.id]);\n              }\n\n              field.value = field.value.map((obj) => {\n                if (obj && obj.id && docMap[obj.id]) {\n                  obj = _.merge(obj, docMap[obj.id] || {});\n                  obj = _.omitBy(obj, (value, key) => key.startsWith('_'));\n                }\n                return obj;\n              });\n\n              field.value = Entity._mergeDocs(field.value, docMap, children, childDepth + 1);\n            }\n          }\n          return field;\n        });\n\n        doc.fields = _.mapValues(doc.fields, (field, fieldSlug) => {\n          if (_.isArray(field.value)) {\n            if (queryMap && queryMap[fieldSlug]) {\n              field.value = _.flatten(Entity._query(doc, queryMap[fieldSlug]).value);\n            }\n          }\n          return field;\n        });\n\n      }\n\n      if (isRow) {\n        rowOrDoc.doc = doc;\n      } else {\n        rowOrDoc = doc;\n      }\n\n      return rowOrDoc;\n    });\n\n    return docs;\n  }\n\n  async _extendDocs (docs, children, parents, role) {\n    let docMap = await this._getDocMap(docs, children, parents, role);\n\n    docs = Entity._mergeDocs(docs, docMap, children);\n\n    docMap = null;\n\n    return docs;\n  }\n\n  _removeChildren (entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      entities = entities.map(entity => entity._id);\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const updatedEntities = _.uniqBy(response.rows, row => row.doc._id).map((row) => {\n            row.doc.fields = _.mapValues(row.doc.fields, (field) => {\n              if (_.isArray(field.value)) {\n                field.value = _.remove(field.value, obj => obj.type === 'entity' && entities.indexOf(obj.id) !== -1);\n              }\n              return field;\n            });\n\n            return row.doc;\n          });\n\n          if (updatedEntities.length === 0) {\n            resolve([]);\n            return;\n          }\n\n          Helpers.chunkUpdate(this.config, updatedEntities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  _updateChildren (entities) {\n    return new Promise((resolve, reject) => {\n      if (entities.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      const entityMap = {};\n\n      entities = entities.map((entity) => {\n        entityMap[entity._id] = entity;\n\n        return entity._id;\n      });\n\n      Db.connect(this.config).view('entity', 'byChildren', {\n        keys: entities,\n        include_docs: true,\n      })\n        .then((response) => {\n          const entities = response.rows.map((row) => {\n            const entity = row.doc;\n\n            _.forEach(entity.fields, (field, fieldSlug) => {\n              if (_.isArray(field.value)) {\n                entity.fields[fieldSlug].value = field.value.map((obj) => {\n                  if (obj.type === 'entity' && entityMap[obj.id]) {\n                    obj.slug = entityMap[obj.id].slug;\n                    obj.title = entityMap[obj.id].title;\n                    obj.schema = entityMap[obj.id].schema;\n                    obj.published = entityMap[obj.id].published;\n\n                    if (entityMap[obj.id].thumbnail) {\n                      obj.thumbnail = entityMap[obj.id].thumbnail;\n                    } else {\n                      obj.thumbnail = null;\n                    }\n                  }\n\n                  return obj;\n                });\n              }\n            });\n\n            return entity;\n          });\n\n          Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  async entityList (ids = [], children = null, parents = null, role = 'guest') {\n    const result = await this._entitiesById(ids, parents, role);\n\n    if ((!children && !parents) || result.total_rows === 0) {\n      return result.rows;\n    }\n\n    const rows = await this._extendDocs(result.rows, children, parents, role);\n\n    return rows;\n  }\n\n  _entitySearch (query, children = null, parents = null, role = 'guest') {\n    return new Promise((resolve, reject) => {\n      query.limit = Math.min(query.limit || 200, 200);\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      if (children) {\n        query.include_docs = true;\n      }\n\n      if (!query.include_fields) {\n        query.include_fields = [];\n      }\n\n      if (_.isArray(query.include_fields)) {\n        query.include_fields = JSON.stringify(query.include_fields);\n      }\n\n      if (!query.sort) {\n        delete query.sort;\n      }\n      if (!query.bookmark) {\n        delete query.bookmark;\n      }\n      if (!query.index) {\n        delete query.index;\n      }\n      if (!query.group_field) {\n        delete query.group_field;\n      }\n\n      Db.connect(this.config).search('entity', query.index || 'all', query)\n        .then((result) => {\n\n          if (result.groups) {\n            const promises = [];\n\n            result.groups = result.groups.map((group) => {\n              promises.push(new Promise((resolve, reject) => {\n                if ((!children && !parents) || group.total_rows === 0) {\n                  resolve();\n                  return;\n                }\n\n                this._extendDocs(group.hits, children, parents, role)\n                  .then((docs) => {\n                    group.hits = docs;\n\n                    resolve();\n                  }, reject);\n              }));\n              return group;\n            });\n\n            Promise.all(promises)\n              .then(() => {\n                resolve(result);\n              }, reject);\n\n            return;\n          }\n\n          if ((!children && !parents) || result.total_rows === 0) {\n            resolve(result);\n            return;\n          }\n\n          this._extendDocs(result.rows, children, parents, role)\n            .then((docs) => {\n              result.rows = docs;\n\n              resolve(result);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entitySearch (query, children = null, parents = null, role = 'guest') {\n    return new Promise((resolve, reject) => {\n      const limit = query.limit || 25;\n\n      if (limit <= 200) {\n        this._entitySearch(query, children, parents, role)\n          .then(resolve, reject);\n        return;\n      }\n\n      let rows = [];\n      let groups = [];\n\n      function __entitySearch (bookmark) {\n        const _query = _.clone(query);\n\n        if (bookmark) {\n          _query.bookmark = bookmark;\n        }\n\n        this._entitySearch(_query, children, parents, role)\n          .then((result) => {\n            if (result.rows) {\n              rows = rows.concat(result.rows);\n            }\n            if (result.groups) {\n              groups = groups.concat(result.groups);\n            }\n\n            if (rows.length < result.total_rows && rows.length < limit) {\n              __entitySearch.call(this, result.bookmark);\n              return;\n            }\n\n            result.rows = rows;\n            result.groups = groups;\n\n            resolve(result);\n          }, reject);\n      }\n\n      __entitySearch.call(this);\n    });\n  }\n\n  async entityFind (query, children = null, parents = null, role = 'guest') {\n    let result;\n\n    try {\n      result = await Db.connect(this.config).find(query);\n    } catch (error) {\n      if (error.error === 'no_usable_index') {\n        const cc = new ClientConfig(this.config);\n        const clientConfig = await cc.get();\n\n        const schema = new Schema(this.config);\n        await schema.updateEntityIndex(clientConfig.schemas);\n\n        result = await Db.connect(this.config).find(query);\n      }\n    }\n\n    if (children === false) {\n      return result;\n    }\n\n    if (query.fields && query.fields.indexOf('_id') === -1) {\n      throw new Error('_id field required for `children`');\n    }\n\n    result.docs = await this._extendDocs(result.docs, children, parents, role);\n\n    return result;\n  }\n\n  entityRevisions (entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId, {\n        revs_info: true,\n      })\n        .then((response) => {\n          const revisionIds = [];\n\n          response._revs_info.forEach((revision) => {\n            if (revision.status === 'available') {\n              revisionIds.push(revision.rev);\n            }\n          });\n\n          Db.connect(this.config).get(entityId, {\n            open_revs: JSON.stringify(revisionIds),\n          })\n            .then((response) => {\n              const revisions = [];\n              const childrenIds = [];\n\n              response.forEach((revision) => {\n                if (revision.ok) {\n                  revisions.push(revision.ok);\n\n                  _.forEach(revision.ok.fields, (field) => {\n                    if (/entity/.test(field.type)) {\n                      _.forEach(field.value, (obj) => {\n                        if (obj.id) {\n                          childrenIds.push(obj.id);\n                        }\n                      });\n                    }\n                  });\n                }\n              });\n\n              Db.connect(this.config).fetch({\n                keys: _.uniq(childrenIds),\n                include_docs: true,\n              })\n                .then((result) => {\n                  const childrenMap = {};\n\n                  result.rows.forEach((row) => {\n                    try {\n                      childrenMap[row.doc._id] = row.doc;\n                    } catch (error) {\n                      console.error('Error: child no longer exists');\n                    }\n                  });\n\n                  resolve(Entity._appendChildren(revisions, childrenMap));\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  entityCreate (entity) {\n    return new Promise((resolve, reject) => {\n      entity.type = 'entity';\n\n      Db.connect(this.config).insert(entity)\n        .then((response) => {\n          entity._id = response.id;\n          entity._rev = response.rev;\n\n          resolve(entity);\n        }, reject);\n    });\n  }\n\n  entityRead (entityId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).get(entityId)\n        .then(resolve, reject);\n    });\n  }\n\n  entityUpdate (entities, restore) {\n    return new Promise((resolve, reject) => {\n      entities = _.isArray(entities) ? entities : [entities];\n\n      const entityMap = {};\n\n      const entityIds = entities.map((entityOrEntityId) => {\n        let entityId;\n\n        if (_.isObject(entityOrEntityId)) {\n          entityId = entityOrEntityId._id;\n          entityMap[entityId] = entityOrEntityId;\n        }\n        if (_.isString(entityOrEntityId)) {\n          entityId = entityOrEntityId;\n        }\n\n        return entityId;\n      });\n\n      Db.connect(this.config).fetch({\n        keys: entityIds,\n        include_docs: true,\n      })\n        .then((response) => {\n          const children = [];\n\n          const entities = response.rows.map((row) => {\n            const oldEntity = row.doc;\n            const newEntity = entityMap[oldEntity._id];\n\n            let entity = oldEntity;\n\n            if (newEntity) {\n              delete newEntity._rev;\n\n              const diffs = diff(oldEntity, newEntity);\n\n              diffs.forEach((diff) => {\n                if (/slug|title|thumbnail/.test(diff.path[0])) {\n                  if (children.indexOf(newEntity) === -1 && entityIds.indexOf(newEntity._id) !== -1) {\n                    children.push(newEntity);\n                  }\n                }\n              });\n\n              entity = _.mergeWith({}, oldEntity, newEntity, (a, b) => {\n                if (_.isArray(a) && _.isArray(b)) {\n                  return b;\n                }\n                return undefined;\n              });\n            }\n\n            if (restore) {\n              entity.trashed = false;\n            }\n\n            return entity;\n          });\n\n          this._updateChildren(children)\n            .then(() => {\n              Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE)\n                .then(resolve, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  async entityDelete (entityIds, forever = false) {\n    let entities;\n    let filesResult;\n\n    if (entityIds === 'trashed') {\n      forever = true;\n\n      entities = (await Db.connect(this.config).view('entity', 'trashed', {\n        include_docs: true,\n      })).rows;\n\n    } else {\n      entities = (await Db.connect(this.config).fetch({\n        keys: _.isArray(entityIds) ? entityIds : [entityIds],\n        include_docs: true,\n      })).rows;\n    }\n\n    entities = entities.filter(entity => !entity.value || !entity.value.deleted);\n\n    entities = entities.map(entity => entity.doc);\n\n    if (forever) {\n      await this._removeChildren(entities);\n\n      const fileNames = Entity._fileNames(entities);\n\n      if (fileNames.length) {\n        const assist = new Assist(this.config);\n        filesResult = await assist.deleteFiles(fileNames);\n      }\n\n      entities = entities.map(entity => ({\n        _id: entity._id,\n        _rev: entity._rev,\n        _deleted: true,\n      }));\n\n    } else {\n      entities = entities.map((entity) => {\n        entity.trashed = true;\n        return entity;\n      });\n    }\n\n    const entitiesResult = await Helpers.chunkUpdate(this.config, entities, CHUNK_UPDATE_SIZE);\n\n    return {\n      entities: entitiesResult,\n      files: filesResult,\n    };\n  }\n\n}\n\nmodule.exports = Entity;\n","const path = require('path');\nconst fs = require('fs');\nconst _ = require('lodash');\nconst Promise = require('bluebird');\nconst nodemailer = require('nodemailer');\nconst Createsend = Promise.promisifyAll(require('createsend-node'));\nconst nodemailerMailgunTransport = require('nodemailer-mailgun-transport');\nconst EmailTemplate = require('email-templates');\nconst Inky = require('inky').Inky;\nconst mjml2html = require('mjml');\nconst registerComponent = require('mjml-core').registerComponent;\nconst registerDependencies = require('mjml-validator').registerDependencies;\nconst { McSection, McImage } = require('mjml-mailchimp');\nconst htmlToText = require('html-to-text');\nconst moment = require('moment');\nconst countries = require('i18n-iso-countries');\nconst sass = require('node-sass');\n\nconst ClientConfig = require('./client-config');\nconst Helpers = require('./helpers');\n\n\nclass Email {\n  constructor(config) {\n    this.config = config;\n\n    this.inky = new Inky();\n\n    registerComponent(McSection);\n    registerComponent(McImage);\n    registerDependencies({\n      'mc-section': ['mj-column', 'mj-group', 'mj-raw'],\n      'mj-column': ['mc-image'],\n      'mj-hero': ['mc-image'],\n    });\n  }\n\n  getTemplate(templateSlug, templateData = {}, templateOptions = {}) {\n    return new Promise((resolve, reject) => {\n      const options = _.merge({}, {\n        inlineStyles: true,\n        inky: false,\n        mjml: false,\n        skipValidation: false,\n      }, templateOptions);\n\n      let templatePath = path.join(this.config.email.templatesPath, templateSlug);\n\n      if (!fs.existsSync(templatePath)) {\n        templatePath = path.resolve('../email', templateSlug);\n      }\n\n      const templateFiles = fs.readdirSync(templatePath);\n\n      let htmlPath = 'html';\n      // Support mjml templates\n      if (_.find(templateFiles, fileName => /^html\\.mjml/.test(fileName))) {\n        htmlPath = 'html.mjml';\n        options.mjml = true;\n      }\n\n      // Support ejs templates (for backwards compatibility)\n      // TODO: convert ejs templates to pug and remove\n      let extension;\n      if (_.find(templateFiles, fileName => /\\.ejs$/.test(fileName))) {\n        extension = 'ejs';\n      }\n\n      let style = '';\n      if (_.find(templateFiles, fileName => /^style\\.scss$/.test(fileName))) {\n        style = sass.renderSync({\n          file: path.join(templatePath, 'style.scss'),\n          sourceMapContents: !options.inlineStyles,\n          sourceMapEmbed: !options.inlineStyles,\n        }).css.toString().replace(/\"/g, '\\'');\n      }\n\n      const emailTemplate = new EmailTemplate({\n        views: {\n          root: this.config.email.templatesPath,\n          options: {\n            extension,\n          },\n        },\n        juice: options.inlineStyles,\n        juiceResources: {\n          preserveMediaQueries: true,\n          preserveFontFaces: true,\n          removeStyleTags: false,\n          removeLinkTags: false,\n          preserveImportant: true,\n          webResources: {\n            links: false,\n            scripts: false,\n            images: false,\n            // relativeTo: '',\n          },\n        },\n        transport: {\n          jsonTransport: true,\n        },\n      });\n\n      const cc = new ClientConfig(this.config);\n      const helpers = new Helpers(this.config);\n\n      cc.get()\n        .then((clientConfig) => {\n          templateData = _.merge({}, templateData, {\n            config: _.merge({}, _.pick(this.config, ['cms']), _.pick(clientConfig, ['slug', 'client', 'assets'])),\n            helpers,\n            style,\n            moment,\n            countries,\n            templateSlug,\n          });\n\n          emailTemplate.render(`${templateSlug}/${htmlPath}`, templateData)\n            .then((html) => {\n\n              if (options.mjml) {\n                const convertMjmlResult = mjml2html(html, {\n                  level: options.skipValidation ? 'skip' : 'soft',\n                });\n\n                if (convertMjmlResult.errors && convertMjmlResult.errors.length) {\n                  reject(convertMjmlResult.errors);\n                  return;\n                }\n\n                html = convertMjmlResult.html;\n              }\n\n              if (options.inky) {\n                html = this.inky.releaseTheKraken(html);\n              }\n\n              resolve({\n                html,\n                text: htmlToText.fromString(html),\n              });\n            }, reject);\n        }, reject);\n    });\n  }\n\n  sendEmail(emailOptions, templateSlug, templateData = {}, templateOptions = {}) {\n    return new Promise((resolve, reject) => {\n      const nodemailerMailgun = nodemailer.createTransport(nodemailerMailgunTransport({\n        auth: {\n          api_key: this.config.mailgun.apiKey,\n          domain: this.config.mailgun.domain,\n        },\n      }));\n\n      this.getTemplate(templateSlug, _.merge({}, emailOptions, templateData), templateOptions)\n        .then((emailTemplate) => {\n          emailOptions.html = emailTemplate.html;\n          emailOptions.text = emailTemplate.text;\n\n          nodemailerMailgun.sendMail(emailOptions, (error, metadata) => {\n            if (error) {\n              reject(error);\n              return;\n            }\n\n            resolve({\n              metadata,\n              email: emailOptions,\n            });\n          });\n        }, reject);\n    });\n  }\n\n  subscribe(details, provider, listId) {\n    return new Promise((resolve, reject) => {\n      const cc = new ClientConfig(this.config);\n\n      cc.get()\n        .then((clientConfig) => {\n          if (provider === 'createsend') {\n            if (clientConfig.provider.createsend) {\n              const cs = new Createsend({\n                apiKey: clientConfig.provider.createsend.clientApiKey,\n              });\n\n              const subscribers = Promise.promisifyAll(cs.subscribers);\n\n              subscribers.addSubscriberAsync(listId, {\n                EmailAddress: details.email,\n                Name: details.name,\n                Resubscribe: true,\n                RestartSubscriptionBasedAutoresponders: true,\n              })\n                .then((result) => {\n                  resolve(`Email.subscribe(): ${result.emailAddress}`);\n                })\n                .catch((error) => {\n                  reject(error.Message);\n                });\n\n              return;\n            }\n            reject(new Error('Subscriber list not configured'));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Email;\n","module.exports = require(\"babel-runtime/core-js/object/freeze\");","const _ = require('lodash');\n\nconst roles = [\n  {\n    name: 'Admin',\n    slug: 'admin',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: true,\n      settings: true,\n      userSettings: true,\n      tools: true,\n      ecommerce: true,\n    },\n  },\n  {\n    name: 'Editor',\n    slug: 'editor',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: true,\n      entityRead: true,\n      entityUpdate: true,\n      entityDelete: true,\n\n      taxonomyCreate: true,\n      taxonomyRead: true,\n      taxonomyUpdate: true,\n      taxonomyDelete: true,\n\n      fileCreate: true,\n      fileRead: true,\n      fileUpdate: true,\n      fileDelete: true,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: true,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n  {\n    name: 'Guest',\n    slug: 'guest',\n    permissions: {\n      entityGrid: true,\n\n      entityCreate: false,\n      entityRead: true,\n      entityUpdate: false,\n      entityDelete: false,\n\n      taxonomyCreate: false,\n      taxonomyRead: true,\n      taxonomyUpdate: false,\n      taxonomyDelete: false,\n\n      fileCreate: false,\n      fileRead: true,\n      fileUpdate: false,\n      fileDelete: false,\n\n      config: false,\n      schema: false,\n      user: false,\n      settings: false,\n      userSettings: false,\n      tools: false,\n      ecommerce: false,\n    },\n  },\n];\n\nclass Roles {\n  roles() {\n    return roles.map(role => Object.freeze(role));\n  }\n  role(slug) {\n    return _.find(this.roles(), { slug });\n  }\n}\n\nmodule.exports = Roles;\n","module.exports = require(\"@cloudant/cloudant\");","const _ = require('lodash');\nconst axios = require('axios');\nconst passwordHash = require('password-hash');\nconst ClientConfig = require('./client-config');\n\nclass Assist {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async deleteFiles(fileNames) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetsSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n\n    if (fileNames.length === 0) {\n      return [];\n    }\n\n    const result = (await axios.post(`${this.config.assist.url}/${assetsSlug}/file/delete`, { fileNames }, {\n      auth: {\n        username: this.config.assist.username,\n        password: passwordHash.generate(this.config.assist.password),\n      },\n    })).data;\n\n    return result;\n  }\n\n}\n\nmodule.exports = Assist;\n","module.exports = require(\"express\");","module.exports = ({\n  User,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.create(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.read(req.query.userId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.update(req.body.user));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/user.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'user'),\n    asyncMiddleware(async (req, res) => {\n      const user = User(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await user.delete(req.body.userId || req.body.userIds || req.query.userId || req.query.userIds));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Tools,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/tools/export-db.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'tools'),\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        const db = await tools.getDb();\n\n        res.setHeader('Content-Disposition', `attachment; filename=${req.session.slug}.json`);\n        res.setHeader('Content-Type', 'application/json');\n        res.status(200);\n        res.send(db);\n\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/tools/changes.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const tools = Tools(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await tools.getChanges());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Jwt,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  // handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /token:\n   *  get:\n   *    tags:\n   *      - token\n   *    summary: Get JWT\n   *    description: Get Json Web Token (JWT) for API access\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Slug for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: userId\n   *        description: User ID for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: role\n   *        description: Role for token payload (super user only)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: expiresIn\n   *        description: Duration of token in seconds\n   *        in: query\n   *        required: false\n   *        type: number\n   *    responses:\n   *      200:\n   *        description: Token\n   */\n\n  router.get(\n    '/token.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      const payload = {\n        role: req.session.role,\n        slug: req.session.slug,\n        userId: req.session.userId,\n      };\n\n      if (req.session.role === 'super' || config.environment === 'development') {\n        payload.role = req.query.role || req.session.role || config.dev.role;\n        payload.slug = req.query.slug || req.session.slug || config.dev.slug;\n        if (payload.role !== 'guest') {\n          payload.userId = req.query.userId || req.session.userId || config.dev.userId;\n        }\n      }\n\n      const _ = require('lodash');\n\n      let options = _.pickBy(req.query, (value, key) => /^(expiresIn|notBefore|audience|issuer|jwtid|subject|noTimestamp|header)$/.test(key));\n\n      options = _.mapValues(options, (value) => {\n        if (!_.isNaN(+value)) { // Check if value is a numeric string\n          return +value; // Convert numeric string to number\n        }\n        return value;\n      });\n\n      const jwt = Jwt(config);\n\n      const token = jwt.signToken(payload, options);\n\n      req.session.apiToken = token;\n\n      const response = {\n        token,\n        payload,\n        options,\n      };\n\n      handleResponse(req, res, response);\n    })\n  );\n\n};\n","module.exports = ({\n  Taxonomy,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * definitions:\n   *  TaxonomyTerm:\n   *    type: object\n   *    properties:\n   *      id:\n   *        type: string\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      terms:\n   *        type: array\n   *        items:\n   *          type: object\n   *          $ref: '#/definitions/TaxonomyTerm'\n   */\n\n  /**\n   * @swagger\n   * definitions:\n   *  Taxonomy:\n   *    type: object\n   *    properties:\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      terms:\n   *        type: array\n   *        items:\n   *          type: object\n   *          $ref: '#/definitions/TaxonomyTerm'\n   */\n\n  router.post(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.create(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /taxonomy:\n   *  get:\n   *    tags:\n   *      - taxonomy\n   *    summary: Get taxonomy\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: slug\n   *        description: Taxonomy slug\n   *        in: query\n   *        required: true\n   *        type: string\n   *    responses:\n   *      200:\n   *        description: Taxonomy\n   *        schema:\n   *          type: object\n   *          $ref: '#/definitions/Taxonomy'\n   */\n  router.get(\n    '/taxonomy.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.read(req.query.slug || req.query.taxonomySlug), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.update(req.body.taxonomy));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.delete(req.body.taxonomySlug || req.body.taxonomySlugs || req.query.taxonomySlug || req.query.taxonomySlugs));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.createTerm(req.body.slug || req.body.taxonomySlug, req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.updateTerm(req.query.term || req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/taxonomy/term.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'taxonomyUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const taxonomy = Taxonomy(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await taxonomy.deleteTerm(req.query.term || req.body.term));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Ecommerce,\n  Email,\n  Stripe,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.all(\n    '/stripe/checkout.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const token = req.body.token || JSON.parse(req.query.token);\n      const order = req.body.order || JSON.parse(req.query.order);\n\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.checkout(token, order));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/stripe/refund.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const order = req.body.order || JSON.parse(req.query.order);\n      const amount = Number(req.body.amount || req.query.amount || 0) * 100;\n\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.refund(order, amount));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/stripe/account.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const stripe = Stripe(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await stripe.retrieveAccount());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/stripe/email.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig(req.session.slug);\n      const email = Email(config);\n      const stripe = Stripe(config);\n      const ecommerce = Ecommerce(config);\n\n      const settings = await stripe.getSettings();\n      const order = await ecommerce.getOrder(req.query.orderId);\n\n      const data = {\n        settings,\n        order,\n      };\n\n      const template = await email.getTemplate(`${req.session.slug}/${req.query.template}`, data);\n\n      try {\n        handleResponse(req, res, template.html);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = require(\"twitter\");","module.exports = ({\n  ClientConfig,\n  Instagram,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  const instagramAccessTokenMap = {};\n\n  router.get(\n    /\\/social\\/twitter\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      const Promise = require('bluebird');\n      const Twitter = require('twitter');\n\n      const twitter = Promise.promisifyAll(new Twitter({\n        consumer_key: config.provider.twitter.consumerKey,\n        consumer_secret: config.provider.twitter.consumerSecret,\n        access_token_key: config.provider.twitter.accessTokenKey,\n        access_token_secret: config.provider.twitter.accessTokenSecret,\n      }));\n\n      try {\n        handleResponse(req, res, await twitter[`${method}Async`](params.join('/'), req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    /\\/social\\/instagram\\/([^/]+)\\/?(.+)?/,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const method = req.params[0];\n      const params = req.params[1].split('/').filter(param => param !== '');\n\n      const config = await getConfig(req.session.slug);\n\n      if (!instagramAccessTokenMap[req.session.slug]) {\n        const cc = ClientConfig(config);\n\n        try {\n          const clientConfig = await cc.get();\n          instagramAccessTokenMap[req.session.slug] = clientConfig.provider.instagram.access_token;\n        } catch (error) {\n          handleError(res, new Error('Instagram: access_token required'));\n          return;\n        }\n      }\n\n      req.query.access_token = instagramAccessTokenMap[req.session.slug];\n\n      const instagram = Instagram({\n        client_id: config.provider.instagram.clientId,\n      });\n\n      try {\n        const result = await instagram[method](params.join('/'), req.query);\n        try {\n          delete result.pagination.next_url;\n        } catch (error) {\n          //\n        }\n        handleResponse(req, res, result, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Shopify,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /shopify/catalog:\n   *  get:\n   *    tags:\n   *      - shopify\n   *    summary: Get Facebook product feed xml\n   * #   description: Get Facebook product feed xml\n   *    produces:\n   *      - application/rss+xml\n   *    parameters:\n   *      - name: shopLink\n   *        description: Shop URL\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: productLinkTemplate\n   *        description: Product URL Handlebars template, containing {{handle}}\n   *        in: query\n   *        required: true\n   *        type: string\n   *    responses:\n   *      200:\n   *        description: XML Product Feed\n   */\n  router.get(\n    '/shopify/catalog.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const shopify = Shopify(await getConfig(req.session.slug));\n\n      try {\n        res.setHeader('Content-Type', 'application/rss+xml');\n        handleResponse(req, res, await shopify.getCatalog(req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Shippo,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.all(\n    '/shippo/quote.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const shippo = Shippo(await getConfig());\n\n      const address = req.body.address || JSON.parse(req.params.address);\n      const parcel = req.body.parcel || JSON.parse(req.params.parcel);\n\n      try {\n        handleResponse(req, res, await shippo.getQuote(address, parcel), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Settings,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/settings.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const settings = Settings(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await settings.update(req.body.settings));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Schema,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.post(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.create(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.read(req.query.schemaId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.update(req.body.schema));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/schema.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.delete(req.body.schemaSlug || req.body.schemaSlugs || req.query.schemaSlug || req.query.schemaSlugs));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/schemas.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'schema'),\n    asyncMiddleware(async (req, res) => {\n      const schema = Schema(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await schema.updateAll(req.body.schemas));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","const _ = require('lodash');\nconst axios = require('axios');\n\nmodule.exports = ({\n  Auth,\n  ClientConfig,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  const providerApiBaseUrl = {\n    google: 'https://www.googleapis.com',\n    instagram: 'https://api.instagram.com',\n    spotify: 'https://api.spotify.com',\n    vimeo: 'https://api.vimeo.com',\n  };\n\n  const providerApiHandler = asyncMiddleware(async (req, res) => {\n    const method = req.method;\n    const provider = req.params[0];\n    const userId = req.params[2] ? req.params[1] : null;\n    const endpoint = (req.params[2] || req.params[1]).split('/').filter(param => param !== '').join('/');\n\n    const config = await getConfig(req.session.slug);\n\n    const cc = ClientConfig(config);\n\n    let clientConfig = await cc.get();\n    let providerConfig;\n\n    if (userId) {\n      if (!clientConfig.userSettings[userId]) {\n        throw Error(`User settings not found: ${userId}`);\n      }\n      providerConfig = clientConfig.userSettings[userId].provider[provider];\n    } else {\n      providerConfig = clientConfig.provider[provider];\n    }\n\n    if (Math.floor(new Date().getTime() / 1000) - (providerConfig.begins || 0) > providerConfig.expires_in) {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      if (userId) {\n        clientConfig = await auth.authProvider(provider, {}, userId, true);\n        providerConfig = clientConfig.userSettings[userId].provider[provider];\n      } else {\n        clientConfig = await auth.authProvider(provider, {}, null, true);\n        providerConfig = clientConfig.provider[provider];\n      }\n    }\n\n    let params = _.merge({}, req.query);\n    params = _.omitBy(params, (value, key) => /^(__)/.test(key));\n\n    if (!/bearer/i.test(providerConfig.token_type)) {\n      params.access_token = providerConfig.access_token;\n    }\n\n    try {\n      const result = await axios.request({\n        url: endpoint,\n        baseURL: providerApiBaseUrl[provider],\n        method,\n        headers: {\n          Authorization: `Bearer ${providerConfig.access_token}`,\n        },\n        params,\n      });\n\n      handleResponse(req, res, result.data, true);\n    } catch (error) {\n      handleError(req, res, error);\n    }\n  });\n\n  router.all(\n    /\\/provider\\/([^/]+)\\/([^/]+)\\/api\\/?(.+)?/,\n    cacheMiddleware,\n    providerApiHandler,\n  );\n\n  router.all(\n    /\\/provider\\/([^/]+)\\/api\\/?(.+)?/,\n    cacheMiddleware,\n    providerApiHandler,\n  );\n\n};\n","const _ = require('lodash');\n\nmodule.exports = ({\n  Pdf,\n  ClientConfig,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleError,\n}) => {\n\n  router.get(\n    '/pdf/view.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          pdf.getPdf(payload)\n            .then((pdf) => {\n              res.type('application/pdf');\n              res.status(200);\n              res.send(pdf);\n            }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/download.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          pdf.getPdf(payload)\n            .then((pdf) => {\n              res.attachment(payload.fileName || 'download.pdf');\n              res.status(200);\n              res.send(pdf);\n            }, handleError.bind(null, req, res));\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/payload.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const pdf = Pdf(await getConfig(req.session.slug));\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          res.status(200);\n          res.json(payload);\n        }, handleError.bind(null, req, res));\n    })\n  );\n\n  router.get(\n    '/pdf/submit.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig(req.session.slug);\n\n      const cc = ClientConfig(config);\n      const clientConfig = await cc.get();\n\n      const assetSlug = _.get(clientConfig, 'assets.slug', req.session.slug);\n\n      const pdf = Pdf(config);\n\n      pdf.getPayload(req.query.template, req.query.id, req.session.role)\n        .then((payload) => {\n          payload = JSON.stringify(payload).replace(/'/gi, '’');\n\n          res.status(200);\n          res.send(`\n          <body onload='form.submit()'>\n            <form id='form' method='POST' action='${config.assist.url}/${assetSlug}/pdf/download' target='_self'>\n              <input type='hidden' name='payload' value='${payload}' />\n            </form>\n          </body>\n        `);\n        }, handleError.bind(null, req, res));\n    })\n  );\n};\n","module.exports = ({\n  ClientConfig,\n  router,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /metadata:\n   *  get:\n   *    tags:\n   *      - metadata\n   *    summary: Get metadata\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Metadata\n   *        schema:\n   *          type: object\n   *          properties:\n   *            description:\n   *              type: string\n   */\n  router.get(\n    '/metadata.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const cc = ClientConfig(await getConfig(req.session.slug));\n\n      const clientConfig = await cc.get();\n\n      try {\n        handleResponse(req, res, clientConfig.client.metadata, true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","const isArray = require('lodash/isArray');\n\nmodule.exports = ({\n  Db,\n  Entity,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * definitions:\n   *  Entity:\n   *    type: object\n   *    required:\n   *      - _id\n   *      - _rev\n   *    properties:\n   *      _id:\n   *        type: string\n   *      _rev:\n   *        type: string\n   *      schema:\n   *        type: string\n   *      title:\n   *        type: string\n   *      slug:\n   *        type: string\n   *      thumbnail:\n   *        type: object\n   *      fields:\n   *        type: object\n   *      published:\n   *        type: boolean\n   *      publishedAt:\n   *        type: string\n   */\n\n  /**\n   * @swagger\n   * /entities/index:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Show indexes\n   *    description: Show all indexes, use this to find fields available for search/query.\n   *    produces:\n   *      - application/json\n   *    parameters: []\n   *    responses:\n   *      200:\n   *        description: Indexes\n   */\n  router.get(\n    '/entities/index.:ext?',\n    asyncMiddleware(async (req, res) => {\n      try {\n        handleResponse(req, res, await Db(await getConfig(req.session.slug)).indexAsync());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/search:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Search entities\n   *    description: This endpoint extends Cloudant's Lucene based search. Learn more from Cloudant's [documentation](https://docs.cloudant.com/search.html).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: Lucene search query\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: include_docs\n   *        description: Include docs in search results (ignored if `children` or `parents` is `true`)\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: sort\n   *        description: Field to sort results by. Prefixed with `-` to reverse order. Suffixed with &#60;`string|number`&#62;\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: limit\n   *        description: Limit results (max 200)\n   *        in: query\n   *        required: false\n   *        type: number\n   *      - name: bookmark\n   *        description: Bookmark for the next page of results\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: group_field\n   *        description: Field to group results by\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: index\n   *        description: Search index\n   *        in: query\n   *        required: false\n   *        type: string\n   *        default: all\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: trashed\n   *        description: Get trashed entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Search result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            total_rows:\n   *              type: number\n   *            rows:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/search?.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      // eslint-disable-next-line\n      const include_docs = input.include_docs !== undefined\n        ? JSON.parse(input.include_docs) : false;\n\n      // eslint-disable-next-line\n      const include_fields = input.include_fields !== undefined\n        ? typeof input.include_fields === 'object' ? input.include_fields : JSON.parse(input.include_fields)\n        : [];\n\n      let children = input.children !== undefined\n        ? typeof input.children === 'object' ? input.children : JSON.parse(input.children)\n        : false;\n      let parents = input.parents !== undefined\n        ? typeof input.parents === 'object' ? input.parents : JSON.parse(input.parents)\n        : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      const trashed = input.trashed !== undefined\n        ? JSON.parse(input.trashed) : false;\n\n      const sort = input.sort !== undefined\n        ? input.sort : null;\n      const limit = input.limit !== undefined\n        ? parseInt(input.limit, 10) : null;\n\n      const bookmark = input.bookmark !== undefined\n        ? input.bookmark : null;\n\n      // eslint-disable-next-line\n      const group_field = input.group_field !== undefined\n        ? input.group_field : null;\n\n      const index = input.index !== undefined\n        ? input.index : null;\n\n      const q = input.query || input.q;\n\n      let query = [];\n\n      query.push(trashed ? 'trashed:true' : '!trashed:true');\n\n      if (req.session.role === 'guest') {\n        query.push('published:true');\n      }\n\n      if (q) {\n        query.push(`(${q})`);\n      }\n\n      query = query.join(' AND ');\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entitySearch({\n          query,\n          include_docs,\n          include_fields,\n          sort,\n          limit,\n          bookmark,\n          group_field,\n          index,\n        }, children, parents, req.session.role), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities/find:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Query entities\n   *    description: This endpoint extends CouchDB's Mango query. Learn more from Cloudant's [documentation](https://docs.cloudant.com/cloudant_query.html#finding-documents-using-an-index).\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: query\n   *        description: JSON query object, refer to CouchDB/Cloudant docs.\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Query result\n   *        schema:\n   *          type: object\n   *          properties:\n   *            bookmark:\n   *              type: string\n   *            docs:\n   *              type: array\n   *              items:\n   *                $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities/find.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      let children = input.children !== undefined\n        ? typeof input.children === 'object' ? input.children : JSON.parse(input.children)\n        : false;\n      let parents = input.parents !== undefined\n        ? typeof input.parents === 'object' ? input.parents : JSON.parse(input.parents)\n        : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      const trashed = input.trashed !== undefined\n        ? JSON.parse(input.trashed) : false;\n\n      const query = input.query\n        ? JSON.parse(input.query) : { selector: {} };\n\n      query.use_index = ['entityIndex', 'entity'];\n\n      if (!query.selector.$and) {\n        query.selector = {\n          $and: [\n            query.selector,\n          ],\n        };\n      }\n\n      if (trashed) {\n        query.selector.$and.push({ trashed: true });\n      } else {\n        query.selector.$and.push({\n          $or: [\n            {\n              trashed: {\n                $exists: false,\n              },\n            },\n            {\n              trashed: false,\n            },\n          ],\n        });\n      }\n\n      if (req.session.role === 'guest') {\n        query.selector.$and.push({ published: true });\n      }\n\n      if (req.query.limit) {\n        query.limit = parseInt(req.query.limit, 10);\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityFind(query, children, parents, req.session.role), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entities/field.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.fieldValues(req.query.slug || req.query.fieldSlug, req.query.searchTerm), true);\n      } catch (error) {\n        handleError(res, error);\n      }\n    })\n  );\n\n  /**\n   * @swagger\n   * /entities:\n   *  get:\n   *    tags:\n   *      - entities\n   *    summary: Get all entities\n   *    description: Get all entities, optionally from an array of IDs\n   *    produces:\n   *      - application/json\n   *    parameters:\n   *      - name: id\n   *        description: Entity ID\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: ids\n   *        description: Entity IDs\n   *        in: query\n   *        required: false\n   *        type: array\n   *        items:\n   *          type: string\n   *      - name: children\n   *        description: Get child entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *      - name: parents\n   *        description: Get parent entities\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: false\n   *    responses:\n   *      200:\n   *        description: Entities\n   *        schema:\n   *          type: array\n   *          items:\n   *            $ref: '#/definitions/Entity'\n   */\n  router.all(\n    '/entities.:ext?',\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query;\n\n      let children = input.children !== undefined\n        ? typeof input.children === 'object' ? input.children : JSON.parse(input.children)\n        : false;\n      let parents = input.parents !== undefined\n        ? typeof input.parents === 'object' ? input.parents : JSON.parse(input.parents)\n        : false;\n\n      if (children === true) {\n        children = 1;\n      }\n      if (parents === true) {\n        parents = 1;\n      }\n\n      let ids = input.ids || input.id;\n\n      if (ids) {\n        ids = isArray(ids) ? ids : [ids];\n      }\n\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityList(ids, children, parents, req.session.role), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity/revisions.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRevisions(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityCreate'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityCreate(req.body.entity));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityRead'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityRead(req.query.id));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityUpdate'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityUpdate(req.body.entity || req.body.entities, req.body.restore || false));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityDelete(req.body.entity || req.body.entities, req.body.forever || false));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/entity/trashed.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'entityDelete'),\n    asyncMiddleware(async (req, res) => {\n      const entity = Entity(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await entity.entityDelete('trashed'));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Embedly,\n  router,\n  authMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/embedly/oembed.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const embedly = Embedly(await getConfig());\n\n      try {\n        handleResponse(req, res, await embedly.oembed(req.query.url || req.query.urls));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = ({\n  Email,\n  Entity,\n  router,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  /**\n   * @swagger\n   * /email/preview:\n   *  get:\n   *    tags:\n   *      - email\n   *    summary: Preview email template\n   * #   description: Preview email template\n   *    produces:\n   *      - text/html\n   *    parameters:\n   *      - name: slug\n   *        description: Slug (optionally override slug in development mode)\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: templateSlug\n   *        description: Template slug (folder name of the template)\n   *        in: query\n   *        required: true\n   *        type: string\n   *      - name: payload\n   *        description: JSON payload from which to render the template\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: entityId\n   *        description: Entity `_id` from which to render the template\n   *        in: query\n   *        required: false\n   *        type: string\n   *      - name: inlineStyles\n   *        description: Inline CSS\n   *        in: query\n   *        required: false\n   *        type: boolean\n   *        default: true\n   *    responses:\n   *      200:\n   *        description: Template\n   */\n  router.all(\n    '/email/preview.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query || {};\n\n      const templateOptions = {\n        data: input.data ? JSON.parse(input.data) : false,\n        inlineStyles: input.inlineStyles ? JSON.parse(input.inlineStyles) : true,\n        inky: input.inky ? JSON.parse(input.inky) : false,\n        mjml: input.mjml ? JSON.parse(input.mjml) : false,\n        skipValidation: input.skipValidation ? JSON.parse(input.skipValidation) : false,\n      };\n\n      const slug = input.slug || req.session.slug;\n\n      // if (!slug) {\n      //   throw new Error('Missing `slug` parameter');\n      // }\n\n      async function renderTemplate(data = {}) {\n        if (templateOptions.data) {\n          handleResponse(req, res, data);\n          return;\n        }\n\n        const email = Email(await getConfig(slug));\n\n        try {\n          const template = await email.getTemplate(input.templateSlug, data, templateOptions);\n\n          handleResponse(req, res, template.html);\n        } catch (error) {\n          handleError(req, res, error);\n        }\n      }\n\n      if (input.payload) {\n        renderTemplate(JSON.parse(input.payload));\n        return;\n      }\n\n      if (input.entityId) {\n        const entity = Entity(await getConfig(slug));\n\n        const entities = (await entity.entityList([input.entityId], 2)).map(row => row.doc);\n\n        renderTemplate(entity.flattenValues(entities)[0]);\n        return;\n      }\n\n      renderTemplate();\n    })\n  );\n\n  router.all(\n    '/email/send.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const input = Object.keys(req.body).length ? req.body : req.query || {};\n\n      const templateOptions = {\n        inlineStyles: input.inlineStyles ? JSON.parse(input.inlineStyles) : true,\n        inky: input.inky ? JSON.parse(input.inky) : false,\n        mjml: input.mjml ? JSON.parse(input.mjml) : false,\n        skipValidation: input.skipValidation ? JSON.parse(input.skipValidation) : true,\n      };\n\n      const emailOptions = {\n        fromName: input.fromName || '',\n        fromEmail: input.fromEmail,\n        toName: input.toName || '',\n        toEmail: input.toEmail,\n        from: `${input.fromName || ''} <${input.fromEmail}>`,\n        to: input.toEmail,\n        subject: input.subject,\n      };\n\n      const slug = input.slug || req.session.slug;\n\n      const email = Email(await getConfig(slug));\n\n      try {\n        const result = await email.sendEmail(emailOptions, input.templateSlug, input.payload, templateOptions);\n\n        handleResponse(req, res, result);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/email/subscribe.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const email = Email(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await email.subscribe({\n          email: req.body.email || req.query.email,\n          name: req.body.name || req.query.name || '',\n        }));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const isArray = require('lodash/isArray');\n\nmodule.exports = ({\n  Ecommerce,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/ecommerce/order/message/:message.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        const order = await ecommerce.getOrder(req.query.orderId);\n        handleResponse(req, res, order.messages[req.params.message].email.html);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (isArray(req.query.sort)) {\n        req.query.sort = JSON.stringify(req.query.sort).replace(/\\\\\"/g, '');\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.getType(req.params.type, req.query));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (!/^(discount|order)$/.test(req.params.type)) {\n        handleError(req, res, `Illegal type: ${req.params.type}`);\n        return;\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.setType(req.params.type, req.body.item));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.delete(\n    '/ecommerce/:type.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'ecommerce'),\n    asyncMiddleware(async (req, res) => {\n      if (!/^(discount)$/.test(req.params.type)) {\n        handleError(req, res, `Illegal type: ${req.params.type}`);\n        return;\n      }\n\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.deleteType(req.body.item));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.get(\n    '/ecommerce/discount/:code.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const ecommerce = Ecommerce(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await ecommerce.verifyDiscount(req.params.code));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","module.exports = require(\"express-useragent\");","module.exports = ({\n  router,\n}) => {\n\n  router.all('/debug/useragent.:ext?', (req, res) => {\n    const expressUseragent = require('express-useragent');\n    const useragent = expressUseragent.parse(req.headers['user-agent']);\n\n    res.status(200);\n    res.send(`\n      <html>\n        <head>\n          <title>${useragent.source}</title>\n          <meta name=\"description\" content=\"${useragent.source}\">\n        </head>\n        <body>${useragent.source}</body>\n      </html>\n    `);\n  });\n\n};\n","module.exports = ({\n  ClientConfig,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/config.:ext?',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.get());\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/config.:ext?',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'config'),\n    asyncMiddleware(async (req, res) => {\n      const clientConfig = ClientConfig(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await clientConfig.set(req.body.config));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  router,\n  cache,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n}) => {\n\n  /**\n   * @swagger\n   * /cache/clear:\n   *  get:\n   *    tags:\n   *      - cache\n   *    summary: Clear cache\n   *    description: Clears the LRU cache of API responses\n   *    produces:\n   *      - text/plain\n   *    responses:\n   *      200:\n   *        description: Result\n   */\n  router.get(\n    '/cache/clear.:ext?',\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      if (!config.cache.enabled) {\n        handleResponse(req, res, 'Cache disabled');\n        return;\n      }\n\n      const pattern = cache.store.name === 'redis' ? '*' : undefined;\n\n      cache.keys(pattern).then((keys) => {\n        const items = keys.filter(key => key.indexOf(req.session.slug) === 0);\n\n        items.forEach(key => cache.del(key));\n\n        handleResponse(req, res, `${items.length} items removed from cache`);\n      });\n    })\n  );\n\n};\n","module.exports = ({\n  Auth,\n  router,\n  authMiddleware,\n  permissionMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/auth/:provider/config',\n    authMiddleware,\n    permissionMiddleware.bind(null, ['settings', 'userSettings']),\n    asyncMiddleware(async (req, res) => {\n      const config = await getConfig();\n\n      if (!config.provider[req.params.provider]) {\n        res.status(404);\n        res.send({});\n        return;\n      }\n\n      res.status(200);\n      res.send({ clientId: config.provider[req.params.provider].clientId });\n    })\n  );\n\n  router.get(\n    '/auth/:provider',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    (req, res) => {\n      res.status(req.query.error ? 500 : 200);\n      res.send(`${req.params.provider}: ${(req.query.error_description ? req.query.error_description : 'successfully authenticated')}`);\n    }\n  );\n\n  router.post(\n    '/auth/:provider',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'settings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/auth/:provider/refresh',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, null, true));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.post(\n    '/auth/:provider/:userId',\n    authMiddleware,\n    permissionMiddleware.bind(null, 'userSettings'),\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, req.params.userId));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n  router.put(\n    '/auth/:provider/:userId/refresh',\n    authMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const auth = Auth(await getConfig(req.session.slug));\n\n      try {\n        handleResponse(req, res, await auth.authProvider(req.params.provider, req.body, req.params.userId, true));\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n\n};\n","module.exports = ({\n  Analytics,\n  router,\n  authMiddleware,\n  cacheMiddleware,\n  asyncMiddleware,\n  getConfig,\n  handleResponse,\n  handleError,\n}) => {\n\n  router.get(\n    '/analytics.:ext?',\n    authMiddleware,\n    cacheMiddleware,\n    asyncMiddleware(async (req, res) => {\n      const analytics = Analytics(await getConfig());\n\n      try {\n        handleResponse(req, res, await analytics.get(req.query), true);\n      } catch (error) {\n        handleError(req, res, error);\n      }\n    })\n  );\n};\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass User {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async create(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.users.push(user);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async update(user) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.users, { id: user.id });\n\n    if (index === -1) {\n      throw Error(`User not found: ${user.id}`);\n    }\n\n    clientConfig.users.splice(index, 1, user);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(userId) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    userId = _.isArray(userId) ? userId : [userId];\n\n    clientConfig.users = clientConfig.users.filter(user => userId.indexOf(user.id) === -1);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = User;\n","const Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst Cloudant = require('@cloudant/cloudant');\nconst Db = require('./db');\n\nclass Tools {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getDb() {\n    const result = await Db.connect(this.config).fetch({\n      include_docs: true,\n    });\n\n    return result;\n  }\n\n  async getChanges() {\n    const result = await Db.connect(this.config).changes({\n      limit: 50,\n      include_docs: true,\n      filter: 'tools/changesEntity',\n    });\n\n    return result;\n  }\n\n  async importDb(dbBackupFile) {\n    const dbName = this.config.db.name;\n\n    const fileConents = await fs.readFileAsync(dbBackupFile.path);\n\n    const docs = JSON.parse(fileConents).rows.map((row) => {\n      const { doc } = row;\n      delete doc._rev;\n      return doc;\n    });\n\n    await fs.unlinkAsync(dbBackupFile.path);\n\n    const cloudant = new Cloudant({\n      url: this.config.db.url,\n      plugins: ['promises', 'retry'],\n    }).db;\n\n    try {\n      await cloudant.destroy(dbName);\n    } catch (error) {\n      //\n    }\n\n    await cloudant.create(dbName);\n\n    const result = await Db.connect(this.config, dbName).bulk({ docs });\n\n    return result;\n  }\n\n}\n\nmodule.exports = Tools;\n","const _ = require('lodash');\nconst Db = require('./db');\nconst ClientConfig = require('./client-config');\n\nclass Taxonomy {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async create(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.taxonomies.push(taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async read(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const taxonomy = _.find(clientConfig.taxonomies, { slug: taxonomySlug });\n\n    if (!taxonomy) {\n      throw Error(`Taxonomy not found: ${taxonomySlug}`);\n    }\n\n    return taxonomy;\n  }\n\n  async update(taxonomy) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const index = _.findIndex(clientConfig.taxonomies, { slug: taxonomy.slug });\n\n    if (index === -1) {\n      throw Error(`Taxonomy not found: ${taxonomy.slug}`);\n    }\n\n    clientConfig.taxonomies.splice(index, 1, taxonomy);\n\n    return cc.set(clientConfig);\n  }\n\n  async delete(taxonomySlug) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    taxonomySlug = _.isArray(taxonomySlug) ? taxonomySlug : [taxonomySlug];\n\n    clientConfig.taxonomies = clientConfig.taxonomies.filter(taxonomy => taxonomySlug.indexOf(taxonomy.slug) === -1);\n\n    return cc.set(clientConfig);\n  }\n\n  async entitiesByTerm(term) {\n    const db = Db.connect(this.config);\n\n    const entityGroups = (await db.view('entity', 'byTaxonomyTerm', { keys: [term.id], group: true })).rows.map(row => row.value)[0];\n\n    if (!entityGroups) {\n      return [];\n    }\n\n    let entityIds = [];\n\n    _.forEach(entityGroups, (entities) => {\n      entityIds = entityIds.concat(entities);\n    });\n\n    entityIds = _.uniq(entityIds);\n\n    const entities = (await db.fetch({ keys: entityIds, include_docs: true })).rows\n      .filter(row => row.doc)\n      .map(row => row.doc);\n\n    return entities;\n  }\n\n  async createTerm(taxonomySlug, term) {\n    const taxonomy = await this.read(taxonomySlug);\n\n    taxonomy.terms.push(term);\n\n    return this.update(taxonomy);\n  }\n\n  async updateTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.map((_term) => {\n            if (_term.id === term.id) {\n              _term.title = term.title;\n              _term.slug = term.slug;\n            }\n\n            if (!_term.parents) {\n              _term.parents = [];\n            }\n\n            _term.parents = _term.parents.map((parent) => {\n              if (parent.id === term.id) {\n                parent.title = term.title;\n                parent.slug = term.slug;\n              }\n              return parent;\n            });\n\n            return _term;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n\n  async deleteTerm(term) {\n    let entities = await this.entitiesByTerm(term);\n\n    entities = entities.map((entity) => {\n      entity.fields = _.mapValues(entity.fields, (field) => {\n        if (field.type === 'taxonomy' && field.value) {\n          if (!field.value.terms) {\n            field.value.terms = [];\n          }\n\n          field.value.terms = field.value.terms.filter((_term) => {\n            if (_term.id === term.id) {\n              return false;\n            }\n\n            if ((_term.parents || []).filter(parent => parent.id === term.id).length) {\n              return false;\n            }\n\n            return true;\n          });\n        }\n\n        return field;\n      });\n      return entity;\n    });\n\n    return Db.connect(this.config).bulk({ docs: entities });\n  }\n}\n\nmodule.exports = Taxonomy;\n","module.exports = require(\"hashids\");","module.exports = require(\"stripe\");","const _ = require('lodash');\nconst Stripe = require('stripe');\nconst Promise = require('bluebird');\nconst Hashids = require('hashids');\n\nconst ClientConfig = require('./client-config');\nconst Email = require('./email');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass StripeClass {\n  constructor(config) {\n    this.config = config;\n\n    this.stripe = Stripe(this.config.stripe.apiKey);\n    this.email = new Email(this.config);\n\n    this.hashids = new Hashids(this.config.slug, 6, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n  }\n\n  async getSettings() {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    let settings;\n\n    try {\n      settings = clientConfig.module.ecommerce;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    try {\n      settings.clientStripeAccountId = clientConfig.provider.stripe.stripe_user_id;\n    } catch (error) {\n      throw new Error(error);\n    }\n\n    settings.client = clientConfig.client;\n    settings.assets = clientConfig.assets;\n\n    return settings;\n  }\n\n  checkout(token, order) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n\n          const listId = _.get(settings, 'createsend.checkoutSubscriberListId');\n\n          if (order.subscribe && listId) {\n            this.email.subscribe(order.customerDetails, 'createsend', listId)\n              .then((result) => {\n                console.log(result);\n              }, (error) => {\n                console.error(error);\n              });\n          }\n\n          // lookup customer by email, create if not found\n          this.findOrCreateCustomer(order.customerDetails.email, order)\n            .then((customer) => {\n\n              // store order data (customer, items, address)\n              this.createOrder(order, customer)\n                .then((order) => {\n\n                  this.updateOrCreateStripeCustomer(settings.clientStripeAccountId, customer, token, order)\n                    .then((stripeCustomer) => {\n\n                      // update customer, append order to customer, update metadata\n                      this.updateCustomer(customer, stripeCustomer, order)\n                        .then((customer) => {\n\n                          // create charge, take fee\n                          this.createCharge(settings, stripeCustomer, customer, order)\n                            .then((updatedOrder) => {\n\n                              this.sendReceipt(settings, customer, order)\n                                .then((orderReceipt) => {\n\n                                  updatedOrder.messages.orderReceipt = orderReceipt;\n\n                                  this.sendNotification(settings, customer, order)\n                                    .then((orderNotification) => {\n\n                                      updatedOrder.messages.orderNotification = orderNotification;\n\n                                      // update order charge status, charge id\n                                      this.updateOrder(updatedOrder)\n                                        .then((finalOrder) => {\n\n                                          resolve(finalOrder);\n\n                                        }, reject);\n                                    }, reject);\n                                }, reject);\n                            }, reject);\n                        }, reject);\n                    }, reject);\n                }, reject);\n            }, reject);\n        }, reject)\n        .catch(reject);\n    });\n  }\n\n  retrieveAccount() {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.accounts.retrieve(settings.clientStripeAccountId)\n            .then(resolve, reject);\n        }, reject);\n    });\n  }\n\n  refund(order, amount) {\n    return new Promise((resolve, reject) => {\n      this.getSettings()\n        .then((settings) => {\n          this.stripe.refunds.create({\n            refund_application_fee: true,\n            charge: order.charge.id,\n            amount,\n          }, {\n            stripe_account: settings.clientStripeAccountId,\n          })\n            .then((refund) => {\n              this.stripe.charges.retrieve(order.charge.id, {\n                stripe_account: settings.clientStripeAccountId,\n              })\n                .then((charge) => {\n                  order.charge.status = charge.status;\n                  order.charge.amount = charge.amount;\n                  order.charge.amountRefunded = charge.amount_refunded;\n\n                  Helpers.createOrUpdate(this.config, order)\n                    .then(resolve, reject);\n                }, reject);\n            }, reject);\n        }, reject);\n    });\n  }\n\n  findOrCreateCustomer(email, order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'customerByEmail', {\n        keys: [email],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            resolve(body.rows[0].doc);\n\n          } else {\n            const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n            const newCustomer = {\n              type: 'customer',\n              createdAt: now,\n              modifiedAt: now,\n              email: order.customerDetails.email,\n              name: order.customerDetails.name,\n              phone: order.customerDetails.phone,\n              billingAddress: order.billingAddress,\n              shippingAddress: order.shippingAddress,\n              orders: [],\n            };\n\n            Db.connect(this.config).insert(newCustomer)\n              .then((body) => {\n                newCustomer._id = body.id;\n                newCustomer._rev = body.rev;\n\n                resolve(newCustomer);\n              }, reject);\n          }\n        }, reject);\n    });\n  }\n\n  updateOrCreateStripeCustomer(clientStripeAccountId, customer, token, order) {\n    return new Promise((resolve, reject) => {\n      const stripeCustomer = {\n        source: token,\n        email: order.customer.email,\n        description: order.customer.name,\n        metadata: {\n          customer_id: customer._id,\n        // billingAddress: JSON.stringify(order.billingAddress),\n        // shippingAddress: JSON.stringify(order.shippingAddress)\n        },\n      };\n\n      if (customer.stripe && customer.stripe.customer.id) {\n        this.stripe.customers.update(customer.stripe.customer.id, stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        })\n          .then(resolve, (error) => {\n            if (error.type === 'StripeInvalidRequestError' && error.param === 'id') {\n              this.stripe.customers.create(stripeCustomer, {\n                stripe_account: clientStripeAccountId,\n              }).then(resolve, reject);\n\n            } else {\n              reject(error);\n            }\n          });\n\n      } else {\n        this.stripe.customers.create(stripeCustomer, {\n          stripe_account: clientStripeAccountId,\n        }).then(resolve, reject);\n      }\n    });\n  }\n\n  createOrder(order, customer) {\n    return new Promise((resolve, reject) => {\n      const items = order.items.map(item => ({\n        id: item.id,\n        title: item.title.replace(/<br\\s?>/ig, ' ').replace(/<\\/?p>|<\\/?span>/ig, ''),\n        price: item.price,\n        quantity: item.quantity,\n        metadata: item.metadata || {},\n      }));\n\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      const newOrder = {\n        type: 'order',\n        orderId: this.hashids.encode(new Date().getTime()),\n        createdAt: now,\n        modifiedAt: now,\n        customer: {\n          id: customer._id,\n          email: customer.email,\n          name: customer.name,\n        },\n        items,\n        shippingMethod: {\n          name: order.shippingMethod.name,\n          amount: Number(order.shippingMethod.amount),\n        },\n        subtotal: Number(order.subtotal),\n        tax: {\n          rate: order.tax.rate || 0,\n          includedInPrice: order.tax.includedInPrice || false,\n          total: order.tax.total || 0,\n          show: order.tax.show || false,\n        },\n        discount: {\n          code: order.discount.code || '',\n          name: order.discount.name || '',\n          total: order.discount.total || 0,\n        },\n        total: Number(order.total),\n        billingAddress: order.billingAddress,\n        shippingAddress: order.shippingAddress,\n        messages: {},\n        status: 'pending',\n        test: true,\n      };\n\n      Db.connect(this.config).insert(newOrder)\n        .then((body) => {\n          newOrder._id = body.id;\n          newOrder._rev = body.rev;\n\n          resolve(newOrder);\n        }, reject);\n    });\n  }\n\n  updateOrder(order) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).insert(order)\n        .then((body) => {\n          order._rev = body.rev;\n\n          resolve(order);\n        }, reject);\n    });\n  }\n\n  updateCustomer(customer, stripeCustomer, order) {\n    return new Promise((resolve, reject) => {\n      const now = JSON.stringify(new Date()).replace(/\"/g, '');\n\n      customer.modifiedAt = now;\n\n      if (!customer.orders) {\n        customer.orders = [];\n      }\n\n      customer.orders.push(order._id);\n\n      if (!customer.stripe) {\n        customer.stripe = {\n          customer: {\n            id: null,\n          },\n        };\n      }\n\n      customer.stripe.customer.id = stripeCustomer.id;\n\n      Db.connect(this.config).insert(customer)\n        .then((body) => {\n          customer._rev = body.rev;\n\n          resolve(customer);\n        }, reject);\n    });\n  }\n\n  createCharge(settings, stripeCustomer, customer, order) {\n    return new Promise((resolve, reject) => {\n      const amount = Number(order.total) * 100;\n\n      const charge = {\n        amount,\n        currency: settings.currency.iso.toLowerCase(),\n        customer: stripeCustomer.id,\n        capture: true,\n        description: order.orderId,\n        // shipping: order.shippingAddress, // fraud prevention, must follow expected schema\n        metadata: {\n          customer_id: customer._id,\n          order_id: order._id,\n        },\n        statement_descriptor: _.kebabCase(settings.storeName).toUpperCase(),\n        application_fee: Math.ceil(amount * 0.02),\n      };\n\n      this.stripe.charges.create(charge, {\n        stripe_account: settings.clientStripeAccountId,\n      })\n        .then((charge) => {\n\n          order.charge = {\n            paymentGateway: 'stripe',\n            id: charge.id,\n            status: charge.status,\n            currency: charge.currency.toUpperCase(),\n            amount: charge.amount,\n            amountRefunded: charge.amount_refunded,\n          };\n\n          order.test = !charge.livemode;\n\n          resolve(order);\n\n        }, reject);\n    });\n  }\n\n  sendReceipt(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: customer.email,\n        subject: `Your order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-receipt`, templateData).then(resolve, reject);\n    });\n  }\n\n  sendNotification(settings, customer, order) {\n    return new Promise((resolve, reject) => {\n      const templateData = {\n        settings,\n        order,\n      };\n\n      const emailOptions = {\n        from: `${settings.emailSenderName} <${settings.emailSenderAddress}>`,\n        to: settings.emailSenderAddress,\n        subject: `New order at ${settings.storeName} (${order.orderId})`,\n      };\n\n      const assetSlug = _.get(settings, 'assets.slug', this.config.slug);\n\n      this.email.sendEmail(emailOptions, `${assetSlug}/order-notification`, templateData).then(resolve, reject);\n    });\n  }\n\n}\n\nmodule.exports = StripeClass;\n","module.exports = require(\"jsontoxml\");","module.exports = require(\"handlebars\");","module.exports = require(\"he\");","const axios = require('axios');\nconst he = require('he');\nconst Handlebars = require('handlebars');\nconst jsontoxml = require('jsontoxml');\n\nconst ClientConfig = require('./client-config');\n\nclass Shopify {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async getCatalog({ shopLink, productLinkTemplate }) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const result = (await axios({\n      url: `https://${clientConfig.provider.shopify.domain}.myshopify.com/api/graphql`,\n      method: 'post',\n      headers: {\n        'X-Shopify-Storefront-Access-Token': clientConfig.provider.shopify.storefrontAccessToken,\n      },\n      data: {\n        query: `\n          query {\n            shop {\n              name\n              primaryDomain {\n                url\n              }\n              description\n              products(first: 250) {\n                edges {\n                  node {\n                    id\n                    handle\n                    title\n                    description\n                    onlineStoreUrl\n                    images(first: 1) {\n                      edges {\n                        node {\n                          originalSrc\n                          transformedSrc\n                        }\n                      }\n                    }\n                    productType\n                    vendor\n                    availableForSale\n                    priceRange {\n                      minVariantPrice {\n                        amount\n                        currencyCode\n                      }\n                      maxVariantPrice {\n                        amount\n                        currencyCode\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `,\n      },\n    })).data.data;\n\n    const template = Handlebars.compile(productLinkTemplate);\n\n    const products = result.shop.products.edges.map(edge => ({\n      'g:id': edge.node.handle,\n      'g:title': he.encode(edge.node.title),\n      'g:description': he.encode(edge.node.description),\n      // 'g:link': edge.node.onlineStoreUrl,\n      'g:link': template({ handle: edge.node.handle }),\n      'g:image_link': edge.node.images.edges[0].node.originalSrc,\n      'g:brand': edge.node.vendor,\n      'g:condition': 'new',\n      'g:availability': edge.node.availableForSale ? 'in stock' : 'out of stock',\n      'g:price': `${edge.node.priceRange.minVariantPrice.amount} ${edge.node.priceRange.minVariantPrice.currencyCode}`,\n      // 'g:google_product_category': he.encode(edge.node.productType),\n    }));\n\n    const channel = [\n      { name: 'title', text: result.shop.name },\n      // { name: 'link', text: result.shop.primaryDomain.url },\n      { name: 'link', text: shopLink },\n      { name: 'description', text: result.shop.description },\n    ];\n\n    products.forEach((product) => {\n      channel.push({\n        name: 'item',\n        children: product,\n      });\n    });\n\n    return `<?xml version=\"1.0\"?>\n    <rss xmlns:g=\"http://base.google.com/ns/1.0\" version=\"2.0\">\n      ${jsontoxml({ channel })}\n    </rss>`;\n  }\n}\n\nmodule.exports = Shopify;\n","module.exports = require(\"shippo\");","const Promise = require('bluebird');\nconst shippo = require('shippo');\n\nclass Shippo {\n  constructor(config) {\n    this.config = config;\n\n    this.shippo = shippo(config.shippo.token);\n  }\n\n  getQuote(address, parcel) {\n    return new Promise((resolve, reject) => {\n\n      const addressFrom = {\n        object_purpose: 'QUOTE',\n        zip: this.config.shippo.fromZip,\n        country: this.config.shippo.fromCountry,\n      };\n\n      const addressTo = {\n        object_purpose: 'QUOTE',\n        // 'name': address.name,\n        // 'company': '',\n        // 'street1': address.street1,\n        // 'street2': address.street2,\n        // 'city': address.city,\n        // 'state': '',\n        zip: address.zip,\n        country: address.country,\n        // 'phone': address.phone,\n        // 'email': address.email,\n        metadata: '',\n      };\n\n      parcel.distance_unit = 'cm';\n      parcel.mass_unit = 'kg';\n\n      this.shippo.shipment.create({\n        object_purpose: 'QUOTE',\n        address_from: addressFrom,\n        address_to: addressTo,\n        parcel,\n      })\n        .then((shipment) => {\n          const ratesReady = (shipment, attempts) => {\n            if ((shipment.object_status === 'QUEUED' || shipment.object_status === 'WAITING') && attempts < 10) {\n              this.shippo.shipment.retrieve(shipment.object_id).then((val) => {\n                ratesReady(val, attempts + 1);\n              });\n\n            } else {\n              this.shippo.shipment.rates(shipment.object_id)\n                .then((rates) => {\n                  resolve(rates);\n\n                }, (error) => {\n                  console.error('There was an error retrieving rates : %s', error);\n                  reject(error);\n                });\n            }\n          };\n\n          ratesReady(shipment, 0);\n\n        }, (error) => {\n          console.error('There was an error creating shipment: %s', error);\n          reject(error);\n        });\n\n    });\n  }\n\n}\n\nmodule.exports = Shippo;\n","const _ = require('lodash');\nconst ClientConfig = require('./client-config');\n\nclass Settings {\n  constructor(config) {\n    this.config = config;\n\n    return this;\n  }\n\n  async update(settings) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    clientConfig.client = _.merge({}, clientConfig.client, settings);\n\n    return cc.set(clientConfig);\n  }\n}\n\nmodule.exports = Settings;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 64;","module.exports = require(\"recursive-readdir\");","module.exports = require(\"eval\");","const fs = require('fs');\nconst path = require('path');\nconst _ = require('lodash');\nconst _eval = require('eval');\nconst request = require('request-promise');\nconst readdir = require('recursive-readdir');\nconst Entity = require('./entity');\nconst ClientConfig = require('./client-config');\n\nclass Pdf {\n  constructor (config) {\n    this.config = config;\n  }\n\n  async getTemplates() {\n    const templates = {};\n\n    const files = await readdir(this.config.pdf.templatesPath);\n\n    files.forEach((file) => {\n      if (!/\\.js$/.test(file)) {\n        return;\n      }\n\n      const id = file\n        .replace(`${this.config.pdf.templatesPath}/`, '')\n        .replace('.js', '');\n\n      // eslint-disable-next-line\n      templates[id] = require(file);\n    });\n\n    return templates;\n  }\n\n  async getPayload (templateId, entityId, role) {\n    // if (!this.templates) {\n    //   this.templates = await this.getTemplates();\n    // }\n\n    // if (!this.templates[templateId]) {\n    //   throw new Error('Template not found');\n    // }\n\n    const template = _eval(fs.readFileSync(path.join(this.config.pdf.templatesPath, `${templateId}.js`), 'utf-8'), `${templateId}.js`, {}, true);\n\n    const entity = new Entity(this.config);\n\n    const entities = (await entity.entityList([entityId], 2, false, role)).map(row => row.doc);\n\n    if (entities.length === 0) {\n      throw new Error('Entity not found');\n    }\n\n    const payload = template(Entity.flattenValues(entities)[0]);\n\n    return payload;\n  }\n\n  async getPdf (payload) {\n    const cc = new ClientConfig(this.config);\n    const clientConfig = await cc.get();\n\n    const assetSlug = _.get(clientConfig, 'assets.slug', this.config.slug);\n    const assistPdfUrl = `${this.config.assist.url}/${assetSlug}/pdf/download`;\n\n    payload = typeof payload === 'object' ? JSON.stringify(payload).replace(/'/gi, '’') : payload;\n\n    const response = await request({\n      method: 'POST',\n      uri: assistPdfUrl,\n      encoding: null,\n      form: {\n        payload,\n      },\n    });\n\n    return response;\n  }\n\n}\n\nmodule.exports = Pdf;\n","module.exports = require(\"jsonwebtoken\");","const jwt = require('jsonwebtoken');\n\nclass Jwt {\n  constructor(config) {\n    this.config = config;\n  }\n\n  signToken(payload, options = {}) {\n    return jwt.sign(payload, this.config.auth.tokenSecret, options);\n  }\n\n  verifyToken(token) {\n    return jwt.verify(token, this.config.auth.tokenSecret);\n  }\n}\n\nmodule.exports = Jwt;\n","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst request = require('request-promise');\n\nmodule.exports = function (options) {\n  const defaultOptions = {\n    client_id: null,\n    access_token: null,\n    version: 'v1',\n    host: 'https://api.instagram.com',\n  };\n\n  options = _.merge({}, defaultOptions, options || {});\n\n  const _request = (method, endpoint, query) => new Promise((resolve, reject) => {\n    const requestOptions = {\n      method,\n      url: [options.host, options.version, endpoint].join('/'),\n      qs: {\n        access_token: query.access_token || options.access_token,\n        client_id: query.client_id || options.client_id,\n      },\n    };\n\n    requestOptions.qs = _.extend({}, requestOptions.qs, query);\n\n    request(requestOptions)\n      .then((response) => {\n        resolve(JSON.parse(response));\n      }, reject);\n  });\n\n  this.get = (endpoint, query) => _request('GET', endpoint, query);\n};\n","module.exports = require(\"deep-diff\");","module.exports = require(\"json-query\");","module.exports = require(\"embedly\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst EmbedlyApi = require('embedly');\n\nclass Embedly {\n  constructor(config) {\n    this.config = config;\n  }\n\n  oembed(urls) {\n    return new Promise((resolve, reject) => {\n      const embedly = new EmbedlyApi({\n        key: this.config.embedly.apiKey,\n      });\n\n      const opts = {\n        urls: _.isArray(urls) ? urls : [urls],\n        format: 'json',\n      };\n\n      embedly.oembed(opts, (error, result) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(result);\n      });\n    });\n  }\n\n}\n\nmodule.exports = Embedly;\n","module.exports = require(\"node-sass\");","module.exports = require(\"i18n-iso-countries\");","module.exports = require(\"moment\");","module.exports = require(\"html-to-text\");","module.exports = require(\"mjml-mailchimp\");","module.exports = require(\"mjml-validator\");","module.exports = require(\"mjml-core\");","module.exports = require(\"mjml\");","module.exports = require(\"inky\");","module.exports = require(\"email-templates\");","module.exports = require(\"nodemailer-mailgun-transport\");","module.exports = require(\"createsend-node\");","module.exports = require(\"nodemailer\");","const _ = require('lodash');\nconst Promise = require('bluebird');\nconst Db = require('./db');\nconst Helpers = require('./helpers');\n\nclass Ecommerce {\n  constructor(config) {\n    this.config = config;\n  }\n\n  getType(type, query) {\n    return new Promise((resolve, reject) => {\n      query.sort = _.isString(query.sort) ? `\"${query.sort}\"` : query.sort;\n\n      Db.connect(this.config).search('ecommerce', type, query)\n        .then(resolve, reject);\n    });\n  }\n\n  setType(type, item) {\n    return new Promise((resolve, reject) => {\n      item.type = type;\n\n      Helpers.createOrUpdate(this.config, item)\n        .then(resolve, reject);\n    });\n  }\n\n  deleteType(items) {\n    return new Promise((resolve, reject) => {\n      items = items.map(item => ({\n        _id: item._id,\n        _rev: item._rev,\n        _deleted: true,\n      }));\n\n      Helpers.chunkUpdate(this.config, items, 1000)\n        .then(resolve, reject);\n    });\n  }\n\n  getOrder(orderId) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'orderByOrderId', {\n        key: orderId,\n        include_docs: true,\n      })\n        .then((body) => {\n          if (!body.rows.length) {\n            reject(new Error('Order not found'));\n            return;\n          }\n\n          resolve(body.rows[0].doc);\n        }, reject);\n    });\n  }\n\n  verifyDiscount(code) {\n    return new Promise((resolve, reject) => {\n      Db.connect(this.config).view('ecommerce', 'discountByCode', {\n        keys: [code],\n        include_docs: true,\n      })\n        .then((body) => {\n          if (body.rows.length) {\n            const discount = body.rows[0].doc;\n\n            const now = new Date().getTime();\n\n            const dateStart = new Date(Date.parse(discount.dateStart)).getTime();\n            const dateEnd = new Date(Date.parse(discount.dateEnd)).getTime();\n\n            if (dateStart > now) {\n              reject(new Error('Discount not valid (not begun)'));\n              return;\n\n            }\n\n            if (dateEnd < now) {\n              reject(new Error('Discount not valid (expired)'));\n              return;\n            }\n\n            resolve(discount);\n\n          } else {\n            reject(new Error({\n              statusCode: 404,\n              message: `Discount code not found (${code})`,\n            }));\n          }\n        }, reject);\n    });\n  }\n\n}\n\nmodule.exports = Ecommerce;\n","module.exports = require(\"querystring\");","const _ = require('lodash');\nconst querystring = require('querystring');\nconst axios = require('axios');\nconst ClientConfig = require('./client-config');\nconst Db = require('./db');\n\nconst providerTokenUri = {\n  google: 'https://www.googleapis.com/oauth2/v4/token',\n  instagram: 'https://api.instagram.com/oauth/access_token',\n  stripe: 'https://connect.stripe.com/oauth/token',\n  vimeo: 'https://api.vimeo.com/oauth/access_token',\n  spotify: 'https://accounts.spotify.com/api/token',\n};\n\nclass Auth {\n  constructor(config) {\n    this.config = config;\n  }\n\n  async authoriseUser(slug, userId) {\n    const isSuperUser = this.config.auth.superUserId.split(',').map(superUser => superUser.trim()).indexOf(userId) > -1;\n\n    if (isSuperUser) {\n      return {\n        id: userId,\n        role: 'super',\n      };\n    }\n\n    const clientConfig = await Db.connect(this.config, slug).get('config');\n\n    const user = _.find(clientConfig.users, { id: userId });\n\n    if (!user) {\n      throw Error(`User not found: ${userId}`);\n    }\n\n    if (!user.active) {\n      throw Error(`User not active: ${userId}`);\n    }\n\n    return user;\n  }\n\n  async authProvider(provider, params = {}, userId = null, refresh = false) {\n    const cc = new ClientConfig(this.config);\n\n    const clientConfig = await cc.get();\n\n    const providerConfig = _.merge({}, this.config.provider[provider], params || {});\n\n    let providerClientConfig;\n\n    if (userId) {\n      providerClientConfig = _.get(clientConfig, ['userSettings', userId, 'provider', provider], {});\n    } else {\n      providerClientConfig = _.get(clientConfig, ['provider', provider], {});\n    }\n\n    const data = {\n      grant_type: refresh ? 'refresh_token' : 'authorization_code',\n      code: params && params.code ? params.code : undefined,\n      client_id: providerConfig.clientId,\n      client_secret: providerConfig.clientSecret,\n      redirect_uri: providerConfig.redirectUri,\n      refresh_token: providerClientConfig.refresh_token,\n    };\n\n    const uri = providerTokenUri[provider];\n\n    let providerAuth;\n\n    try {\n      providerAuth = (await axios.post(uri, querystring.stringify(data))).data;\n    } catch (error) {\n      throw new Error(JSON.stringify(error.response.data));\n    }\n\n    providerClientConfig = _.merge({}, providerClientConfig, providerAuth);\n    providerClientConfig.begins = Math.floor(new Date().getTime() / 1000);\n\n    if (provider === 'google') {\n      try {\n        providerClientConfig.user = (await axios.get(`https://www.googleapis.com/plus/v1/people/me?access_token=${providerClientConfig.access_token}`)).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (provider === 'spotify') {\n      try {\n        providerClientConfig.user = (await axios.get(`https://api.spotify.com/v1/me?access_token=${providerClientConfig.access_token}`)).data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    if (userId) {\n      _.set(clientConfig, ['userSettings', userId, 'provider', provider], providerClientConfig);\n    } else {\n      _.set(clientConfig, ['provider', provider], providerClientConfig);\n    }\n\n    return cc.set(clientConfig);\n  }\n\n}\n\nmodule.exports = Auth;\n","module.exports = require(\"password-hash\");","const path = require('path');\n\nconst config = {\n  environment: process.env.ENVIRONMENT || 'development',\n  debug: process.env.DEBUG || false,\n\n  slug: process.env.SLUG,\n  baseUrl: process.env.BASE_URL || '',\n\n  db: {\n    url: process.env.DB_URL,\n    host: process.env.DB_HOST,\n    name: process.env.DB_NAME,\n    requestPlugin: process.env.DB_REQUEST_PLUGIN,\n    meterType: process.env.DB_METER_TYPE,\n  },\n\n  auth: {\n    superUserId: process.env.AUTH_SUPER_USER_ID,\n    tokenSecret: process.env.AUTH_TOKEN_SECRET || 'change_this_secret',\n  },\n\n  dev: {\n    userId: process.env.DEV_USER_ID || 'dev',\n    role: process.env.DEV_ROLE || 'super',\n  },\n\n  cms: {\n    title: process.env.CMS_TITLE,\n    url: process.env.CMS_URL,\n  },\n\n  assist: {\n    url: process.env.ASSIST_URL,\n    username: process.env.ASSIST_USERNAME,\n    password: process.env.ASSIST_PASSWORD,\n  },\n\n  mailgun: {\n    apiKey: process.env.MAILGUN_API_KEY,\n    domain: process.env.MAILGUN_DOMAIN,\n  },\n\n  embedly: {\n    apiKey: process.env.EMBEDLY_API_KEY,\n  },\n\n  pdf: {\n    templatesPath: path.resolve(__dirname, 'pdf'),\n  },\n\n  email: {\n    templatesPath: path.resolve(__dirname, 'email'),\n  },\n\n  provider: {\n    google: {\n      clientId: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n    },\n\n    instagram: {\n      clientId: process.env.INSTAGRAM_CLIENT_ID,\n      clientSecret: process.env.INSTAGRAM_CLIENT_SECRET,\n    },\n\n    spotify: {\n      clientId: process.env.SPOTIFY_CLIENT_ID,\n      clientSecret: process.env.SPOTIFY_CLIENT_SECRET,\n    },\n\n    stripe: {\n      clientId: process.env.STRIPE_CLIENT_ID,\n      clientSecret: process.env.STRIPE_CLIENT_SECRET,\n      apiKey: process.env.STRIPE_API_KEY,\n    },\n\n    twitter: {\n      consumerKey: process.env.TWITTER_CONSUMER_KEY,\n      consumerSecret: process.env.TWITTER_CONSUMER_SECRET,\n      accessTokenKey: process.env.TWITTER_ACCESS_TOKEN_KEY,\n      accessTokenSecret: process.env.TWITTER_ACCESS_TOKEN_SECRET,\n    },\n\n    vimeo: {\n      clientId: process.env.VIMEO_CLIENT_ID,\n      clientSecret: process.env.VIMEO_CLIENT_SECRET,\n    },\n  },\n};\n\nmodule.exports = config;\n","function Api() { }\n\nApi.defaultConfig = require('./config.default');\n\nApi.Assist = (...args) => new (require('./lib/assist'))(...args);\nApi.Auth = (...args) => new (require('./lib/auth'))(...args);\nApi.ClientConfig = (...args) => new (require('./lib/client-config'))(...args);\nApi.Db = (...args) => new (require('./lib/db'))(...args);\nApi.Ecommerce = (...args) => new (require('./lib/ecommerce'))(...args);\nApi.Email = (...args) => new (require('./lib/email'))(...args);\nApi.Embedly = (...args) => new (require('./lib/embedly'))(...args);\nApi.Entity = (...args) => new (require('./lib/entity'))(...args);\nApi.Fields = (...args) => new (require('./lib/fields'))(...args);\nApi.Helpers = (...args) => new (require('./lib/helpers'))(...args);\nApi.Instagram = (...args) => new (require('./lib/instagram'))(...args);\nApi.Jwt = (...args) => new (require('./lib/jwt'))(...args);\nApi.Pdf = (...args) => new (require('./lib/pdf'))(...args);\nApi.Roles = (...args) => new (require('./lib/roles'))(...args);\nApi.Schema = (...args) => new (require('./lib/schema'))(...args);\nApi.Settings = (...args) => new (require('./lib/settings'))(...args);\nApi.Shippo = (...args) => new (require('./lib/shippo'))(...args);\nApi.Shopify = (...args) => new (require('./lib/shopify'))(...args);\nApi.Stripe = (...args) => new (require('./lib/stripe'))(...args);\nApi.Taxonomy = (...args) => new (require('./lib/taxonomy'))(...args);\nApi.Tools = (...args) => new (require('./lib/tools'))(...args);\nApi.User = (...args) => new (require('./lib/user'))(...args);\n\nmodule.exports = Api;\n","module.exports = require(\"xxhashjs\");","module.exports = require(\"deep-freeze\");","module.exports = require(\"object-sizeof\");","module.exports = require(\"circular-json-es6\");","module.exports = require(\"le_node\");","module.exports = require(\"zlib\");","module.exports = require(\"url-parse\");","module.exports = require(\"cache-manager-redis-store\");","module.exports = require(\"cache-manager\");","process.on('unhandledRejection', result => console.error(result));\n\nconst _ = require('lodash');\nconst express = require('express');\nconst cacheManager = require('cache-manager');\nconst redisStore = require('cache-manager-redis-store');\nconst Promise = require('bluebird');\nconst URL = require('url-parse');\nconst zlib = Promise.promisifyAll(require('zlib'));\nconst Logger = require('le_node');\nconst CircularJSON = require('circular-json-es6');\nconst sizeof = require('object-sizeof');\nconst deepFreeze = require('deep-freeze');\nconst XXH = require('xxhashjs');\n\nconst Api = require('../index');\n\nconst HASH_SEED = 0xABCD;\n\nconst defaultConfig = require('./config.default');\n\nfunction AceApiServer (app, customConfig = {}, customAuthMiddleware = null) {\n  const config = deepFreeze(_.merge({}, Api.defaultConfig, defaultConfig, customConfig));\n\n  // Async middleware\n\n  const asyncMiddleware = fn => (req, res, next) => {\n    Promise.resolve(fn(req, res, next))\n      .catch(next);\n  };\n\n  // Skip authorisation\n\n  const skipAuth = (req) => {\n    if (config.environment !== 'development') {\n      return false;\n    }\n    const allowedRoutes = [\n      '/token',\n      '/email',\n    ];\n    return _.find(allowedRoutes, route => new RegExp(`^${route}`).test(req.path));\n  };\n\n  // Default auth middleware\n\n  const defaultAuthMiddleware = (req, res, next) => {\n    if (skipAuth(req)) {\n      next();\n      return;\n    }\n\n    if (!req.session.userId) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  const authMiddleware = customAuthMiddleware || defaultAuthMiddleware;\n\n  // Permissions middleware\n\n  const permissionMiddleware = (permissions, req, res, next) => {\n    if (!req.session.role) {\n      res.status(401);\n      res.send({\n        permissions,\n        message: 'Error: role not defined in session.',\n      });\n      return;\n    }\n\n    if (req.session.role === 'super') {\n      next();\n      return;\n    }\n\n    const roles = Api.Roles();\n\n    if (_.isString(permissions)) {\n      permissions = permissions.split(',');\n    }\n\n    let authorised = false;\n\n    permissions.forEach((permission) => {\n      if (roles.role(req.session.role).permissions[permission.trim()]) {\n        authorised = true;\n      }\n    });\n\n    if (!roles.role(req.session.role) || !authorised) {\n      res.status(401);\n      res.send({\n        permissions,\n        message: 'Sorry, you\\'re not authorised to do this.',\n      });\n      return;\n    }\n\n    next();\n  };\n\n  // Clone and extend config per request/session\n\n  const omitUndefined = (obj) => {\n    _.forIn(obj, (value, key, obj) => {\n      if (_.isPlainObject(value)) {\n        value = omitUndefined(value);\n\n        if (_.keys(value).length === 0) {\n          delete obj[key];\n        }\n      }\n\n      if (_.isUndefined(value)) {\n        delete obj[key];\n      }\n    });\n\n    return obj;\n  };\n\n  const cloneConfig = config => _.mergeWith({}, JSON.parse(JSON.stringify(config)), omitUndefined(_.cloneDeep(config)));\n\n  const getConfig = async (slug) => {\n    const configClone = cloneConfig(config);\n\n    configClone.slug = slug;\n    configClone.db.name = slug;\n\n    return configClone;\n  };\n\n  // Cache\n\n  let cache;\n\n  if (config.cache.enabled) {\n    if (config.redis.url || config.redis.host) {\n      const redisOptions = {\n        ttl: config.cache.ttl,\n      };\n\n      if (config.redis.url) {\n        redisOptions.url = config.redis.url;\n      } else {\n        redisOptions.host = config.redis.host;\n        redisOptions.port = config.redis.port;\n        redisOptions.password = config.redis.password;\n        redisOptions.db = config.redis.db;\n      }\n\n      cache = cacheManager.caching(_.merge({ store: redisStore }, redisOptions));\n\n      const redisClient = cache.store.getClient();\n      redisClient.on('ready', () => {\n        console.log('redis: ready');\n      });\n      redisClient.on('error', (error) => {\n        console.error('redis: error:', error);\n      });\n\n    } else {\n      cache = cacheManager.caching({\n        store: 'memory',\n        ttl: config.cache.ttl,\n        max: config.cache.memory.max,\n        length: (item) => {\n          // const length = Buffer.byteLength(item, 'utf8')\n          const length = sizeof(item);\n          return length;\n        },\n      });\n    }\n  }\n\n  // Cache middleware\n\n  const hash = (req) => {\n    const obj = {\n      path: req.path,\n      query: req.query,\n      body: req.body,\n    };\n    return `${req.session.slug}:${XXH.h64(JSON.stringify(obj), HASH_SEED).toString(16)}`;\n  };\n\n  const cacheMiddleware = asyncMiddleware(async (req, res, next) => {\n    const useCachedResponse = (\n      config.cache.enabled\n      && req.session.role === 'guest' // TODO: Replace 'guest' with constant\n      && (req.query.__cache && JSON.parse(req.query.__cache)) !== false\n    );\n\n    if (useCachedResponse) {\n      try {\n        const key = hash(req);\n\n        let response = await cache.get(key);\n\n        if (typeof response === 'string') {\n          if (config.cache.compress) {\n            response = (await zlib.gunzipAsync(Buffer.from(response, 'base64'))).toString();\n          }\n\n          try {\n            response = JSON.parse(response);\n          } catch (error) {\n            //\n          }\n\n          res.set('X-Cached-Response', true);\n          res.status(response ? 200 : 204);\n          res.send(response);\n\n          return;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    res.set('X-Cached-Response', false);\n    next();\n  });\n\n  // Response helpers\n\n  const handleError = (req, res, error) => {\n    if (Object.prototype.toString.call(error) === '[object Object]') {\n      error = CircularJSON.parse(CircularJSON.stringify(error));\n    }\n\n    error = error.response || error;\n\n    console.error(error);\n\n    const code = error.statusCode || error.status || error.code || 500;\n    const message = error.stack || error.error || error.message || error.body || error.data || error.statusText;\n\n    res.status(typeof code === 'string' ? 500 : code);\n    res.send({\n      code,\n      message,\n    });\n  };\n\n  const handleResponse = async (req, res, response, cacheResponse = false) => {\n    if (response === undefined || response === null) {\n      response = '';\n      res.status(204);\n      res.send(response);\n\n    } else {\n      response = CircularJSON.stringify(response);\n      res.status(200);\n      res.send(JSON.parse(response));\n    }\n\n    if (cacheResponse && config.cache.enabled && req.session.role === 'guest') { // TODO: Replace 'guest' with constant\n      const key = hash(req);\n\n      if (config.cache.compress) {\n        response = (await zlib.gzipAsync(Buffer.from(response))).toString('base64');\n      }\n\n      const ttl = req.query.__cache ? parseInt(req.query.__cache, 10) : config.cache.ttl;\n\n      cache.set(key, response, { ttl });\n    }\n  };\n\n  // Header middleware\n\n  const headerMiddleware = (req, res, next) => {\n    const headers = {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,OPTIONS',\n      'Access-Control-Expose-Headers': 'X-Slug, X-Role, X-User-Id',\n      Vary: 'Accept-Encoding, X-Api-Token',\n    };\n\n    if (req.headers['access-control-request-headers']) {\n      headers['Access-Control-Allow-Headers'] = req.headers['access-control-request-headers'];\n    }\n\n    res.set(headers);\n\n    if (req.method === 'OPTIONS') {\n      res.sendStatus(200);\n      return;\n    }\n\n    next();\n  };\n\n  // Session middleware\n\n  const jwt = Api.Jwt(config);\n\n  const sessionMiddleware = (req, res, next) => {\n    if (skipAuth(req)) {\n      next();\n      return;\n    }\n\n    const referrer = req.headers.referrer || req.headers.referer;\n\n    if (referrer) {\n      const referrerHostname = new URL(referrer)\n        .hostname.split('.').slice(-2).join('.');\n\n      if (config.api.blacklistReferrer.indexOf(referrerHostname) > -1) {\n        res.status(401);\n        res.send({\n          code: 401,\n          message: 'Not authorised, referrer blacklisted',\n        });\n        return;\n      }\n    }\n\n    const token = req.headers['x-api-token'] || req.query.apiToken || req.session.apiToken;\n\n    if (!token) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing token',\n      });\n      return;\n    }\n\n    if (config.api.blacklistToken.indexOf(token) > -1) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, token blacklisted',\n      });\n      return;\n    }\n\n    try {\n      const payload = jwt.verifyToken(token);\n\n      req.session.userId = payload.userId;\n      req.session.slug = payload.slug;\n      req.session.role = payload.role || 'guest'; // TODO: Replace 'guest' with constant\n\n    } catch (error) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: `Not authorised, token verification failed (${error.message})`,\n        error,\n      });\n      return;\n    }\n\n    if (!req.session.slug) {\n      res.status(401);\n      res.send({\n        code: 401,\n        message: 'Not authorised, missing slug',\n      });\n      return;\n    }\n\n    if (!req.session.role) {\n      req.session.role = 'guest';\n    }\n\n    if (req.session.userId) {\n      res.set('X-User-Id', req.session.userId);\n    }\n\n    res.set('X-Environment', config.environment);\n    res.set('X-Slug', req.session.slug);\n    res.set('X-Role', req.session.role);\n\n    next();\n  };\n\n  // Router\n\n  const router = express.Router();\n\n  const forceHttps = (req, res, next) => {\n    if (\n      (req.headers['x-forwarded-proto'] && req.headers['x-forwarded-proto'] !== 'https') &&\n      (req.headers['cf-visitor'] && JSON.parse(req.headers['cf-visitor']).scheme !== 'https') // Fix for Cloudflare/Heroku flexible SSL\n    ) {\n      res.redirect(301, `https://${req.headers.host}${req.path}`);\n      return;\n    }\n    next();\n  };\n\n  if (config.environment === 'production' && config.api.forceHttps === true) {\n    if (app.enable) {\n      app.enable('trust proxy');\n    }\n    app.use(forceHttps);\n  }\n\n  app.use(`/${config.api.prefix}`, headerMiddleware, sessionMiddleware, router);\n\n  app.get(`/${config.api.prefix}`, (req, res) => {\n    res.send('<pre> ______\\n|A     |\\n|  /\\\\  |\\n| /  \\\\ |\\n|(    )|\\n|  )(  |\\n|______|</pre>');\n  });\n\n  // Context\n\n  const context = {\n    app,\n    router,\n    cache,\n    authMiddleware,\n    permissionMiddleware,\n    cacheMiddleware,\n    asyncMiddleware,\n    getConfig,\n    handleResponse,\n    handleError,\n  };\n\n  // Inject API into context\n\n  Object.keys(Api).forEach((key) => {\n    context[key] = Api[key];\n  });\n\n  if (config.logentriesToken) {\n    context.log = new Logger({\n      token: config.logentriesToken,\n    });\n  }\n\n  const afterResponse = (req, res) => {\n    res.removeListener('finish', afterResponse);\n    res.removeListener('close', afterResponse);\n  };\n\n  if (config.environment !== 'production') {\n    app.use((req, res, next) => {\n      res.on('finish', afterResponse.bind(null, req, res));\n      res.on('close', afterResponse.bind(null, req, res));\n      next();\n    });\n  }\n\n  // Bootstrap Routes\n\n  require('./routes/analytics')(context, config);\n  require('./routes/auth')(context, config);\n  require('./routes/cache')(context, config);\n  require('./routes/config')(context, config);\n  require('./routes/debug')(context, config);\n  require('./routes/ecommerce')(context, config);\n  require('./routes/email')(context, config);\n  require('./routes/embedly')(context, config);\n  require('./routes/entity')(context, config);\n  require('./routes/metadata')(context, config);\n  require('./routes/pdf')(context, config);\n  require('./routes/provider')(context, config);\n  require('./routes/schema')(context, config);\n  require('./routes/settings')(context, config);\n  require('./routes/shippo')(context, config);\n  require('./routes/shopify')(context, config);\n  require('./routes/social')(context, config);\n  require('./routes/stripe')(context, config);\n  require('./routes/taxonomy')(context, config);\n  require('./routes/token')(context, config);\n  require('./routes/tools')(context, config);\n  require('./routes/user')(context, config);\n\n  return app;\n}\n\nmodule.exports = AceApiServer;\n","module.exports = require(\"connect-redis\");","module.exports = require(\"express-session\");","module.exports = require(\"method-override\");","module.exports = require(\"body-parser\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"helmet\");","module.exports = require(\"morgan\");","module.exports = require(\"http\");","const PORT = process.env.PORT || 5000;\nconst HOST = process.env.HOST || 'localhost';\n\nconst _ = require('lodash');\nconst express = require('express');\nconst http = require('http');\nconst logger = require('morgan');\nconst helmet = require('helmet');\nconst cookieParser = require('cookie-parser');\nconst bodyParser = require('body-parser');\nconst methodOverride = require('method-override');\nconst session = require('express-session');\nconst RedisStore = require('connect-redis')(session);\n\nconst AceApiServer = require('./index');\n\nconst defaultConfig = require('./config.default');\n\nfunction Serve (customConfig = {}, listen = true) {\n  const config = _.merge({}, defaultConfig, customConfig);\n\n  const app = express();\n\n  const sessionOptions = {\n    secret: config.session.secret,\n    resave: true,\n    saveUninitialized: true,\n  };\n\n  if (config.redis.url || config.redis.host) {\n    const redisOptions = {\n      ttl: config.session.ttl,\n    };\n\n    if (config.redis.url) {\n      redisOptions.url = config.redis.url;\n    } else {\n      redisOptions.host = config.redis.host;\n      redisOptions.port = config.redis.port;\n      redisOptions.password = config.redis.password;\n      redisOptions.db = config.redis.db;\n    }\n\n    sessionOptions.store = new RedisStore(redisOptions);\n  } else {\n    sessionOptions.cookie = {\n      maxAge: config.session.ttl,\n    };\n  }\n\n  app.use(helmet());\n  app.use(logger('tiny'));\n  app.use(cookieParser());\n  app.use(bodyParser.json({\n    limit: '50mb',\n  }));\n  app.use(bodyParser.urlencoded({\n    extended: true,\n    limit: '50mb',\n  }));\n  app.use(methodOverride());\n  app.use(session(sessionOptions));\n\n  AceApiServer(app, config);\n\n  if (listen) {\n    const server = http.createServer(app);\n    server.on('listening', () => {\n      console.log(`listening: http://${HOST}:${PORT}`);\n    });\n    server.listen(PORT);\n  }\n\n  return app;\n}\n\nmodule.exports = Serve;\n"],"sourceRoot":""}